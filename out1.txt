
build/SparseRNAFolD:     file format elf64-x86-64


Disassembly of section .init:

0000000000003000 <_init>:
    3000:	f3 0f 1e fa          	endbr64 
    3004:	48 83 ec 08          	sub    rsp,0x8
    3008:	48 8b 05 d9 5f 1e 00 	mov    rax,QWORD PTR [rip+0x1e5fd9]        # 1e8fe8 <__gmon_start__>
    300f:	48 85 c0             	test   rax,rax
    3012:	74 02                	je     3016 <_init+0x16>
    3014:	ff d0                	call   rax
    3016:	48 83 c4 08          	add    rsp,0x8
    301a:	c3                   	ret    

Disassembly of section .plt:

0000000000003020 <.plt>:
    3020:	ff 35 ea 5c 1e 00    	push   QWORD PTR [rip+0x1e5cea]        # 1e8d10 <_GLOBAL_OFFSET_TABLE_+0x8>
    3026:	f2 ff 25 eb 5c 1e 00 	bnd jmp QWORD PTR [rip+0x1e5ceb]        # 1e8d18 <_GLOBAL_OFFSET_TABLE_+0x10>
    302d:	0f 1f 00             	nop    DWORD PTR [rax]
    3030:	f3 0f 1e fa          	endbr64 
    3034:	68 00 00 00 00       	push   0x0
    3039:	f2 e9 e1 ff ff ff    	bnd jmp 3020 <.plt>
    303f:	90                   	nop
    3040:	f3 0f 1e fa          	endbr64 
    3044:	68 01 00 00 00       	push   0x1
    3049:	f2 e9 d1 ff ff ff    	bnd jmp 3020 <.plt>
    304f:	90                   	nop
    3050:	f3 0f 1e fa          	endbr64 
    3054:	68 02 00 00 00       	push   0x2
    3059:	f2 e9 c1 ff ff ff    	bnd jmp 3020 <.plt>
    305f:	90                   	nop
    3060:	f3 0f 1e fa          	endbr64 
    3064:	68 03 00 00 00       	push   0x3
    3069:	f2 e9 b1 ff ff ff    	bnd jmp 3020 <.plt>
    306f:	90                   	nop
    3070:	f3 0f 1e fa          	endbr64 
    3074:	68 04 00 00 00       	push   0x4
    3079:	f2 e9 a1 ff ff ff    	bnd jmp 3020 <.plt>
    307f:	90                   	nop
    3080:	f3 0f 1e fa          	endbr64 
    3084:	68 05 00 00 00       	push   0x5
    3089:	f2 e9 91 ff ff ff    	bnd jmp 3020 <.plt>
    308f:	90                   	nop
    3090:	f3 0f 1e fa          	endbr64 
    3094:	68 06 00 00 00       	push   0x6
    3099:	f2 e9 81 ff ff ff    	bnd jmp 3020 <.plt>
    309f:	90                   	nop
    30a0:	f3 0f 1e fa          	endbr64 
    30a4:	68 07 00 00 00       	push   0x7
    30a9:	f2 e9 71 ff ff ff    	bnd jmp 3020 <.plt>
    30af:	90                   	nop
    30b0:	f3 0f 1e fa          	endbr64 
    30b4:	68 08 00 00 00       	push   0x8
    30b9:	f2 e9 61 ff ff ff    	bnd jmp 3020 <.plt>
    30bf:	90                   	nop
    30c0:	f3 0f 1e fa          	endbr64 
    30c4:	68 09 00 00 00       	push   0x9
    30c9:	f2 e9 51 ff ff ff    	bnd jmp 3020 <.plt>
    30cf:	90                   	nop
    30d0:	f3 0f 1e fa          	endbr64 
    30d4:	68 0a 00 00 00       	push   0xa
    30d9:	f2 e9 41 ff ff ff    	bnd jmp 3020 <.plt>
    30df:	90                   	nop
    30e0:	f3 0f 1e fa          	endbr64 
    30e4:	68 0b 00 00 00       	push   0xb
    30e9:	f2 e9 31 ff ff ff    	bnd jmp 3020 <.plt>
    30ef:	90                   	nop
    30f0:	f3 0f 1e fa          	endbr64 
    30f4:	68 0c 00 00 00       	push   0xc
    30f9:	f2 e9 21 ff ff ff    	bnd jmp 3020 <.plt>
    30ff:	90                   	nop
    3100:	f3 0f 1e fa          	endbr64 
    3104:	68 0d 00 00 00       	push   0xd
    3109:	f2 e9 11 ff ff ff    	bnd jmp 3020 <.plt>
    310f:	90                   	nop
    3110:	f3 0f 1e fa          	endbr64 
    3114:	68 0e 00 00 00       	push   0xe
    3119:	f2 e9 01 ff ff ff    	bnd jmp 3020 <.plt>
    311f:	90                   	nop
    3120:	f3 0f 1e fa          	endbr64 
    3124:	68 0f 00 00 00       	push   0xf
    3129:	f2 e9 f1 fe ff ff    	bnd jmp 3020 <.plt>
    312f:	90                   	nop
    3130:	f3 0f 1e fa          	endbr64 
    3134:	68 10 00 00 00       	push   0x10
    3139:	f2 e9 e1 fe ff ff    	bnd jmp 3020 <.plt>
    313f:	90                   	nop
    3140:	f3 0f 1e fa          	endbr64 
    3144:	68 11 00 00 00       	push   0x11
    3149:	f2 e9 d1 fe ff ff    	bnd jmp 3020 <.plt>
    314f:	90                   	nop
    3150:	f3 0f 1e fa          	endbr64 
    3154:	68 12 00 00 00       	push   0x12
    3159:	f2 e9 c1 fe ff ff    	bnd jmp 3020 <.plt>
    315f:	90                   	nop
    3160:	f3 0f 1e fa          	endbr64 
    3164:	68 13 00 00 00       	push   0x13
    3169:	f2 e9 b1 fe ff ff    	bnd jmp 3020 <.plt>
    316f:	90                   	nop
    3170:	f3 0f 1e fa          	endbr64 
    3174:	68 14 00 00 00       	push   0x14
    3179:	f2 e9 a1 fe ff ff    	bnd jmp 3020 <.plt>
    317f:	90                   	nop
    3180:	f3 0f 1e fa          	endbr64 
    3184:	68 15 00 00 00       	push   0x15
    3189:	f2 e9 91 fe ff ff    	bnd jmp 3020 <.plt>
    318f:	90                   	nop
    3190:	f3 0f 1e fa          	endbr64 
    3194:	68 16 00 00 00       	push   0x16
    3199:	f2 e9 81 fe ff ff    	bnd jmp 3020 <.plt>
    319f:	90                   	nop
    31a0:	f3 0f 1e fa          	endbr64 
    31a4:	68 17 00 00 00       	push   0x17
    31a9:	f2 e9 71 fe ff ff    	bnd jmp 3020 <.plt>
    31af:	90                   	nop
    31b0:	f3 0f 1e fa          	endbr64 
    31b4:	68 18 00 00 00       	push   0x18
    31b9:	f2 e9 61 fe ff ff    	bnd jmp 3020 <.plt>
    31bf:	90                   	nop
    31c0:	f3 0f 1e fa          	endbr64 
    31c4:	68 19 00 00 00       	push   0x19
    31c9:	f2 e9 51 fe ff ff    	bnd jmp 3020 <.plt>
    31cf:	90                   	nop
    31d0:	f3 0f 1e fa          	endbr64 
    31d4:	68 1a 00 00 00       	push   0x1a
    31d9:	f2 e9 41 fe ff ff    	bnd jmp 3020 <.plt>
    31df:	90                   	nop
    31e0:	f3 0f 1e fa          	endbr64 
    31e4:	68 1b 00 00 00       	push   0x1b
    31e9:	f2 e9 31 fe ff ff    	bnd jmp 3020 <.plt>
    31ef:	90                   	nop
    31f0:	f3 0f 1e fa          	endbr64 
    31f4:	68 1c 00 00 00       	push   0x1c
    31f9:	f2 e9 21 fe ff ff    	bnd jmp 3020 <.plt>
    31ff:	90                   	nop
    3200:	f3 0f 1e fa          	endbr64 
    3204:	68 1d 00 00 00       	push   0x1d
    3209:	f2 e9 11 fe ff ff    	bnd jmp 3020 <.plt>
    320f:	90                   	nop
    3210:	f3 0f 1e fa          	endbr64 
    3214:	68 1e 00 00 00       	push   0x1e
    3219:	f2 e9 01 fe ff ff    	bnd jmp 3020 <.plt>
    321f:	90                   	nop
    3220:	f3 0f 1e fa          	endbr64 
    3224:	68 1f 00 00 00       	push   0x1f
    3229:	f2 e9 f1 fd ff ff    	bnd jmp 3020 <.plt>
    322f:	90                   	nop
    3230:	f3 0f 1e fa          	endbr64 
    3234:	68 20 00 00 00       	push   0x20
    3239:	f2 e9 e1 fd ff ff    	bnd jmp 3020 <.plt>
    323f:	90                   	nop
    3240:	f3 0f 1e fa          	endbr64 
    3244:	68 21 00 00 00       	push   0x21
    3249:	f2 e9 d1 fd ff ff    	bnd jmp 3020 <.plt>
    324f:	90                   	nop
    3250:	f3 0f 1e fa          	endbr64 
    3254:	68 22 00 00 00       	push   0x22
    3259:	f2 e9 c1 fd ff ff    	bnd jmp 3020 <.plt>
    325f:	90                   	nop
    3260:	f3 0f 1e fa          	endbr64 
    3264:	68 23 00 00 00       	push   0x23
    3269:	f2 e9 b1 fd ff ff    	bnd jmp 3020 <.plt>
    326f:	90                   	nop
    3270:	f3 0f 1e fa          	endbr64 
    3274:	68 24 00 00 00       	push   0x24
    3279:	f2 e9 a1 fd ff ff    	bnd jmp 3020 <.plt>
    327f:	90                   	nop
    3280:	f3 0f 1e fa          	endbr64 
    3284:	68 25 00 00 00       	push   0x25
    3289:	f2 e9 91 fd ff ff    	bnd jmp 3020 <.plt>
    328f:	90                   	nop
    3290:	f3 0f 1e fa          	endbr64 
    3294:	68 26 00 00 00       	push   0x26
    3299:	f2 e9 81 fd ff ff    	bnd jmp 3020 <.plt>
    329f:	90                   	nop
    32a0:	f3 0f 1e fa          	endbr64 
    32a4:	68 27 00 00 00       	push   0x27
    32a9:	f2 e9 71 fd ff ff    	bnd jmp 3020 <.plt>
    32af:	90                   	nop
    32b0:	f3 0f 1e fa          	endbr64 
    32b4:	68 28 00 00 00       	push   0x28
    32b9:	f2 e9 61 fd ff ff    	bnd jmp 3020 <.plt>
    32bf:	90                   	nop
    32c0:	f3 0f 1e fa          	endbr64 
    32c4:	68 29 00 00 00       	push   0x29
    32c9:	f2 e9 51 fd ff ff    	bnd jmp 3020 <.plt>
    32cf:	90                   	nop
    32d0:	f3 0f 1e fa          	endbr64 
    32d4:	68 2a 00 00 00       	push   0x2a
    32d9:	f2 e9 41 fd ff ff    	bnd jmp 3020 <.plt>
    32df:	90                   	nop
    32e0:	f3 0f 1e fa          	endbr64 
    32e4:	68 2b 00 00 00       	push   0x2b
    32e9:	f2 e9 31 fd ff ff    	bnd jmp 3020 <.plt>
    32ef:	90                   	nop
    32f0:	f3 0f 1e fa          	endbr64 
    32f4:	68 2c 00 00 00       	push   0x2c
    32f9:	f2 e9 21 fd ff ff    	bnd jmp 3020 <.plt>
    32ff:	90                   	nop
    3300:	f3 0f 1e fa          	endbr64 
    3304:	68 2d 00 00 00       	push   0x2d
    3309:	f2 e9 11 fd ff ff    	bnd jmp 3020 <.plt>
    330f:	90                   	nop
    3310:	f3 0f 1e fa          	endbr64 
    3314:	68 2e 00 00 00       	push   0x2e
    3319:	f2 e9 01 fd ff ff    	bnd jmp 3020 <.plt>
    331f:	90                   	nop
    3320:	f3 0f 1e fa          	endbr64 
    3324:	68 2f 00 00 00       	push   0x2f
    3329:	f2 e9 f1 fc ff ff    	bnd jmp 3020 <.plt>
    332f:	90                   	nop
    3330:	f3 0f 1e fa          	endbr64 
    3334:	68 30 00 00 00       	push   0x30
    3339:	f2 e9 e1 fc ff ff    	bnd jmp 3020 <.plt>
    333f:	90                   	nop
    3340:	f3 0f 1e fa          	endbr64 
    3344:	68 31 00 00 00       	push   0x31
    3349:	f2 e9 d1 fc ff ff    	bnd jmp 3020 <.plt>
    334f:	90                   	nop
    3350:	f3 0f 1e fa          	endbr64 
    3354:	68 32 00 00 00       	push   0x32
    3359:	f2 e9 c1 fc ff ff    	bnd jmp 3020 <.plt>
    335f:	90                   	nop
    3360:	f3 0f 1e fa          	endbr64 
    3364:	68 33 00 00 00       	push   0x33
    3369:	f2 e9 b1 fc ff ff    	bnd jmp 3020 <.plt>
    336f:	90                   	nop
    3370:	f3 0f 1e fa          	endbr64 
    3374:	68 34 00 00 00       	push   0x34
    3379:	f2 e9 a1 fc ff ff    	bnd jmp 3020 <.plt>
    337f:	90                   	nop
    3380:	f3 0f 1e fa          	endbr64 
    3384:	68 35 00 00 00       	push   0x35
    3389:	f2 e9 91 fc ff ff    	bnd jmp 3020 <.plt>
    338f:	90                   	nop
    3390:	f3 0f 1e fa          	endbr64 
    3394:	68 36 00 00 00       	push   0x36
    3399:	f2 e9 81 fc ff ff    	bnd jmp 3020 <.plt>
    339f:	90                   	nop
    33a0:	f3 0f 1e fa          	endbr64 
    33a4:	68 37 00 00 00       	push   0x37
    33a9:	f2 e9 71 fc ff ff    	bnd jmp 3020 <.plt>
    33af:	90                   	nop
    33b0:	f3 0f 1e fa          	endbr64 
    33b4:	68 38 00 00 00       	push   0x38
    33b9:	f2 e9 61 fc ff ff    	bnd jmp 3020 <.plt>
    33bf:	90                   	nop
    33c0:	f3 0f 1e fa          	endbr64 
    33c4:	68 39 00 00 00       	push   0x39
    33c9:	f2 e9 51 fc ff ff    	bnd jmp 3020 <.plt>
    33cf:	90                   	nop
    33d0:	f3 0f 1e fa          	endbr64 
    33d4:	68 3a 00 00 00       	push   0x3a
    33d9:	f2 e9 41 fc ff ff    	bnd jmp 3020 <.plt>
    33df:	90                   	nop
    33e0:	f3 0f 1e fa          	endbr64 
    33e4:	68 3b 00 00 00       	push   0x3b
    33e9:	f2 e9 31 fc ff ff    	bnd jmp 3020 <.plt>
    33ef:	90                   	nop
    33f0:	f3 0f 1e fa          	endbr64 
    33f4:	68 3c 00 00 00       	push   0x3c
    33f9:	f2 e9 21 fc ff ff    	bnd jmp 3020 <.plt>
    33ff:	90                   	nop
    3400:	f3 0f 1e fa          	endbr64 
    3404:	68 3d 00 00 00       	push   0x3d
    3409:	f2 e9 11 fc ff ff    	bnd jmp 3020 <.plt>
    340f:	90                   	nop
    3410:	f3 0f 1e fa          	endbr64 
    3414:	68 3e 00 00 00       	push   0x3e
    3419:	f2 e9 01 fc ff ff    	bnd jmp 3020 <.plt>
    341f:	90                   	nop
    3420:	f3 0f 1e fa          	endbr64 
    3424:	68 3f 00 00 00       	push   0x3f
    3429:	f2 e9 f1 fb ff ff    	bnd jmp 3020 <.plt>
    342f:	90                   	nop
    3430:	f3 0f 1e fa          	endbr64 
    3434:	68 40 00 00 00       	push   0x40
    3439:	f2 e9 e1 fb ff ff    	bnd jmp 3020 <.plt>
    343f:	90                   	nop
    3440:	f3 0f 1e fa          	endbr64 
    3444:	68 41 00 00 00       	push   0x41
    3449:	f2 e9 d1 fb ff ff    	bnd jmp 3020 <.plt>
    344f:	90                   	nop
    3450:	f3 0f 1e fa          	endbr64 
    3454:	68 42 00 00 00       	push   0x42
    3459:	f2 e9 c1 fb ff ff    	bnd jmp 3020 <.plt>
    345f:	90                   	nop
    3460:	f3 0f 1e fa          	endbr64 
    3464:	68 43 00 00 00       	push   0x43
    3469:	f2 e9 b1 fb ff ff    	bnd jmp 3020 <.plt>
    346f:	90                   	nop
    3470:	f3 0f 1e fa          	endbr64 
    3474:	68 44 00 00 00       	push   0x44
    3479:	f2 e9 a1 fb ff ff    	bnd jmp 3020 <.plt>
    347f:	90                   	nop
    3480:	f3 0f 1e fa          	endbr64 
    3484:	68 45 00 00 00       	push   0x45
    3489:	f2 e9 91 fb ff ff    	bnd jmp 3020 <.plt>
    348f:	90                   	nop
    3490:	f3 0f 1e fa          	endbr64 
    3494:	68 46 00 00 00       	push   0x46
    3499:	f2 e9 81 fb ff ff    	bnd jmp 3020 <.plt>
    349f:	90                   	nop
    34a0:	f3 0f 1e fa          	endbr64 
    34a4:	68 47 00 00 00       	push   0x47
    34a9:	f2 e9 71 fb ff ff    	bnd jmp 3020 <.plt>
    34af:	90                   	nop
    34b0:	f3 0f 1e fa          	endbr64 
    34b4:	68 48 00 00 00       	push   0x48
    34b9:	f2 e9 61 fb ff ff    	bnd jmp 3020 <.plt>
    34bf:	90                   	nop
    34c0:	f3 0f 1e fa          	endbr64 
    34c4:	68 49 00 00 00       	push   0x49
    34c9:	f2 e9 51 fb ff ff    	bnd jmp 3020 <.plt>
    34cf:	90                   	nop
    34d0:	f3 0f 1e fa          	endbr64 
    34d4:	68 4a 00 00 00       	push   0x4a
    34d9:	f2 e9 41 fb ff ff    	bnd jmp 3020 <.plt>
    34df:	90                   	nop
    34e0:	f3 0f 1e fa          	endbr64 
    34e4:	68 4b 00 00 00       	push   0x4b
    34e9:	f2 e9 31 fb ff ff    	bnd jmp 3020 <.plt>
    34ef:	90                   	nop
    34f0:	f3 0f 1e fa          	endbr64 
    34f4:	68 4c 00 00 00       	push   0x4c
    34f9:	f2 e9 21 fb ff ff    	bnd jmp 3020 <.plt>
    34ff:	90                   	nop
    3500:	f3 0f 1e fa          	endbr64 
    3504:	68 4d 00 00 00       	push   0x4d
    3509:	f2 e9 11 fb ff ff    	bnd jmp 3020 <.plt>
    350f:	90                   	nop
    3510:	f3 0f 1e fa          	endbr64 
    3514:	68 4e 00 00 00       	push   0x4e
    3519:	f2 e9 01 fb ff ff    	bnd jmp 3020 <.plt>
    351f:	90                   	nop
    3520:	f3 0f 1e fa          	endbr64 
    3524:	68 4f 00 00 00       	push   0x4f
    3529:	f2 e9 f1 fa ff ff    	bnd jmp 3020 <.plt>
    352f:	90                   	nop
    3530:	f3 0f 1e fa          	endbr64 
    3534:	68 50 00 00 00       	push   0x50
    3539:	f2 e9 e1 fa ff ff    	bnd jmp 3020 <.plt>
    353f:	90                   	nop
    3540:	f3 0f 1e fa          	endbr64 
    3544:	68 51 00 00 00       	push   0x51
    3549:	f2 e9 d1 fa ff ff    	bnd jmp 3020 <.plt>
    354f:	90                   	nop
    3550:	f3 0f 1e fa          	endbr64 
    3554:	68 52 00 00 00       	push   0x52
    3559:	f2 e9 c1 fa ff ff    	bnd jmp 3020 <.plt>
    355f:	90                   	nop
    3560:	f3 0f 1e fa          	endbr64 
    3564:	68 53 00 00 00       	push   0x53
    3569:	f2 e9 b1 fa ff ff    	bnd jmp 3020 <.plt>
    356f:	90                   	nop
    3570:	f3 0f 1e fa          	endbr64 
    3574:	68 54 00 00 00       	push   0x54
    3579:	f2 e9 a1 fa ff ff    	bnd jmp 3020 <.plt>
    357f:	90                   	nop

Disassembly of section .plt.got:

0000000000003580 <__cxa_finalize@plt>:
    3580:	f3 0f 1e fa          	endbr64 
    3584:	f2 ff 25 3d 5a 1e 00 	bnd jmp QWORD PTR [rip+0x1e5a3d]        # 1e8fc8 <__cxa_finalize@GLIBC_2.2.5>
    358b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000003590 <__printf_chk@plt>:
    3590:	f3 0f 1e fa          	endbr64 
    3594:	f2 ff 25 85 57 1e 00 	bnd jmp QWORD PTR [rip+0x1e5785]        # 1e8d20 <__printf_chk@GLIBC_2.3.4>
    359b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000035a0 <__errno_location@plt>:
    35a0:	f3 0f 1e fa          	endbr64 
    35a4:	f2 ff 25 7d 57 1e 00 	bnd jmp QWORD PTR [rip+0x1e577d]        # 1e8d28 <__errno_location@GLIBC_2.2.5>
    35ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000035b0 <printf@plt>:
    35b0:	f3 0f 1e fa          	endbr64 
    35b4:	f2 ff 25 75 57 1e 00 	bnd jmp QWORD PTR [rip+0x1e5775]        # 1e8d30 <printf@GLIBC_2.2.5>
    35bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000035c0 <strcspn@plt>:
    35c0:	f3 0f 1e fa          	endbr64 
    35c4:	f2 ff 25 6d 57 1e 00 	bnd jmp QWORD PTR [rip+0x1e576d]        # 1e8d38 <strcspn@GLIBC_2.2.5>
    35cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000035d0 <sprintf@plt>:
    35d0:	f3 0f 1e fa          	endbr64 
    35d4:	f2 ff 25 65 57 1e 00 	bnd jmp QWORD PTR [rip+0x1e5765]        # 1e8d40 <sprintf@GLIBC_2.2.5>
    35db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000035e0 <std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)@plt>:
    35e0:	f3 0f 1e fa          	endbr64 
    35e4:	f2 ff 25 5d 57 1e 00 	bnd jmp QWORD PTR [rip+0x1e575d]        # 1e8d48 <std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)@GLIBCXX_3.4.21>
    35eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000035f0 <sin@plt>:
    35f0:	f3 0f 1e fa          	endbr64 
    35f4:	f2 ff 25 55 57 1e 00 	bnd jmp QWORD PTR [rip+0x1e5755]        # 1e8d50 <sin@GLIBC_2.2.5>
    35fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003600 <strstr@plt>:
    3600:	f3 0f 1e fa          	endbr64 
    3604:	f2 ff 25 4d 57 1e 00 	bnd jmp QWORD PTR [rip+0x1e574d]        # 1e8d58 <strstr@GLIBC_2.2.5>
    360b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003610 <std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_ostringstream()@plt>:
    3610:	f3 0f 1e fa          	endbr64 
    3614:	f2 ff 25 45 57 1e 00 	bnd jmp QWORD PTR [rip+0x1e5745]        # 1e8d60 <std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_ostringstream()@GLIBCXX_3.4.21>
    361b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003620 <rand@plt>:
    3620:	f3 0f 1e fa          	endbr64 
    3624:	f2 ff 25 3d 57 1e 00 	bnd jmp QWORD PTR [rip+0x1e573d]        # 1e8d68 <rand@GLIBC_2.2.5>
    362b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003630 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const@plt>:
    3630:	f3 0f 1e fa          	endbr64 
    3634:	f2 ff 25 35 57 1e 00 	bnd jmp QWORD PTR [rip+0x1e5735]        # 1e8d70 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const@GLIBCXX_3.4.21>
    363b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003640 <getc@plt>:
    3640:	f3 0f 1e fa          	endbr64 
    3644:	f2 ff 25 2d 57 1e 00 	bnd jmp QWORD PTR [rip+0x1e572d]        # 1e8d78 <getc@GLIBC_2.2.5>
    364b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003650 <strerror@plt>:
    3650:	f3 0f 1e fa          	endbr64 
    3654:	f2 ff 25 25 57 1e 00 	bnd jmp QWORD PTR [rip+0x1e5725]        # 1e8d80 <strerror@GLIBC_2.2.5>
    365b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003660 <strchr@plt>:
    3660:	f3 0f 1e fa          	endbr64 
    3664:	f2 ff 25 1d 57 1e 00 	bnd jmp QWORD PTR [rip+0x1e571d]        # 1e8d88 <strchr@GLIBC_2.2.5>
    366b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003670 <ctime@plt>:
    3670:	f3 0f 1e fa          	endbr64 
    3674:	f2 ff 25 15 57 1e 00 	bnd jmp QWORD PTR [rip+0x1e5715]        # 1e8d90 <ctime@GLIBC_2.2.5>
    367b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003680 <strspn@plt>:
    3680:	f3 0f 1e fa          	endbr64 
    3684:	f2 ff 25 0d 57 1e 00 	bnd jmp QWORD PTR [rip+0x1e570d]        # 1e8d98 <strspn@GLIBC_2.2.5>
    368b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003690 <strlen@plt>:
    3690:	f3 0f 1e fa          	endbr64 
    3694:	f2 ff 25 05 57 1e 00 	bnd jmp QWORD PTR [rip+0x1e5705]        # 1e8da0 <strlen@GLIBC_2.2.5>
    369b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000036a0 <memcmp@plt>:
    36a0:	f3 0f 1e fa          	endbr64 
    36a4:	f2 ff 25 fd 56 1e 00 	bnd jmp QWORD PTR [rip+0x1e56fd]        # 1e8da8 <memcmp@GLIBC_2.2.5>
    36ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000036b0 <mkdir@plt>:
    36b0:	f3 0f 1e fa          	endbr64 
    36b4:	f2 ff 25 f5 56 1e 00 	bnd jmp QWORD PTR [rip+0x1e56f5]        # 1e8db0 <mkdir@GLIBC_2.2.5>
    36bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000036c0 <strncmp@plt>:
    36c0:	f3 0f 1e fa          	endbr64 
    36c4:	f2 ff 25 ed 56 1e 00 	bnd jmp QWORD PTR [rip+0x1e56ed]        # 1e8db8 <strncmp@GLIBC_2.2.5>
    36cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000036d0 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>:
    36d0:	f3 0f 1e fa          	endbr64 
    36d4:	f2 ff 25 e5 56 1e 00 	bnd jmp QWORD PTR [rip+0x1e56e5]        # 1e8dc0 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@GLIBCXX_3.4>
    36db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000036e0 <strncpy@plt>:
    36e0:	f3 0f 1e fa          	endbr64 
    36e4:	f2 ff 25 dd 56 1e 00 	bnd jmp QWORD PTR [rip+0x1e56dd]        # 1e8dc8 <strncpy@GLIBC_2.2.5>
    36eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000036f0 <std::__throw_length_error(char const*)@plt>:
    36f0:	f3 0f 1e fa          	endbr64 
    36f4:	f2 ff 25 d5 56 1e 00 	bnd jmp QWORD PTR [rip+0x1e56d5]        # 1e8dd0 <std::__throw_length_error(char const*)@GLIBCXX_3.4>
    36fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003700 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@plt>:
    3700:	f3 0f 1e fa          	endbr64 
    3704:	f2 ff 25 cd 56 1e 00 	bnd jmp QWORD PTR [rip+0x1e56cd]        # 1e8dd8 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@GLIBCXX_3.4.21>
    370b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003710 <memset@plt>:
    3710:	f3 0f 1e fa          	endbr64 
    3714:	f2 ff 25 c5 56 1e 00 	bnd jmp QWORD PTR [rip+0x1e56c5]        # 1e8de0 <memset@GLIBC_2.2.5>
    371b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003720 <abort@plt>:
    3720:	f3 0f 1e fa          	endbr64 
    3724:	f2 ff 25 bd 56 1e 00 	bnd jmp QWORD PTR [rip+0x1e56bd]        # 1e8de8 <abort@GLIBC_2.2.5>
    372b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003730 <vsnprintf@plt>:
    3730:	f3 0f 1e fa          	endbr64 
    3734:	f2 ff 25 b5 56 1e 00 	bnd jmp QWORD PTR [rip+0x1e56b5]        # 1e8df0 <vsnprintf@GLIBC_2.2.5>
    373b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003740 <__assert_fail@plt>:
    3740:	f3 0f 1e fa          	endbr64 
    3744:	f2 ff 25 ad 56 1e 00 	bnd jmp QWORD PTR [rip+0x1e56ad]        # 1e8df8 <__assert_fail@GLIBC_2.2.5>
    374b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003750 <calloc@plt>:
    3750:	f3 0f 1e fa          	endbr64 
    3754:	f2 ff 25 a5 56 1e 00 	bnd jmp QWORD PTR [rip+0x1e56a5]        # 1e8e00 <calloc@GLIBC_2.2.5>
    375b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003760 <clock@plt>:
    3760:	f3 0f 1e fa          	endbr64 
    3764:	f2 ff 25 9d 56 1e 00 	bnd jmp QWORD PTR [rip+0x1e569d]        # 1e8e08 <clock@GLIBC_2.2.5>
    376b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003770 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>:
    3770:	f3 0f 1e fa          	endbr64 
    3774:	f2 ff 25 95 56 1e 00 	bnd jmp QWORD PTR [rip+0x1e5695]        # 1e8e10 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@GLIBCXX_3.4.9>
    377b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003780 <std::__throw_logic_error(char const*)@plt>:
    3780:	f3 0f 1e fa          	endbr64 
    3784:	f2 ff 25 8d 56 1e 00 	bnd jmp QWORD PTR [rip+0x1e568d]        # 1e8e18 <std::__throw_logic_error(char const*)@GLIBCXX_3.4>
    378b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003790 <log@plt>:
    3790:	f3 0f 1e fa          	endbr64 
    3794:	f2 ff 25 85 56 1e 00 	bnd jmp QWORD PTR [rip+0x1e5685]        # 1e8e20 <log@GLIBC_2.29>
    379b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000037a0 <memcpy@plt>:
    37a0:	f3 0f 1e fa          	endbr64 
    37a4:	f2 ff 25 7d 56 1e 00 	bnd jmp QWORD PTR [rip+0x1e567d]        # 1e8e28 <memcpy@GLIBC_2.14>
    37ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000037b0 <__cxa_atexit@plt>:
    37b0:	f3 0f 1e fa          	endbr64 
    37b4:	f2 ff 25 75 56 1e 00 	bnd jmp QWORD PTR [rip+0x1e5675]        # 1e8e30 <__cxa_atexit@GLIBC_2.2.5>
    37bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000037c0 <time@plt>:
    37c0:	f3 0f 1e fa          	endbr64 
    37c4:	f2 ff 25 6d 56 1e 00 	bnd jmp QWORD PTR [rip+0x1e566d]        # 1e8e38 <time@GLIBC_2.2.5>
    37cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000037d0 <strcpy@plt>:
    37d0:	f3 0f 1e fa          	endbr64 
    37d4:	f2 ff 25 65 56 1e 00 	bnd jmp QWORD PTR [rip+0x1e5665]        # 1e8e40 <strcpy@GLIBC_2.2.5>
    37db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000037e0 <operator delete(void*)@plt>:
    37e0:	f3 0f 1e fa          	endbr64 
    37e4:	f2 ff 25 5d 56 1e 00 	bnd jmp QWORD PTR [rip+0x1e565d]        # 1e8e48 <operator delete(void*)@GLIBCXX_3.4>
    37eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000037f0 <srand@plt>:
    37f0:	f3 0f 1e fa          	endbr64 
    37f4:	f2 ff 25 55 56 1e 00 	bnd jmp QWORD PTR [rip+0x1e5655]        # 1e8e50 <srand@GLIBC_2.2.5>
    37fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003800 <__isoc99_sscanf@plt>:
    3800:	f3 0f 1e fa          	endbr64 
    3804:	f2 ff 25 4d 56 1e 00 	bnd jmp QWORD PTR [rip+0x1e564d]        # 1e8e58 <__isoc99_sscanf@GLIBC_2.7>
    380b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003810 <fclose@plt>:
    3810:	f3 0f 1e fa          	endbr64 
    3814:	f2 ff 25 45 56 1e 00 	bnd jmp QWORD PTR [rip+0x1e5645]        # 1e8e60 <fclose@GLIBC_2.2.5>
    381b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003820 <operator new(unsigned long)@plt>:
    3820:	f3 0f 1e fa          	endbr64 
    3824:	f2 ff 25 3d 56 1e 00 	bnd jmp QWORD PTR [rip+0x1e563d]        # 1e8e68 <operator new(unsigned long)@GLIBCXX_3.4>
    382b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003830 <__xstat@plt>:
    3830:	f3 0f 1e fa          	endbr64 
    3834:	f2 ff 25 35 56 1e 00 	bnd jmp QWORD PTR [rip+0x1e5635]        # 1e8e70 <__xstat@GLIBC_2.2.5>
    383b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003840 <fileno@plt>:
    3840:	f3 0f 1e fa          	endbr64 
    3844:	f2 ff 25 2d 56 1e 00 	bnd jmp QWORD PTR [rip+0x1e562d]        # 1e8e78 <fileno@GLIBC_2.2.5>
    384b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003850 <strrchr@plt>:
    3850:	f3 0f 1e fa          	endbr64 
    3854:	f2 ff 25 25 56 1e 00 	bnd jmp QWORD PTR [rip+0x1e5625]        # 1e8e80 <strrchr@GLIBC_2.2.5>
    385b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003860 <__stack_chk_fail@plt>:
    3860:	f3 0f 1e fa          	endbr64 
    3864:	f2 ff 25 1d 56 1e 00 	bnd jmp QWORD PTR [rip+0x1e561d]        # 1e8e88 <__stack_chk_fail@GLIBC_2.4>
    386b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003870 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>:
    3870:	f3 0f 1e fa          	endbr64 
    3874:	f2 ff 25 15 56 1e 00 	bnd jmp QWORD PTR [rip+0x1e5615]        # 1e8e90 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@GLIBCXX_3.4.9>
    387b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003880 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned long, char)@plt>:
    3880:	f3 0f 1e fa          	endbr64 
    3884:	f2 ff 25 0d 56 1e 00 	bnd jmp QWORD PTR [rip+0x1e560d]        # 1e8e98 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned long, char)@GLIBCXX_3.4.21>
    388b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003890 <fflush@plt>:
    3890:	f3 0f 1e fa          	endbr64 
    3894:	f2 ff 25 05 56 1e 00 	bnd jmp QWORD PTR [rip+0x1e5605]        # 1e8ea0 <fflush@GLIBC_2.2.5>
    389b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000038a0 <fopen@plt>:
    38a0:	f3 0f 1e fa          	endbr64 
    38a4:	f2 ff 25 fd 55 1e 00 	bnd jmp QWORD PTR [rip+0x1e55fd]        # 1e8ea8 <fopen@GLIBC_2.2.5>
    38ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000038b0 <free@plt>:
    38b0:	f3 0f 1e fa          	endbr64 
    38b4:	f2 ff 25 f5 55 1e 00 	bnd jmp QWORD PTR [rip+0x1e55f5]        # 1e8eb0 <free@GLIBC_2.2.5>
    38bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000038c0 <exit@plt>:
    38c0:	f3 0f 1e fa          	endbr64 
    38c4:	f2 ff 25 ed 55 1e 00 	bnd jmp QWORD PTR [rip+0x1e55ed]        # 1e8eb8 <exit@GLIBC_2.2.5>
    38cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000038d0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)@plt>:
    38d0:	f3 0f 1e fa          	endbr64 
    38d4:	f2 ff 25 e5 55 1e 00 	bnd jmp QWORD PTR [rip+0x1e55e5]        # 1e8ec0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)@GLIBCXX_3.4.21>
    38db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000038e0 <fputc@plt>:
    38e0:	f3 0f 1e fa          	endbr64 
    38e4:	f2 ff 25 dd 55 1e 00 	bnd jmp QWORD PTR [rip+0x1e55dd]        # 1e8ec8 <fputc@GLIBC_2.2.5>
    38eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000038f0 <malloc@plt>:
    38f0:	f3 0f 1e fa          	endbr64 
    38f4:	f2 ff 25 d5 55 1e 00 	bnd jmp QWORD PTR [rip+0x1e55d5]        # 1e8ed0 <malloc@GLIBC_2.2.5>
    38fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003900 <vfprintf@plt>:
    3900:	f3 0f 1e fa          	endbr64 
    3904:	f2 ff 25 cd 55 1e 00 	bnd jmp QWORD PTR [rip+0x1e55cd]        # 1e8ed8 <vfprintf@GLIBC_2.2.5>
    390b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003910 <std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >::basic_ostringstream()@plt>:
    3910:	f3 0f 1e fa          	endbr64 
    3914:	f2 ff 25 c5 55 1e 00 	bnd jmp QWORD PTR [rip+0x1e55c5]        # 1e8ee0 <std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >::basic_ostringstream()@GLIBCXX_3.4.26>
    391b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003920 <putchar@plt>:
    3920:	f3 0f 1e fa          	endbr64 
    3924:	f2 ff 25 bd 55 1e 00 	bnd jmp QWORD PTR [rip+0x1e55bd]        # 1e8ee8 <putchar@GLIBC_2.2.5>
    392b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003930 <strcmp@plt>:
    3930:	f3 0f 1e fa          	endbr64 
    3934:	f2 ff 25 b5 55 1e 00 	bnd jmp QWORD PTR [rip+0x1e55b5]        # 1e8ef0 <strcmp@GLIBC_2.2.5>
    393b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003940 <strtol@plt>:
    3940:	f3 0f 1e fa          	endbr64 
    3944:	f2 ff 25 ad 55 1e 00 	bnd jmp QWORD PTR [rip+0x1e55ad]        # 1e8ef8 <strtol@GLIBC_2.2.5>
    394b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003950 <fprintf@plt>:
    3950:	f3 0f 1e fa          	endbr64 
    3954:	f2 ff 25 a5 55 1e 00 	bnd jmp QWORD PTR [rip+0x1e55a5]        # 1e8f00 <fprintf@GLIBC_2.2.5>
    395b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003960 <getpid@plt>:
    3960:	f3 0f 1e fa          	endbr64 
    3964:	f2 ff 25 9d 55 1e 00 	bnd jmp QWORD PTR [rip+0x1e559d]        # 1e8f08 <getpid@GLIBC_2.2.5>
    396b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003970 <std::ios_base::Init::Init()@plt>:
    3970:	f3 0f 1e fa          	endbr64 
    3974:	f2 ff 25 95 55 1e 00 	bnd jmp QWORD PTR [rip+0x1e5595]        # 1e8f10 <std::ios_base::Init::Init()@GLIBCXX_3.4>
    397b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003980 <puts@plt>:
    3980:	f3 0f 1e fa          	endbr64 
    3984:	f2 ff 25 8d 55 1e 00 	bnd jmp QWORD PTR [rip+0x1e558d]        # 1e8f18 <puts@GLIBC_2.2.5>
    398b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003990 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long)@plt>:
    3990:	f3 0f 1e fa          	endbr64 
    3994:	f2 ff 25 85 55 1e 00 	bnd jmp QWORD PTR [rip+0x1e5585]        # 1e8f20 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long)@GLIBCXX_3.4.21>
    399b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000039a0 <fgets@plt>:
    39a0:	f3 0f 1e fa          	endbr64 
    39a4:	f2 ff 25 7d 55 1e 00 	bnd jmp QWORD PTR [rip+0x1e557d]        # 1e8f28 <fgets@GLIBC_2.2.5>
    39ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000039b0 <std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const@plt>:
    39b0:	f3 0f 1e fa          	endbr64 
    39b4:	f2 ff 25 75 55 1e 00 	bnd jmp QWORD PTR [rip+0x1e5575]        # 1e8f30 <std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const@GLIBCXX_3.4.21>
    39bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000039c0 <std::ostream& std::ostream::_M_insert<double>(double)@plt>:
    39c0:	f3 0f 1e fa          	endbr64 
    39c4:	f2 ff 25 6d 55 1e 00 	bnd jmp QWORD PTR [rip+0x1e556d]        # 1e8f38 <std::ostream& std::ostream::_M_insert<double>(double)@GLIBCXX_3.4.9>
    39cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000039d0 <memmove@plt>:
    39d0:	f3 0f 1e fa          	endbr64 
    39d4:	f2 ff 25 65 55 1e 00 	bnd jmp QWORD PTR [rip+0x1e5565]        # 1e8f40 <memmove@GLIBC_2.2.5>
    39db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000039e0 <realloc@plt>:
    39e0:	f3 0f 1e fa          	endbr64 
    39e4:	f2 ff 25 5d 55 1e 00 	bnd jmp QWORD PTR [rip+0x1e555d]        # 1e8f48 <realloc@GLIBC_2.2.5>
    39eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000039f0 <__fprintf_chk@plt>:
    39f0:	f3 0f 1e fa          	endbr64 
    39f4:	f2 ff 25 55 55 1e 00 	bnd jmp QWORD PTR [rip+0x1e5555]        # 1e8f50 <__fprintf_chk@GLIBC_2.3.4>
    39fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003a00 <getopt_long@plt>:
    3a00:	f3 0f 1e fa          	endbr64 
    3a04:	f2 ff 25 4d 55 1e 00 	bnd jmp QWORD PTR [rip+0x1e554d]        # 1e8f58 <getopt_long@GLIBC_2.2.5>
    3a0b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003a10 <std::ostream::operator<<(int)@plt>:
    3a10:	f3 0f 1e fa          	endbr64 
    3a14:	f2 ff 25 45 55 1e 00 	bnd jmp QWORD PTR [rip+0x1e5545]        # 1e8f60 <std::ostream::operator<<(int)@GLIBCXX_3.4>
    3a1b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003a20 <isatty@plt>:
    3a20:	f3 0f 1e fa          	endbr64 
    3a24:	f2 ff 25 3d 55 1e 00 	bnd jmp QWORD PTR [rip+0x1e553d]        # 1e8f68 <isatty@GLIBC_2.2.5>
    3a2b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003a30 <pow@plt>:
    3a30:	f3 0f 1e fa          	endbr64 
    3a34:	f2 ff 25 35 55 1e 00 	bnd jmp QWORD PTR [rip+0x1e5535]        # 1e8f70 <pow@GLIBC_2.29>
    3a3b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003a40 <strpbrk@plt>:
    3a40:	f3 0f 1e fa          	endbr64 
    3a44:	f2 ff 25 2d 55 1e 00 	bnd jmp QWORD PTR [rip+0x1e552d]        # 1e8f78 <strpbrk@GLIBC_2.2.5>
    3a4b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003a50 <_Unwind_Resume@plt>:
    3a50:	f3 0f 1e fa          	endbr64 
    3a54:	f2 ff 25 25 55 1e 00 	bnd jmp QWORD PTR [rip+0x1e5525]        # 1e8f80 <_Unwind_Resume@GCC_3.0>
    3a5b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003a60 <strcat@plt>:
    3a60:	f3 0f 1e fa          	endbr64 
    3a64:	f2 ff 25 1d 55 1e 00 	bnd jmp QWORD PTR [rip+0x1e551d]        # 1e8f88 <strcat@GLIBC_2.2.5>
    3a6b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003a70 <exp@plt>:
    3a70:	f3 0f 1e fa          	endbr64 
    3a74:	f2 ff 25 15 55 1e 00 	bnd jmp QWORD PTR [rip+0x1e5515]        # 1e8f90 <exp@GLIBC_2.29>
    3a7b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003a80 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long)@plt>:
    3a80:	f3 0f 1e fa          	endbr64 
    3a84:	f2 ff 25 0d 55 1e 00 	bnd jmp QWORD PTR [rip+0x1e550d]        # 1e8f98 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long)@GLIBCXX_3.4.21>
    3a8b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003a90 <strtok_r@plt>:
    3a90:	f3 0f 1e fa          	endbr64 
    3a94:	f2 ff 25 05 55 1e 00 	bnd jmp QWORD PTR [rip+0x1e5505]        # 1e8fa0 <strtok_r@GLIBC_2.2.5>
    3a9b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003aa0 <toupper@plt>:
    3aa0:	f3 0f 1e fa          	endbr64 
    3aa4:	f2 ff 25 fd 54 1e 00 	bnd jmp QWORD PTR [rip+0x1e54fd]        # 1e8fa8 <toupper@GLIBC_2.2.5>
    3aab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003ab0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::assign(char const*)@plt>:
    3ab0:	f3 0f 1e fa          	endbr64 
    3ab4:	f2 ff 25 f5 54 1e 00 	bnd jmp QWORD PTR [rip+0x1e54f5]        # 1e8fb0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::assign(char const*)@GLIBCXX_3.4.21>
    3abb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003ac0 <putc@plt>:
    3ac0:	f3 0f 1e fa          	endbr64 
    3ac4:	f2 ff 25 ed 54 1e 00 	bnd jmp QWORD PTR [rip+0x1e54ed]        # 1e8fb8 <putc@GLIBC_2.2.5>
    3acb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003ad0 <fwrite@plt>:
    3ad0:	f3 0f 1e fa          	endbr64 
    3ad4:	f2 ff 25 e5 54 1e 00 	bnd jmp QWORD PTR [rip+0x1e54e5]        # 1e8fc0 <fwrite@GLIBC_2.2.5>
    3adb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000003ae0 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0] [clone .cold]>:
    3ae0:	48 8b 0d b9 a7 24 00 	mov    rcx,QWORD PTR [rip+0x24a7b9]        # 24e2a0 <package_name>
    3ae7:	48 8b 3d 32 a6 24 00 	mov    rdi,QWORD PTR [rip+0x24a632]        # 24e120 <stderr@@GLIBC_2.2.5>
    3aee:	31 c0                	xor    eax,eax
    3af0:	4c 8d 0d d2 dd 02 00 	lea    r9,[rip+0x2ddd2]        # 318c9 <_IO_stdin_used+0x8c9>
    3af7:	48 8d 15 6d d5 02 00 	lea    rdx,[rip+0x2d56d]        # 3106b <_IO_stdin_used+0x6b>
    3afe:	be 01 00 00 00       	mov    esi,0x1
    3b03:	e8 e8 fe ff ff       	call   39f0 <__fprintf_chk@plt>
    3b08:	e8 13 fc ff ff       	call   3720 <abort@plt>

0000000000003b0d <main.cold>:
    3b0d:	48 8b bd 90 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x370]
    3b14:	48 8d 85 a0 fc ff ff 	lea    rax,[rbp-0x360]
    3b1b:	48 39 c7             	cmp    rdi,rax
    3b1e:	74 05                	je     3b25 <main.cold+0x18>
    3b20:	e8 bb fc ff ff       	call   37e0 <operator delete(void*)@plt>
    3b25:	48 8b bd a0 fb ff ff 	mov    rdi,QWORD PTR [rbp-0x460]
    3b2c:	e8 df fa ff ff       	call   3610 <std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_ostringstream()@plt>
    3b31:	4c 89 ef             	mov    rdi,r13
    3b34:	e8 17 16 00 00       	call   5150 <SparseMFEFold::~SparseMFEFold()>
    3b39:	48 8b bd 70 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x390]
    3b40:	48 3b bd 70 fb ff ff 	cmp    rdi,QWORD PTR [rbp-0x490]
    3b47:	74 05                	je     3b4e <main.cold+0x41>
    3b49:	e8 92 fc ff ff       	call   37e0 <operator delete(void*)@plt>
    3b4e:	48 8b bd 50 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x3b0]
    3b55:	48 3b bd 90 fb ff ff 	cmp    rdi,QWORD PTR [rbp-0x470]
    3b5c:	74 05                	je     3b63 <main.cold+0x56>
    3b5e:	e8 7d fc ff ff       	call   37e0 <operator delete(void*)@plt>
    3b63:	49 89 dc             	mov    r12,rbx
    3b66:	48 8b bd 30 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x3d0]
    3b6d:	48 3b bd 98 fb ff ff 	cmp    rdi,QWORD PTR [rbp-0x468]
    3b74:	74 05                	je     3b7b <main.cold+0x6e>
    3b76:	e8 65 fc ff ff       	call   37e0 <operator delete(void*)@plt>
    3b7b:	4c 89 e7             	mov    rdi,r12
    3b7e:	e8 cd fe ff ff       	call   3a50 <_Unwind_Resume@plt>
    3b83:	48 8b bd b0 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x350]
    3b8a:	48 3b bd 80 fb ff ff 	cmp    rdi,QWORD PTR [rbp-0x480]
    3b91:	74 05                	je     3b98 <main.cold+0x8b>
    3b93:	e8 48 fc ff ff       	call   37e0 <operator delete(void*)@plt>
    3b98:	4c 89 e3             	mov    rbx,r12
    3b9b:	eb 9c                	jmp    3b39 <main.cold+0x2c>
    3b9d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000003ba0 <_GLOBAL__sub_I_args_info_purpose>:
    3ba0:	f3 0f 1e fa          	endbr64 
    3ba4:	55                   	push   rbp
    3ba5:	48 8b 2d 24 54 1e 00 	mov    rbp,QWORD PTR [rip+0x1e5424]        # 1e8fd0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()@GLIBCXX_3.4.21>
    3bac:	48 8d 05 dd a6 24 00 	lea    rax,[rip+0x24a6dd]        # 24e290 <input_structure[abi:cxx11]+0x10>
    3bb3:	48 8d 15 4e 54 1e 00 	lea    rdx,[rip+0x1e544e]        # 1e9008 <__dso_handle>
    3bba:	48 8d 70 f0          	lea    rsi,[rax-0x10]
    3bbe:	48 89 05 bb a6 24 00 	mov    QWORD PTR [rip+0x24a6bb],rax        # 24e280 <input_structure[abi:cxx11]>
    3bc5:	48 89 ef             	mov    rdi,rbp
    3bc8:	c6 05 c1 a6 24 00 00 	mov    BYTE PTR [rip+0x24a6c1],0x0        # 24e290 <input_structure[abi:cxx11]+0x10>
    3bcf:	48 c7 05 ae a6 24 00 00 00 00 00 	mov    QWORD PTR [rip+0x24a6ae],0x0        # 24e288 <input_structure[abi:cxx11]+0x8>
    3bda:	e8 d1 fb ff ff       	call   37b0 <__cxa_atexit@plt>
    3bdf:	48 8d 05 8a a6 24 00 	lea    rax,[rip+0x24a68a]        # 24e270 <parameter_file[abi:cxx11]+0x10>
    3be6:	48 89 ef             	mov    rdi,rbp
    3be9:	5d                   	pop    rbp
    3bea:	48 8d 15 17 54 1e 00 	lea    rdx,[rip+0x1e5417]        # 1e9008 <__dso_handle>
    3bf1:	48 8d 70 f0          	lea    rsi,[rax-0x10]
    3bf5:	48 89 05 64 a6 24 00 	mov    QWORD PTR [rip+0x24a664],rax        # 24e260 <parameter_file[abi:cxx11]>
    3bfc:	48 c7 05 61 a6 24 00 00 00 00 00 	mov    QWORD PTR [rip+0x24a661],0x0        # 24e268 <parameter_file[abi:cxx11]+0x8>
    3c07:	c6 05 62 a6 24 00 00 	mov    BYTE PTR [rip+0x24a662],0x0        # 24e270 <parameter_file[abi:cxx11]+0x10>
    3c0e:	e9 9d fb ff ff       	jmp    37b0 <__cxa_atexit@plt>
    3c13:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    3c1d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000003c20 <main>:
    3c20:	f3 0f 1e fa          	endbr64 
    3c24:	55                   	push   rbp
    3c25:	48 89 e5             	mov    rbp,rsp
    3c28:	41 57                	push   r15
    3c2a:	41 56                	push   r14
    3c2c:	41 55                	push   r13
    3c2e:	41 54                	push   r12
    3c30:	53                   	push   rbx
    3c31:	48 81 ec 78 04 00 00 	sub    rsp,0x478
    3c38:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
    3c41:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    3c45:	31 c0                	xor    eax,eax
    3c47:	48 8d 85 c0 fb ff ff 	lea    rax,[rbp-0x440]
    3c4e:	48 89 c2             	mov    rdx,rax
    3c51:	48 89 85 88 fb ff ff 	mov    QWORD PTR [rbp-0x478],rax
    3c58:	e8 63 14 00 00       	call   50c0 <cmdline_parser(int, char**, args_info*)>
    3c5d:	85 c0                	test   eax,eax
    3c5f:	0f 85 f0 0a 00 00    	jne    4755 <main+0xb35>
    3c65:	8b 9d 28 fc ff ff    	mov    ebx,DWORD PTR [rbp-0x3d8]
    3c6b:	41 89 c4             	mov    r12d,eax
    3c6e:	48 8d 85 40 fc ff ff 	lea    rax,[rbp-0x3c0]
    3c75:	48 c7 85 38 fc ff ff 00 00 00 00 	mov    QWORD PTR [rbp-0x3c8],0x0
    3c80:	48 89 85 98 fb ff ff 	mov    QWORD PTR [rbp-0x468],rax
    3c87:	4c 8d b5 30 fc ff ff 	lea    r14,[rbp-0x3d0]
    3c8e:	48 89 85 30 fc ff ff 	mov    QWORD PTR [rbp-0x3d0],rax
    3c95:	c6 85 40 fc ff ff 00 	mov    BYTE PTR [rbp-0x3c0],0x0
    3c9c:	85 db                	test   ebx,ebx
    3c9e:	0f 85 b8 00 00 00    	jne    3d5c <main+0x13c>
    3ca4:	4c 89 f6             	mov    rsi,r14
    3ca7:	48 8d 3d 92 a4 24 00 	lea    rdi,[rip+0x24a492]        # 24e140 <std::cin@@GLIBCXX_3.4>
    3cae:	e8 2d f9 ff ff       	call   35e0 <std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)@plt>
    3cb3:	48 8b 85 38 fc ff ff 	mov    rax,QWORD PTR [rbp-0x3c8]
    3cba:	44 8b 9d 10 fc ff ff 	mov    r11d,DWORD PTR [rbp-0x3f0]
    3cc1:	48 c7 85 58 fc ff ff 00 00 00 00 	mov    QWORD PTR [rbp-0x3a8],0x0
    3ccc:	4c 8d bd 50 fc ff ff 	lea    r15,[rbp-0x3b0]
    3cd3:	c6 85 60 fc ff ff 00 	mov    BYTE PTR [rbp-0x3a0],0x0
    3cda:	48 89 85 a8 fb ff ff 	mov    QWORD PTR [rbp-0x458],rax
    3ce1:	48 8d 85 60 fc ff ff 	lea    rax,[rbp-0x3a0]
    3ce8:	48 89 85 90 fb ff ff 	mov    QWORD PTR [rbp-0x470],rax
    3cef:	48 89 85 50 fc ff ff 	mov    QWORD PTR [rbp-0x3b0],rax
    3cf6:	45 85 db             	test   r11d,r11d
    3cf9:	0f 84 17 02 00 00    	je     3f16 <main+0x2f6>
    3cff:	48 8d 35 7a a5 24 00 	lea    rsi,[rip+0x24a57a]        # 24e280 <input_structure[abi:cxx11]>
    3d06:	4c 89 ff             	mov    rdi,r15
    3d09:	e8 f2 f9 ff ff       	call   3700 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@plt>
    3d0e:	48 8d 35 b4 db 02 00 	lea    rsi,[rip+0x2dbb4]        # 318c9 <_IO_stdin_used+0x8c9>
    3d15:	4c 89 ff             	mov    rdi,r15
    3d18:	e8 13 f9 ff ff       	call   3630 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const@plt>
    3d1d:	85 c0                	test   eax,eax
    3d1f:	74 57                	je     3d78 <main+0x158>
    3d21:	48 63 85 a8 fb ff ff 	movsxd rax,DWORD PTR [rbp-0x458]
    3d28:	48 3b 85 58 fc ff ff 	cmp    rax,QWORD PTR [rbp-0x3a8]
    3d2f:	74 47                	je     3d78 <main+0x158>
    3d31:	ba 32 00 00 00       	mov    edx,0x32
    3d36:	48 8d 35 bb db 02 00 	lea    rsi,[rip+0x2dbbb]        # 318f8 <_IO_stdin_used+0x8f8>
    3d3d:	48 8d 3d bc a2 24 00 	lea    rdi,[rip+0x24a2bc]        # 24e000 <std::cout@@GLIBCXX_3.4>
    3d44:	e8 27 fb ff ff       	call   3870 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    3d49:	48 8d 3d b0 a2 24 00 	lea    rdi,[rip+0x24a2b0]        # 24e000 <std::cout@@GLIBCXX_3.4>
    3d50:	e8 7b f9 ff ff       	call   36d0 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    3d55:	31 ff                	xor    edi,edi
    3d57:	e8 64 fb ff ff       	call   38c0 <exit@plt>
    3d5c:	48 8b 85 20 fc ff ff 	mov    rax,QWORD PTR [rbp-0x3e0]
    3d63:	4c 89 f7             	mov    rdi,r14
    3d66:	48 8b 30             	mov    rsi,QWORD PTR [rax]
    3d69:	e8 42 fd ff ff       	call   3ab0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::assign(char const*)@plt>
    3d6e:	e9 40 ff ff ff       	jmp    3cb3 <main+0x93>
    3d73:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    3d78:	44 8b 95 18 fc ff ff 	mov    r10d,DWORD PTR [rbp-0x3e8]
    3d7f:	48 8d 85 80 fc ff ff 	lea    rax,[rbp-0x380]
    3d86:	48 c7 85 78 fc ff ff 00 00 00 00 	mov    QWORD PTR [rbp-0x388],0x0
    3d91:	4c 8d ad 70 fc ff ff 	lea    r13,[rbp-0x390]
    3d98:	48 89 85 70 fb ff ff 	mov    QWORD PTR [rbp-0x490],rax
    3d9f:	48 89 85 70 fc ff ff 	mov    QWORD PTR [rbp-0x390],rax
    3da6:	c6 85 80 fc ff ff 00 	mov    BYTE PTR [rbp-0x380],0x0
    3dad:	45 85 d2             	test   r10d,r10d
    3db0:	0f 84 ae 01 00 00    	je     3f64 <main+0x344>
    3db6:	48 8d 35 a3 a4 24 00 	lea    rsi,[rip+0x24a4a3]        # 24e260 <parameter_file[abi:cxx11]>
    3dbd:	4c 89 ef             	mov    rdi,r13
    3dc0:	e8 3b f9 ff ff       	call   3700 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@plt>
    3dc5:	48 8d 35 fd da 02 00 	lea    rsi,[rip+0x2dafd]        # 318c9 <_IO_stdin_used+0x8c9>
    3dcc:	4c 89 ef             	mov    rdi,r13
    3dcf:	e8 5c f8 ff ff       	call   3630 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const@plt>
    3dd4:	85 c0                	test   eax,eax
    3dd6:	74 0e                	je     3de6 <main+0x1c6>
    3dd8:	48 8b bd 70 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x390]
    3ddf:	31 f6                	xor    esi,esi
    3de1:	e8 5b f8 01 00       	call   23641 <vrna_params_load>
    3de6:	8b 85 08 fc ff ff    	mov    eax,DWORD PTR [rbp-0x3f8]
    3dec:	48 8b 9d 50 fc ff ff 	mov    rbx,QWORD PTR [rbp-0x3b0]
    3df3:	4c 8b ad 58 fc ff ff 	mov    r13,QWORD PTR [rbp-0x3a8]
    3dfa:	89 85 6c fb ff ff    	mov    DWORD PTR [rbp-0x494],eax
    3e00:	48 8d 85 c0 fc ff ff 	lea    rax,[rbp-0x340]
    3e07:	48 89 85 80 fb ff ff 	mov    QWORD PTR [rbp-0x480],rax
    3e0e:	48 89 85 b0 fc ff ff 	mov    QWORD PTR [rbp-0x350],rax
    3e15:	48 89 d8             	mov    rax,rbx
    3e18:	4c 01 e8             	add    rax,r13
    3e1b:	74 09                	je     3e26 <main+0x206>
    3e1d:	48 85 db             	test   rbx,rbx
    3e20:	0f 84 39 09 00 00    	je     475f <main+0xb3f>
    3e26:	4c 89 ad b8 fb ff ff 	mov    QWORD PTR [rbp-0x448],r13
    3e2d:	49 83 fd 0f          	cmp    r13,0xf
    3e31:	0f 87 61 01 00 00    	ja     3f98 <main+0x378>
    3e37:	49 83 fd 01          	cmp    r13,0x1
    3e3b:	0f 85 37 01 00 00    	jne    3f78 <main+0x358>
    3e41:	0f b6 03             	movzx  eax,BYTE PTR [rbx]
    3e44:	88 85 c0 fc ff ff    	mov    BYTE PTR [rbp-0x340],al
    3e4a:	48 8d 85 b0 fc ff ff 	lea    rax,[rbp-0x350]
    3e51:	48 89 85 a0 fb ff ff 	mov    QWORD PTR [rbp-0x460],rax
    3e58:	48 8b 85 b8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x448]
    3e5f:	48 8b 95 b0 fc ff ff 	mov    rdx,QWORD PTR [rbp-0x350]
    3e66:	4c 89 f6             	mov    rsi,r14
    3e69:	4c 8d ad 30 fe ff ff 	lea    r13,[rbp-0x1d0]
    3e70:	48 8b 8d a0 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x460]
    3e77:	4c 89 ef             	mov    rdi,r13
    3e7a:	48 89 85 b8 fc ff ff 	mov    QWORD PTR [rbp-0x348],rax
    3e81:	c6 04 02 00          	mov    BYTE PTR [rdx+rax*1],0x0
    3e85:	44 8b 8d 1c fc ff ff 	mov    r9d,DWORD PTR [rbp-0x3e4]
    3e8c:	31 d2                	xor    edx,edx
    3e8e:	45 85 c9             	test   r9d,r9d
    3e91:	0f 94 c2             	sete   dl
    3e94:	e8 e7 1b 00 00       	call   5a80 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>
    3e99:	48 8b bd b0 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x350]
    3ea0:	48 3b bd 80 fb ff ff 	cmp    rdi,QWORD PTR [rbp-0x480]
    3ea7:	74 05                	je     3eae <main+0x28e>
    3ea9:	e8 32 f9 ff ff       	call   37e0 <operator delete(void*)@plt>
    3eae:	44 8b 85 14 fc ff ff 	mov    r8d,DWORD PTR [rbp-0x3ec]
    3eb5:	45 85 c0             	test   r8d,r8d
    3eb8:	74 13                	je     3ecd <main+0x2ad>
    3eba:	48 8b 85 68 fe ff ff 	mov    rax,QWORD PTR [rbp-0x198]
    3ec1:	8b 15 c9 97 24 00    	mov    edx,DWORD PTR [rip+0x2497c9]        # 24d690 <dangles>
    3ec7:	89 90 ac 35 03 00    	mov    DWORD PTR [rax+0x335ac],edx
    3ecd:	8b 85 a8 fb ff ff    	mov    eax,DWORD PTR [rbp-0x458]
    3ed3:	48 89 e3             	mov    rbx,rsp
    3ed6:	8d 48 01             	lea    ecx,[rax+0x1]
    3ed9:	48 63 c1             	movsxd rax,ecx
    3edc:	4c 8d 34 85 0f 00 00 00 	lea    r14,[rax*4+0xf]
    3ee4:	4c 89 f6             	mov    rsi,r14
    3ee7:	4c 89 f2             	mov    rdx,r14
    3eea:	48 81 e6 00 f0 ff ff 	and    rsi,0xfffffffffffff000
    3ef1:	48 83 e2 f0          	and    rdx,0xfffffffffffffff0
    3ef5:	48 29 f3             	sub    rbx,rsi
    3ef8:	48 89 de             	mov    rsi,rbx
    3efb:	48 39 f4             	cmp    rsp,rsi
    3efe:	0f 84 db 00 00 00    	je     3fdf <main+0x3bf>
    3f04:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    3f0b:	48 83 8c 24 f8 0f 00 00 00 	or     QWORD PTR [rsp+0xff8],0x0
    3f14:	eb e5                	jmp    3efb <main+0x2db>
    3f16:	4c 8d ad 30 fe ff ff 	lea    r13,[rbp-0x1d0]
    3f1d:	48 63 b5 a8 fb ff ff 	movsxd rsi,DWORD PTR [rbp-0x458]
    3f24:	ba 2e 00 00 00       	mov    edx,0x2e
    3f29:	48 8d 9d 40 fe ff ff 	lea    rbx,[rbp-0x1c0]
    3f30:	4c 89 ef             	mov    rdi,r13
    3f33:	48 89 9d 30 fe ff ff 	mov    QWORD PTR [rbp-0x1d0],rbx
    3f3a:	e8 41 f9 ff ff       	call   3880 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned long, char)@plt>
    3f3f:	4c 89 ff             	mov    rdi,r15
    3f42:	4c 89 ee             	mov    rsi,r13
    3f45:	e8 86 f9 ff ff       	call   38d0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)@plt>
    3f4a:	48 8b bd 30 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x1d0]
    3f51:	48 39 df             	cmp    rdi,rbx
    3f54:	0f 84 b4 fd ff ff    	je     3d0e <main+0xee>
    3f5a:	e8 81 f8 ff ff       	call   37e0 <operator delete(void*)@plt>
    3f5f:	e9 aa fd ff ff       	jmp    3d0e <main+0xee>
    3f64:	48 8d 35 5e d9 02 00 	lea    rsi,[rip+0x2d95e]        # 318c9 <_IO_stdin_used+0x8c9>
    3f6b:	4c 89 ef             	mov    rdi,r13
    3f6e:	e8 3d fb ff ff       	call   3ab0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::assign(char const*)@plt>
    3f73:	e9 4d fe ff ff       	jmp    3dc5 <main+0x1a5>
    3f78:	48 8d 85 b0 fc ff ff 	lea    rax,[rbp-0x350]
    3f7f:	48 89 85 a0 fb ff ff 	mov    QWORD PTR [rbp-0x460],rax
    3f86:	4d 85 ed             	test   r13,r13
    3f89:	0f 84 c9 fe ff ff    	je     3e58 <main+0x238>
    3f8f:	48 8b bd 80 fb ff ff 	mov    rdi,QWORD PTR [rbp-0x480]
    3f96:	eb 37                	jmp    3fcf <main+0x3af>
    3f98:	48 8d 85 b0 fc ff ff 	lea    rax,[rbp-0x350]
    3f9f:	48 8d b5 b8 fb ff ff 	lea    rsi,[rbp-0x448]
    3fa6:	31 d2                	xor    edx,edx
    3fa8:	48 89 c7             	mov    rdi,rax
    3fab:	48 89 85 a0 fb ff ff 	mov    QWORD PTR [rbp-0x460],rax
    3fb2:	e8 c9 fa ff ff       	call   3a80 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long)@plt>
    3fb7:	48 89 85 b0 fc ff ff 	mov    QWORD PTR [rbp-0x350],rax
    3fbe:	48 89 c7             	mov    rdi,rax
    3fc1:	48 8b 85 b8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x448]
    3fc8:	48 89 85 c0 fc ff ff 	mov    QWORD PTR [rbp-0x340],rax
    3fcf:	4c 89 ea             	mov    rdx,r13
    3fd2:	48 89 de             	mov    rsi,rbx
    3fd5:	e8 c6 f7 ff ff       	call   37a0 <memcpy@plt>
    3fda:	e9 79 fe ff ff       	jmp    3e58 <main+0x238>
    3fdf:	81 e2 ff 0f 00 00    	and    edx,0xfff
    3fe5:	48 29 d4             	sub    rsp,rdx
    3fe8:	48 85 d2             	test   rdx,rdx
    3feb:	75 79                	jne    4066 <main+0x446>
    3fed:	48 8d 54 24 03       	lea    rdx,[rsp+0x3]
    3ff2:	48 89 d6             	mov    rsi,rdx
    3ff5:	48 83 e2 fc          	and    rdx,0xfffffffffffffffc
    3ff9:	48 c1 ee 02          	shr    rsi,0x2
    3ffd:	83 e9 01             	sub    ecx,0x1
    4000:	48 89 95 80 fb ff ff 	mov    QWORD PTR [rbp-0x480],rdx
    4007:	48 8d 7a 04          	lea    rdi,[rdx+0x4]
    400b:	c7 04 b5 00 00 00 00 00 00 00 00 	mov    DWORD PTR [rsi*4+0x0],0x0
    4016:	7e 59                	jle    4071 <main+0x451>
    4018:	48 8d 14 85 fc ff ff ff 	lea    rdx,[rax*4-0x4]
    4020:	31 f6                	xor    esi,esi
    4022:	48 89 e3             	mov    rbx,rsp
    4025:	48 89 95 78 fb ff ff 	mov    QWORD PTR [rbp-0x488],rdx
    402c:	e8 df f6 ff ff       	call   3710 <memset@plt>
    4031:	4c 89 f1             	mov    rcx,r14
    4034:	4c 89 f0             	mov    rax,r14
    4037:	48 8b 95 78 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x488]
    403e:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    4045:	48 83 e0 f0          	and    rax,0xfffffffffffffff0
    4049:	48 29 cb             	sub    rbx,rcx
    404c:	48 89 d9             	mov    rcx,rbx
    404f:	48 39 cc             	cmp    rsp,rcx
    4052:	74 52                	je     40a6 <main+0x486>
    4054:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    405b:	48 83 8c 24 f8 0f 00 00 00 	or     QWORD PTR [rsp+0xff8],0x0
    4064:	eb e9                	jmp    404f <main+0x42f>
    4066:	48 83 4c 14 f8 00    	or     QWORD PTR [rsp+rdx*1-0x8],0x0
    406c:	e9 7c ff ff ff       	jmp    3fed <main+0x3cd>
    4071:	4c 89 f2             	mov    rdx,r14
    4074:	48 89 e3             	mov    rbx,rsp
    4077:	4c 89 f0             	mov    rax,r14
    407a:	48 81 e2 00 f0 ff ff 	and    rdx,0xfffffffffffff000
    4081:	48 83 e0 f0          	and    rax,0xfffffffffffffff0
    4085:	48 29 d3             	sub    rbx,rdx
    4088:	48 89 da             	mov    rdx,rbx
    408b:	48 39 d4             	cmp    rsp,rdx
    408e:	0f 84 cf 05 00 00    	je     4663 <main+0xa43>
    4094:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    409b:	48 83 8c 24 f8 0f 00 00 00 	or     QWORD PTR [rsp+0xff8],0x0
    40a4:	eb e5                	jmp    408b <main+0x46b>
    40a6:	25 ff 0f 00 00       	and    eax,0xfff
    40ab:	48 29 c4             	sub    rsp,rax
    40ae:	48 85 c0             	test   rax,rax
    40b1:	74 06                	je     40b9 <main+0x499>
    40b3:	48 83 4c 04 f8 00    	or     QWORD PTR [rsp+rax*1-0x8],0x0
    40b9:	48 8d 4c 24 03       	lea    rcx,[rsp+0x3]
    40be:	31 f6                	xor    esi,esi
    40c0:	48 89 95 60 fb ff ff 	mov    QWORD PTR [rbp-0x4a0],rdx
    40c7:	48 89 e3             	mov    rbx,rsp
    40ca:	48 89 c8             	mov    rax,rcx
    40cd:	48 83 e1 fc          	and    rcx,0xfffffffffffffffc
    40d1:	48 c1 e8 02          	shr    rax,0x2
    40d5:	48 8d 79 04          	lea    rdi,[rcx+0x4]
    40d9:	48 89 8d 78 fb ff ff 	mov    QWORD PTR [rbp-0x488],rcx
    40e0:	c7 04 85 00 00 00 00 00 00 00 00 	mov    DWORD PTR [rax*4+0x0],0x0
    40eb:	e8 20 f6 ff ff       	call   3710 <memset@plt>
    40f0:	4c 89 f1             	mov    rcx,r14
    40f3:	4c 89 f0             	mov    rax,r14
    40f6:	48 8b 95 60 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4a0]
    40fd:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    4104:	48 83 e0 f0          	and    rax,0xfffffffffffffff0
    4108:	48 29 cb             	sub    rbx,rcx
    410b:	48 89 d9             	mov    rcx,rbx
    410e:	48 39 cc             	cmp    rsp,rcx
    4111:	74 12                	je     4125 <main+0x505>
    4113:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    411a:	48 83 8c 24 f8 0f 00 00 00 	or     QWORD PTR [rsp+0xff8],0x0
    4123:	eb e9                	jmp    410e <main+0x4ee>
    4125:	25 ff 0f 00 00       	and    eax,0xfff
    412a:	48 29 c4             	sub    rsp,rax
    412d:	48 85 c0             	test   rax,rax
    4130:	75 5f                	jne    4191 <main+0x571>
    4132:	48 8d 5c 24 03       	lea    rbx,[rsp+0x3]
    4137:	31 f6                	xor    esi,esi
    4139:	48 89 95 60 fb ff ff 	mov    QWORD PTR [rbp-0x4a0],rdx
    4140:	48 89 d8             	mov    rax,rbx
    4143:	48 83 e3 fc          	and    rbx,0xfffffffffffffffc
    4147:	48 c1 e8 02          	shr    rax,0x2
    414b:	48 8d 7b 04          	lea    rdi,[rbx+0x4]
    414f:	c7 04 85 00 00 00 00 00 00 00 00 	mov    DWORD PTR [rax*4+0x0],0x0
    415a:	e8 b1 f5 ff ff       	call   3710 <memset@plt>
    415f:	4c 89 f0             	mov    rax,r14
    4162:	48 89 e1             	mov    rcx,rsp
    4165:	49 81 e6 00 f0 ff ff 	and    r14,0xfffffffffffff000
    416c:	48 8b 95 60 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4a0]
    4173:	48 83 e0 f0          	and    rax,0xfffffffffffffff0
    4177:	4c 29 f1             	sub    rcx,r14
    417a:	48 39 cc             	cmp    rsp,rcx
    417d:	74 1a                	je     4199 <main+0x579>
    417f:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    4186:	48 83 8c 24 f8 0f 00 00 00 	or     QWORD PTR [rsp+0xff8],0x0
    418f:	eb e9                	jmp    417a <main+0x55a>
    4191:	48 83 4c 04 f8 00    	or     QWORD PTR [rsp+rax*1-0x8],0x0
    4197:	eb 99                	jmp    4132 <main+0x512>
    4199:	25 ff 0f 00 00       	and    eax,0xfff
    419e:	48 29 c4             	sub    rsp,rax
    41a1:	48 85 c0             	test   rax,rax
    41a4:	74 06                	je     41ac <main+0x58c>
    41a6:	48 83 4c 04 f8 00    	or     QWORD PTR [rsp+rax*1-0x8],0x0
    41ac:	4c 8d 74 24 03       	lea    r14,[rsp+0x3]
    41b1:	31 f6                	xor    esi,esi
    41b3:	4c 89 f0             	mov    rax,r14
    41b6:	49 83 e6 fc          	and    r14,0xfffffffffffffffc
    41ba:	48 c1 e8 02          	shr    rax,0x2
    41be:	49 8d 7e 04          	lea    rdi,[r14+0x4]
    41c2:	c7 04 85 00 00 00 00 00 00 00 00 	mov    DWORD PTR [rax*4+0x0],0x0
    41cd:	e8 3e f5 ff ff       	call   3710 <memset@plt>
    41d2:	48 8b bd 88 fb ff ff 	mov    rdi,QWORD PTR [rbp-0x478]
    41d9:	e8 82 0e 00 00       	call   5060 <cmdline_parser_free(args_info*)>
    41de:	48 8b 95 38 fc ff ff 	mov    rdx,QWORD PTR [rbp-0x3c8]
    41e5:	48 8b b5 30 fc ff ff 	mov    rsi,QWORD PTR [rbp-0x3d0]
    41ec:	48 8d 3d 0d 9e 24 00 	lea    rdi,[rip+0x249e0d]        # 24e000 <std::cout@@GLIBCXX_3.4>
    41f3:	e8 78 f6 ff ff       	call   3870 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    41f8:	48 89 c7             	mov    rdi,rax
    41fb:	e8 d0 f4 ff ff       	call   36d0 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    4200:	48 8b 8d 78 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x488]
    4207:	48 8b 95 80 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x480]
    420e:	48 89 de             	mov    rsi,rbx
    4211:	4c 89 ff             	mov    rdi,r15
    4214:	e8 a7 3c 00 00       	call   7ec0 <void detect_restricted_pairs<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int*, int*, int*)>
    4219:	8b bd a8 fb ff ff    	mov    edi,DWORD PTR [rbp-0x458]
    421f:	85 ff                	test   edi,edi
    4221:	7e 4d                	jle    4270 <main+0x650>
    4223:	48 8b 85 a8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x458]
    422a:	31 d2                	xor    edx,edx
    422c:	8d 48 ff             	lea    ecx,[rax-0x1]
    422f:	b8 01 00 00 00       	mov    eax,0x1
    4234:	48 83 c1 02          	add    rcx,0x2
    4238:	8b 34 83             	mov    esi,DWORD PTR [rbx+rax*4]
    423b:	85 f6                	test   esi,esi
    423d:	7e 1d                	jle    425c <main+0x63c>
    423f:	41 c7 04 86 00 00 00 00 	mov    DWORD PTR [r14+rax*4],0x0
    4247:	48 83 c0 01          	add    rax,0x1
    424b:	48 39 c1             	cmp    rcx,rax
    424e:	74 20                	je     4270 <main+0x650>
    4250:	8b 34 83             	mov    esi,DWORD PTR [rbx+rax*4]
    4253:	ba 01 00 00 00       	mov    edx,0x1
    4258:	85 f6                	test   esi,esi
    425a:	7f e3                	jg     423f <main+0x61f>
    425c:	41 89 14 86          	mov    DWORD PTR [r14+rax*4],edx
    4260:	48 83 c0 01          	add    rax,0x1
    4264:	8d 72 01             	lea    esi,[rdx+0x1]
    4267:	48 39 c1             	cmp    rcx,rax
    426a:	74 04                	je     4270 <main+0x650>
    426c:	89 f2                	mov    edx,esi
    426e:	eb c8                	jmp    4238 <main+0x618>
    4270:	48 83 ec 08          	sub    rsp,0x8
    4274:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    4278:	48 8d 55 b8          	lea    rdx,[rbp-0x48]
    427c:	4c 89 ef             	mov    rdi,r13
    427f:	48 8d 85 b0 fe ff ff 	lea    rax,[rbp-0x150]
    4286:	41 56                	push   r14
    4288:	4c 8d b5 60 ff ff ff 	lea    r14,[rbp-0xa0]
    428f:	ff b5 78 fb ff ff    	push   QWORD PTR [rbp-0x488]
    4295:	48 8d b5 b8 fe ff ff 	lea    rsi,[rbp-0x148]
    429c:	4c 8d 8d 60 fe ff ff 	lea    r9,[rbp-0x1a0]
    42a3:	ff b5 80 fb ff ff    	push   QWORD PTR [rbp-0x480]
    42a9:	4c 8d 85 58 fe ff ff 	lea    r8,[rbp-0x1a8]
    42b0:	53                   	push   rbx
    42b1:	50                   	push   rax
    42b2:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
    42b9:	50                   	push   rax
    42ba:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    42c1:	50                   	push   rax
    42c2:	48 8d 85 28 ff ff ff 	lea    rax,[rbp-0xd8]
    42c9:	50                   	push   rax
    42ca:	48 8d 85 10 ff ff ff 	lea    rax,[rbp-0xf0]
    42d1:	50                   	push   rax
    42d2:	48 8d 85 f8 fe ff ff 	lea    rax,[rbp-0x108]
    42d9:	50                   	push   rax
    42da:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    42e1:	50                   	push   rax
    42e2:	48 8d 85 68 fe ff ff 	lea    rax,[rbp-0x198]
    42e9:	41 56                	push   r14
    42eb:	50                   	push   rax
    42ec:	e8 ef 3f 00 00       	call   82e0 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)>
    42f1:	48 8b bd a0 fb ff ff 	mov    rdi,QWORD PTR [rbp-0x460]
    42f8:	48 83 c4 70          	add    rsp,0x70
    42fc:	89 c3                	mov    ebx,eax
    42fe:	e8 0d f6 ff ff       	call   3910 <std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >::basic_ostringstream()@plt>
    4303:	48 8b 85 b0 fc ff ff 	mov    rax,QWORD PTR [rbp-0x350]
    430a:	48 8b bd a0 fb ff ff 	mov    rdi,QWORD PTR [rbp-0x460]
    4311:	66 0f ef c0          	pxor   xmm0,xmm0
    4315:	f2 0f 2a c3          	cvtsi2sd xmm0,ebx
    4319:	f2 0f 5e 05 8f d7 02 00 	divsd  xmm0,QWORD PTR [rip+0x2d78f]        # 31ab0 <Law_and_Order+0x70>
    4321:	48 8b 48 e8          	mov    rcx,QWORD PTR [rax-0x18]
    4325:	48 01 f9             	add    rcx,rdi
    4328:	83 49 18 04          	or     DWORD PTR [rcx+0x18],0x4
    432c:	48 c7 41 08 02 00 00 00 	mov    QWORD PTR [rcx+0x8],0x2
    4334:	e8 87 f6 ff ff       	call   39c0 <std::ostream& std::ostream::_M_insert<double>(double)@plt>
    4339:	31 d2                	xor    edx,edx
    433b:	48 8d 35 87 d5 02 00 	lea    rsi,[rip+0x2d587]        # 318c9 <_IO_stdin_used+0x8c9>
    4342:	48 8d 3d b7 9c 24 00 	lea    rdi,[rip+0x249cb7]        # 24e000 <std::cout@@GLIBCXX_3.4>
    4349:	e8 22 f5 ff ff       	call   3870 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    434e:	ba 02 00 00 00       	mov    edx,0x2
    4353:	48 8d 35 4b d5 02 00 	lea    rsi,[rip+0x2d54b]        # 318a5 <_IO_stdin_used+0x8a5>
    435a:	48 8d 3d 9f 9c 24 00 	lea    rdi,[rip+0x249c9f]        # 24e000 <std::cout@@GLIBCXX_3.4>
    4361:	e8 0a f5 ff ff       	call   3870 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    4366:	48 8d bd 90 fc ff ff 	lea    rdi,[rbp-0x370]
    436d:	48 8d b5 b8 fc ff ff 	lea    rsi,[rbp-0x348]
    4374:	e8 37 f6 ff ff       	call   39b0 <std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const@plt>
    4379:	48 8b 95 98 fc ff ff 	mov    rdx,QWORD PTR [rbp-0x368]
    4380:	48 8b b5 90 fc ff ff 	mov    rsi,QWORD PTR [rbp-0x370]
    4387:	48 8d 3d 72 9c 24 00 	lea    rdi,[rip+0x249c72]        # 24e000 <std::cout@@GLIBCXX_3.4>
    438e:	e8 dd f4 ff ff       	call   3870 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    4393:	ba 01 00 00 00       	mov    edx,0x1
    4398:	48 8d 35 ce db 02 00 	lea    rsi,[rip+0x2dbce]        # 31f6d <Law_and_Order+0x52d>
    439f:	48 89 c7             	mov    rdi,rax
    43a2:	49 89 c7             	mov    r15,rax
    43a5:	e8 c6 f4 ff ff       	call   3870 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    43aa:	4c 89 ff             	mov    rdi,r15
    43ad:	e8 1e f3 ff ff       	call   36d0 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    43b2:	48 8b bd 90 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x370]
    43b9:	48 8d 85 a0 fc ff ff 	lea    rax,[rbp-0x360]
    43c0:	48 39 c7             	cmp    rdi,rax
    43c3:	74 05                	je     43ca <main+0x7aa>
    43c5:	e8 16 f4 ff ff       	call   37e0 <operator delete(void*)@plt>
    43ca:	8b 85 6c fb ff ff    	mov    eax,DWORD PTR [rbp-0x494]
    43d0:	85 c0                	test   eax,eax
    43d2:	0f 84 14 02 00 00    	je     45ec <main+0x9cc>
    43d8:	48 8d 3d 21 9c 24 00 	lea    rdi,[rip+0x249c21]        # 24e000 <std::cout@@GLIBCXX_3.4>
    43df:	e8 ec f2 ff ff       	call   36d0 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    43e4:	ba 08 00 00 00       	mov    edx,0x8
    43e9:	48 8d 35 b8 d4 02 00 	lea    rsi,[rip+0x2d4b8]        # 318a8 <_IO_stdin_used+0x8a8>
    43f0:	48 8d 3d 09 9c 24 00 	lea    rdi,[rip+0x249c09]        # 24e000 <std::cout@@GLIBCXX_3.4>
    43f7:	e8 74 f4 ff ff       	call   3870 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    43fc:	4c 89 f7             	mov    rdi,r14
    43ff:	e8 6c 5e 00 00       	call   a270 <sizeT(TraceArrows&)>
    4404:	48 89 c6             	mov    rsi,rax
    4407:	48 8d 3d f2 9b 24 00 	lea    rdi,[rip+0x249bf2]        # 24e000 <std::cout@@GLIBCXX_3.4>
    440e:	e8 5d f3 ff ff       	call   3770 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    4413:	48 89 c7             	mov    rdi,rax
    4416:	e8 b5 f2 ff ff       	call   36d0 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    441b:	ba 08 00 00 00       	mov    edx,0x8
    4420:	48 8d 35 8a d4 02 00 	lea    rsi,[rip+0x2d48a]        # 318b1 <_IO_stdin_used+0x8b1>
    4427:	48 8d 3d d2 9b 24 00 	lea    rdi,[rip+0x249bd2]        # 24e000 <std::cout@@GLIBCXX_3.4>
    442e:	e8 3d f4 ff ff       	call   3870 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    4433:	4c 89 f7             	mov    rdi,r14
    4436:	e8 55 5e 00 00       	call   a290 <maxT(TraceArrows&)>
    443b:	48 89 c6             	mov    rsi,rax
    443e:	48 8d 3d bb 9b 24 00 	lea    rdi,[rip+0x249bbb]        # 24e000 <std::cout@@GLIBCXX_3.4>
    4445:	e8 26 f3 ff ff       	call   3770 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    444a:	48 89 c7             	mov    rdi,rax
    444d:	e8 7e f2 ff ff       	call   36d0 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    4452:	ba 07 00 00 00       	mov    edx,0x7
    4457:	48 8d 35 5c d4 02 00 	lea    rsi,[rip+0x2d45c]        # 318ba <_IO_stdin_used+0x8ba>
    445e:	48 8d 3d 9b 9b 24 00 	lea    rdi,[rip+0x249b9b]        # 24e000 <std::cout@@GLIBCXX_3.4>
    4465:	e8 06 f4 ff ff       	call   3870 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    446a:	4c 89 f7             	mov    rdi,r14
    446d:	e8 0e 5e 00 00       	call   a280 <avoidedT(TraceArrows&)>
    4472:	48 89 c6             	mov    rsi,rax
    4475:	48 8d 3d 84 9b 24 00 	lea    rdi,[rip+0x249b84]        # 24e000 <std::cout@@GLIBCXX_3.4>
    447c:	e8 ef f2 ff ff       	call   3770 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    4481:	48 89 c7             	mov    rdi,rax
    4484:	e8 47 f2 ff ff       	call   36d0 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    4489:	ba 07 00 00 00       	mov    edx,0x7
    448e:	48 8d 35 2d d4 02 00 	lea    rsi,[rip+0x2d42d]        # 318c2 <_IO_stdin_used+0x8c2>
    4495:	48 8d 3d 64 9b 24 00 	lea    rdi,[rip+0x249b64]        # 24e000 <std::cout@@GLIBCXX_3.4>
    449c:	e8 cf f3 ff ff       	call   3870 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    44a1:	4c 89 f7             	mov    rdi,r14
    44a4:	e8 b7 5d 00 00       	call   a260 <erasedT(TraceArrows&)>
    44a9:	48 89 c6             	mov    rsi,rax
    44ac:	48 8d 3d 4d 9b 24 00 	lea    rdi,[rip+0x249b4d]        # 24e000 <std::cout@@GLIBCXX_3.4>
    44b3:	e8 b8 f2 ff ff       	call   3770 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    44b8:	48 89 c7             	mov    rdi,rax
    44bb:	e8 10 f2 ff ff       	call   36d0 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    44c0:	48 8d 3d 39 9b 24 00 	lea    rdi,[rip+0x249b39]        # 24e000 <std::cout@@GLIBCXX_3.4>
    44c7:	e8 04 f2 ff ff       	call   36d0 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    44cc:	ba 09 00 00 00       	mov    edx,0x9
    44d1:	48 8d 35 f2 d3 02 00 	lea    rsi,[rip+0x2d3f2]        # 318ca <_IO_stdin_used+0x8ca>
    44d8:	48 8d 3d 21 9b 24 00 	lea    rdi,[rip+0x249b21]        # 24e000 <std::cout@@GLIBCXX_3.4>
    44df:	e8 8c f3 ff ff       	call   3870 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    44e4:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
    44e8:	48 8b 4d a8          	mov    rcx,QWORD PTR [rbp-0x58]
    44ec:	31 f6                	xor    esi,esi
    44ee:	48 39 ca             	cmp    rdx,rcx
    44f1:	74 1b                	je     450e <main+0x8ee>
    44f3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    44f8:	48 8b 42 08          	mov    rax,QWORD PTR [rdx+0x8]
    44fc:	48 2b 02             	sub    rax,QWORD PTR [rdx]
    44ff:	48 83 c2 18          	add    rdx,0x18
    4503:	48 c1 f8 04          	sar    rax,0x4
    4507:	01 c6                	add    esi,eax
    4509:	48 39 d1             	cmp    rcx,rdx
    450c:	75 ea                	jne    44f8 <main+0x8d8>
    450e:	48 8d 3d eb 9a 24 00 	lea    rdi,[rip+0x249aeb]        # 24e000 <std::cout@@GLIBCXX_3.4>
    4515:	e8 f6 f4 ff ff       	call   3a10 <std::ostream::operator<<(int)@plt>
    451a:	48 89 c7             	mov    rdi,rax
    451d:	e8 ae f1 ff ff       	call   36d0 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    4522:	ba 09 00 00 00       	mov    edx,0x9
    4527:	48 8d 35 a6 d3 02 00 	lea    rsi,[rip+0x2d3a6]        # 318d4 <_IO_stdin_used+0x8d4>
    452e:	48 8d 3d cb 9a 24 00 	lea    rdi,[rip+0x249acb]        # 24e000 <std::cout@@GLIBCXX_3.4>
    4535:	e8 36 f3 ff ff       	call   3870 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    453a:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
    453e:	48 8b 4d a8          	mov    rcx,QWORD PTR [rbp-0x58]
    4542:	48 39 ca             	cmp    rdx,rcx
    4545:	74 20                	je     4567 <main+0x947>
    4547:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    4550:	48 8b 42 10          	mov    rax,QWORD PTR [rdx+0x10]
    4554:	48 2b 02             	sub    rax,QWORD PTR [rdx]
    4557:	48 83 c2 18          	add    rdx,0x18
    455b:	48 c1 f8 04          	sar    rax,0x4
    455f:	41 01 c4             	add    r12d,eax
    4562:	48 39 d1             	cmp    rcx,rdx
    4565:	75 e9                	jne    4550 <main+0x930>
    4567:	44 89 e6             	mov    esi,r12d
    456a:	48 8d 3d 8f 9a 24 00 	lea    rdi,[rip+0x249a8f]        # 24e000 <std::cout@@GLIBCXX_3.4>
    4571:	e8 9a f4 ff ff       	call   3a10 <std::ostream::operator<<(int)@plt>
    4576:	48 89 c7             	mov    rdi,rax
    4579:	e8 52 f1 ff ff       	call   36d0 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    457e:	ba 09 00 00 00       	mov    edx,0x9
    4583:	48 8d 35 54 d3 02 00 	lea    rsi,[rip+0x2d354]        # 318de <_IO_stdin_used+0x8de>
    458a:	48 8d 3d 6f 9a 24 00 	lea    rdi,[rip+0x249a6f]        # 24e000 <std::cout@@GLIBCXX_3.4>
    4591:	e8 da f2 ff ff       	call   3870 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    4596:	4c 89 f7             	mov    rdi,r14
    4599:	e8 d2 5c 00 00       	call   a270 <sizeT(TraceArrows&)>
    459e:	48 89 c6             	mov    rsi,rax
    45a1:	48 8d 3d 58 9a 24 00 	lea    rdi,[rip+0x249a58]        # 24e000 <std::cout@@GLIBCXX_3.4>
    45a8:	e8 c3 f1 ff ff       	call   3770 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    45ad:	48 89 c7             	mov    rdi,rax
    45b0:	e8 1b f1 ff ff       	call   36d0 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    45b5:	ba 09 00 00 00       	mov    edx,0x9
    45ba:	48 8d 35 27 d3 02 00 	lea    rsi,[rip+0x2d327]        # 318e8 <_IO_stdin_used+0x8e8>
    45c1:	48 8d 3d 38 9a 24 00 	lea    rdi,[rip+0x249a38]        # 24e000 <std::cout@@GLIBCXX_3.4>
    45c8:	e8 a3 f2 ff ff       	call   3870 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    45cd:	4c 89 f7             	mov    rdi,r14
    45d0:	e8 4b 5c 00 00       	call   a220 <capacityT(TraceArrows&)>
    45d5:	48 89 c6             	mov    rsi,rax
    45d8:	48 8d 3d 21 9a 24 00 	lea    rdi,[rip+0x249a21]        # 24e000 <std::cout@@GLIBCXX_3.4>
    45df:	e8 8c f1 ff ff       	call   3770 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    45e4:	48 89 c7             	mov    rdi,rax
    45e7:	e8 e4 f0 ff ff       	call   36d0 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    45ec:	48 8b bd a0 fb ff ff 	mov    rdi,QWORD PTR [rbp-0x460]
    45f3:	e8 18 f0 ff ff       	call   3610 <std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_ostringstream()@plt>
    45f8:	4c 89 ef             	mov    rdi,r13
    45fb:	e8 50 0b 00 00       	call   5150 <SparseMFEFold::~SparseMFEFold()>
    4600:	48 8b bd 70 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x390]
    4607:	48 3b bd 70 fb ff ff 	cmp    rdi,QWORD PTR [rbp-0x490]
    460e:	74 05                	je     4615 <main+0x9f5>
    4610:	e8 cb f1 ff ff       	call   37e0 <operator delete(void*)@plt>
    4615:	48 8b bd 50 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x3b0]
    461c:	48 3b bd 90 fb ff ff 	cmp    rdi,QWORD PTR [rbp-0x470]
    4623:	74 05                	je     462a <main+0xa0a>
    4625:	e8 b6 f1 ff ff       	call   37e0 <operator delete(void*)@plt>
    462a:	48 8b bd 30 fc ff ff 	mov    rdi,QWORD PTR [rbp-0x3d0]
    4631:	48 3b bd 98 fb ff ff 	cmp    rdi,QWORD PTR [rbp-0x468]
    4638:	74 05                	je     463f <main+0xa1f>
    463a:	e8 a1 f1 ff ff       	call   37e0 <operator delete(void*)@plt>
    463f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4643:	64 48 33 04 25 28 00 00 00 	xor    rax,QWORD PTR fs:0x28
    464c:	0f 85 19 01 00 00    	jne    476b <main+0xb4b>
    4652:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    4656:	31 c0                	xor    eax,eax
    4658:	5b                   	pop    rbx
    4659:	41 5c                	pop    r12
    465b:	41 5d                	pop    r13
    465d:	41 5e                	pop    r14
    465f:	41 5f                	pop    r15
    4661:	5d                   	pop    rbp
    4662:	c3                   	ret    
    4663:	25 ff 0f 00 00       	and    eax,0xfff
    4668:	48 29 c4             	sub    rsp,rax
    466b:	48 85 c0             	test   rax,rax
    466e:	74 06                	je     4676 <main+0xa56>
    4670:	48 83 4c 04 f8 00    	or     QWORD PTR [rsp+rax*1-0x8],0x0
    4676:	48 8d 54 24 03       	lea    rdx,[rsp+0x3]
    467b:	48 89 e3             	mov    rbx,rsp
    467e:	48 89 d0             	mov    rax,rdx
    4681:	48 83 e2 fc          	and    rdx,0xfffffffffffffffc
    4685:	48 89 95 78 fb ff ff 	mov    QWORD PTR [rbp-0x488],rdx
    468c:	4c 89 f2             	mov    rdx,r14
    468f:	48 c1 e8 02          	shr    rax,0x2
    4693:	48 81 e2 00 f0 ff ff 	and    rdx,0xfffffffffffff000
    469a:	c7 04 85 00 00 00 00 00 00 00 00 	mov    DWORD PTR [rax*4+0x0],0x0
    46a5:	4c 89 f0             	mov    rax,r14
    46a8:	48 29 d3             	sub    rbx,rdx
    46ab:	48 83 e0 f0          	and    rax,0xfffffffffffffff0
    46af:	48 89 da             	mov    rdx,rbx
    46b2:	48 39 d4             	cmp    rsp,rdx
    46b5:	74 12                	je     46c9 <main+0xaa9>
    46b7:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    46be:	48 83 8c 24 f8 0f 00 00 00 	or     QWORD PTR [rsp+0xff8],0x0
    46c7:	eb e9                	jmp    46b2 <main+0xa92>
    46c9:	25 ff 0f 00 00       	and    eax,0xfff
    46ce:	48 29 c4             	sub    rsp,rax
    46d1:	48 85 c0             	test   rax,rax
    46d4:	74 06                	je     46dc <main+0xabc>
    46d6:	48 83 4c 04 f8 00    	or     QWORD PTR [rsp+rax*1-0x8],0x0
    46dc:	48 8d 5c 24 03       	lea    rbx,[rsp+0x3]
    46e1:	48 89 e2             	mov    rdx,rsp
    46e4:	48 89 d8             	mov    rax,rbx
    46e7:	48 83 e3 fc          	and    rbx,0xfffffffffffffffc
    46eb:	48 c1 e8 02          	shr    rax,0x2
    46ef:	c7 04 85 00 00 00 00 00 00 00 00 	mov    DWORD PTR [rax*4+0x0],0x0
    46fa:	4c 89 f0             	mov    rax,r14
    46fd:	49 81 e6 00 f0 ff ff 	and    r14,0xfffffffffffff000
    4704:	48 83 e0 f0          	and    rax,0xfffffffffffffff0
    4708:	4c 29 f2             	sub    rdx,r14
    470b:	48 39 d4             	cmp    rsp,rdx
    470e:	74 12                	je     4722 <main+0xb02>
    4710:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    4717:	48 83 8c 24 f8 0f 00 00 00 	or     QWORD PTR [rsp+0xff8],0x0
    4720:	eb e9                	jmp    470b <main+0xaeb>
    4722:	25 ff 0f 00 00       	and    eax,0xfff
    4727:	48 29 c4             	sub    rsp,rax
    472a:	48 85 c0             	test   rax,rax
    472d:	74 06                	je     4735 <main+0xb15>
    472f:	48 83 4c 04 f8 00    	or     QWORD PTR [rsp+rax*1-0x8],0x0
    4735:	4c 8d 74 24 03       	lea    r14,[rsp+0x3]
    473a:	4c 89 f0             	mov    rax,r14
    473d:	49 83 e6 fc          	and    r14,0xfffffffffffffffc
    4741:	48 c1 e8 02          	shr    rax,0x2
    4745:	c7 04 85 00 00 00 00 00 00 00 00 	mov    DWORD PTR [rax*4+0x0],0x0
    4750:	e9 7d fa ff ff       	jmp    41d2 <main+0x5b2>
    4755:	bf 01 00 00 00       	mov    edi,0x1
    475a:	e8 61 f1 ff ff       	call   38c0 <exit@plt>
    475f:	48 8d 3d 32 cf 02 00 	lea    rdi,[rip+0x2cf32]        # 31698 <_IO_stdin_used+0x698>
    4766:	e8 15 f0 ff ff       	call   3780 <std::__throw_logic_error(char const*)@plt>
    476b:	e8 f0 f0 ff ff       	call   3860 <__stack_chk_fail@plt>
    4770:	f3 0f 1e fa          	endbr64 
    4774:	48 89 c3             	mov    rbx,rax
    4777:	e9 d2 f3 ff ff       	jmp    3b4e <main.cold+0x41>
    477c:	f3 0f 1e fa          	endbr64 
    4780:	48 89 c3             	mov    rbx,rax
    4783:	e9 b1 f3 ff ff       	jmp    3b39 <main.cold+0x2c>
    4788:	f3 0f 1e fa          	endbr64 
    478c:	49 89 c4             	mov    r12,rax
    478f:	e9 ef f3 ff ff       	jmp    3b83 <main.cold+0x76>
    4794:	f3 0f 1e fa          	endbr64 
    4798:	48 89 c3             	mov    rbx,rax
    479b:	e9 6d f3 ff ff       	jmp    3b0d <main.cold>
    47a0:	f3 0f 1e fa          	endbr64 
    47a4:	49 89 c4             	mov    r12,rax
    47a7:	e9 ba f3 ff ff       	jmp    3b66 <main.cold+0x59>
    47ac:	f3 0f 1e fa          	endbr64 
    47b0:	48 89 c3             	mov    rbx,rax
    47b3:	e9 6d f3 ff ff       	jmp    3b25 <main.cold+0x18>
    47b8:	f3 0f 1e fa          	endbr64 
    47bc:	48 89 c3             	mov    rbx,rax
    47bf:	e9 6d f3 ff ff       	jmp    3b31 <main.cold+0x24>
    47c4:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    47cf:	90                   	nop

00000000000047d0 <_GLOBAL__sub_I__Z20evaluate_restrictioniiPKiS0_>:
    47d0:	f3 0f 1e fa          	endbr64 
    47d4:	48 83 ec 08          	sub    rsp,0x8
    47d8:	48 8d 3d 0b a2 24 00 	lea    rdi,[rip+0x24a20b]        # 24e9ea <std::__ioinit>
    47df:	e8 8c f1 ff ff       	call   3970 <std::ios_base::Init::Init()@plt>
    47e4:	48 8b 3d 0d 48 1e 00 	mov    rdi,QWORD PTR [rip+0x1e480d]        # 1e8ff8 <std::ios_base::Init::~Init()@GLIBCXX_3.4>
    47eb:	48 83 c4 08          	add    rsp,0x8
    47ef:	48 8d 15 12 48 1e 00 	lea    rdx,[rip+0x1e4812]        # 1e9008 <__dso_handle>
    47f6:	48 8d 35 ed a1 24 00 	lea    rsi,[rip+0x24a1ed]        # 24e9ea <std::__ioinit>
    47fd:	e9 ae ef ff ff       	jmp    37b0 <__cxa_atexit@plt>
    4802:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    480c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000004810 <_GLOBAL__sub_I__ZN11TraceArrowsC2Em>:
    4810:	f3 0f 1e fa          	endbr64 
    4814:	48 83 ec 08          	sub    rsp,0x8
    4818:	48 8d 3d cc a1 24 00 	lea    rdi,[rip+0x24a1cc]        # 24e9eb <std::__ioinit>
    481f:	e8 4c f1 ff ff       	call   3970 <std::ios_base::Init::Init()@plt>
    4824:	48 8b 3d cd 47 1e 00 	mov    rdi,QWORD PTR [rip+0x1e47cd]        # 1e8ff8 <std::ios_base::Init::~Init()@GLIBCXX_3.4>
    482b:	48 83 c4 08          	add    rsp,0x8
    482f:	48 8d 15 d2 47 1e 00 	lea    rdx,[rip+0x1e47d2]        # 1e9008 <__dso_handle>
    4836:	48 8d 35 ae a1 24 00 	lea    rsi,[rip+0x24a1ae]        # 24e9eb <std::__ioinit>
    483d:	e9 6e ef ff ff       	jmp    37b0 <__cxa_atexit@plt>
    4842:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    484c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000004850 <_start>:
    4850:	f3 0f 1e fa          	endbr64 
    4854:	31 ed                	xor    ebp,ebp
    4856:	49 89 d1             	mov    r9,rdx
    4859:	5e                   	pop    rsi
    485a:	48 89 e2             	mov    rdx,rsp
    485d:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    4861:	50                   	push   rax
    4862:	54                   	push   rsp
    4863:	4c 8d 05 86 b8 02 00 	lea    r8,[rip+0x2b886]        # 300f0 <__libc_csu_fini>
    486a:	48 8d 0d 0f b8 02 00 	lea    rcx,[rip+0x2b80f]        # 30080 <__libc_csu_init>
    4871:	48 8d 3d a8 f3 ff ff 	lea    rdi,[rip+0xfffffffffffff3a8]        # 3c20 <main>
    4878:	ff 15 62 47 1e 00    	call   QWORD PTR [rip+0x1e4762]        # 1e8fe0 <__libc_start_main@GLIBC_2.2.5>
    487e:	f4                   	hlt    
    487f:	90                   	nop

0000000000004880 <deregister_tm_clones>:
    4880:	48 8d 3d 21 97 24 00 	lea    rdi,[rip+0x249721]        # 24dfa8 <__TMC_END__>
    4887:	48 8d 05 1a 97 24 00 	lea    rax,[rip+0x24971a]        # 24dfa8 <__TMC_END__>
    488e:	48 39 f8             	cmp    rax,rdi
    4891:	74 15                	je     48a8 <deregister_tm_clones+0x28>
    4893:	48 8b 05 3e 47 1e 00 	mov    rax,QWORD PTR [rip+0x1e473e]        # 1e8fd8 <_ITM_deregisterTMCloneTable>
    489a:	48 85 c0             	test   rax,rax
    489d:	74 09                	je     48a8 <deregister_tm_clones+0x28>
    489f:	ff e0                	jmp    rax
    48a1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    48a8:	c3                   	ret    
    48a9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000048b0 <register_tm_clones>:
    48b0:	48 8d 3d f1 96 24 00 	lea    rdi,[rip+0x2496f1]        # 24dfa8 <__TMC_END__>
    48b7:	48 8d 35 ea 96 24 00 	lea    rsi,[rip+0x2496ea]        # 24dfa8 <__TMC_END__>
    48be:	48 29 fe             	sub    rsi,rdi
    48c1:	48 89 f0             	mov    rax,rsi
    48c4:	48 c1 ee 3f          	shr    rsi,0x3f
    48c8:	48 c1 f8 03          	sar    rax,0x3
    48cc:	48 01 c6             	add    rsi,rax
    48cf:	48 d1 fe             	sar    rsi,1
    48d2:	74 14                	je     48e8 <register_tm_clones+0x38>
    48d4:	48 8b 05 15 47 1e 00 	mov    rax,QWORD PTR [rip+0x1e4715]        # 1e8ff0 <_ITM_registerTMCloneTable>
    48db:	48 85 c0             	test   rax,rax
    48de:	74 08                	je     48e8 <register_tm_clones+0x38>
    48e0:	ff e0                	jmp    rax
    48e2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    48e8:	c3                   	ret    
    48e9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000048f0 <__do_global_dtors_aux>:
    48f0:	f3 0f 1e fa          	endbr64 
    48f4:	80 3d 5d 99 24 00 00 	cmp    BYTE PTR [rip+0x24995d],0x0        # 24e258 <completed.8061>
    48fb:	75 2b                	jne    4928 <__do_global_dtors_aux+0x38>
    48fd:	55                   	push   rbp
    48fe:	48 83 3d c2 46 1e 00 00 	cmp    QWORD PTR [rip+0x1e46c2],0x0        # 1e8fc8 <__cxa_finalize@GLIBC_2.2.5>
    4906:	48 89 e5             	mov    rbp,rsp
    4909:	74 0c                	je     4917 <__do_global_dtors_aux+0x27>
    490b:	48 8b 3d f6 46 1e 00 	mov    rdi,QWORD PTR [rip+0x1e46f6]        # 1e9008 <__dso_handle>
    4912:	e8 69 ec ff ff       	call   3580 <__cxa_finalize@plt>
    4917:	e8 64 ff ff ff       	call   4880 <deregister_tm_clones>
    491c:	c6 05 35 99 24 00 01 	mov    BYTE PTR [rip+0x249935],0x1        # 24e258 <completed.8061>
    4923:	5d                   	pop    rbp
    4924:	c3                   	ret    
    4925:	0f 1f 00             	nop    DWORD PTR [rax]
    4928:	c3                   	ret    
    4929:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000004930 <frame_dummy>:
    4930:	f3 0f 1e fa          	endbr64 
    4934:	e9 77 ff ff ff       	jmp    48b0 <register_tm_clones>
    4939:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000004940 <cmdline_parser_release(args_info*)>:
    4940:	55                   	push   rbp
    4941:	48 89 fd             	mov    rbp,rdi
    4944:	53                   	push   rbx
    4945:	48 83 ec 08          	sub    rsp,0x8
    4949:	8b 47 68             	mov    eax,DWORD PTR [rdi+0x68]
    494c:	85 c0                	test   eax,eax
    494e:	74 2e                	je     497e <cmdline_parser_release(args_info*)+0x3e>
    4950:	31 db                	xor    ebx,ebx
    4952:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    4958:	48 8b 45 60          	mov    rax,QWORD PTR [rbp+0x60]
    495c:	89 da                	mov    edx,ebx
    495e:	83 c3 01             	add    ebx,0x1
    4961:	48 8b 3c d0          	mov    rdi,QWORD PTR [rax+rdx*8]
    4965:	e8 46 ef ff ff       	call   38b0 <free@plt>
    496a:	8b 45 68             	mov    eax,DWORD PTR [rbp+0x68]
    496d:	39 d8                	cmp    eax,ebx
    496f:	77 e7                	ja     4958 <cmdline_parser_release(args_info*)+0x18>
    4971:	85 c0                	test   eax,eax
    4973:	74 09                	je     497e <cmdline_parser_release(args_info*)+0x3e>
    4975:	48 8b 7d 60          	mov    rdi,QWORD PTR [rbp+0x60]
    4979:	e8 32 ef ff ff       	call   38b0 <free@plt>
    497e:	66 0f ef c0          	pxor   xmm0,xmm0
    4982:	0f 11 45 40          	movups XMMWORD PTR [rbp+0x40],xmm0
    4986:	0f 11 45 50          	movups XMMWORD PTR [rbp+0x50],xmm0
    498a:	48 83 c4 08          	add    rsp,0x8
    498e:	5b                   	pop    rbx
    498f:	5d                   	pop    rbp
    4990:	c3                   	ret    
    4991:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    499c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000049a0 <cmdline_parser_print_version()>:
    49a0:	f3 0f 1e fa          	endbr64 
    49a4:	48 83 ec 08          	sub    rsp,0x8
    49a8:	48 8b 15 f1 98 24 00 	mov    rdx,QWORD PTR [rip+0x2498f1]        # 24e2a0 <package_name>
    49af:	bf 01 00 00 00       	mov    edi,0x1
    49b4:	48 8d 05 49 c6 02 00 	lea    rax,[rip+0x2c649]        # 31004 <_IO_stdin_used+0x4>
    49bb:	48 8d 35 50 c6 02 00 	lea    rsi,[rip+0x2c650]        # 31012 <_IO_stdin_used+0x12>
    49c2:	80 3a 00             	cmp    BYTE PTR [rdx],0x0
    49c5:	48 0f 44 d0          	cmove  rdx,rax
    49c9:	31 c0                	xor    eax,eax
    49cb:	e8 c0 eb ff ff       	call   3590 <__printf_chk@plt>
    49d0:	48 8b 15 b9 47 1e 00 	mov    rdx,QWORD PTR [rip+0x1e47b9]        # 1e9190 <args_info_versiontext>
    49d7:	80 3a 00             	cmp    BYTE PTR [rdx],0x0
    49da:	75 0c                	jne    49e8 <cmdline_parser_print_version()+0x48>
    49dc:	48 83 c4 08          	add    rsp,0x8
    49e0:	c3                   	ret    
    49e1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    49e8:	48 8d 35 28 c6 02 00 	lea    rsi,[rip+0x2c628]        # 31017 <_IO_stdin_used+0x17>
    49ef:	bf 01 00 00 00       	mov    edi,0x1
    49f4:	31 c0                	xor    eax,eax
    49f6:	48 83 c4 08          	add    rsp,0x8
    49fa:	e9 91 eb ff ff       	jmp    3590 <__printf_chk@plt>
    49ff:	90                   	nop

0000000000004a00 <cmdline_parser_print_help()>:
    4a00:	f3 0f 1e fa          	endbr64 
    4a04:	41 54                	push   r12
    4a06:	55                   	push   rbp
    4a07:	48 8b 2d 92 47 1e 00 	mov    rbp,QWORD PTR [rip+0x1e4792]        # 1e91a0 <args_info_purpose>
    4a0e:	53                   	push   rbx
    4a0f:	48 89 ef             	mov    rdi,rbp
    4a12:	e8 79 ec ff ff       	call   3690 <strlen@plt>
    4a17:	4c 8b 25 7a 47 1e 00 	mov    r12,QWORD PTR [rip+0x1e477a]        # 1e9198 <args_info_usage>
    4a1e:	48 89 c3             	mov    rbx,rax
    4a21:	4c 89 e7             	mov    rdi,r12
    4a24:	e8 67 ec ff ff       	call   3690 <strlen@plt>
    4a29:	48 85 c0             	test   rax,rax
    4a2c:	75 42                	jne    4a70 <cmdline_parser_print_help()+0x70>
    4a2e:	48 85 db             	test   rbx,rbx
    4a31:	75 51                	jne    4a84 <cmdline_parser_print_help()+0x84>
    4a33:	48 8b 15 4e 47 1e 00 	mov    rdx,QWORD PTR [rip+0x1e474e]        # 1e9188 <args_info_description>
    4a3a:	80 3a 00             	cmp    BYTE PTR [rdx],0x0
    4a3d:	75 63                	jne    4aa2 <cmdline_parser_print_help()+0xa2>
    4a3f:	48 8b 3d fa 46 1e 00 	mov    rdi,QWORD PTR [rip+0x1e46fa]        # 1e9140 <args_info_help>
    4a46:	48 85 ff             	test   rdi,rdi
    4a49:	74 1e                	je     4a69 <cmdline_parser_print_help()+0x69>
    4a4b:	48 8d 1d f6 46 1e 00 	lea    rbx,[rip+0x1e46f6]        # 1e9148 <args_info_help+0x8>
    4a52:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    4a58:	e8 23 ef ff ff       	call   3980 <puts@plt>
    4a5d:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    4a60:	48 83 c3 08          	add    rbx,0x8
    4a64:	48 85 ff             	test   rdi,rdi
    4a67:	75 ef                	jne    4a58 <cmdline_parser_print_help()+0x58>
    4a69:	5b                   	pop    rbx
    4a6a:	5d                   	pop    rbp
    4a6b:	41 5c                	pop    r12
    4a6d:	c3                   	ret    
    4a6e:	66 90                	xchg   ax,ax
    4a70:	4c 89 e7             	mov    rdi,r12
    4a73:	e8 08 ef ff ff       	call   3980 <puts@plt>
    4a78:	48 85 db             	test   rbx,rbx
    4a7b:	74 0f                	je     4a8c <cmdline_parser_print_help()+0x8c>
    4a7d:	48 8b 2d 1c 47 1e 00 	mov    rbp,QWORD PTR [rip+0x1e471c]        # 1e91a0 <args_info_purpose>
    4a84:	48 89 ef             	mov    rdi,rbp
    4a87:	e8 f4 ee ff ff       	call   3980 <puts@plt>
    4a8c:	bf 0a 00 00 00       	mov    edi,0xa
    4a91:	e8 8a ee ff ff       	call   3920 <putchar@plt>
    4a96:	48 8b 15 eb 46 1e 00 	mov    rdx,QWORD PTR [rip+0x1e46eb]        # 1e9188 <args_info_description>
    4a9d:	80 3a 00             	cmp    BYTE PTR [rdx],0x0
    4aa0:	74 9d                	je     4a3f <cmdline_parser_print_help()+0x3f>
    4aa2:	48 8d 35 73 c5 02 00 	lea    rsi,[rip+0x2c573]        # 3101c <_IO_stdin_used+0x1c>
    4aa9:	bf 01 00 00 00       	mov    edi,0x1
    4aae:	31 c0                	xor    eax,eax
    4ab0:	e8 db ea ff ff       	call   3590 <__printf_chk@plt>
    4ab5:	eb 88                	jmp    4a3f <cmdline_parser_print_help()+0x3f>
    4ab7:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]

0000000000004ac0 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]>:
    4ac0:	41 57                	push   r15
    4ac2:	66 0f ef c0          	pxor   xmm0,xmm0
    4ac6:	49 89 f7             	mov    r15,rsi
    4ac9:	41 56                	push   r14
    4acb:	45 31 f6             	xor    r14d,r14d
    4ace:	41 55                	push   r13
    4ad0:	49 89 d5             	mov    r13,rdx
    4ad3:	41 54                	push   r12
    4ad5:	55                   	push   rbp
    4ad6:	48 8d 2d a7 ca 02 00 	lea    rbp,[rip+0x2caa7]        # 31584 <_IO_stdin_used+0x584>
    4add:	53                   	push   rbx
    4ade:	89 fb                	mov    ebx,edi
    4ae0:	48 83 ec 38          	sub    rsp,0x38
    4ae4:	66 0f 6f 1d 54 46 1e 00 	movdqa xmm3,XMMWORD PTR [rip+0x1e4654]        # 1e9140 <args_info_help>
    4aec:	66 0f 6f 0d 6c 46 1e 00 	movdqa xmm1,XMMWORD PTR [rip+0x1e466c]        # 1e9160 <args_info_help+0x20>
    4af4:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
    4afd:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
    4b02:	31 c0                	xor    eax,eax
    4b04:	48 8b 06             	mov    rax,QWORD PTR [rsi]
    4b07:	0f 11 42 40          	movups XMMWORD PTR [rdx+0x40],xmm0
    4b0b:	66 0f 6f 15 3d 46 1e 00 	movdqa xmm2,XMMWORD PTR [rip+0x1e463d]        # 1e9150 <args_info_help+0x10>
    4b13:	0f 11 42 50          	movups XMMWORD PTR [rdx+0x50],xmm0
    4b17:	66 0f 6f 05 51 46 1e 00 	movdqa xmm0,XMMWORD PTR [rip+0x1e4651]        # 1e9170 <args_info_help+0x30>
    4b1f:	4c 8d 64 24 24       	lea    r12,[rsp+0x24]
    4b24:	0f 11 1a             	movups XMMWORD PTR [rdx],xmm3
    4b27:	48 89 05 72 97 24 00 	mov    QWORD PTR [rip+0x249772],rax        # 24e2a0 <package_name>
    4b2e:	48 c7 42 60 00 00 00 00 	mov    QWORD PTR [rdx+0x60],0x0
    4b36:	c7 42 68 00 00 00 00 	mov    DWORD PTR [rdx+0x68],0x0
    4b3d:	48 c7 05 80 94 24 00 00 00 00 00 	mov    QWORD PTR [rip+0x249480],0x0        # 24dfc8 <optarg@@GLIBC_2.2.5>
    4b48:	c7 05 d6 95 24 00 00 00 00 00 	mov    DWORD PTR [rip+0x2495d6],0x0        # 24e128 <optind@@GLIBC_2.2.5>
    4b52:	c7 05 7c 94 24 00 3f 00 00 00 	mov    DWORD PTR [rip+0x24947c],0x3f        # 24dfd8 <optopt@@GLIBC_2.2.5>
    4b5c:	c7 44 24 14 00 00 00 00 	mov    DWORD PTR [rsp+0x14],0x0
    4b64:	c7 44 24 10 00 00 00 00 	mov    DWORD PTR [rsp+0x10],0x0
    4b6c:	c7 44 24 0c 00 00 00 00 	mov    DWORD PTR [rsp+0xc],0x0
    4b74:	c7 44 24 04 00 00 00 00 	mov    DWORD PTR [rsp+0x4],0x0
    4b7c:	c7 44 24 08 00 00 00 00 	mov    DWORD PTR [rsp+0x8],0x0
    4b84:	0f 11 52 10          	movups XMMWORD PTR [rdx+0x10],xmm2
    4b88:	0f 11 4a 20          	movups XMMWORD PTR [rdx+0x20],xmm1
    4b8c:	0f 11 42 30          	movups XMMWORD PTR [rdx+0x30],xmm0
    4b90:	4d 89 e0             	mov    r8,r12
    4b93:	48 8d 0d 86 44 1e 00 	lea    rcx,[rip+0x1e4486]        # 1e9020 <cmdline_parser_internal(int, char**, args_info*, char const*)::long_options>
    4b9a:	4c 89 fe             	mov    rsi,r15
    4b9d:	89 df                	mov    edi,ebx
    4b9f:	48 8d 15 7b c4 02 00 	lea    rdx,[rip+0x2c47b]        # 31021 <_IO_stdin_used+0x21>
    4ba6:	c7 44 24 24 00 00 00 00 	mov    DWORD PTR [rsp+0x24],0x0
    4bae:	e8 4d ee ff ff       	call   3a00 <getopt_long@plt>
    4bb3:	41 89 c0             	mov    r8d,eax
    4bb6:	83 f8 ff             	cmp    eax,0xffffffff
    4bb9:	0f 84 11 03 00 00    	je     4ed0 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0x410>
    4bbf:	85 c0                	test   eax,eax
    4bc1:	0f 84 d9 01 00 00    	je     4da0 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0x2e0>
    4bc7:	8d 40 c1             	lea    eax,[rax-0x3f]
    4bca:	83 f8 37             	cmp    eax,0x37
    4bcd:	0f 87 0d ef ff ff    	ja     3ae0 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0] [clone .cold]>
    4bd3:	48 63 44 85 00       	movsxd rax,DWORD PTR [rbp+rax*4+0x0]
    4bd8:	48 01 e8             	add    rax,rbp
    4bdb:	3e ff e0             	notrack jmp rax
    4bde:	44 8b 5c 24 0c       	mov    r11d,DWORD PTR [rsp+0xc]
    4be3:	45 85 db             	test   r11d,r11d
    4be6:	0f 84 14 02 00 00    	je     4e00 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0x340>
    4bec:	48 83 ec 08          	sub    rsp,0x8
    4bf0:	48 8d 05 d2 cc 02 00 	lea    rax,[rip+0x2ccd2]        # 318c9 <_IO_stdin_used+0x8c9>
    4bf7:	41 b9 72 00 00 00    	mov    r9d,0x72
    4bfd:	50                   	push   rax
    4bfe:	4c 8d 05 3f c4 02 00 	lea    r8,[rip+0x2c43f]        # 31044 <_IO_stdin_used+0x44>
    4c05:	48 8b 3d 14 95 24 00 	mov    rdi,QWORD PTR [rip+0x249514]        # 24e120 <stderr@@GLIBC_2.2.5>
    4c0c:	48 8b 0d 8d 96 24 00 	mov    rcx,QWORD PTR [rip+0x24968d]        # 24e2a0 <package_name>
    4c13:	be 01 00 00 00       	mov    esi,0x1
    4c18:	31 c0                	xor    eax,eax
    4c1a:	48 8d 15 77 c4 02 00 	lea    rdx,[rip+0x2c477]        # 31098 <_IO_stdin_used+0x98>
    4c21:	e8 ca ed ff ff       	call   39f0 <__fprintf_chk@plt>
    4c26:	5e                   	pop    rsi
    4c27:	5f                   	pop    rdi
    4c28:	b8 01 00 00 00       	mov    eax,0x1
    4c2d:	48 8b 5c 24 28       	mov    rbx,QWORD PTR [rsp+0x28]
    4c32:	64 48 33 1c 25 28 00 00 00 	xor    rbx,QWORD PTR fs:0x28
    4c3b:	0f 85 bf 03 00 00    	jne    5000 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0x540>
    4c41:	48 83 c4 38          	add    rsp,0x38
    4c45:	5b                   	pop    rbx
    4c46:	5d                   	pop    rbp
    4c47:	41 5c                	pop    r12
    4c49:	41 5d                	pop    r13
    4c4b:	41 5e                	pop    r14
    4c4d:	41 5f                	pop    r15
    4c4f:	c3                   	ret    
    4c50:	8b 44 24 08          	mov    eax,DWORD PTR [rsp+0x8]
    4c54:	85 c0                	test   eax,eax
    4c56:	0f 85 54 02 00 00    	jne    4eb0 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0x3f0>
    4c5c:	41 8b 45 48          	mov    eax,DWORD PTR [r13+0x48]
    4c60:	85 c0                	test   eax,eax
    4c62:	0f 85 28 ff ff ff    	jne    4b90 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0xd0>
    4c68:	41 c7 45 48 01 00 00 00 	mov    DWORD PTR [r13+0x48],0x1
    4c70:	c7 44 24 08 01 00 00 00 	mov    DWORD PTR [rsp+0x8],0x1
    4c78:	e9 13 ff ff ff       	jmp    4b90 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0xd0>
    4c7d:	8b 44 24 04          	mov    eax,DWORD PTR [rsp+0x4]
    4c81:	85 c0                	test   eax,eax
    4c83:	0f 85 e7 01 00 00    	jne    4e70 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0x3b0>
    4c89:	41 8b 45 4c          	mov    eax,DWORD PTR [r13+0x4c]
    4c8d:	85 c0                	test   eax,eax
    4c8f:	0f 85 fb fe ff ff    	jne    4b90 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0xd0>
    4c95:	41 c7 45 4c 01 00 00 00 	mov    DWORD PTR [r13+0x4c],0x1
    4c9d:	c7 44 24 04 01 00 00 00 	mov    DWORD PTR [rsp+0x4],0x1
    4ca5:	e9 e6 fe ff ff       	jmp    4b90 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0xd0>
    4caa:	e8 51 fd ff ff       	call   4a00 <cmdline_parser_print_help()>
    4caf:	31 ff                	xor    edi,edi
    4cb1:	e8 0a ec ff ff       	call   38c0 <exit@plt>
    4cb6:	45 85 f6             	test   r14d,r14d
    4cb9:	0f 85 d1 01 00 00    	jne    4e90 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0x3d0>
    4cbf:	45 8b 4d 54          	mov    r9d,DWORD PTR [r13+0x54]
    4cc3:	45 85 c9             	test   r9d,r9d
    4cc6:	75 0e                	jne    4cd6 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0x216>
    4cc8:	41 c7 45 54 01 00 00 00 	mov    DWORD PTR [r13+0x54],0x1
    4cd0:	41 be 01 00 00 00    	mov    r14d,0x1
    4cd6:	48 8b 3d eb 92 24 00 	mov    rdi,QWORD PTR [rip+0x2492eb]        # 24dfc8 <optarg@@GLIBC_2.2.5>
    4cdd:	ba 0a 00 00 00       	mov    edx,0xa
    4ce2:	31 f6                	xor    esi,esi
    4ce4:	e8 57 ec ff ff       	call   3940 <strtol@plt>
    4ce9:	89 05 a1 89 24 00    	mov    DWORD PTR [rip+0x2489a1],eax        # 24d690 <dangles>
    4cef:	e9 9c fe ff ff       	jmp    4b90 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0xd0>
    4cf4:	48 8b 15 a5 95 24 00 	mov    rdx,QWORD PTR [rip+0x2495a5]        # 24e2a0 <package_name>
    4cfb:	48 8d 05 02 c3 02 00 	lea    rax,[rip+0x2c302]        # 31004 <_IO_stdin_used+0x4>
    4d02:	bf 01 00 00 00       	mov    edi,0x1
    4d07:	48 8d 35 04 c3 02 00 	lea    rsi,[rip+0x2c304]        # 31012 <_IO_stdin_used+0x12>
    4d0e:	80 3a 00             	cmp    BYTE PTR [rdx],0x0
    4d11:	48 0f 44 d0          	cmove  rdx,rax
    4d15:	31 c0                	xor    eax,eax
    4d17:	e8 74 e8 ff ff       	call   3590 <__printf_chk@plt>
    4d1c:	48 8b 15 6d 44 1e 00 	mov    rdx,QWORD PTR [rip+0x1e446d]        # 1e9190 <args_info_versiontext>
    4d23:	80 3a 00             	cmp    BYTE PTR [rdx],0x0
    4d26:	74 87                	je     4caf <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0x1ef>
    4d28:	48 8d 35 e8 c2 02 00 	lea    rsi,[rip+0x2c2e8]        # 31017 <_IO_stdin_used+0x17>
    4d2f:	bf 01 00 00 00       	mov    edi,0x1
    4d34:	31 c0                	xor    eax,eax
    4d36:	e8 55 e8 ff ff       	call   3590 <__printf_chk@plt>
    4d3b:	e9 6f ff ff ff       	jmp    4caf <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0x1ef>
    4d40:	44 8b 44 24 10       	mov    r8d,DWORD PTR [rsp+0x10]
    4d45:	45 85 c0             	test   r8d,r8d
    4d48:	0f 85 02 01 00 00    	jne    4e50 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0x390>
    4d4e:	41 8b 4d 58          	mov    ecx,DWORD PTR [r13+0x58]
    4d52:	85 c9                	test   ecx,ecx
    4d54:	75 10                	jne    4d66 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0x2a6>
    4d56:	41 c7 45 58 01 00 00 00 	mov    DWORD PTR [r13+0x58],0x1
    4d5e:	c7 44 24 10 01 00 00 00 	mov    DWORD PTR [rsp+0x10],0x1
    4d66:	48 8b 0d 5b 92 24 00 	mov    rcx,QWORD PTR [rip+0x24925b]        # 24dfc8 <optarg@@GLIBC_2.2.5>
    4d6d:	48 89 cf             	mov    rdi,rcx
    4d70:	48 89 4c 24 18       	mov    QWORD PTR [rsp+0x18],rcx
    4d75:	e8 16 e9 ff ff       	call   3690 <strlen@plt>
    4d7a:	48 8b 4c 24 18       	mov    rcx,QWORD PTR [rsp+0x18]
    4d7f:	31 f6                	xor    esi,esi
    4d81:	48 8b 15 e0 94 24 00 	mov    rdx,QWORD PTR [rip+0x2494e0]        # 24e268 <parameter_file[abi:cxx11]+0x8>
    4d88:	49 89 c0             	mov    r8,rax
    4d8b:	48 8d 3d ce 94 24 00 	lea    rdi,[rip+0x2494ce]        # 24e260 <parameter_file[abi:cxx11]>
    4d92:	e8 f9 eb ff ff       	call   3990 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long)@plt>
    4d97:	e9 f4 fd ff ff       	jmp    4b90 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0xd0>
    4d9c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    4da0:	48 63 44 24 24       	movsxd rax,DWORD PTR [rsp+0x24]
    4da5:	48 8d 15 74 42 1e 00 	lea    rdx,[rip+0x1e4274]        # 1e9020 <cmdline_parser_internal(int, char**, args_info*, char const*)::long_options>
    4dac:	b9 05 00 00 00       	mov    ecx,0x5
    4db1:	48 8d 3d ae c2 02 00 	lea    rdi,[rip+0x2c2ae]        # 31066 <_IO_stdin_used+0x66>
    4db8:	48 c1 e0 05          	shl    rax,0x5
    4dbc:	48 8b 34 02          	mov    rsi,QWORD PTR [rdx+rax*1]
    4dc0:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    4dc2:	0f 97 c0             	seta   al
    4dc5:	1c 00                	sbb    al,0x0
    4dc7:	84 c0                	test   al,al
    4dc9:	0f 85 c1 fd ff ff    	jne    4b90 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0xd0>
    4dcf:	8b 54 24 14          	mov    edx,DWORD PTR [rsp+0x14]
    4dd3:	85 d2                	test   edx,edx
    4dd5:	0f 85 e5 01 00 00    	jne    4fc0 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0x500>
    4ddb:	41 8b 45 5c          	mov    eax,DWORD PTR [r13+0x5c]
    4ddf:	85 c0                	test   eax,eax
    4de1:	0f 85 a9 fd ff ff    	jne    4b90 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0xd0>
    4de7:	41 c7 45 5c 01 00 00 00 	mov    DWORD PTR [r13+0x5c],0x1
    4def:	c7 44 24 14 01 00 00 00 	mov    DWORD PTR [rsp+0x14],0x1
    4df7:	e9 94 fd ff ff       	jmp    4b90 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0xd0>
    4dfc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    4e00:	45 8b 55 50          	mov    r10d,DWORD PTR [r13+0x50]
    4e04:	45 85 d2             	test   r10d,r10d
    4e07:	75 10                	jne    4e19 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0x359>
    4e09:	41 c7 45 50 01 00 00 00 	mov    DWORD PTR [r13+0x50],0x1
    4e11:	c7 44 24 0c 01 00 00 00 	mov    DWORD PTR [rsp+0xc],0x1
    4e19:	48 8b 0d a8 91 24 00 	mov    rcx,QWORD PTR [rip+0x2491a8]        # 24dfc8 <optarg@@GLIBC_2.2.5>
    4e20:	48 89 cf             	mov    rdi,rcx
    4e23:	48 89 4c 24 18       	mov    QWORD PTR [rsp+0x18],rcx
    4e28:	e8 63 e8 ff ff       	call   3690 <strlen@plt>
    4e2d:	48 8b 4c 24 18       	mov    rcx,QWORD PTR [rsp+0x18]
    4e32:	31 f6                	xor    esi,esi
    4e34:	48 8b 15 4d 94 24 00 	mov    rdx,QWORD PTR [rip+0x24944d]        # 24e288 <input_structure[abi:cxx11]+0x8>
    4e3b:	49 89 c0             	mov    r8,rax
    4e3e:	48 8d 3d 3b 94 24 00 	lea    rdi,[rip+0x24943b]        # 24e280 <input_structure[abi:cxx11]>
    4e45:	e8 46 eb ff ff       	call   3990 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long)@plt>
    4e4a:	e9 41 fd ff ff       	jmp    4b90 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0xd0>
    4e4f:	90                   	nop
    4e50:	48 83 ec 08          	sub    rsp,0x8
    4e54:	48 8d 05 6e ca 02 00 	lea    rax,[rip+0x2ca6e]        # 318c9 <_IO_stdin_used+0x8c9>
    4e5b:	41 b9 50 00 00 00    	mov    r9d,0x50
    4e61:	50                   	push   rax
    4e62:	4c 8d 05 f3 c1 02 00 	lea    r8,[rip+0x2c1f3]        # 3105c <_IO_stdin_used+0x5c>
    4e69:	e9 97 fd ff ff       	jmp    4c05 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0x145>
    4e6e:	66 90                	xchg   ax,ax
    4e70:	48 83 ec 08          	sub    rsp,0x8
    4e74:	48 8d 05 4e ca 02 00 	lea    rax,[rip+0x2ca4e]        # 318c9 <_IO_stdin_used+0x8c9>
    4e7b:	41 b9 6d 00 00 00    	mov    r9d,0x6d
    4e81:	50                   	push   rax
    4e82:	4c 8d 05 ab c1 02 00 	lea    r8,[rip+0x2c1ab]        # 31034 <_IO_stdin_used+0x34>
    4e89:	e9 77 fd ff ff       	jmp    4c05 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0x145>
    4e8e:	66 90                	xchg   ax,ax
    4e90:	48 83 ec 08          	sub    rsp,0x8
    4e94:	48 8d 05 2e ca 02 00 	lea    rax,[rip+0x2ca2e]        # 318c9 <_IO_stdin_used+0x8c9>
    4e9b:	41 b9 64 00 00 00    	mov    r9d,0x64
    4ea1:	50                   	push   rax
    4ea2:	4c 8d 05 ab c1 02 00 	lea    r8,[rip+0x2c1ab]        # 31054 <_IO_stdin_used+0x54>
    4ea9:	e9 57 fd ff ff       	jmp    4c05 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0x145>
    4eae:	66 90                	xchg   ax,ax
    4eb0:	48 83 ec 08          	sub    rsp,0x8
    4eb4:	48 8d 05 0e ca 02 00 	lea    rax,[rip+0x2ca0e]        # 318c9 <_IO_stdin_used+0x8c9>
    4ebb:	41 b9 76 00 00 00    	mov    r9d,0x76
    4ec1:	50                   	push   rax
    4ec2:	4c 8d 05 63 c1 02 00 	lea    r8,[rip+0x2c163]        # 3102c <_IO_stdin_used+0x2c>
    4ec9:	e9 37 fd ff ff       	jmp    4c05 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0x145>
    4ece:	66 90                	xchg   ax,ax
    4ed0:	8b 0d 52 92 24 00    	mov    ecx,DWORD PTR [rip+0x249252]        # 24e128 <optind@@GLIBC_2.2.5>
    4ed6:	39 cb                	cmp    ebx,ecx
    4ed8:	0f 8e 83 00 00 00    	jle    4f61 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0x4a1>
    4ede:	89 ca                	mov    edx,ecx
    4ee0:	48 63 f1             	movsxd rsi,ecx
    4ee3:	49 8b 2f             	mov    rbp,QWORD PTR [r15]
    4ee6:	f7 d2                	not    edx
    4ee8:	49 8d 04 f7          	lea    rax,[r15+rsi*8]
    4eec:	01 da                	add    edx,ebx
    4eee:	48 01 f2             	add    rdx,rsi
    4ef1:	49 8d 54 d7 08       	lea    rdx,[r15+rdx*8+0x8]
    4ef6:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    4f00:	48 39 28             	cmp    QWORD PTR [rax],rbp
    4f03:	0f 84 e9 00 00 00    	je     4ff2 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0x532>
    4f09:	48 83 c0 08          	add    rax,0x8
    4f0d:	48 39 c2             	cmp    rdx,rax
    4f10:	75 ee                	jne    4f00 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0x440>
    4f12:	31 d2                	xor    edx,edx
    4f14:	89 d8                	mov    eax,ebx
    4f16:	29 c8                	sub    eax,ecx
    4f18:	29 d0                	sub    eax,edx
    4f1a:	41 89 45 68          	mov    DWORD PTR [r13+0x68],eax
    4f1e:	48 98                	cdqe   
    4f20:	48 8d 3c c5 00 00 00 00 	lea    rdi,[rax*8+0x0]
    4f28:	e8 c3 e9 ff ff       	call   38f0 <malloc@plt>
    4f2d:	49 89 45 60          	mov    QWORD PTR [r13+0x60],rax
    4f31:	49 89 c4             	mov    r12,rax
    4f34:	48 63 05 ed 91 24 00 	movsxd rax,DWORD PTR [rip+0x2491ed]        # 24e128 <optind@@GLIBC_2.2.5>
    4f3b:	31 c9                	xor    ecx,ecx
    4f3d:	eb 14                	jmp    4f53 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0x493>
    4f3f:	90                   	nop
    4f40:	8d 50 01             	lea    edx,[rax+0x1]
    4f43:	48 83 c0 01          	add    rax,0x1
    4f47:	b9 01 00 00 00       	mov    ecx,0x1
    4f4c:	49 3b 6c c7 f8       	cmp    rbp,QWORD PTR [r15+rax*8-0x8]
    4f51:	75 15                	jne    4f68 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0x4a8>
    4f53:	39 c3                	cmp    ebx,eax
    4f55:	7f e9                	jg     4f40 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0x480>
    4f57:	84 c9                	test   cl,cl
    4f59:	74 06                	je     4f61 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0x4a1>
    4f5b:	89 05 c7 91 24 00    	mov    DWORD PTR [rip+0x2491c7],eax        # 24e128 <optind@@GLIBC_2.2.5>
    4f61:	31 c0                	xor    eax,eax
    4f63:	e9 c5 fc ff ff       	jmp    4c2d <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0x16d>
    4f68:	48 63 c2             	movsxd rax,edx
    4f6b:	89 15 b7 91 24 00    	mov    DWORD PTR [rip+0x2491b7],edx        # 24e128 <optind@@GLIBC_2.2.5>
    4f71:	4d 8b 74 c7 f8       	mov    r14,QWORD PTR [r15+rax*8-0x8]
    4f76:	4d 85 f6             	test   r14,r14
    4f79:	0f 84 7d 00 00 00    	je     4ffc <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0x53c>
    4f7f:	4c 89 f7             	mov    rdi,r14
    4f82:	e8 09 e7 ff ff       	call   3690 <strlen@plt>
    4f87:	4c 8d 68 01          	lea    r13,[rax+0x1]
    4f8b:	4c 89 ef             	mov    rdi,r13
    4f8e:	e8 5d e9 ff ff       	call   38f0 <malloc@plt>
    4f93:	48 89 c1             	mov    rcx,rax
    4f96:	48 85 c0             	test   rax,rax
    4f99:	74 11                	je     4fac <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0x4ec>
    4f9b:	4c 89 ea             	mov    rdx,r13
    4f9e:	4c 89 f6             	mov    rsi,r14
    4fa1:	48 89 c7             	mov    rdi,rax
    4fa4:	e8 f7 e7 ff ff       	call   37a0 <memcpy@plt>
    4fa9:	48 89 c1             	mov    rcx,rax
    4fac:	48 63 05 75 91 24 00 	movsxd rax,DWORD PTR [rip+0x249175]        # 24e128 <optind@@GLIBC_2.2.5>
    4fb3:	49 89 0c 24          	mov    QWORD PTR [r12],rcx
    4fb7:	49 83 c4 08          	add    r12,0x8
    4fbb:	e9 7b ff ff ff       	jmp    4f3b <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0x47b>
    4fc0:	48 8b 0d d9 92 24 00 	mov    rcx,QWORD PTR [rip+0x2492d9]        # 24e2a0 <package_name>
    4fc7:	48 8b 3d 52 91 24 00 	mov    rdi,QWORD PTR [rip+0x249152]        # 24e120 <stderr@@GLIBC_2.2.5>
    4fce:	4c 8d 0d f4 c8 02 00 	lea    r9,[rip+0x2c8f4]        # 318c9 <_IO_stdin_used+0x8c9>
    4fd5:	4c 8d 05 8a c0 02 00 	lea    r8,[rip+0x2c08a]        # 31066 <_IO_stdin_used+0x66>
    4fdc:	48 8d 15 ed c0 02 00 	lea    rdx,[rip+0x2c0ed]        # 310d0 <_IO_stdin_used+0xd0>
    4fe3:	be 01 00 00 00       	mov    esi,0x1
    4fe8:	e8 03 ea ff ff       	call   39f0 <__fprintf_chk@plt>
    4fed:	e9 36 fc ff ff       	jmp    4c28 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0x168>
    4ff2:	ba 01 00 00 00       	mov    edx,0x1
    4ff7:	e9 18 ff ff ff       	jmp    4f14 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0x454>
    4ffc:	31 c9                	xor    ecx,ecx
    4ffe:	eb b3                	jmp    4fb3 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]+0x4f3>
    5000:	e8 5b e8 ff ff       	call   3860 <__stack_chk_fail@plt>
    5005:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000005010 <cmdline_parser_init(args_info*)>:
    5010:	f3 0f 1e fa          	endbr64 
    5014:	66 0f ef c0          	pxor   xmm0,xmm0
    5018:	66 0f 6f 0d 40 41 1e 00 	movdqa xmm1,XMMWORD PTR [rip+0x1e4140]        # 1e9160 <args_info_help+0x20>
    5020:	66 0f 6f 15 28 41 1e 00 	movdqa xmm2,XMMWORD PTR [rip+0x1e4128]        # 1e9150 <args_info_help+0x10>
    5028:	48 c7 47 60 00 00 00 00 	mov    QWORD PTR [rdi+0x60],0x0
    5030:	66 0f 6f 1d 08 41 1e 00 	movdqa xmm3,XMMWORD PTR [rip+0x1e4108]        # 1e9140 <args_info_help>
    5038:	0f 11 47 40          	movups XMMWORD PTR [rdi+0x40],xmm0
    503c:	0f 11 47 50          	movups XMMWORD PTR [rdi+0x50],xmm0
    5040:	66 0f 6f 05 28 41 1e 00 	movdqa xmm0,XMMWORD PTR [rip+0x1e4128]        # 1e9170 <args_info_help+0x30>
    5048:	c7 47 68 00 00 00 00 	mov    DWORD PTR [rdi+0x68],0x0
    504f:	0f 11 1f             	movups XMMWORD PTR [rdi],xmm3
    5052:	0f 11 57 10          	movups XMMWORD PTR [rdi+0x10],xmm2
    5056:	0f 11 4f 20          	movups XMMWORD PTR [rdi+0x20],xmm1
    505a:	0f 11 47 30          	movups XMMWORD PTR [rdi+0x30],xmm0
    505e:	c3                   	ret    
    505f:	90                   	nop

0000000000005060 <cmdline_parser_free(args_info*)>:
    5060:	f3 0f 1e fa          	endbr64 
    5064:	55                   	push   rbp
    5065:	53                   	push   rbx
    5066:	48 89 fb             	mov    rbx,rdi
    5069:	48 83 ec 08          	sub    rsp,0x8
    506d:	8b 47 68             	mov    eax,DWORD PTR [rdi+0x68]
    5070:	85 c0                	test   eax,eax
    5072:	74 32                	je     50a6 <cmdline_parser_free(args_info*)+0x46>
    5074:	31 ed                	xor    ebp,ebp
    5076:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    5080:	48 8b 43 60          	mov    rax,QWORD PTR [rbx+0x60]
    5084:	89 ea                	mov    edx,ebp
    5086:	83 c5 01             	add    ebp,0x1
    5089:	48 8b 3c d0          	mov    rdi,QWORD PTR [rax+rdx*8]
    508d:	e8 1e e8 ff ff       	call   38b0 <free@plt>
    5092:	8b 43 68             	mov    eax,DWORD PTR [rbx+0x68]
    5095:	39 e8                	cmp    eax,ebp
    5097:	77 e7                	ja     5080 <cmdline_parser_free(args_info*)+0x20>
    5099:	85 c0                	test   eax,eax
    509b:	74 09                	je     50a6 <cmdline_parser_free(args_info*)+0x46>
    509d:	48 8b 7b 60          	mov    rdi,QWORD PTR [rbx+0x60]
    50a1:	e8 0a e8 ff ff       	call   38b0 <free@plt>
    50a6:	66 0f ef c0          	pxor   xmm0,xmm0
    50aa:	0f 11 43 40          	movups XMMWORD PTR [rbx+0x40],xmm0
    50ae:	0f 11 43 50          	movups XMMWORD PTR [rbx+0x50],xmm0
    50b2:	48 83 c4 08          	add    rsp,0x8
    50b6:	5b                   	pop    rbx
    50b7:	5d                   	pop    rbp
    50b8:	c3                   	ret    
    50b9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000050c0 <cmdline_parser(int, char**, args_info*)>:
    50c0:	f3 0f 1e fa          	endbr64 
    50c4:	55                   	push   rbp
    50c5:	48 89 d5             	mov    rbp,rdx
    50c8:	e8 f3 f9 ff ff       	call   4ac0 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]>
    50cd:	83 f8 01             	cmp    eax,0x1
    50d0:	74 02                	je     50d4 <cmdline_parser(int, char**, args_info*)+0x14>
    50d2:	5d                   	pop    rbp
    50d3:	c3                   	ret    
    50d4:	48 89 ef             	mov    rdi,rbp
    50d7:	e8 64 f8 ff ff       	call   4940 <cmdline_parser_release(args_info*)>
    50dc:	bf 01 00 00 00       	mov    edi,0x1
    50e1:	e8 da e7 ff ff       	call   38c0 <exit@plt>
    50e6:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000050f0 <cmdline_parser2(int, char**, args_info*)>:
    50f0:	f3 0f 1e fa          	endbr64 
    50f4:	55                   	push   rbp
    50f5:	48 89 d5             	mov    rbp,rdx
    50f8:	e8 c3 f9 ff ff       	call   4ac0 <cmdline_parser_internal(int, char**, args_info*, char const*) [clone .constprop.0]>
    50fd:	83 f8 01             	cmp    eax,0x1
    5100:	74 02                	je     5104 <cmdline_parser2(int, char**, args_info*)+0x14>
    5102:	5d                   	pop    rbp
    5103:	c3                   	ret    
    5104:	48 89 ef             	mov    rdi,rbp
    5107:	e8 34 f8 ff ff       	call   4940 <cmdline_parser_release(args_info*)>
    510c:	bf 01 00 00 00       	mov    edi,0x1
    5111:	e8 aa e7 ff ff       	call   38c0 <exit@plt>
    5116:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000005120 <evaluate_restriction(int, int, int const*, int const*)>:
    5120:	f3 0f 1e fa          	endbr64 
    5124:	4c 63 c6             	movsxd r8,esi
    5127:	48 63 ff             	movsxd rdi,edi
    512a:	31 c0                	xor    eax,eax
    512c:	46 8b 0c 81          	mov    r9d,DWORD PTR [rcx+r8*4]
    5130:	44 39 0c b9          	cmp    DWORD PTR [rcx+rdi*4],r9d
    5134:	7f 02                	jg     5138 <evaluate_restriction(int, int, int const*, int const*)+0x18>
    5136:	7d 01                	jge    5139 <evaluate_restriction(int, int, int const*, int const*)+0x19>
    5138:	c3                   	ret    
    5139:	75 07                	jne    5142 <evaluate_restriction(int, int, int const*, int const*)+0x22>
    513b:	39 34 ba             	cmp    DWORD PTR [rdx+rdi*4],esi
    513e:	0f 9d c0             	setge  al
    5141:	c3                   	ret    
    5142:	b8 01 00 00 00       	mov    eax,0x1
    5147:	c3                   	ret    
    5148:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005150 <SparseMFEFold::~SparseMFEFold()>:
    5150:	f3 0f 1e fa          	endbr64 
    5154:	41 54                	push   r12
    5156:	55                   	push   rbp
    5157:	53                   	push   rbx
    5158:	48 89 fb             	mov    rbx,rdi
    515b:	48 8b 7f 38          	mov    rdi,QWORD PTR [rdi+0x38]
    515f:	e8 4c e7 ff ff       	call   38b0 <free@plt>
    5164:	48 8b 7b 28          	mov    rdi,QWORD PTR [rbx+0x28]
    5168:	e8 43 e7 ff ff       	call   38b0 <free@plt>
    516d:	48 8b 7b 30          	mov    rdi,QWORD PTR [rbx+0x30]
    5171:	e8 3a e7 ff ff       	call   38b0 <free@plt>
    5176:	4c 8b a3 78 01 00 00 	mov    r12,QWORD PTR [rbx+0x178]
    517d:	48 8b ab 70 01 00 00 	mov    rbp,QWORD PTR [rbx+0x170]
    5184:	49 39 ec             	cmp    r12,rbp
    5187:	74 29                	je     51b2 <SparseMFEFold::~SparseMFEFold()+0x62>
    5189:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    5190:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    5194:	48 85 ff             	test   rdi,rdi
    5197:	0f 84 2b 01 00 00    	je     52c8 <SparseMFEFold::~SparseMFEFold()+0x178>
    519d:	e8 3e e6 ff ff       	call   37e0 <operator delete(void*)@plt>
    51a2:	48 83 c5 18          	add    rbp,0x18
    51a6:	49 39 ec             	cmp    r12,rbp
    51a9:	75 e5                	jne    5190 <SparseMFEFold::~SparseMFEFold()+0x40>
    51ab:	48 8b ab 70 01 00 00 	mov    rbp,QWORD PTR [rbx+0x170]
    51b2:	48 85 ed             	test   rbp,rbp
    51b5:	74 08                	je     51bf <SparseMFEFold::~SparseMFEFold()+0x6f>
    51b7:	48 89 ef             	mov    rdi,rbp
    51ba:	e8 21 e6 ff ff       	call   37e0 <operator delete(void*)@plt>
    51bf:	4c 8b a3 38 01 00 00 	mov    r12,QWORD PTR [rbx+0x138]
    51c6:	48 8b ab 30 01 00 00 	mov    rbp,QWORD PTR [rbx+0x130]
    51cd:	49 39 ec             	cmp    r12,rbp
    51d0:	74 28                	je     51fa <SparseMFEFold::~SparseMFEFold()+0xaa>
    51d2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    51d8:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    51dc:	48 85 ff             	test   rdi,rdi
    51df:	0f 84 cb 00 00 00    	je     52b0 <SparseMFEFold::~SparseMFEFold()+0x160>
    51e5:	e8 f6 e5 ff ff       	call   37e0 <operator delete(void*)@plt>
    51ea:	48 83 c5 20          	add    rbp,0x20
    51ee:	49 39 ec             	cmp    r12,rbp
    51f1:	75 e5                	jne    51d8 <SparseMFEFold::~SparseMFEFold()+0x88>
    51f3:	48 8b ab 30 01 00 00 	mov    rbp,QWORD PTR [rbx+0x130]
    51fa:	48 85 ed             	test   rbp,rbp
    51fd:	74 08                	je     5207 <SparseMFEFold::~SparseMFEFold()+0xb7>
    51ff:	48 89 ef             	mov    rdi,rbp
    5202:	e8 d9 e5 ff ff       	call   37e0 <operator delete(void*)@plt>
    5207:	48 8b bb 10 01 00 00 	mov    rdi,QWORD PTR [rbx+0x110]
    520e:	48 85 ff             	test   rdi,rdi
    5211:	74 05                	je     5218 <SparseMFEFold::~SparseMFEFold()+0xc8>
    5213:	e8 c8 e5 ff ff       	call   37e0 <operator delete(void*)@plt>
    5218:	48 8b bb f8 00 00 00 	mov    rdi,QWORD PTR [rbx+0xf8]
    521f:	48 85 ff             	test   rdi,rdi
    5222:	74 05                	je     5229 <SparseMFEFold::~SparseMFEFold()+0xd9>
    5224:	e8 b7 e5 ff ff       	call   37e0 <operator delete(void*)@plt>
    5229:	48 8b bb e0 00 00 00 	mov    rdi,QWORD PTR [rbx+0xe0]
    5230:	48 85 ff             	test   rdi,rdi
    5233:	74 05                	je     523a <SparseMFEFold::~SparseMFEFold()+0xea>
    5235:	e8 a6 e5 ff ff       	call   37e0 <operator delete(void*)@plt>
    523a:	48 8b bb c8 00 00 00 	mov    rdi,QWORD PTR [rbx+0xc8]
    5241:	48 85 ff             	test   rdi,rdi
    5244:	74 05                	je     524b <SparseMFEFold::~SparseMFEFold()+0xfb>
    5246:	e8 95 e5 ff ff       	call   37e0 <operator delete(void*)@plt>
    524b:	48 8b bb b0 00 00 00 	mov    rdi,QWORD PTR [rbx+0xb0]
    5252:	48 85 ff             	test   rdi,rdi
    5255:	74 05                	je     525c <SparseMFEFold::~SparseMFEFold()+0x10c>
    5257:	e8 84 e5 ff ff       	call   37e0 <operator delete(void*)@plt>
    525c:	48 8b bb 88 00 00 00 	mov    rdi,QWORD PTR [rbx+0x88]
    5263:	48 85 ff             	test   rdi,rdi
    5266:	74 05                	je     526d <SparseMFEFold::~SparseMFEFold()+0x11d>
    5268:	e8 73 e5 ff ff       	call   37e0 <operator delete(void*)@plt>
    526d:	48 8b 7b 60          	mov    rdi,QWORD PTR [rbx+0x60]
    5271:	48 8d 43 70          	lea    rax,[rbx+0x70]
    5275:	48 39 c7             	cmp    rdi,rax
    5278:	74 05                	je     527f <SparseMFEFold::~SparseMFEFold()+0x12f>
    527a:	e8 61 e5 ff ff       	call   37e0 <operator delete(void*)@plt>
    527f:	48 8b 7b 40          	mov    rdi,QWORD PTR [rbx+0x40]
    5283:	48 8d 43 50          	lea    rax,[rbx+0x50]
    5287:	48 39 c7             	cmp    rdi,rax
    528a:	74 05                	je     5291 <SparseMFEFold::~SparseMFEFold()+0x141>
    528c:	e8 4f e5 ff ff       	call   37e0 <operator delete(void*)@plt>
    5291:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    5294:	48 83 c3 10          	add    rbx,0x10
    5298:	48 39 df             	cmp    rdi,rbx
    529b:	74 43                	je     52e0 <SparseMFEFold::~SparseMFEFold()+0x190>
    529d:	5b                   	pop    rbx
    529e:	5d                   	pop    rbp
    529f:	41 5c                	pop    r12
    52a1:	e9 3a e5 ff ff       	jmp    37e0 <operator delete(void*)@plt>
    52a6:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    52b0:	48 83 c5 20          	add    rbp,0x20
    52b4:	49 39 ec             	cmp    r12,rbp
    52b7:	0f 85 1b ff ff ff    	jne    51d8 <SparseMFEFold::~SparseMFEFold()+0x88>
    52bd:	e9 31 ff ff ff       	jmp    51f3 <SparseMFEFold::~SparseMFEFold()+0xa3>
    52c2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    52c8:	48 83 c5 18          	add    rbp,0x18
    52cc:	49 39 ec             	cmp    r12,rbp
    52cf:	0f 85 bb fe ff ff    	jne    5190 <SparseMFEFold::~SparseMFEFold()+0x40>
    52d5:	e9 d1 fe ff ff       	jmp    51ab <SparseMFEFold::~SparseMFEFold()+0x5b>
    52da:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    52e0:	5b                   	pop    rbx
    52e1:	5d                   	pop    rbp
    52e2:	41 5c                	pop    r12
    52e4:	c3                   	ret    
    52e5:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    52ef:	90                   	nop

00000000000052f0 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)>:
    52f0:	f3 0f 1e fa          	endbr64 
    52f4:	48 85 d2             	test   rdx,rdx
    52f7:	0f 84 33 01 00 00    	je     5430 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x140>
    52fd:	41 57                	push   r15
    52ff:	49 89 cf             	mov    r15,rcx
    5302:	41 56                	push   r14
    5304:	49 89 f6             	mov    r14,rsi
    5307:	41 55                	push   r13
    5309:	49 89 fd             	mov    r13,rdi
    530c:	41 54                	push   r12
    530e:	55                   	push   rbp
    530f:	48 89 f5             	mov    rbp,rsi
    5312:	53                   	push   rbx
    5313:	48 89 d3             	mov    rbx,rdx
    5316:	48 83 ec 18          	sub    rsp,0x18
    531a:	4c 8b 67 08          	mov    r12,QWORD PTR [rdi+0x8]
    531e:	48 8b 47 10          	mov    rax,QWORD PTR [rdi+0x10]
    5322:	4c 29 e0             	sub    rax,r12
    5325:	48 c1 f8 02          	sar    rax,0x2
    5329:	48 39 d0             	cmp    rax,rdx
    532c:	0f 82 2e 02 00 00    	jb     5560 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x270>
    5332:	4c 89 e2             	mov    rdx,r12
    5335:	44 8b 39             	mov    r15d,DWORD PTR [rcx]
    5338:	48 29 f2             	sub    rdx,rsi
    533b:	48 89 d0             	mov    rax,rdx
    533e:	48 c1 f8 02          	sar    rax,0x2
    5342:	48 39 c3             	cmp    rbx,rax
    5345:	0f 83 ed 00 00 00    	jae    5438 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x148>
    534b:	48 c1 e3 02          	shl    rbx,0x2
    534f:	4c 89 e1             	mov    rcx,r12
    5352:	4c 89 e0             	mov    rax,r12
    5355:	48 29 d9             	sub    rcx,rbx
    5358:	49 39 cc             	cmp    r12,rcx
    535b:	74 1c                	je     5379 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x89>
    535d:	48 89 ce             	mov    rsi,rcx
    5360:	48 89 da             	mov    rdx,rbx
    5363:	4c 89 e7             	mov    rdi,r12
    5366:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
    536b:	e8 60 e6 ff ff       	call   39d0 <memmove@plt>
    5370:	49 8b 45 08          	mov    rax,QWORD PTR [r13+0x8]
    5374:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
    5379:	48 01 d8             	add    rax,rbx
    537c:	49 89 45 08          	mov    QWORD PTR [r13+0x8],rax
    5380:	48 39 cd             	cmp    rbp,rcx
    5383:	74 14                	je     5399 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0xa9>
    5385:	48 29 e9             	sub    rcx,rbp
    5388:	4c 89 e7             	mov    rdi,r12
    538b:	48 89 ee             	mov    rsi,rbp
    538e:	48 89 ca             	mov    rdx,rcx
    5391:	48 29 cf             	sub    rdi,rcx
    5394:	e8 37 e6 ff ff       	call   39d0 <memmove@plt>
    5399:	48 01 eb             	add    rbx,rbp
    539c:	48 39 dd             	cmp    rbp,rbx
    539f:	0f 84 a5 01 00 00    	je     554a <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x25a>
    53a5:	48 89 da             	mov    rdx,rbx
    53a8:	48 89 e8             	mov    rax,rbp
    53ab:	48 29 ea             	sub    rdx,rbp
    53ae:	48 8d 4a fc          	lea    rcx,[rdx-0x4]
    53b2:	48 89 ca             	mov    rdx,rcx
    53b5:	48 c1 ea 02          	shr    rdx,0x2
    53b9:	48 83 c2 01          	add    rdx,0x1
    53bd:	48 83 f9 08          	cmp    rcx,0x8
    53c1:	76 3e                	jbe    5401 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x111>
    53c3:	48 89 d1             	mov    rcx,rdx
    53c6:	66 41 0f 6e df       	movd   xmm3,r15d
    53cb:	48 c1 e9 02          	shr    rcx,0x2
    53cf:	66 0f 70 c3 00       	pshufd xmm0,xmm3,0x0
    53d4:	48 c1 e1 04          	shl    rcx,0x4
    53d8:	48 01 e9             	add    rcx,rbp
    53db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    53e0:	0f 11 00             	movups XMMWORD PTR [rax],xmm0
    53e3:	48 83 c0 10          	add    rax,0x10
    53e7:	48 39 c8             	cmp    rax,rcx
    53ea:	75 f4                	jne    53e0 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0xf0>
    53ec:	48 89 d0             	mov    rax,rdx
    53ef:	48 83 e0 fc          	and    rax,0xfffffffffffffffc
    53f3:	4c 8d 74 85 00       	lea    r14,[rbp+rax*4+0x0]
    53f8:	48 39 c2             	cmp    rdx,rax
    53fb:	0f 84 49 01 00 00    	je     554a <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x25a>
    5401:	49 8d 46 04          	lea    rax,[r14+0x4]
    5405:	45 89 3e             	mov    DWORD PTR [r14],r15d
    5408:	48 39 c3             	cmp    rbx,rax
    540b:	0f 84 39 01 00 00    	je     554a <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x25a>
    5411:	49 8d 46 08          	lea    rax,[r14+0x8]
    5415:	45 89 7e 04          	mov    DWORD PTR [r14+0x4],r15d
    5419:	48 39 c3             	cmp    rbx,rax
    541c:	0f 85 24 01 00 00    	jne    5546 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x256>
    5422:	e9 23 01 00 00       	jmp    554a <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x25a>
    5427:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    5430:	c3                   	ret    
    5431:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    5438:	48 29 c3             	sub    rbx,rax
    543b:	0f 84 cf 02 00 00    	je     5710 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x420>
    5441:	48 8d 43 ff          	lea    rax,[rbx-0x1]
    5445:	48 83 f8 02          	cmp    rax,0x2
    5449:	0f 86 e9 02 00 00    	jbe    5738 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x448>
    544f:	48 89 de             	mov    rsi,rbx
    5452:	66 41 0f 6e e7       	movd   xmm4,r15d
    5457:	31 c0                	xor    eax,eax
    5459:	48 c1 ee 02          	shr    rsi,0x2
    545d:	66 0f 70 c4 00       	pshufd xmm0,xmm4,0x0
    5462:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    5468:	48 89 c1             	mov    rcx,rax
    546b:	48 83 c0 01          	add    rax,0x1
    546f:	48 c1 e1 04          	shl    rcx,0x4
    5473:	41 0f 11 04 0c       	movups XMMWORD PTR [r12+rcx*1],xmm0
    5478:	48 39 c6             	cmp    rsi,rax
    547b:	75 eb                	jne    5468 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x178>
    547d:	48 89 d9             	mov    rcx,rbx
    5480:	48 89 de             	mov    rsi,rbx
    5483:	48 83 e1 fc          	and    rcx,0xfffffffffffffffc
    5487:	83 e6 03             	and    esi,0x3
    548a:	49 8d 04 8c          	lea    rax,[r12+rcx*4]
    548e:	48 39 cb             	cmp    rbx,rcx
    5491:	74 17                	je     54aa <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x1ba>
    5493:	44 89 38             	mov    DWORD PTR [rax],r15d
    5496:	48 83 fe 01          	cmp    rsi,0x1
    549a:	74 0e                	je     54aa <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x1ba>
    549c:	44 89 78 04          	mov    DWORD PTR [rax+0x4],r15d
    54a0:	48 83 fe 02          	cmp    rsi,0x2
    54a4:	74 04                	je     54aa <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x1ba>
    54a6:	44 89 78 08          	mov    DWORD PTR [rax+0x8],r15d
    54aa:	49 8d 3c 9c          	lea    rdi,[r12+rbx*4]
    54ae:	49 89 7d 08          	mov    QWORD PTR [r13+0x8],rdi
    54b2:	49 39 ec             	cmp    r12,rbp
    54b5:	0f 84 65 02 00 00    	je     5720 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x430>
    54bb:	48 89 ee             	mov    rsi,rbp
    54be:	48 89 54 24 08       	mov    QWORD PTR [rsp+0x8],rdx
    54c3:	e8 08 e5 ff ff       	call   39d0 <memmove@plt>
    54c8:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
    54cd:	49 01 55 08          	add    QWORD PTR [r13+0x8],rdx
    54d1:	4c 89 e2             	mov    rdx,r12
    54d4:	48 29 ea             	sub    rdx,rbp
    54d7:	48 89 e8             	mov    rax,rbp
    54da:	48 83 ea 04          	sub    rdx,0x4
    54de:	48 89 d1             	mov    rcx,rdx
    54e1:	48 c1 e9 02          	shr    rcx,0x2
    54e5:	48 83 c1 01          	add    rcx,0x1
    54e9:	48 83 fa 08          	cmp    rdx,0x8
    54ed:	76 3e                	jbe    552d <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x23d>
    54ef:	48 89 ca             	mov    rdx,rcx
    54f2:	66 41 0f 6e ef       	movd   xmm5,r15d
    54f7:	48 c1 ea 02          	shr    rdx,0x2
    54fb:	66 0f 70 c5 00       	pshufd xmm0,xmm5,0x0
    5500:	48 c1 e2 04          	shl    rdx,0x4
    5504:	48 01 ea             	add    rdx,rbp
    5507:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    5510:	0f 11 00             	movups XMMWORD PTR [rax],xmm0
    5513:	48 83 c0 10          	add    rax,0x10
    5517:	48 39 d0             	cmp    rax,rdx
    551a:	75 f4                	jne    5510 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x220>
    551c:	48 89 c8             	mov    rax,rcx
    551f:	48 83 e0 fc          	and    rax,0xfffffffffffffffc
    5523:	4c 8d 74 85 00       	lea    r14,[rbp+rax*4+0x0]
    5528:	48 39 c1             	cmp    rcx,rax
    552b:	74 1d                	je     554a <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x25a>
    552d:	49 8d 46 04          	lea    rax,[r14+0x4]
    5531:	45 89 3e             	mov    DWORD PTR [r14],r15d
    5534:	49 39 c4             	cmp    r12,rax
    5537:	74 11                	je     554a <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x25a>
    5539:	49 8d 46 08          	lea    rax,[r14+0x8]
    553d:	45 89 7e 04          	mov    DWORD PTR [r14+0x4],r15d
    5541:	49 39 c4             	cmp    r12,rax
    5544:	74 04                	je     554a <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x25a>
    5546:	45 89 7e 08          	mov    DWORD PTR [r14+0x8],r15d
    554a:	48 83 c4 18          	add    rsp,0x18
    554e:	5b                   	pop    rbx
    554f:	5d                   	pop    rbp
    5550:	41 5c                	pop    r12
    5552:	41 5d                	pop    r13
    5554:	41 5e                	pop    r14
    5556:	41 5f                	pop    r15
    5558:	c3                   	ret    
    5559:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    5560:	48 ba ff ff ff ff ff ff ff 1f 	movabs rdx,0x1fffffffffffffff
    556a:	4c 8b 37             	mov    r14,QWORD PTR [rdi]
    556d:	48 89 d0             	mov    rax,rdx
    5570:	4d 29 f4             	sub    r12,r14
    5573:	49 c1 fc 02          	sar    r12,0x2
    5577:	4c 29 e0             	sub    rax,r12
    557a:	48 39 c3             	cmp    rbx,rax
    557d:	0f 87 c0 01 00 00    	ja     5743 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x453>
    5583:	4c 39 e3             	cmp    rbx,r12
    5586:	4c 89 e0             	mov    rax,r12
    5589:	48 0f 43 c3          	cmovae rax,rbx
    558d:	49 01 c4             	add    r12,rax
    5590:	0f 92 c0             	setb   al
    5593:	4c 29 f6             	sub    rsi,r14
    5596:	0f b6 c0             	movzx  eax,al
    5599:	48 85 c0             	test   rax,rax
    559c:	0f 85 26 01 00 00    	jne    56c8 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x3d8>
    55a2:	4d 85 e4             	test   r12,r12
    55a5:	0f 85 55 01 00 00    	jne    5700 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x410>
    55ab:	49 89 f0             	mov    r8,rsi
    55ae:	31 c9                	xor    ecx,ecx
    55b0:	48 8d 43 ff          	lea    rax,[rbx-0x1]
    55b4:	45 8b 0f             	mov    r9d,DWORD PTR [r15]
    55b7:	48 01 ce             	add    rsi,rcx
    55ba:	48 83 f8 02          	cmp    rax,0x2
    55be:	0f 86 6c 01 00 00    	jbe    5730 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x440>
    55c4:	48 8d 53 fc          	lea    rdx,[rbx-0x4]
    55c8:	66 41 0f 6e d1       	movd   xmm2,r9d
    55cd:	31 c0                	xor    eax,eax
    55cf:	48 c1 ea 02          	shr    rdx,0x2
    55d3:	66 0f 70 c2 00       	pshufd xmm0,xmm2,0x0
    55d8:	48 83 c2 01          	add    rdx,0x1
    55dc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    55e0:	48 89 c7             	mov    rdi,rax
    55e3:	48 83 c0 01          	add    rax,0x1
    55e7:	48 c1 e7 04          	shl    rdi,0x4
    55eb:	0f 11 04 3e          	movups XMMWORD PTR [rsi+rdi*1],xmm0
    55ef:	48 39 c2             	cmp    rdx,rax
    55f2:	77 ec                	ja     55e0 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x2f0>
    55f4:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
    55fc:	48 89 df             	mov    rdi,rbx
    55ff:	48 c1 e2 04          	shl    rdx,0x4
    5603:	48 29 c7             	sub    rdi,rax
    5606:	48 01 d6             	add    rsi,rdx
    5609:	48 39 c3             	cmp    rbx,rax
    560c:	74 17                	je     5625 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x335>
    560e:	44 89 0e             	mov    DWORD PTR [rsi],r9d
    5611:	48 83 ff 01          	cmp    rdi,0x1
    5615:	74 0e                	je     5625 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x335>
    5617:	44 89 4e 04          	mov    DWORD PTR [rsi+0x4],r9d
    561b:	48 83 ff 02          	cmp    rdi,0x2
    561f:	74 04                	je     5625 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x335>
    5621:	44 89 4e 08          	mov    DWORD PTR [rsi+0x8],r9d
    5625:	4d 8d 3c 98          	lea    r15,[r8+rbx*4]
    5629:	49 01 cf             	add    r15,rcx
    562c:	4c 39 f5             	cmp    rbp,r14
    562f:	74 7f                	je     56b0 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x3c0>
    5631:	4c 89 c2             	mov    rdx,r8
    5634:	48 89 cf             	mov    rdi,rcx
    5637:	4c 89 f6             	mov    rsi,r14
    563a:	e8 91 e3 ff ff       	call   39d0 <memmove@plt>
    563f:	48 89 c1             	mov    rcx,rax
    5642:	49 8b 45 08          	mov    rax,QWORD PTR [r13+0x8]
    5646:	48 89 c2             	mov    rdx,rax
    5649:	48 29 ea             	sub    rdx,rbp
    564c:	49 8d 1c 17          	lea    rbx,[r15+rdx*1]
    5650:	48 39 c5             	cmp    rbp,rax
    5653:	74 43                	je     5698 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x3a8>
    5655:	48 89 ee             	mov    rsi,rbp
    5658:	4c 89 ff             	mov    rdi,r15
    565b:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
    5660:	e8 3b e1 ff ff       	call   37a0 <memcpy@plt>
    5665:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
    566a:	4d 85 f6             	test   r14,r14
    566d:	75 29                	jne    5698 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x3a8>
    566f:	66 48 0f 6e cb       	movq   xmm1,rbx
    5674:	66 48 0f 6e c1       	movq   xmm0,rcx
    5679:	4d 89 65 10          	mov    QWORD PTR [r13+0x10],r12
    567d:	66 0f 6c c1          	punpcklqdq xmm0,xmm1
    5681:	41 0f 11 45 00       	movups XMMWORD PTR [r13+0x0],xmm0
    5686:	48 83 c4 18          	add    rsp,0x18
    568a:	5b                   	pop    rbx
    568b:	5d                   	pop    rbp
    568c:	41 5c                	pop    r12
    568e:	41 5d                	pop    r13
    5690:	41 5e                	pop    r14
    5692:	41 5f                	pop    r15
    5694:	c3                   	ret    
    5695:	0f 1f 00             	nop    DWORD PTR [rax]
    5698:	4c 89 f7             	mov    rdi,r14
    569b:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
    56a0:	e8 3b e1 ff ff       	call   37e0 <operator delete(void*)@plt>
    56a5:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
    56aa:	eb c3                	jmp    566f <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x37f>
    56ac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    56b0:	49 8b 45 08          	mov    rax,QWORD PTR [r13+0x8]
    56b4:	48 89 c2             	mov    rdx,rax
    56b7:	48 29 ea             	sub    rdx,rbp
    56ba:	49 8d 1c 17          	lea    rbx,[r15+rdx*1]
    56be:	48 39 e8             	cmp    rax,rbp
    56c1:	75 92                	jne    5655 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x365>
    56c3:	eb a5                	jmp    566a <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x37a>
    56c5:	0f 1f 00             	nop    DWORD PTR [rax]
    56c8:	49 bc fc ff ff ff ff ff ff 7f 	movabs r12,0x7ffffffffffffffc
    56d2:	4c 89 e7             	mov    rdi,r12
    56d5:	48 89 74 24 08       	mov    QWORD PTR [rsp+0x8],rsi
    56da:	e8 41 e1 ff ff       	call   3820 <operator new(unsigned long)@plt>
    56df:	4d 8b 75 00          	mov    r14,QWORD PTR [r13+0x0]
    56e3:	49 89 e8             	mov    r8,rbp
    56e6:	48 8b 74 24 08       	mov    rsi,QWORD PTR [rsp+0x8]
    56eb:	48 89 c1             	mov    rcx,rax
    56ee:	49 01 c4             	add    r12,rax
    56f1:	4d 29 f0             	sub    r8,r14
    56f4:	e9 b7 fe ff ff       	jmp    55b0 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x2c0>
    56f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    5700:	49 39 d4             	cmp    r12,rdx
    5703:	4c 0f 47 e2          	cmova  r12,rdx
    5707:	49 c1 e4 02          	shl    r12,0x2
    570b:	eb c5                	jmp    56d2 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x3e2>
    570d:	0f 1f 00             	nop    DWORD PTR [rax]
    5710:	4c 89 e7             	mov    rdi,r12
    5713:	e9 96 fd ff ff       	jmp    54ae <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x1be>
    5718:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    5720:	48 01 fa             	add    rdx,rdi
    5723:	49 89 55 08          	mov    QWORD PTR [r13+0x8],rdx
    5727:	e9 1e fe ff ff       	jmp    554a <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x25a>
    572c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    5730:	48 89 df             	mov    rdi,rbx
    5733:	e9 d6 fe ff ff       	jmp    560e <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x31e>
    5738:	4c 89 e0             	mov    rax,r12
    573b:	48 89 de             	mov    rsi,rbx
    573e:	e9 50 fd ff ff       	jmp    5493 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)+0x1a3>
    5743:	48 8d 3d 1a bf 02 00 	lea    rdi,[rip+0x2bf1a]        # 31664 <_IO_stdin_used+0x664>
    574a:	e8 a1 df ff ff       	call   36f0 <std::__throw_length_error(char const*)@plt>
    574f:	90                   	nop

0000000000005750 <std::vector<std::vector<quatret, std::allocator<quatret> >, std::allocator<std::vector<quatret, std::allocator<quatret> > > >::_M_default_append(unsigned long)>:
    5750:	f3 0f 1e fa          	endbr64 
    5754:	48 85 f6             	test   rsi,rsi
    5757:	0f 84 03 01 00 00    	je     5860 <std::vector<std::vector<quatret, std::allocator<quatret> >, std::allocator<std::vector<quatret, std::allocator<quatret> > > >::_M_default_append(unsigned long)+0x110>
    575d:	48 ba ab aa aa aa aa aa aa aa 	movabs rdx,0xaaaaaaaaaaaaaaab
    5767:	41 57                	push   r15
    5769:	48 b9 55 55 55 55 55 55 55 05 	movabs rcx,0x555555555555555
    5773:	41 56                	push   r14
    5775:	41 55                	push   r13
    5777:	41 54                	push   r12
    5779:	55                   	push   rbp
    577a:	48 89 fd             	mov    rbp,rdi
    577d:	53                   	push   rbx
    577e:	48 89 f3             	mov    rbx,rsi
    5781:	48 83 ec 08          	sub    rsp,0x8
    5785:	48 8b 77 08          	mov    rsi,QWORD PTR [rdi+0x8]
    5789:	48 8b 45 10          	mov    rax,QWORD PTR [rbp+0x10]
    578d:	49 89 f5             	mov    r13,rsi
    5790:	4c 2b 2f             	sub    r13,QWORD PTR [rdi]
    5793:	48 29 f0             	sub    rax,rsi
    5796:	48 89 cf             	mov    rdi,rcx
    5799:	4d 89 ec             	mov    r12,r13
    579c:	48 c1 f8 03          	sar    rax,0x3
    57a0:	49 c1 fc 03          	sar    r12,0x3
    57a4:	48 0f af c2          	imul   rax,rdx
    57a8:	4c 0f af e2          	imul   r12,rdx
    57ac:	4c 29 e7             	sub    rdi,r12
    57af:	48 39 c3             	cmp    rbx,rax
    57b2:	0f 87 b0 00 00 00    	ja     5868 <std::vector<std::vector<quatret, std::allocator<quatret> >, std::allocator<std::vector<quatret, std::allocator<quatret> > > >::_M_default_append(unsigned long)+0x118>
    57b8:	48 8d 43 ff          	lea    rax,[rbx-0x1]
    57bc:	48 83 f8 02          	cmp    rax,0x2
    57c0:	0f 86 62 02 00 00    	jbe    5a28 <std::vector<std::vector<quatret, std::allocator<quatret> >, std::allocator<std::vector<quatret, std::allocator<quatret> > > >::_M_default_append(unsigned long)+0x2d8>
    57c6:	48 8d 4b fe          	lea    rcx,[rbx-0x2]
    57ca:	48 89 f0             	mov    rax,rsi
    57cd:	66 0f ef c0          	pxor   xmm0,xmm0
    57d1:	31 d2                	xor    edx,edx
    57d3:	48 d1 e9             	shr    rcx,1
    57d6:	48 83 c1 01          	add    rcx,0x1
    57da:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    57e0:	48 83 c2 01          	add    rdx,0x1
    57e4:	0f 11 00             	movups XMMWORD PTR [rax],xmm0
    57e7:	48 83 c0 30          	add    rax,0x30
    57eb:	0f 11 40 e0          	movups XMMWORD PTR [rax-0x20],xmm0
    57ef:	0f 11 40 f0          	movups XMMWORD PTR [rax-0x10],xmm0
    57f3:	48 39 d1             	cmp    rcx,rdx
    57f6:	77 e8                	ja     57e0 <std::vector<std::vector<quatret, std::allocator<quatret> >, std::allocator<std::vector<quatret, std::allocator<quatret> > > >::_M_default_append(unsigned long)+0x90>
    57f8:	48 8d 14 09          	lea    rdx,[rcx+rcx*1]
    57fc:	48 89 df             	mov    rdi,rbx
    57ff:	48 8d 04 8a          	lea    rax,[rdx+rcx*4]
    5803:	48 29 d7             	sub    rdi,rdx
    5806:	48 8d 04 c6          	lea    rax,[rsi+rax*8]
    580a:	48 39 d3             	cmp    rbx,rdx
    580d:	74 33                	je     5842 <std::vector<std::vector<quatret, std::allocator<quatret> >, std::allocator<std::vector<quatret, std::allocator<quatret> > > >::_M_default_append(unsigned long)+0xf2>
    580f:	66 0f ef c0          	pxor   xmm0,xmm0
    5813:	48 c7 40 10 00 00 00 00 	mov    QWORD PTR [rax+0x10],0x0
    581b:	0f 11 00             	movups XMMWORD PTR [rax],xmm0
    581e:	48 83 ff 01          	cmp    rdi,0x1
    5822:	74 1e                	je     5842 <std::vector<std::vector<quatret, std::allocator<quatret> >, std::allocator<std::vector<quatret, std::allocator<quatret> > > >::_M_default_append(unsigned long)+0xf2>
    5824:	48 c7 40 28 00 00 00 00 	mov    QWORD PTR [rax+0x28],0x0
    582c:	0f 11 40 18          	movups XMMWORD PTR [rax+0x18],xmm0
    5830:	48 83 ff 02          	cmp    rdi,0x2
    5834:	74 0c                	je     5842 <std::vector<std::vector<quatret, std::allocator<quatret> >, std::allocator<std::vector<quatret, std::allocator<quatret> > > >::_M_default_append(unsigned long)+0xf2>
    5836:	48 c7 40 40 00 00 00 00 	mov    QWORD PTR [rax+0x40],0x0
    583e:	0f 11 40 30          	movups XMMWORD PTR [rax+0x30],xmm0
    5842:	48 8d 04 5b          	lea    rax,[rbx+rbx*2]
    5846:	48 8d 04 c6          	lea    rax,[rsi+rax*8]
    584a:	48 89 45 08          	mov    QWORD PTR [rbp+0x8],rax
    584e:	48 83 c4 08          	add    rsp,0x8
    5852:	5b                   	pop    rbx
    5853:	5d                   	pop    rbp
    5854:	41 5c                	pop    r12
    5856:	41 5d                	pop    r13
    5858:	41 5e                	pop    r14
    585a:	41 5f                	pop    r15
    585c:	c3                   	ret    
    585d:	0f 1f 00             	nop    DWORD PTR [rax]
    5860:	c3                   	ret    
    5861:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    5868:	48 39 df             	cmp    rdi,rbx
    586b:	0f 82 f6 01 00 00    	jb     5a67 <std::vector<std::vector<quatret, std::allocator<quatret> >, std::allocator<std::vector<quatret, std::allocator<quatret> > > >::_M_default_append(unsigned long)+0x317>
    5871:	4c 39 e3             	cmp    rbx,r12
    5874:	4c 89 e0             	mov    rax,r12
    5877:	48 0f 43 c3          	cmovae rax,rbx
    587b:	4c 01 e0             	add    rax,r12
    587e:	48 39 c8             	cmp    rax,rcx
    5881:	48 0f 46 c8          	cmovbe rcx,rax
    5885:	4c 8d 34 49          	lea    r14,[rcx+rcx*2]
    5889:	49 c1 e6 03          	shl    r14,0x3
    588d:	4c 89 f7             	mov    rdi,r14
    5890:	e8 8b df ff ff       	call   3820 <operator new(unsigned long)@plt>
    5895:	49 89 c7             	mov    r15,rax
    5898:	4a 8d 34 28          	lea    rsi,[rax+r13*1]
    589c:	48 8d 43 ff          	lea    rax,[rbx-0x1]
    58a0:	48 83 f8 02          	cmp    rax,0x2
    58a4:	0f 86 b5 01 00 00    	jbe    5a5f <std::vector<std::vector<quatret, std::allocator<quatret> >, std::allocator<std::vector<quatret, std::allocator<quatret> > > >::_M_default_append(unsigned long)+0x30f>
    58aa:	48 8d 43 fe          	lea    rax,[rbx-0x2]
    58ae:	48 89 f2             	mov    rdx,rsi
    58b1:	66 0f ef c0          	pxor   xmm0,xmm0
    58b5:	31 c9                	xor    ecx,ecx
    58b7:	48 d1 e8             	shr    rax,1
    58ba:	48 83 c0 01          	add    rax,0x1
    58be:	66 90                	xchg   ax,ax
    58c0:	48 83 c1 01          	add    rcx,0x1
    58c4:	0f 11 02             	movups XMMWORD PTR [rdx],xmm0
    58c7:	48 83 c2 30          	add    rdx,0x30
    58cb:	0f 11 42 e0          	movups XMMWORD PTR [rdx-0x20],xmm0
    58cf:	0f 11 42 f0          	movups XMMWORD PTR [rdx-0x10],xmm0
    58d3:	48 39 c8             	cmp    rax,rcx
    58d6:	77 e8                	ja     58c0 <std::vector<std::vector<quatret, std::allocator<quatret> >, std::allocator<std::vector<quatret, std::allocator<quatret> > > >::_M_default_append(unsigned long)+0x170>
    58d8:	48 8d 14 00          	lea    rdx,[rax+rax*1]
    58dc:	48 89 d9             	mov    rcx,rbx
    58df:	48 8d 04 82          	lea    rax,[rdx+rax*4]
    58e3:	48 29 d1             	sub    rcx,rdx
    58e6:	48 8d 34 c6          	lea    rsi,[rsi+rax*8]
    58ea:	48 39 d3             	cmp    rbx,rdx
    58ed:	74 33                	je     5922 <std::vector<std::vector<quatret, std::allocator<quatret> >, std::allocator<std::vector<quatret, std::allocator<quatret> > > >::_M_default_append(unsigned long)+0x1d2>
    58ef:	66 0f ef c0          	pxor   xmm0,xmm0
    58f3:	48 c7 46 10 00 00 00 00 	mov    QWORD PTR [rsi+0x10],0x0
    58fb:	0f 11 06             	movups XMMWORD PTR [rsi],xmm0
    58fe:	48 83 f9 01          	cmp    rcx,0x1
    5902:	74 1e                	je     5922 <std::vector<std::vector<quatret, std::allocator<quatret> >, std::allocator<std::vector<quatret, std::allocator<quatret> > > >::_M_default_append(unsigned long)+0x1d2>
    5904:	48 c7 46 28 00 00 00 00 	mov    QWORD PTR [rsi+0x28],0x0
    590c:	0f 11 46 18          	movups XMMWORD PTR [rsi+0x18],xmm0
    5910:	48 83 f9 02          	cmp    rcx,0x2
    5914:	74 0c                	je     5922 <std::vector<std::vector<quatret, std::allocator<quatret> >, std::allocator<std::vector<quatret, std::allocator<quatret> > > >::_M_default_append(unsigned long)+0x1d2>
    5916:	48 c7 46 40 00 00 00 00 	mov    QWORD PTR [rsi+0x40],0x0
    591e:	0f 11 46 30          	movups XMMWORD PTR [rsi+0x30],xmm0
    5922:	48 8b 4d 08          	mov    rcx,QWORD PTR [rbp+0x8]
    5926:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    592a:	48 39 f9             	cmp    rcx,rdi
    592d:	0f 84 be 00 00 00    	je     59f1 <std::vector<std::vector<quatret, std::allocator<quatret> >, std::allocator<std::vector<quatret, std::allocator<quatret> > > >::_M_default_append(unsigned long)+0x2a1>
    5933:	48 8d 41 e8          	lea    rax,[rcx-0x18]
    5937:	48 89 fa             	mov    rdx,rdi
    593a:	48 be ab aa aa aa aa aa aa 0a 	movabs rsi,0xaaaaaaaaaaaaaab
    5944:	48 29 f8             	sub    rax,rdi
    5947:	48 c1 e8 03          	shr    rax,0x3
    594b:	48 0f af c6          	imul   rax,rsi
    594f:	48 8d 77 2f          	lea    rsi,[rdi+0x2f]
    5953:	4c 29 fe             	sub    rsi,r15
    5956:	48 83 fe 5e          	cmp    rsi,0x5e
    595a:	0f 86 d3 00 00 00    	jbe    5a33 <std::vector<std::vector<quatret, std::allocator<quatret> >, std::allocator<std::vector<quatret, std::allocator<quatret> > > >::_M_default_append(unsigned long)+0x2e3>
    5960:	48 be fe ff ff ff ff ff ff 1f 	movabs rsi,0x1ffffffffffffffe
    596a:	48 85 f0             	test   rax,rsi
    596d:	0f 84 c0 00 00 00    	je     5a33 <std::vector<std::vector<quatret, std::allocator<quatret> >, std::allocator<std::vector<quatret, std::allocator<quatret> > > >::_M_default_append(unsigned long)+0x2e3>
    5973:	48 b9 ff ff ff ff ff ff ff 1f 	movabs rcx,0x1fffffffffffffff
    597d:	48 21 c8             	and    rax,rcx
    5980:	4c 89 f9             	mov    rcx,r15
    5983:	48 83 c0 01          	add    rax,0x1
    5987:	48 89 c6             	mov    rsi,rax
    598a:	48 d1 ee             	shr    rsi,1
    598d:	48 8d 34 76          	lea    rsi,[rsi+rsi*2]
    5991:	48 c1 e6 04          	shl    rsi,0x4
    5995:	48 01 fe             	add    rsi,rdi
    5998:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    59a0:	f3 0f 6f 4a 10       	movdqu xmm1,XMMWORD PTR [rdx+0x10]
    59a5:	f3 0f 6f 1a          	movdqu xmm3,XMMWORD PTR [rdx]
    59a9:	48 83 c2 30          	add    rdx,0x30
    59ad:	48 83 c1 30          	add    rcx,0x30
    59b1:	f3 0f 6f 42 f0       	movdqu xmm0,XMMWORD PTR [rdx-0x10]
    59b6:	0f 11 59 d0          	movups XMMWORD PTR [rcx-0x30],xmm3
    59ba:	0f 11 49 e0          	movups XMMWORD PTR [rcx-0x20],xmm1
    59be:	0f 11 41 f0          	movups XMMWORD PTR [rcx-0x10],xmm0
    59c2:	48 39 f2             	cmp    rdx,rsi
    59c5:	75 d9                	jne    59a0 <std::vector<std::vector<quatret, std::allocator<quatret> >, std::allocator<std::vector<quatret, std::allocator<quatret> > > >::_M_default_append(unsigned long)+0x250>
    59c7:	48 89 c6             	mov    rsi,rax
    59ca:	48 83 e6 fe          	and    rsi,0xfffffffffffffffe
    59ce:	48 8d 14 76          	lea    rdx,[rsi+rsi*2]
    59d2:	48 c1 e2 03          	shl    rdx,0x3
    59d6:	48 8d 0c 17          	lea    rcx,[rdi+rdx*1]
    59da:	4c 01 fa             	add    rdx,r15
    59dd:	48 39 f0             	cmp    rax,rsi
    59e0:	74 0f                	je     59f1 <std::vector<std::vector<quatret, std::allocator<quatret> >, std::allocator<std::vector<quatret, std::allocator<quatret> > > >::_M_default_append(unsigned long)+0x2a1>
    59e2:	48 8b 41 10          	mov    rax,QWORD PTR [rcx+0x10]
    59e6:	f3 0f 6f 11          	movdqu xmm2,XMMWORD PTR [rcx]
    59ea:	48 89 42 10          	mov    QWORD PTR [rdx+0x10],rax
    59ee:	0f 11 12             	movups XMMWORD PTR [rdx],xmm2
    59f1:	48 85 ff             	test   rdi,rdi
    59f4:	74 05                	je     59fb <std::vector<std::vector<quatret, std::allocator<quatret> >, std::allocator<std::vector<quatret, std::allocator<quatret> > > >::_M_default_append(unsigned long)+0x2ab>
    59f6:	e8 e5 dd ff ff       	call   37e0 <operator delete(void*)@plt>
    59fb:	4c 01 e3             	add    rbx,r12
    59fe:	4d 01 fe             	add    r14,r15
    5a01:	4c 89 7d 00          	mov    QWORD PTR [rbp+0x0],r15
    5a05:	48 8d 04 5b          	lea    rax,[rbx+rbx*2]
    5a09:	4c 89 75 10          	mov    QWORD PTR [rbp+0x10],r14
    5a0d:	49 8d 04 c7          	lea    rax,[r15+rax*8]
    5a11:	48 89 45 08          	mov    QWORD PTR [rbp+0x8],rax
    5a15:	48 83 c4 08          	add    rsp,0x8
    5a19:	5b                   	pop    rbx
    5a1a:	5d                   	pop    rbp
    5a1b:	41 5c                	pop    r12
    5a1d:	41 5d                	pop    r13
    5a1f:	41 5e                	pop    r14
    5a21:	41 5f                	pop    r15
    5a23:	c3                   	ret    
    5a24:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    5a28:	48 89 f0             	mov    rax,rsi
    5a2b:	48 89 df             	mov    rdi,rbx
    5a2e:	e9 dc fd ff ff       	jmp    580f <std::vector<std::vector<quatret, std::allocator<quatret> >, std::allocator<std::vector<quatret, std::allocator<quatret> > > >::_M_default_append(unsigned long)+0xbf>
    5a33:	4c 89 fa             	mov    rdx,r15
    5a36:	48 89 f8             	mov    rax,rdi
    5a39:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    5a40:	f3 0f 6f 20          	movdqu xmm4,XMMWORD PTR [rax]
    5a44:	48 83 c0 18          	add    rax,0x18
    5a48:	48 83 c2 18          	add    rdx,0x18
    5a4c:	0f 11 62 e8          	movups XMMWORD PTR [rdx-0x18],xmm4
    5a50:	48 8b 70 f8          	mov    rsi,QWORD PTR [rax-0x8]
    5a54:	48 89 72 f8          	mov    QWORD PTR [rdx-0x8],rsi
    5a58:	48 39 c1             	cmp    rcx,rax
    5a5b:	75 e3                	jne    5a40 <std::vector<std::vector<quatret, std::allocator<quatret> >, std::allocator<std::vector<quatret, std::allocator<quatret> > > >::_M_default_append(unsigned long)+0x2f0>
    5a5d:	eb 92                	jmp    59f1 <std::vector<std::vector<quatret, std::allocator<quatret> >, std::allocator<std::vector<quatret, std::allocator<quatret> > > >::_M_default_append(unsigned long)+0x2a1>
    5a5f:	48 89 d9             	mov    rcx,rbx
    5a62:	e9 88 fe ff ff       	jmp    58ef <std::vector<std::vector<quatret, std::allocator<quatret> >, std::allocator<std::vector<quatret, std::allocator<quatret> > > >::_M_default_append(unsigned long)+0x19f>
    5a67:	48 8d 3d 0d bc 02 00 	lea    rdi,[rip+0x2bc0d]        # 3167b <_IO_stdin_used+0x67b>
    5a6e:	e8 7d dc ff ff       	call   36f0 <std::__throw_length_error(char const*)@plt>
    5a73:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    5a7d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000005a80 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>:
    5a80:	f3 0f 1e fa          	endbr64 
    5a84:	41 57                	push   r15
    5a86:	41 56                	push   r14
    5a88:	41 55                	push   r13
    5a8a:	41 54                	push   r12
    5a8c:	55                   	push   rbp
    5a8d:	89 d5                	mov    ebp,edx
    5a8f:	53                   	push   rbx
    5a90:	48 89 fb             	mov    rbx,rdi
    5a93:	48 83 ec 58          	sub    rsp,0x58
    5a97:	4c 8b 66 08          	mov    r12,QWORD PTR [rsi+0x8]
    5a9b:	48 89 34 24          	mov    QWORD PTR [rsp],rsi
    5a9f:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
    5aa4:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
    5aad:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
    5ab2:	31 c0                	xor    eax,eax
    5ab4:	48 8d 47 10          	lea    rax,[rdi+0x10]
    5ab8:	48 89 07             	mov    QWORD PTR [rdi],rax
    5abb:	4c 8b 2e             	mov    r13,QWORD PTR [rsi]
    5abe:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
    5ac3:	4c 89 e8             	mov    rax,r13
    5ac6:	4c 01 e0             	add    rax,r12
    5ac9:	74 09                	je     5ad4 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x54>
    5acb:	4d 85 ed             	test   r13,r13
    5ace:	0f 84 e0 0f 00 00    	je     6ab4 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x1034>
    5ad4:	4c 89 64 24 40       	mov    QWORD PTR [rsp+0x40],r12
    5ad9:	49 83 fc 0f          	cmp    r12,0xf
    5add:	0f 87 15 0c 00 00    	ja     66f8 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xc78>
    5ae3:	49 83 fc 01          	cmp    r12,0x1
    5ae7:	0f 85 83 09 00 00    	jne    6470 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x9f0>
    5aed:	41 0f b6 45 00       	movzx  eax,BYTE PTR [r13+0x0]
    5af2:	88 43 10             	mov    BYTE PTR [rbx+0x10],al
    5af5:	48 8b 44 24 20       	mov    rax,QWORD PTR [rsp+0x20]
    5afa:	4c 89 63 08          	mov    QWORD PTR [rbx+0x8],r12
    5afe:	42 c6 04 20 00       	mov    BYTE PTR [rax+r12*1],0x0
    5b03:	48 8b 04 24          	mov    rax,QWORD PTR [rsp]
    5b07:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    5b0b:	89 43 20             	mov    DWORD PTR [rbx+0x20],eax
    5b0e:	e8 c3 d6 01 00       	call   231d6 <scale_parameters>
    5b13:	48 89 43 38          	mov    QWORD PTR [rbx+0x38],rax
    5b17:	48 8d 43 50          	lea    rax,[rbx+0x50]
    5b1b:	66 0f ef c0          	pxor   xmm0,xmm0
    5b1f:	48 63 73 20          	movsxd rsi,DWORD PTR [rbx+0x20]
    5b23:	48 89 44 24 30       	mov    QWORD PTR [rsp+0x30],rax
    5b28:	48 89 43 40          	mov    QWORD PTR [rbx+0x40],rax
    5b2c:	48 8d 43 60          	lea    rax,[rbx+0x60]
    5b30:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
    5b35:	48 8d 43 70          	lea    rax,[rbx+0x70]
    5b39:	48 89 43 60          	mov    QWORD PTR [rbx+0x60],rax
    5b3d:	48 c7 43 48 00 00 00 00 	mov    QWORD PTR [rbx+0x48],0x0
    5b45:	c6 43 50 00          	mov    BYTE PTR [rbx+0x50],0x0
    5b49:	48 c7 43 68 00 00 00 00 	mov    QWORD PTR [rbx+0x68],0x0
    5b51:	c6 43 70 00          	mov    BYTE PTR [rbx+0x70],0x0
    5b55:	40 88 ab 80 00 00 00 	mov    BYTE PTR [rbx+0x80],bpl
    5b5c:	48 c7 83 98 00 00 00 00 00 00 00 	mov    QWORD PTR [rbx+0x98],0x0
    5b67:	48 c7 83 20 01 00 00 00 00 00 00 	mov    QWORD PTR [rbx+0x120],0x0
    5b72:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
    5b77:	48 8d 83 30 01 00 00 	lea    rax,[rbx+0x130]
    5b7e:	0f 11 83 88 00 00 00 	movups XMMWORD PTR [rbx+0x88],xmm0
    5b85:	48 89 c7             	mov    rdi,rax
    5b88:	0f 11 83 a0 00 00 00 	movups XMMWORD PTR [rbx+0xa0],xmm0
    5b8f:	0f 11 83 b0 00 00 00 	movups XMMWORD PTR [rbx+0xb0],xmm0
    5b96:	0f 11 83 c0 00 00 00 	movups XMMWORD PTR [rbx+0xc0],xmm0
    5b9d:	0f 11 83 d0 00 00 00 	movups XMMWORD PTR [rbx+0xd0],xmm0
    5ba4:	0f 11 83 e0 00 00 00 	movups XMMWORD PTR [rbx+0xe0],xmm0
    5bab:	0f 11 83 f0 00 00 00 	movups XMMWORD PTR [rbx+0xf0],xmm0
    5bb2:	0f 11 83 00 01 00 00 	movups XMMWORD PTR [rbx+0x100],xmm0
    5bb9:	0f 11 83 10 01 00 00 	movups XMMWORD PTR [rbx+0x110],xmm0
    5bc0:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    5bc5:	e8 16 3c 00 00       	call   97e0 <TraceArrows::TraceArrows(unsigned long)>
    5bca:	8b 15 48 34 2e 00    	mov    edx,DWORD PTR [rip+0x2e3448]        # 2e9018 <energy_set>
    5bd0:	66 0f ef c0          	pxor   xmm0,xmm0
    5bd4:	48 c7 83 80 01 00 00 00 00 00 00 	mov    QWORD PTR [rbx+0x180],0x0
    5bdf:	0f 11 83 70 01 00 00 	movups XMMWORD PTR [rbx+0x170],xmm0
    5be6:	85 d2                	test   edx,edx
    5be8:	0f 85 9a 08 00 00    	jne    6488 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xa08>
    5bee:	66 0f 6f 0d 4a bd 02 00 	movdqa xmm1,XMMWORD PTR [rip+0x2bd4a]        # 31940 <BP_pair>
    5bf6:	66 0f 6f 15 52 bd 02 00 	movdqa xmm2,XMMWORD PTR [rip+0x2bd52]        # 31950 <BP_pair+0x10>
    5bfe:	66 0f 6f 1d 5a bd 02 00 	movdqa xmm3,XMMWORD PTR [rip+0x2bd5a]        # 31960 <BP_pair+0x20>
    5c06:	66 0f 6f 25 62 bd 02 00 	movdqa xmm4,XMMWORD PTR [rip+0x2bd62]        # 31970 <BP_pair+0x30>
    5c0e:	66 0f 6f 2d 6a bd 02 00 	movdqa xmm5,XMMWORD PTR [rip+0x2bd6a]        # 31980 <BP_pair+0x40>
    5c16:	66 0f 6f 35 72 bd 02 00 	movdqa xmm6,XMMWORD PTR [rip+0x2bd72]        # 31990 <BP_pair+0x50>
    5c1e:	0f 29 0d 9b 86 24 00 	movaps XMMWORD PTR [rip+0x24869b],xmm1        # 24e2c0 <pair>
    5c25:	66 0f 6f 3d 73 bd 02 00 	movdqa xmm7,XMMWORD PTR [rip+0x2bd73]        # 319a0 <BP_pair+0x60>
    5c2d:	66 0f 6f 0d 7b bd 02 00 	movdqa xmm1,XMMWORD PTR [rip+0x2bd7b]        # 319b0 <BP_pair+0x70>
    5c35:	0f 29 15 94 86 24 00 	movaps XMMWORD PTR [rip+0x248694],xmm2        # 24e2d0 <pair+0x10>
    5c3c:	66 0f 6f 05 0c be 02 00 	movdqa xmm0,XMMWORD PTR [rip+0x2be0c]        # 31a50 <Law_and_Order+0x10>
    5c44:	66 0f 6f 15 74 bd 02 00 	movdqa xmm2,XMMWORD PTR [rip+0x2bd74]        # 319c0 <BP_pair+0x80>
    5c4c:	0f 11 1d c1 86 24 00 	movups XMMWORD PTR [rip+0x2486c1],xmm3        # 24e314 <pair+0x54>
    5c53:	0f 11 25 ca 86 24 00 	movups XMMWORD PTR [rip+0x2486ca],xmm4        # 24e324 <pair+0x64>
    5c5a:	66 0f 6f 1d 6e bd 02 00 	movdqa xmm3,XMMWORD PTR [rip+0x2bd6e]        # 319d0 <BP_pair+0x90>
    5c62:	66 0f 6f 25 76 bd 02 00 	movdqa xmm4,XMMWORD PTR [rip+0x2bd76]        # 319e0 <BP_pair+0xa0>
    5c6a:	0f 11 2d f7 86 24 00 	movups XMMWORD PTR [rip+0x2486f7],xmm5        # 24e368 <pair+0xa8>
    5c71:	66 0f 6f 2d 77 bd 02 00 	movdqa xmm5,XMMWORD PTR [rip+0x2bd77]        # 319f0 <BP_pair+0xb0>
    5c79:	0f 11 35 f8 86 24 00 	movups XMMWORD PTR [rip+0x2486f8],xmm6        # 24e378 <pair+0xb8>
    5c80:	66 0f 6f 35 78 bd 02 00 	movdqa xmm6,XMMWORD PTR [rip+0x2bd78]        # 31a00 <BP_pair+0xc0>
    5c88:	0f 11 3d 2d 87 24 00 	movups XMMWORD PTR [rip+0x24872d],xmm7        # 24e3bc <pair+0xfc>
    5c8f:	66 0f 6f 3d 79 bd 02 00 	movdqa xmm7,XMMWORD PTR [rip+0x2bd79]        # 31a10 <BP_pair+0xd0>
    5c97:	0f 11 0d 2e 87 24 00 	movups XMMWORD PTR [rip+0x24872e],xmm1        # 24e3cc <pair+0x10c>
    5c9e:	66 0f 6f 0d 7a bd 02 00 	movdqa xmm1,XMMWORD PTR [rip+0x2bd7a]        # 31a20 <BP_pair+0xe0>
    5ca6:	0f 29 05 13 8d 24 00 	movaps XMMWORD PTR [rip+0x248d13],xmm0        # 24e9c0 <alias>
    5cad:	0f 29 15 5c 87 24 00 	movaps XMMWORD PTR [rip+0x24875c],xmm2        # 24e410 <pair+0x150>
    5cb4:	0f 29 1d 65 87 24 00 	movaps XMMWORD PTR [rip+0x248765],xmm3        # 24e420 <pair+0x160>
    5cbb:	0f 11 25 a2 87 24 00 	movups XMMWORD PTR [rip+0x2487a2],xmm4        # 24e464 <pair+0x1a4>
    5cc2:	0f 11 2d ab 87 24 00 	movups XMMWORD PTR [rip+0x2487ab],xmm5        # 24e474 <pair+0x1b4>
    5cc9:	0f 11 35 e8 87 24 00 	movups XMMWORD PTR [rip+0x2487e8],xmm6        # 24e4b8 <pair+0x1f8>
    5cd0:	0f 11 3d f1 87 24 00 	movups XMMWORD PTR [rip+0x2487f1],xmm7        # 24e4c8 <pair+0x208>
    5cd7:	0f 11 0d 2e 88 24 00 	movups XMMWORD PTR [rip+0x24882e],xmm1        # 24e50c <pair+0x24c>
    5cde:	66 0f 6f 15 4a bd 02 00 	movdqa xmm2,XMMWORD PTR [rip+0x2bd4a]        # 31a30 <BP_pair+0xf0>
    5ce6:	8b 0d 18 33 2e 00    	mov    ecx,DWORD PTR [rip+0x2e3318]        # 2e9004 <noGU>
    5cec:	0f 11 15 29 88 24 00 	movups XMMWORD PTR [rip+0x248829],xmm2        # 24e51c <pair+0x25c>
    5cf3:	85 c9                	test   ecx,ecx
    5cf5:	74 14                	je     5d0b <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x28b>
    5cf7:	c7 05 1b 87 24 00 00 00 00 00 	mov    DWORD PTR [rip+0x24871b],0x0        # 24e41c <pair+0x15c>
    5d01:	c7 05 c1 86 24 00 00 00 00 00 	mov    DWORD PTR [rip+0x2486c1],0x0        # 24e3cc <pair+0x10c>
    5d0b:	4c 8b 25 0e 33 2e 00 	mov    r12,QWORD PTR [rip+0x2e330e]        # 2e9020 <nonstandards>
    5d12:	4d 85 e4             	test   r12,r12
    5d15:	0f 84 bf 00 00 00    	je     5dda <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x35a>
    5d1b:	4c 89 e7             	mov    rdi,r12
    5d1e:	31 ed                	xor    ebp,ebp
    5d20:	4c 8d 2d 19 bd 02 00 	lea    r13,[rip+0x2bd19]        # 31a40 <Law_and_Order>
    5d27:	4c 8d 35 92 85 24 00 	lea    r14,[rip+0x248592]        # 24e2c0 <pair>
    5d2e:	e8 5d d9 ff ff       	call   3690 <strlen@plt>
    5d33:	39 e8                	cmp    eax,ebp
    5d35:	0f 8e 9f 00 00 00    	jle    5dda <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x35a>
    5d3b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    5d40:	41 0f be 3c 2c       	movsx  edi,BYTE PTR [r12+rbp*1]
    5d45:	45 31 ff             	xor    r15d,r15d
    5d48:	e8 53 dd ff ff       	call   3aa0 <toupper@plt>
    5d4d:	4c 89 ef             	mov    rdi,r13
    5d50:	0f be f0             	movsx  esi,al
    5d53:	e8 08 d9 ff ff       	call   3660 <strchr@plt>
    5d58:	48 85 c0             	test   rax,rax
    5d5b:	74 1b                	je     5d78 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x2f8>
    5d5d:	4c 29 e8             	sub    rax,r13
    5d60:	41 89 c7             	mov    r15d,eax
    5d63:	83 f8 05             	cmp    eax,0x5
    5d66:	0f 8f a4 08 00 00    	jg     6610 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xb90>
    5d6c:	b8 04 00 00 00       	mov    eax,0x4
    5d71:	44 0f 44 f8          	cmove  r15d,eax
    5d75:	0f 1f 00             	nop    DWORD PTR [rax]
    5d78:	41 0f be 7c 2c 01    	movsx  edi,BYTE PTR [r12+rbp*1+0x1]
    5d7e:	e8 1d dd ff ff       	call   3aa0 <toupper@plt>
    5d83:	4c 89 ef             	mov    rdi,r13
    5d86:	0f be f0             	movsx  esi,al
    5d89:	e8 d2 d8 ff ff       	call   3660 <strchr@plt>
    5d8e:	31 d2                	xor    edx,edx
    5d90:	48 85 c0             	test   rax,rax
    5d93:	74 1b                	je     5db0 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x330>
    5d95:	4c 29 e8             	sub    rax,r13
    5d98:	48 63 d0             	movsxd rdx,eax
    5d9b:	83 f8 05             	cmp    eax,0x5
    5d9e:	0f 8f 64 08 00 00    	jg     6608 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xb88>
    5da4:	b8 04 00 00 00       	mov    eax,0x4
    5da9:	48 0f 44 d0          	cmove  rdx,rax
    5dad:	0f 1f 00             	nop    DWORD PTR [rax]
    5db0:	49 63 c7             	movsxd rax,r15d
    5db3:	4c 89 e7             	mov    rdi,r12
    5db6:	48 83 c5 02          	add    rbp,0x2
    5dba:	48 8d 0c 80          	lea    rcx,[rax+rax*4]
    5dbe:	48 8d 04 88          	lea    rax,[rax+rcx*4]
    5dc2:	48 01 c2             	add    rdx,rax
    5dc5:	41 c7 04 96 07 00 00 00 	mov    DWORD PTR [r14+rdx*4],0x7
    5dcd:	e8 be d8 ff ff       	call   3690 <strlen@plt>
    5dd2:	39 e8                	cmp    eax,ebp
    5dd4:	0f 8f 66 ff ff ff    	jg     5d40 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x2c0>
    5dda:	48 63 0d df 84 24 00 	movsxd rcx,DWORD PTR [rip+0x2484df]        # 24e2c0 <pair>
    5de1:	48 8d 05 d8 33 1e 00 	lea    rax,[rip+0x1e33d8]        # 1e91c0 <rtype>
    5de8:	48 63 15 25 85 24 00 	movsxd rdx,DWORD PTR [rip+0x248525]        # 24e314 <pair+0x54>
    5def:	48 63 3d d2 84 24 00 	movsxd rdi,DWORD PTR [rip+0x2484d2]        # 24e2c8 <pair+0x8>
    5df6:	44 8b 25 bf 85 24 00 	mov    r12d,DWORD PTR [rip+0x2485bf]        # 24e3bc <pair+0xfc>
    5dfd:	89 0c 88             	mov    DWORD PTR [rax+rcx*4],ecx
    5e00:	48 63 0d bd 84 24 00 	movsxd rcx,DWORD PTR [rip+0x2484bd]        # 24e2c4 <pair+0x4>
    5e07:	49 89 f8             	mov    r8,rdi
    5e0a:	44 8b 1d ff 85 24 00 	mov    r11d,DWORD PTR [rip+0x2485ff]        # 24e410 <pair+0x150>
    5e11:	44 8b 15 a0 86 24 00 	mov    r10d,DWORD PTR [rip+0x2486a0]        # 24e4b8 <pair+0x1f8>
    5e18:	89 14 88             	mov    DWORD PTR [rax+rcx*4],edx
    5e1b:	48 89 ce             	mov    rsi,rcx
    5e1e:	48 63 0d 43 85 24 00 	movsxd rcx,DWORD PTR [rip+0x248543]        # 24e368 <pair+0xa8>
    5e25:	4c 63 0d f4 84 24 00 	movsxd r9,DWORD PTR [rip+0x2484f4]        # 24e320 <pair+0x60>
    5e2c:	89 0c b8             	mov    DWORD PTR [rax+rdi*4],ecx
    5e2f:	48 63 3d 96 84 24 00 	movsxd rdi,DWORD PTR [rip+0x248496]        # 24e2cc <pair+0xc>
    5e36:	44 89 24 b8          	mov    DWORD PTR [rax+rdi*4],r12d
    5e3a:	49 89 fd             	mov    r13,rdi
    5e3d:	48 63 3d 8c 84 24 00 	movsxd rdi,DWORD PTR [rip+0x24848c]        # 24e2d0 <pair+0x10>
    5e44:	44 89 1c b8          	mov    DWORD PTR [rax+rdi*4],r11d
    5e48:	48 63 3d 85 84 24 00 	movsxd rdi,DWORD PTR [rip+0x248485]        # 24e2d4 <pair+0x14>
    5e4f:	44 8b 1d 0e 86 24 00 	mov    r11d,DWORD PTR [rip+0x24860e]        # 24e464 <pair+0x1a4>
    5e56:	44 89 1c b8          	mov    DWORD PTR [rax+rdi*4],r11d
    5e5a:	48 63 3d 77 84 24 00 	movsxd rdi,DWORD PTR [rip+0x248477]        # 24e2d8 <pair+0x18>
    5e61:	44 8b 1d a4 86 24 00 	mov    r11d,DWORD PTR [rip+0x2486a4]        # 24e50c <pair+0x24c>
    5e68:	44 89 14 b8          	mov    DWORD PTR [rax+rdi*4],r10d
    5e6c:	48 63 3d 69 84 24 00 	movsxd rdi,DWORD PTR [rip+0x248469]        # 24e2dc <pair+0x1c>
    5e73:	4d 89 ca             	mov    r10,r9
    5e76:	44 89 1c b8          	mov    DWORD PTR [rax+rdi*4],r11d
    5e7a:	89 34 90             	mov    DWORD PTR [rax+rdx*4],esi
    5e7d:	48 63 35 94 84 24 00 	movsxd rsi,DWORD PTR [rip+0x248494]        # 24e318 <pair+0x58>
    5e84:	48 63 15 e1 84 24 00 	movsxd rdx,DWORD PTR [rip+0x2484e1]        # 24e36c <pair+0xac>
    5e8b:	89 34 b0             	mov    DWORD PTR [rax+rsi*4],esi
    5e8e:	48 63 35 87 84 24 00 	movsxd rsi,DWORD PTR [rip+0x248487]        # 24e31c <pair+0x5c>
    5e95:	89 14 b0             	mov    DWORD PTR [rax+rsi*4],edx
    5e98:	48 89 f7             	mov    rdi,rsi
    5e9b:	48 63 35 1e 85 24 00 	movsxd rsi,DWORD PTR [rip+0x24851e]        # 24e3c0 <pair+0x100>
    5ea2:	42 89 34 88          	mov    DWORD PTR [rax+r9*4],esi
    5ea6:	4c 63 0d 77 84 24 00 	movsxd r9,DWORD PTR [rip+0x248477]        # 24e324 <pair+0x64>
    5ead:	44 8b 1d 60 85 24 00 	mov    r11d,DWORD PTR [rip+0x248560]        # 24e414 <pair+0x154>
    5eb4:	44 8b 35 ad 85 24 00 	mov    r14d,DWORD PTR [rip+0x2485ad]        # 24e468 <pair+0x1a8>
    5ebb:	4c 89 cd             	mov    rbp,r9
    5ebe:	46 89 1c 88          	mov    DWORD PTR [rax+r9*4],r11d
    5ec2:	4c 63 0d 5f 84 24 00 	movsxd r9,DWORD PTR [rip+0x24845f]        # 24e328 <pair+0x68>
    5ec9:	46 89 34 88          	mov    DWORD PTR [rax+r9*4],r14d
    5ecd:	4c 63 0d 58 84 24 00 	movsxd r9,DWORD PTR [rip+0x248458]        # 24e32c <pair+0x6c>
    5ed4:	44 8b 35 e1 85 24 00 	mov    r14d,DWORD PTR [rip+0x2485e1]        # 24e4bc <pair+0x1fc>
    5edb:	46 89 34 88          	mov    DWORD PTR [rax+r9*4],r14d
    5edf:	4c 63 0d 4a 84 24 00 	movsxd r9,DWORD PTR [rip+0x24844a]        # 24e330 <pair+0x70>
    5ee6:	44 8b 35 23 86 24 00 	mov    r14d,DWORD PTR [rip+0x248623]        # 24e510 <pair+0x250>
    5eed:	46 89 34 88          	mov    DWORD PTR [rax+r9*4],r14d
    5ef1:	44 8b 35 74 85 24 00 	mov    r14d,DWORD PTR [rip+0x248574]        # 24e46c <pair+0x1ac>
    5ef8:	44 89 04 88          	mov    DWORD PTR [rax+rcx*4],r8d
    5efc:	48 63 0d 6d 84 24 00 	movsxd rcx,DWORD PTR [rip+0x24846d]        # 24e370 <pair+0xb0>
    5f03:	89 3c 90             	mov    DWORD PTR [rax+rdx*4],edi
    5f06:	48 63 15 b7 84 24 00 	movsxd rdx,DWORD PTR [rip+0x2484b7]        # 24e3c4 <pair+0x104>
    5f0d:	89 0c 88             	mov    DWORD PTR [rax+rcx*4],ecx
    5f10:	48 63 0d 5d 84 24 00 	movsxd rcx,DWORD PTR [rip+0x24845d]        # 24e374 <pair+0xb4>
    5f17:	48 63 3d 5a 84 24 00 	movsxd rdi,DWORD PTR [rip+0x24845a]        # 24e378 <pair+0xb8>
    5f1e:	89 14 88             	mov    DWORD PTR [rax+rcx*4],edx
    5f21:	49 89 c8             	mov    r8,rcx
    5f24:	48 63 0d ed 84 24 00 	movsxd rcx,DWORD PTR [rip+0x2484ed]        # 24e418 <pair+0x158>
    5f2b:	49 89 f9             	mov    r9,rdi
    5f2e:	89 0c b8             	mov    DWORD PTR [rax+rdi*4],ecx
    5f31:	48 63 3d 44 84 24 00 	movsxd rdi,DWORD PTR [rip+0x248444]        # 24e37c <pair+0xbc>
    5f38:	44 89 34 b8          	mov    DWORD PTR [rax+rdi*4],r14d
    5f3c:	49 89 ff             	mov    r15,rdi
    5f3f:	44 8b 35 7a 85 24 00 	mov    r14d,DWORD PTR [rip+0x24857a]        # 24e4c0 <pair+0x200>
    5f46:	48 63 3d 33 84 24 00 	movsxd rdi,DWORD PTR [rip+0x248433]        # 24e380 <pair+0xc0>
    5f4d:	44 89 34 b8          	mov    DWORD PTR [rax+rdi*4],r14d
    5f51:	48 63 3d 2c 84 24 00 	movsxd rdi,DWORD PTR [rip+0x24842c]        # 24e384 <pair+0xc4>
    5f58:	44 8b 35 b5 85 24 00 	mov    r14d,DWORD PTR [rip+0x2485b5]        # 24e514 <pair+0x254>
    5f5f:	44 89 34 b8          	mov    DWORD PTR [rax+rdi*4],r14d
    5f63:	49 63 fc             	movsxd rdi,r12d
    5f66:	44 89 2c b8          	mov    DWORD PTR [rax+rdi*4],r13d
    5f6a:	44 89 14 b0          	mov    DWORD PTR [rax+rsi*4],r10d
    5f6e:	48 63 35 53 84 24 00 	movsxd rsi,DWORD PTR [rip+0x248453]        # 24e3c8 <pair+0x108>
    5f75:	44 89 04 90          	mov    DWORD PTR [rax+rdx*4],r8d
    5f79:	48 63 15 9c 84 24 00 	movsxd rdx,DWORD PTR [rip+0x24849c]        # 24e41c <pair+0x15c>
    5f80:	89 34 b0             	mov    DWORD PTR [rax+rsi*4],esi
    5f83:	48 63 35 42 84 24 00 	movsxd rsi,DWORD PTR [rip+0x248442]        # 24e3cc <pair+0x10c>
    5f8a:	48 63 3d 3f 84 24 00 	movsxd rdi,DWORD PTR [rip+0x24843f]        # 24e3d0 <pair+0x110>
    5f91:	44 8b 25 2c 85 24 00 	mov    r12d,DWORD PTR [rip+0x24852c]        # 24e4c4 <pair+0x204>
    5f98:	89 14 b0             	mov    DWORD PTR [rax+rsi*4],edx
    5f9b:	49 89 f0             	mov    r8,rsi
    5f9e:	48 63 35 cb 84 24 00 	movsxd rsi,DWORD PTR [rip+0x2484cb]        # 24e470 <pair+0x1b0>
    5fa5:	49 89 fa             	mov    r10,rdi
    5fa8:	44 8b 35 69 85 24 00 	mov    r14d,DWORD PTR [rip+0x248569]        # 24e518 <pair+0x258>
    5faf:	89 34 b8             	mov    DWORD PTR [rax+rdi*4],esi
    5fb2:	48 63 3d 1b 84 24 00 	movsxd rdi,DWORD PTR [rip+0x24841b]        # 24e3d4 <pair+0x114>
    5fb9:	44 89 24 b8          	mov    DWORD PTR [rax+rdi*4],r12d
    5fbd:	49 89 fd             	mov    r13,rdi
    5fc0:	48 63 3d 11 84 24 00 	movsxd rdi,DWORD PTR [rip+0x248411]        # 24e3d8 <pair+0x118>
    5fc7:	44 89 34 b8          	mov    DWORD PTR [rax+rdi*4],r14d
    5fcb:	48 63 3d 3e 84 24 00 	movsxd rdi,DWORD PTR [rip+0x24843e]        # 24e410 <pair+0x150>
    5fd2:	44 8b 35 f7 82 24 00 	mov    r14d,DWORD PTR [rip+0x2482f7]        # 24e2d0 <pair+0x10>
    5fd9:	44 89 34 b8          	mov    DWORD PTR [rax+rdi*4],r14d
    5fdd:	49 63 fb             	movsxd rdi,r11d
    5fe0:	89 2c b8             	mov    DWORD PTR [rax+rdi*4],ebp
    5fe3:	48 63 3d de 84 24 00 	movsxd rdi,DWORD PTR [rip+0x2484de]        # 24e4c8 <pair+0x208>
    5fea:	44 89 0c 88          	mov    DWORD PTR [rax+rcx*4],r9d
    5fee:	48 63 0d 2b 84 24 00 	movsxd rcx,DWORD PTR [rip+0x24842b]        # 24e420 <pair+0x160>
    5ff5:	44 89 04 90          	mov    DWORD PTR [rax+rdx*4],r8d
    5ff9:	48 63 15 74 84 24 00 	movsxd rdx,DWORD PTR [rip+0x248474]        # 24e474 <pair+0x1b4>
    6000:	89 0c 88             	mov    DWORD PTR [rax+rcx*4],ecx
    6003:	48 63 0d 1a 84 24 00 	movsxd rcx,DWORD PTR [rip+0x24841a]        # 24e424 <pair+0x164>
    600a:	4c 63 05 1b 84 24 00 	movsxd r8,DWORD PTR [rip+0x24841b]        # 24e42c <pair+0x16c>
    6011:	89 14 88             	mov    DWORD PTR [rax+rcx*4],edx
    6014:	49 89 c9             	mov    r9,rcx
    6017:	48 63 0d 0a 84 24 00 	movsxd rcx,DWORD PTR [rip+0x24840a]        # 24e428 <pair+0x168>
    601e:	4c 89 c5             	mov    rbp,r8
    6021:	89 3c 88             	mov    DWORD PTR [rax+rcx*4],edi
    6024:	49 89 cb             	mov    r11,rcx
    6027:	48 63 0d ee 84 24 00 	movsxd rcx,DWORD PTR [rip+0x2484ee]        # 24e51c <pair+0x25c>
    602e:	42 89 0c 80          	mov    DWORD PTR [rax+r8*4],ecx
    6032:	4c 63 05 2b 84 24 00 	movsxd r8,DWORD PTR [rip+0x24842b]        # 24e464 <pair+0x1a4>
    6039:	44 8b 35 94 82 24 00 	mov    r14d,DWORD PTR [rip+0x248294]        # 24e2d4 <pair+0x14>
    6040:	46 89 34 80          	mov    DWORD PTR [rax+r8*4],r14d
    6044:	4c 63 05 1d 84 24 00 	movsxd r8,DWORD PTR [rip+0x24841d]        # 24e468 <pair+0x1a8>
    604b:	44 8b 35 d6 82 24 00 	mov    r14d,DWORD PTR [rip+0x2482d6]        # 24e328 <pair+0x68>
    6052:	46 89 34 80          	mov    DWORD PTR [rax+r8*4],r14d
    6056:	4c 63 05 0f 84 24 00 	movsxd r8,DWORD PTR [rip+0x24840f]        # 24e46c <pair+0x1ac>
    605d:	44 8b 35 c8 82 24 00 	mov    r14d,DWORD PTR [rip+0x2482c8]        # 24e32c <pair+0x6c>
    6064:	46 89 3c 80          	mov    DWORD PTR [rax+r8*4],r15d
    6068:	4c 63 05 11 84 24 00 	movsxd r8,DWORD PTR [rip+0x248411]        # 24e480 <pair+0x1c0>
    606f:	44 89 14 b0          	mov    DWORD PTR [rax+rsi*4],r10d
    6073:	48 63 35 fe 83 24 00 	movsxd rsi,DWORD PTR [rip+0x2483fe]        # 24e478 <pair+0x1b8>
    607a:	44 89 0c 90          	mov    DWORD PTR [rax+rdx*4],r9d
    607e:	48 63 15 f7 83 24 00 	movsxd rdx,DWORD PTR [rip+0x2483f7]        # 24e47c <pair+0x1bc>
    6085:	4d 89 c1             	mov    r9,r8
    6088:	89 34 b0             	mov    DWORD PTR [rax+rsi*4],esi
    608b:	48 63 35 3a 84 24 00 	movsxd rsi,DWORD PTR [rip+0x24843a]        # 24e4cc <pair+0x20c>
    6092:	49 89 d2             	mov    r10,rdx
    6095:	44 8b 3d 3c 82 24 00 	mov    r15d,DWORD PTR [rip+0x24823c]        # 24e2d8 <pair+0x18>
    609c:	89 34 90             	mov    DWORD PTR [rax+rdx*4],esi
    609f:	48 63 15 7a 84 24 00 	movsxd rdx,DWORD PTR [rip+0x24847a]        # 24e520 <pair+0x260>
    60a6:	42 89 14 80          	mov    DWORD PTR [rax+r8*4],edx
    60aa:	4c 63 05 07 84 24 00 	movsxd r8,DWORD PTR [rip+0x248407]        # 24e4b8 <pair+0x1f8>
    60b1:	46 89 3c 80          	mov    DWORD PTR [rax+r8*4],r15d
    60b5:	4c 63 05 00 84 24 00 	movsxd r8,DWORD PTR [rip+0x248400]        # 24e4bc <pair+0x1fc>
    60bc:	44 8b 3d bd 82 24 00 	mov    r15d,DWORD PTR [rip+0x2482bd]        # 24e380 <pair+0xc0>
    60c3:	46 89 34 80          	mov    DWORD PTR [rax+r8*4],r14d
    60c7:	4c 63 05 f2 83 24 00 	movsxd r8,DWORD PTR [rip+0x2483f2]        # 24e4c0 <pair+0x200>
    60ce:	46 89 3c 80          	mov    DWORD PTR [rax+r8*4],r15d
    60d2:	4d 63 c4             	movsxd r8,r12d
    60d5:	46 89 2c 80          	mov    DWORD PTR [rax+r8*4],r13d
    60d9:	44 89 1c b8          	mov    DWORD PTR [rax+rdi*4],r11d
    60dd:	48 63 3d ec 83 24 00 	movsxd rdi,DWORD PTR [rip+0x2483ec]        # 24e4d0 <pair+0x210>
    60e4:	44 89 14 b0          	mov    DWORD PTR [rax+rsi*4],r10d
    60e8:	89 3c b8             	mov    DWORD PTR [rax+rdi*4],edi
    60eb:	48 63 3d e2 83 24 00 	movsxd rdi,DWORD PTR [rip+0x2483e2]        # 24e4d4 <pair+0x214>
    60f2:	48 63 35 2b 84 24 00 	movsxd rsi,DWORD PTR [rip+0x24842b]        # 24e524 <pair+0x264>
    60f9:	44 8b 15 dc 81 24 00 	mov    r10d,DWORD PTR [rip+0x2481dc]        # 24e2dc <pair+0x1c>
    6100:	49 89 f8             	mov    r8,rdi
    6103:	44 8b 1d 26 82 24 00 	mov    r11d,DWORD PTR [rip+0x248226]        # 24e330 <pair+0x70>
    610a:	89 34 b8             	mov    DWORD PTR [rax+rdi*4],esi
    610d:	48 63 3d f8 83 24 00 	movsxd rdi,DWORD PTR [rip+0x2483f8]        # 24e50c <pair+0x24c>
    6114:	44 89 14 b8          	mov    DWORD PTR [rax+rdi*4],r10d
    6118:	48 63 3d f1 83 24 00 	movsxd rdi,DWORD PTR [rip+0x2483f1]        # 24e510 <pair+0x250>
    611f:	44 8b 15 5e 82 24 00 	mov    r10d,DWORD PTR [rip+0x24825e]        # 24e384 <pair+0xc4>
    6126:	44 89 1c b8          	mov    DWORD PTR [rax+rdi*4],r11d
    612a:	48 63 3d e3 83 24 00 	movsxd rdi,DWORD PTR [rip+0x2483e3]        # 24e514 <pair+0x254>
    6131:	44 8b 1d a0 82 24 00 	mov    r11d,DWORD PTR [rip+0x2482a0]        # 24e3d8 <pair+0x118>
    6138:	44 89 14 b8          	mov    DWORD PTR [rax+rdi*4],r10d
    613c:	48 63 3d d5 83 24 00 	movsxd rdi,DWORD PTR [rip+0x2483d5]        # 24e518 <pair+0x258>
    6143:	44 89 1c b8          	mov    DWORD PTR [rax+rdi*4],r11d
    6147:	89 2c 88             	mov    DWORD PTR [rax+rcx*4],ebp
    614a:	48 63 0d d7 83 24 00 	movsxd rcx,DWORD PTR [rip+0x2483d7]        # 24e528 <pair+0x268>
    6151:	44 89 0c 90          	mov    DWORD PTR [rax+rdx*4],r9d
    6155:	44 89 04 b0          	mov    DWORD PTR [rax+rsi*4],r8d
    6159:	89 0c 88             	mov    DWORD PTR [rax+rcx*4],ecx
    615c:	48 8b 04 24          	mov    rax,QWORD PTR [rsp]
    6160:	4c 8b 20             	mov    r12,QWORD PTR [rax]
    6163:	4c 89 e7             	mov    rdi,r12
    6166:	e8 25 d5 ff ff       	call   3690 <strlen@plt>
    616b:	8d 7c 00 04          	lea    edi,[rax+rax*1+0x4]
    616f:	48 89 c5             	mov    rbp,rax
    6172:	41 89 c5             	mov    r13d,eax
    6175:	e8 47 5d 02 00       	call   2bec1 <vrna_alloc>
    617a:	49 89 c7             	mov    r15,rax
    617d:	85 ed                	test   ebp,ebp
    617f:	74 3c                	je     61bd <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x73d>
    6181:	8b 15 91 2e 2e 00    	mov    edx,DWORD PTR [rip+0x2e2e91]        # 2e9018 <energy_set>
    6187:	41 be 01 00 00 00    	mov    r14d,0x1
    618d:	85 d2                	test   edx,edx
    618f:	0f 8e fb 04 00 00    	jle    6690 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xc10>
    6195:	0f 1f 00             	nop    DWORD PTR [rax]
    6198:	41 8d 46 ff          	lea    eax,[r14-0x1]
    619c:	41 0f be 3c 04       	movsx  edi,BYTE PTR [r12+rax*1]
    61a1:	e8 fa d8 ff ff       	call   3aa0 <toupper@plt>
    61a6:	44 89 f2             	mov    edx,r14d
    61a9:	41 83 c6 01          	add    r14d,0x1
    61ad:	0f be c0             	movsx  eax,al
    61b0:	83 e8 40             	sub    eax,0x40
    61b3:	66 41 89 04 57       	mov    WORD PTR [r15+rdx*2],ax
    61b8:	45 39 f5             	cmp    r13d,r14d
    61bb:	73 db                	jae    6198 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x718>
    61bd:	41 0f b7 4f 02       	movzx  ecx,WORD PTR [r15+0x2]
    61c2:	8d 45 01             	lea    eax,[rbp+0x1]
    61c5:	66 41 89 0c 47       	mov    WORD PTR [r15+rax*2],cx
    61ca:	48 8b 04 24          	mov    rax,QWORD PTR [rsp]
    61ce:	66 41 89 2f          	mov    WORD PTR [r15],bp
    61d2:	4c 8b 20             	mov    r12,QWORD PTR [rax]
    61d5:	4c 89 7b 28          	mov    QWORD PTR [rbx+0x28],r15
    61d9:	4c 89 e7             	mov    rdi,r12
    61dc:	e8 af d4 ff ff       	call   3690 <strlen@plt>
    61e1:	8d 7c 00 04          	lea    edi,[rax+rax*1+0x4]
    61e5:	89 04 24             	mov    DWORD PTR [rsp],eax
    61e8:	48 89 c5             	mov    rbp,rax
    61eb:	e8 d1 5c 02 00       	call   2bec1 <vrna_alloc>
    61f0:	49 89 c5             	mov    r13,rax
    61f3:	85 ed                	test   ebp,ebp
    61f5:	74 59                	je     6250 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x7d0>
    61f7:	8b 05 1b 2e 2e 00    	mov    eax,DWORD PTR [rip+0x2e2e1b]        # 2e9018 <energy_set>
    61fd:	41 bf 01 00 00 00    	mov    r15d,0x1
    6203:	4c 8d 35 b6 87 24 00 	lea    r14,[rip+0x2487b6]        # 24e9c0 <alias>
    620a:	85 c0                	test   eax,eax
    620c:	0f 8e 0e 04 00 00    	jle    6620 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xba0>
    6212:	44 89 f8             	mov    eax,r15d
    6215:	4d 89 ef             	mov    r15,r13
    6218:	41 89 c5             	mov    r13d,eax
    621b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    6220:	41 8d 45 ff          	lea    eax,[r13-0x1]
    6224:	41 0f be 3c 04       	movsx  edi,BYTE PTR [r12+rax*1]
    6229:	e8 72 d8 ff ff       	call   3aa0 <toupper@plt>
    622e:	0f be c0             	movsx  eax,al
    6231:	83 e8 40             	sub    eax,0x40
    6234:	48 98                	cdqe   
    6236:	41 0f b7 14 46       	movzx  edx,WORD PTR [r14+rax*2]
    623b:	44 89 e8             	mov    eax,r13d
    623e:	41 83 c5 01          	add    r13d,0x1
    6242:	66 41 89 14 47       	mov    WORD PTR [r15+rax*2],dx
    6247:	44 39 2c 24          	cmp    DWORD PTR [rsp],r13d
    624b:	73 d3                	jae    6220 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x7a0>
    624d:	4d 89 fd             	mov    r13,r15
    6250:	41 0f b7 4d 02       	movzx  ecx,WORD PTR [r13+0x2]
    6255:	8d 45 01             	lea    eax,[rbp+0x1]
    6258:	89 ed                	mov    ebp,ebp
    625a:	4c 8b 83 90 00 00 00 	mov    r8,QWORD PTR [rbx+0x90]
    6261:	66 41 89 4c 45 00    	mov    WORD PTR [r13+rax*2+0x0],cx
    6267:	41 0f b7 44 6d 00    	movzx  eax,WORD PTR [r13+rbp*2+0x0]
    626d:	48 8b 8b 88 00 00 00 	mov    rcx,QWORD PTR [rbx+0x88]
    6274:	66 41 89 45 00       	mov    WORD PTR [r13+0x0],ax
    6279:	8b 43 20             	mov    eax,DWORD PTR [rbx+0x20]
    627c:	4c 89 6b 30          	mov    QWORD PTR [rbx+0x30],r13
    6280:	8d 70 01             	lea    esi,[rax+0x1]
    6283:	4c 89 c0             	mov    rax,r8
    6286:	c7 44 24 40 80 96 98 00 	mov    DWORD PTR [rsp+0x40],0x989680
    628e:	48 63 f6             	movsxd rsi,esi
    6291:	48 29 c8             	sub    rax,rcx
    6294:	48 c7 83 a0 00 00 00 1f 00 00 00 	mov    QWORD PTR [rbx+0xa0],0x1f
    629f:	48 89 f2             	mov    rdx,rsi
    62a2:	48 c1 f8 02          	sar    rax,0x2
    62a6:	48 89 b3 a8 00 00 00 	mov    QWORD PTR [rbx+0xa8],rsi
    62ad:	48 c1 e2 05          	shl    rdx,0x5
    62b1:	48 29 f2             	sub    rdx,rsi
    62b4:	48 39 c2             	cmp    rdx,rax
    62b7:	0f 87 c3 04 00 00    	ja     6780 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xd00>
    62bd:	73 10                	jae    62cf <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x84f>
    62bf:	48 8d 04 91          	lea    rax,[rcx+rdx*4]
    62c3:	49 39 c0             	cmp    r8,rax
    62c6:	74 07                	je     62cf <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x84f>
    62c8:	48 89 83 90 00 00 00 	mov    QWORD PTR [rbx+0x90],rax
    62cf:	4c 8b 83 b8 00 00 00 	mov    r8,QWORD PTR [rbx+0xb8]
    62d6:	48 8b 93 b0 00 00 00 	mov    rdx,QWORD PTR [rbx+0xb0]
    62dd:	c7 44 24 40 00 00 00 00 	mov    DWORD PTR [rsp+0x40],0x0
    62e5:	4c 89 c0             	mov    rax,r8
    62e8:	48 29 d0             	sub    rax,rdx
    62eb:	48 c1 f8 02          	sar    rax,0x2
    62ef:	48 39 c6             	cmp    rsi,rax
    62f2:	0f 87 58 04 00 00    	ja     6750 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xcd0>
    62f8:	73 10                	jae    630a <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x88a>
    62fa:	48 8d 04 b2          	lea    rax,[rdx+rsi*4]
    62fe:	49 39 c0             	cmp    r8,rax
    6301:	74 07                	je     630a <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x88a>
    6303:	48 89 83 b8 00 00 00 	mov    QWORD PTR [rbx+0xb8],rax
    630a:	4c 8b 83 d0 00 00 00 	mov    r8,QWORD PTR [rbx+0xd0]
    6311:	48 8b 93 c8 00 00 00 	mov    rdx,QWORD PTR [rbx+0xc8]
    6318:	c7 44 24 40 80 96 98 00 	mov    DWORD PTR [rsp+0x40],0x989680
    6320:	4c 89 c0             	mov    rax,r8
    6323:	48 29 d0             	sub    rax,rdx
    6326:	48 c1 f8 02          	sar    rax,0x2
    632a:	48 39 c6             	cmp    rsi,rax
    632d:	0f 87 fd 04 00 00    	ja     6830 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xdb0>
    6333:	73 10                	jae    6345 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x8c5>
    6335:	48 8d 04 b2          	lea    rax,[rdx+rsi*4]
    6339:	49 39 c0             	cmp    r8,rax
    633c:	74 07                	je     6345 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x8c5>
    633e:	48 89 83 d0 00 00 00 	mov    QWORD PTR [rbx+0xd0],rax
    6345:	4c 8b 83 e8 00 00 00 	mov    r8,QWORD PTR [rbx+0xe8]
    634c:	48 8b 93 e0 00 00 00 	mov    rdx,QWORD PTR [rbx+0xe0]
    6353:	c7 44 24 40 80 96 98 00 	mov    DWORD PTR [rsp+0x40],0x989680
    635b:	4c 89 c0             	mov    rax,r8
    635e:	48 29 d0             	sub    rax,rdx
    6361:	48 c1 f8 02          	sar    rax,0x2
    6365:	48 39 f0             	cmp    rax,rsi
    6368:	0f 82 92 04 00 00    	jb     6800 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xd80>
    636e:	76 10                	jbe    6380 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x900>
    6370:	48 8d 04 b2          	lea    rax,[rdx+rsi*4]
    6374:	49 39 c0             	cmp    r8,rax
    6377:	74 07                	je     6380 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x900>
    6379:	48 89 83 e8 00 00 00 	mov    QWORD PTR [rbx+0xe8],rax
    6380:	4c 8b 83 00 01 00 00 	mov    r8,QWORD PTR [rbx+0x100]
    6387:	48 8b 93 f8 00 00 00 	mov    rdx,QWORD PTR [rbx+0xf8]
    638e:	c7 44 24 40 80 96 98 00 	mov    DWORD PTR [rsp+0x40],0x989680
    6396:	4c 89 c0             	mov    rax,r8
    6399:	48 29 d0             	sub    rax,rdx
    639c:	48 c1 f8 02          	sar    rax,0x2
    63a0:	48 39 f0             	cmp    rax,rsi
    63a3:	0f 82 27 04 00 00    	jb     67d0 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xd50>
    63a9:	76 10                	jbe    63bb <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x93b>
    63ab:	48 8d 04 b2          	lea    rax,[rdx+rsi*4]
    63af:	49 39 c0             	cmp    r8,rax
    63b2:	74 07                	je     63bb <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x93b>
    63b4:	48 89 83 00 01 00 00 	mov    QWORD PTR [rbx+0x100],rax
    63bb:	4c 8b 83 18 01 00 00 	mov    r8,QWORD PTR [rbx+0x118]
    63c2:	48 8b 93 10 01 00 00 	mov    rdx,QWORD PTR [rbx+0x110]
    63c9:	c7 44 24 40 80 96 98 00 	mov    DWORD PTR [rsp+0x40],0x989680
    63d1:	4c 89 c0             	mov    rax,r8
    63d4:	48 29 d0             	sub    rax,rdx
    63d7:	48 c1 f8 02          	sar    rax,0x2
    63db:	48 39 f0             	cmp    rax,rsi
    63de:	0f 82 c4 03 00 00    	jb     67a8 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xd28>
    63e4:	76 10                	jbe    63f6 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x976>
    63e6:	48 8d 04 b2          	lea    rax,[rdx+rsi*4]
    63ea:	49 39 c0             	cmp    r8,rax
    63ed:	74 07                	je     63f6 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x976>
    63ef:	48 89 83 18 01 00 00 	mov    QWORD PTR [rbx+0x118],rax
    63f6:	4c 8b ab 78 01 00 00 	mov    r13,QWORD PTR [rbx+0x178]
    63fd:	48 8b 93 70 01 00 00 	mov    rdx,QWORD PTR [rbx+0x170]
    6404:	48 b9 ab aa aa aa aa aa aa aa 	movabs rcx,0xaaaaaaaaaaaaaaab
    640e:	4c 89 e8             	mov    rax,r13
    6411:	48 29 d0             	sub    rax,rdx
    6414:	48 c1 f8 03          	sar    rax,0x3
    6418:	48 0f af c1          	imul   rax,rcx
    641c:	48 39 f0             	cmp    rax,rsi
    641f:	0f 82 0b 03 00 00    	jb     6730 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xcb0>
    6425:	0f 87 35 04 00 00    	ja     6860 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xde0>
    642b:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
    6430:	e8 6b 3e 00 00       	call   a2a0 <resize(TraceArrows&, unsigned long)>
    6435:	48 8b 74 24 08       	mov    rsi,QWORD PTR [rsp+0x8]
    643a:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
    643f:	e8 bc d2 ff ff       	call   3700 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@plt>
    6444:	48 8b 44 24 48       	mov    rax,QWORD PTR [rsp+0x48]
    6449:	64 48 33 04 25 28 00 00 00 	xor    rax,QWORD PTR fs:0x28
    6452:	0f 85 68 06 00 00    	jne    6ac0 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x1040>
    6458:	48 83 c4 58          	add    rsp,0x58
    645c:	5b                   	pop    rbx
    645d:	5d                   	pop    rbp
    645e:	41 5c                	pop    r12
    6460:	41 5d                	pop    r13
    6462:	41 5e                	pop    r14
    6464:	41 5f                	pop    r15
    6466:	c3                   	ret    
    6467:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    6470:	4d 85 e4             	test   r12,r12
    6473:	0f 85 4c 06 00 00    	jne    6ac5 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x1045>
    6479:	48 8b 44 24 20       	mov    rax,QWORD PTR [rsp+0x20]
    647e:	e9 77 f6 ff ff       	jmp    5afa <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x7a>
    6483:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    6488:	48 8d 35 31 7e 24 00 	lea    rsi,[rip+0x247e31]        # 24e2c0 <pair>
    648f:	b9 dc 00 00 00       	mov    ecx,0xdc
    6494:	31 c0                	xor    eax,eax
    6496:	48 89 f7             	mov    rdi,rsi
    6499:	f3 48 ab             	rep stos QWORD PTR es:[rdi],rax
    649c:	c7 07 00 00 00 00    	mov    DWORD PTR [rdi],0x0
    64a2:	83 fa 01             	cmp    edx,0x1
    64a5:	0f 84 1d 04 00 00    	je     68c8 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xe48>
    64ab:	83 fa 02             	cmp    edx,0x2
    64ae:	0f 84 0c 05 00 00    	je     69c0 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xf40>
    64b4:	83 fa 03             	cmp    edx,0x3
    64b7:	0f 85 e3 03 00 00    	jne    68a0 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xe20>
    64bd:	48 b8 03 00 02 00 01 00 04 00 	movabs rax,0x4000100020003
    64c7:	66 0f 6f 05 b1 b5 02 00 	movdqa xmm0,XMMWORD PTR [rip+0x2b5b1]        # 31a80 <Law_and_Order+0x40>
    64cf:	c7 05 43 7e 24 00 02 00 00 00 	mov    DWORD PTR [rip+0x247e43],0x2        # 24e31c <pair+0x5c>
    64d9:	48 89 05 02 85 24 00 	mov    QWORD PTR [rip+0x248502],rax        # 24e9e2 <alias+0x22>
    64e0:	c7 05 82 7e 24 00 01 00 00 00 	mov    DWORD PTR [rip+0x247e82],0x1        # 24e36c <pair+0xac>
    64ea:	c7 05 d8 7e 24 00 05 00 00 00 	mov    DWORD PTR [rip+0x247ed8],0x5        # 24e3cc <pair+0x10c>
    64f4:	c7 05 1e 7f 24 00 06 00 00 00 	mov    DWORD PTR [rip+0x247f1e],0x6        # 24e41c <pair+0x15c>
    64fe:	c7 05 74 7f 24 00 02 00 00 00 	mov    DWORD PTR [rip+0x247f74],0x2        # 24e47c <pair+0x1bc>
    6508:	c7 05 ba 7f 24 00 01 00 00 00 	mov    DWORD PTR [rip+0x247fba],0x1        # 24e4cc <pair+0x20c>
    6512:	c7 05 10 80 24 00 05 00 00 00 	mov    DWORD PTR [rip+0x248010],0x5        # 24e52c <pair+0x26c>
    651c:	c7 05 56 80 24 00 06 00 00 00 	mov    DWORD PTR [rip+0x248056],0x6        # 24e57c <pair+0x2bc>
    6526:	c7 05 ac 80 24 00 02 00 00 00 	mov    DWORD PTR [rip+0x2480ac],0x2        # 24e5dc <pair+0x31c>
    6530:	c7 05 f2 80 24 00 01 00 00 00 	mov    DWORD PTR [rip+0x2480f2],0x1        # 24e62c <pair+0x36c>
    653a:	c7 05 48 81 24 00 05 00 00 00 	mov    DWORD PTR [rip+0x248148],0x5        # 24e68c <pair+0x3cc>
    6544:	c7 05 8e 81 24 00 06 00 00 00 	mov    DWORD PTR [rip+0x24818e],0x6        # 24e6dc <pair+0x41c>
    654e:	c7 05 e4 81 24 00 02 00 00 00 	mov    DWORD PTR [rip+0x2481e4],0x2        # 24e73c <pair+0x47c>
    6558:	c7 05 2a 82 24 00 01 00 00 00 	mov    DWORD PTR [rip+0x24822a],0x1        # 24e78c <pair+0x4cc>
    6562:	c7 05 80 82 24 00 05 00 00 00 	mov    DWORD PTR [rip+0x248280],0x5        # 24e7ec <pair+0x52c>
    656c:	c7 05 c6 82 24 00 06 00 00 00 	mov    DWORD PTR [rip+0x2482c6],0x6        # 24e83c <pair+0x57c>
    6576:	c7 05 1c 83 24 00 02 00 00 00 	mov    DWORD PTR [rip+0x24831c],0x2        # 24e89c <pair+0x5dc>
    6580:	c7 05 62 83 24 00 01 00 00 00 	mov    DWORD PTR [rip+0x248362],0x1        # 24e8ec <pair+0x62c>
    658a:	c7 05 b8 83 24 00 05 00 00 00 	mov    DWORD PTR [rip+0x2483b8],0x5        # 24e94c <pair+0x68c>
    6594:	c7 05 fe 83 24 00 06 00 00 00 	mov    DWORD PTR [rip+0x2483fe],0x6        # 24e99c <pair+0x6dc>
    659e:	0f 11 05 1d 84 24 00 	movups XMMWORD PTR [rip+0x24841d],xmm0        # 24e9c2 <alias+0x2>
    65a5:	0f 11 05 26 84 24 00 	movups XMMWORD PTR [rip+0x248426],xmm0        # 24e9d2 <alias+0x12>
    65ac:	48 8d 35 0d 7d 24 00 	lea    rsi,[rip+0x247d0d]        # 24e2c0 <pair>
    65b3:	4c 8d 15 06 2c 1e 00 	lea    r10,[rip+0x1e2c06]        # 1e91c0 <rtype>
    65ba:	4c 8d 5e 54          	lea    r11,[rsi+0x54]
    65be:	48 89 f0             	mov    rax,rsi
    65c1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    65c8:	48 89 c2             	mov    rdx,rax
    65cb:	48 89 f1             	mov    rcx,rsi
    65ce:	48 8d b8 e4 06 00 00 	lea    rdi,[rax+0x6e4]
    65d5:	0f 1f 00             	nop    DWORD PTR [rax]
    65d8:	4c 63 01             	movsxd r8,DWORD PTR [rcx]
    65db:	44 8b 0a             	mov    r9d,DWORD PTR [rdx]
    65de:	48 83 c2 54          	add    rdx,0x54
    65e2:	48 83 c1 04          	add    rcx,0x4
    65e6:	47 89 0c 82          	mov    DWORD PTR [r10+r8*4],r9d
    65ea:	48 39 d7             	cmp    rdi,rdx
    65ed:	75 e9                	jne    65d8 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xb58>
    65ef:	48 83 c0 04          	add    rax,0x4
    65f3:	48 83 c6 54          	add    rsi,0x54
    65f7:	49 39 c3             	cmp    r11,rax
    65fa:	75 cc                	jne    65c8 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xb48>
    65fc:	e9 5b fb ff ff       	jmp    615c <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x6dc>
    6601:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    6608:	31 d2                	xor    edx,edx
    660a:	e9 a1 f7 ff ff       	jmp    5db0 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x330>
    660f:	90                   	nop
    6610:	45 31 ff             	xor    r15d,r15d
    6613:	e9 60 f7 ff ff       	jmp    5d78 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x2f8>
    6618:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    6620:	b9 01 00 00 00       	mov    ecx,0x1
    6625:	48 89 5c 24 38       	mov    QWORD PTR [rsp+0x38],rbx
    662a:	4c 8d 3d 0f b4 02 00 	lea    r15,[rip+0x2b40f]        # 31a40 <Law_and_Order>
    6631:	89 cb                	mov    ebx,ecx
    6633:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    6638:	8d 43 ff             	lea    eax,[rbx-0x1]
    663b:	41 0f be 3c 04       	movsx  edi,BYTE PTR [r12+rax*1]
    6640:	e8 5b d4 ff ff       	call   3aa0 <toupper@plt>
    6645:	4c 89 ff             	mov    rdi,r15
    6648:	0f be f0             	movsx  esi,al
    664b:	e8 10 d0 ff ff       	call   3660 <strchr@plt>
    6650:	31 d2                	xor    edx,edx
    6652:	48 85 c0             	test   rax,rax
    6655:	74 11                	je     6668 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xbe8>
    6657:	4c 29 f8             	sub    rax,r15
    665a:	83 f8 05             	cmp    eax,0x5
    665d:	7f 09                	jg     6668 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xbe8>
    665f:	98                   	cwde   
    6660:	ba 04 00 00 00       	mov    edx,0x4
    6665:	0f 45 d0             	cmovne edx,eax
    6668:	48 63 c2             	movsxd rax,edx
    666b:	41 0f b7 14 46       	movzx  edx,WORD PTR [r14+rax*2]
    6670:	89 d8                	mov    eax,ebx
    6672:	83 c3 01             	add    ebx,0x1
    6675:	66 41 89 54 45 00    	mov    WORD PTR [r13+rax*2+0x0],dx
    667b:	39 1c 24             	cmp    DWORD PTR [rsp],ebx
    667e:	73 b8                	jae    6638 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xbb8>
    6680:	48 8b 5c 24 38       	mov    rbx,QWORD PTR [rsp+0x38]
    6685:	e9 c6 fb ff ff       	jmp    6250 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x7d0>
    668a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    6690:	41 b8 01 00 00 00    	mov    r8d,0x1
    6696:	48 89 5c 24 38       	mov    QWORD PTR [rsp+0x38],rbx
    669b:	4c 8d 35 9e b3 02 00 	lea    r14,[rip+0x2b39e]        # 31a40 <Law_and_Order>
    66a2:	44 89 c3             	mov    ebx,r8d
    66a5:	0f 1f 00             	nop    DWORD PTR [rax]
    66a8:	8d 43 ff             	lea    eax,[rbx-0x1]
    66ab:	41 0f be 3c 04       	movsx  edi,BYTE PTR [r12+rax*1]
    66b0:	e8 eb d3 ff ff       	call   3aa0 <toupper@plt>
    66b5:	4c 89 f7             	mov    rdi,r14
    66b8:	0f be f0             	movsx  esi,al
    66bb:	e8 a0 cf ff ff       	call   3660 <strchr@plt>
    66c0:	31 d2                	xor    edx,edx
    66c2:	48 85 c0             	test   rax,rax
    66c5:	74 14                	je     66db <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xc5b>
    66c7:	4c 29 f0             	sub    rax,r14
    66ca:	b9 04 00 00 00       	mov    ecx,0x4
    66cf:	83 f8 05             	cmp    eax,0x5
    66d2:	0f 45 c8             	cmovne ecx,eax
    66d5:	83 f8 06             	cmp    eax,0x6
    66d8:	0f 4c d1             	cmovl  edx,ecx
    66db:	89 d8                	mov    eax,ebx
    66dd:	83 c3 01             	add    ebx,0x1
    66e0:	66 41 89 14 47       	mov    WORD PTR [r15+rax*2],dx
    66e5:	41 39 dd             	cmp    r13d,ebx
    66e8:	73 be                	jae    66a8 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xc28>
    66ea:	48 8b 5c 24 38       	mov    rbx,QWORD PTR [rsp+0x38]
    66ef:	e9 c9 fa ff ff       	jmp    61bd <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x73d>
    66f4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    66f8:	48 89 df             	mov    rdi,rbx
    66fb:	48 8d 74 24 40       	lea    rsi,[rsp+0x40]
    6700:	31 d2                	xor    edx,edx
    6702:	e8 79 d3 ff ff       	call   3a80 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long)@plt>
    6707:	48 89 03             	mov    QWORD PTR [rbx],rax
    670a:	48 89 c7             	mov    rdi,rax
    670d:	48 8b 44 24 40       	mov    rax,QWORD PTR [rsp+0x40]
    6712:	48 89 43 10          	mov    QWORD PTR [rbx+0x10],rax
    6716:	4c 89 e2             	mov    rdx,r12
    6719:	4c 89 ee             	mov    rsi,r13
    671c:	e8 7f d0 ff ff       	call   37a0 <memcpy@plt>
    6721:	4c 8b 64 24 40       	mov    r12,QWORD PTR [rsp+0x40]
    6726:	48 8b 03             	mov    rax,QWORD PTR [rbx]
    6729:	e9 cc f3 ff ff       	jmp    5afa <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x7a>
    672e:	66 90                	xchg   ax,ax
    6730:	48 29 c6             	sub    rsi,rax
    6733:	48 8d bb 70 01 00 00 	lea    rdi,[rbx+0x170]
    673a:	e8 11 f0 ff ff       	call   5750 <std::vector<std::vector<quatret, std::allocator<quatret> >, std::allocator<std::vector<quatret, std::allocator<quatret> > > >::_M_default_append(unsigned long)>
    673f:	8b 43 20             	mov    eax,DWORD PTR [rbx+0x20]
    6742:	8d 70 01             	lea    esi,[rax+0x1]
    6745:	48 63 f6             	movsxd rsi,esi
    6748:	e9 de fc ff ff       	jmp    642b <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x9ab>
    674d:	0f 1f 00             	nop    DWORD PTR [rax]
    6750:	48 29 c6             	sub    rsi,rax
    6753:	48 8d 4c 24 40       	lea    rcx,[rsp+0x40]
    6758:	48 8d bb b0 00 00 00 	lea    rdi,[rbx+0xb0]
    675f:	48 89 f2             	mov    rdx,rsi
    6762:	4c 89 c6             	mov    rsi,r8
    6765:	e8 86 eb ff ff       	call   52f0 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)>
    676a:	8b 43 20             	mov    eax,DWORD PTR [rbx+0x20]
    676d:	8d 70 01             	lea    esi,[rax+0x1]
    6770:	48 63 f6             	movsxd rsi,esi
    6773:	e9 92 fb ff ff       	jmp    630a <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x88a>
    6778:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    6780:	48 8d 4c 24 40       	lea    rcx,[rsp+0x40]
    6785:	48 29 c2             	sub    rdx,rax
    6788:	48 8d bb 88 00 00 00 	lea    rdi,[rbx+0x88]
    678f:	4c 89 c6             	mov    rsi,r8
    6792:	e8 59 eb ff ff       	call   52f0 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)>
    6797:	8b 43 20             	mov    eax,DWORD PTR [rbx+0x20]
    679a:	8d 70 01             	lea    esi,[rax+0x1]
    679d:	48 63 f6             	movsxd rsi,esi
    67a0:	e9 2a fb ff ff       	jmp    62cf <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x84f>
    67a5:	0f 1f 00             	nop    DWORD PTR [rax]
    67a8:	48 29 c6             	sub    rsi,rax
    67ab:	48 8d 4c 24 40       	lea    rcx,[rsp+0x40]
    67b0:	48 8d bb 10 01 00 00 	lea    rdi,[rbx+0x110]
    67b7:	48 89 f2             	mov    rdx,rsi
    67ba:	4c 89 c6             	mov    rsi,r8
    67bd:	e8 2e eb ff ff       	call   52f0 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)>
    67c2:	8b 43 20             	mov    eax,DWORD PTR [rbx+0x20]
    67c5:	8d 70 01             	lea    esi,[rax+0x1]
    67c8:	48 63 f6             	movsxd rsi,esi
    67cb:	e9 26 fc ff ff       	jmp    63f6 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x976>
    67d0:	48 29 c6             	sub    rsi,rax
    67d3:	48 8d 4c 24 40       	lea    rcx,[rsp+0x40]
    67d8:	48 8d bb f8 00 00 00 	lea    rdi,[rbx+0xf8]
    67df:	48 89 f2             	mov    rdx,rsi
    67e2:	4c 89 c6             	mov    rsi,r8
    67e5:	e8 06 eb ff ff       	call   52f0 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)>
    67ea:	8b 43 20             	mov    eax,DWORD PTR [rbx+0x20]
    67ed:	8d 70 01             	lea    esi,[rax+0x1]
    67f0:	48 63 f6             	movsxd rsi,esi
    67f3:	e9 c3 fb ff ff       	jmp    63bb <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x93b>
    67f8:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    6800:	48 29 c6             	sub    rsi,rax
    6803:	48 8d 4c 24 40       	lea    rcx,[rsp+0x40]
    6808:	48 8d bb e0 00 00 00 	lea    rdi,[rbx+0xe0]
    680f:	48 89 f2             	mov    rdx,rsi
    6812:	4c 89 c6             	mov    rsi,r8
    6815:	e8 d6 ea ff ff       	call   52f0 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)>
    681a:	8b 43 20             	mov    eax,DWORD PTR [rbx+0x20]
    681d:	8d 70 01             	lea    esi,[rax+0x1]
    6820:	48 63 f6             	movsxd rsi,esi
    6823:	e9 58 fb ff ff       	jmp    6380 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x900>
    6828:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    6830:	48 29 c6             	sub    rsi,rax
    6833:	48 8d 4c 24 40       	lea    rcx,[rsp+0x40]
    6838:	48 8d bb c8 00 00 00 	lea    rdi,[rbx+0xc8]
    683f:	48 89 f2             	mov    rdx,rsi
    6842:	4c 89 c6             	mov    rsi,r8
    6845:	e8 a6 ea ff ff       	call   52f0 <std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)>
    684a:	8b 43 20             	mov    eax,DWORD PTR [rbx+0x20]
    684d:	8d 70 01             	lea    esi,[rax+0x1]
    6850:	48 63 f6             	movsxd rsi,esi
    6853:	e9 ed fa ff ff       	jmp    6345 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x8c5>
    6858:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    6860:	48 8d 04 76          	lea    rax,[rsi+rsi*2]
    6864:	48 8d 2c c2          	lea    rbp,[rdx+rax*8]
    6868:	49 39 ed             	cmp    r13,rbp
    686b:	0f 84 ba fb ff ff    	je     642b <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x9ab>
    6871:	49 89 ec             	mov    r12,rbp
    6874:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    6878:	49 8b 3c 24          	mov    rdi,QWORD PTR [r12]
    687c:	48 85 ff             	test   rdi,rdi
    687f:	74 37                	je     68b8 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xe38>
    6881:	e8 5a cf ff ff       	call   37e0 <operator delete(void*)@plt>
    6886:	49 83 c4 18          	add    r12,0x18
    688a:	4d 39 e5             	cmp    r13,r12
    688d:	75 e9                	jne    6878 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xdf8>
    688f:	48 89 ab 78 01 00 00 	mov    QWORD PTR [rbx+0x178],rbp
    6896:	e9 a4 fe ff ff       	jmp    673f <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xcbf>
    689b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    68a0:	48 8d 3d 21 ae 02 00 	lea    rdi,[rip+0x2ae21]        # 316c8 <_IO_stdin_used+0x6c8>
    68a7:	31 c0                	xor    eax,eax
    68a9:	e8 3c 57 02 00       	call   2bfea <vrna_message_error>
    68ae:	e9 f9 fc ff ff       	jmp    65ac <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xb2c>
    68b3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    68b8:	49 83 c4 18          	add    r12,0x18
    68bc:	4d 39 e5             	cmp    r13,r12
    68bf:	75 b7                	jne    6878 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xdf8>
    68c1:	eb cc                	jmp    688f <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xe0f>
    68c3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    68c8:	66 0f 6f 05 90 b1 02 00 	movdqa xmm0,XMMWORD PTR [rip+0x2b190]        # 31a60 <Law_and_Order+0x20>
    68d0:	48 b8 03 00 02 00 03 00 02 00 	movabs rax,0x2000300020003
    68da:	c7 05 38 7a 24 00 02 00 00 00 	mov    DWORD PTR [rip+0x247a38],0x2        # 24e31c <pair+0x5c>
    68e4:	48 89 05 f7 80 24 00 	mov    QWORD PTR [rip+0x2480f7],rax        # 24e9e2 <alias+0x22>
    68eb:	c7 05 77 7a 24 00 01 00 00 00 	mov    DWORD PTR [rip+0x247a77],0x1        # 24e36c <pair+0xac>
    68f5:	c7 05 cd 7a 24 00 02 00 00 00 	mov    DWORD PTR [rip+0x247acd],0x2        # 24e3cc <pair+0x10c>
    68ff:	c7 05 13 7b 24 00 01 00 00 00 	mov    DWORD PTR [rip+0x247b13],0x1        # 24e41c <pair+0x15c>
    6909:	c7 05 69 7b 24 00 02 00 00 00 	mov    DWORD PTR [rip+0x247b69],0x2        # 24e47c <pair+0x1bc>
    6913:	c7 05 af 7b 24 00 01 00 00 00 	mov    DWORD PTR [rip+0x247baf],0x1        # 24e4cc <pair+0x20c>
    691d:	c7 05 05 7c 24 00 02 00 00 00 	mov    DWORD PTR [rip+0x247c05],0x2        # 24e52c <pair+0x26c>
    6927:	c7 05 4b 7c 24 00 01 00 00 00 	mov    DWORD PTR [rip+0x247c4b],0x1        # 24e57c <pair+0x2bc>
    6931:	c7 05 a1 7c 24 00 02 00 00 00 	mov    DWORD PTR [rip+0x247ca1],0x2        # 24e5dc <pair+0x31c>
    693b:	c7 05 e7 7c 24 00 01 00 00 00 	mov    DWORD PTR [rip+0x247ce7],0x1        # 24e62c <pair+0x36c>
    6945:	c7 05 3d 7d 24 00 02 00 00 00 	mov    DWORD PTR [rip+0x247d3d],0x2        # 24e68c <pair+0x3cc>
    694f:	c7 05 83 7d 24 00 01 00 00 00 	mov    DWORD PTR [rip+0x247d83],0x1        # 24e6dc <pair+0x41c>
    6959:	c7 05 d9 7d 24 00 02 00 00 00 	mov    DWORD PTR [rip+0x247dd9],0x2        # 24e73c <pair+0x47c>
    6963:	c7 05 1f 7e 24 00 01 00 00 00 	mov    DWORD PTR [rip+0x247e1f],0x1        # 24e78c <pair+0x4cc>
    696d:	c7 05 75 7e 24 00 02 00 00 00 	mov    DWORD PTR [rip+0x247e75],0x2        # 24e7ec <pair+0x52c>
    6977:	c7 05 bb 7e 24 00 01 00 00 00 	mov    DWORD PTR [rip+0x247ebb],0x1        # 24e83c <pair+0x57c>
    6981:	c7 05 11 7f 24 00 02 00 00 00 	mov    DWORD PTR [rip+0x247f11],0x2        # 24e89c <pair+0x5dc>
    698b:	c7 05 57 7f 24 00 01 00 00 00 	mov    DWORD PTR [rip+0x247f57],0x1        # 24e8ec <pair+0x62c>
    6995:	c7 05 ad 7f 24 00 02 00 00 00 	mov    DWORD PTR [rip+0x247fad],0x2        # 24e94c <pair+0x68c>
    699f:	c7 05 f3 7f 24 00 01 00 00 00 	mov    DWORD PTR [rip+0x247ff3],0x1        # 24e99c <pair+0x6dc>
    69a9:	0f 11 05 12 80 24 00 	movups XMMWORD PTR [rip+0x248012],xmm0        # 24e9c2 <alias+0x2>
    69b0:	0f 11 05 1b 80 24 00 	movups XMMWORD PTR [rip+0x24801b],xmm0        # 24e9d2 <alias+0x12>
    69b7:	e9 f0 fb ff ff       	jmp    65ac <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xb2c>
    69bc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    69c0:	66 0f 6f 05 a8 b0 02 00 	movdqa xmm0,XMMWORD PTR [rip+0x2b0a8]        # 31a70 <Law_and_Order+0x30>
    69c8:	48 b8 01 00 04 00 01 00 04 00 	movabs rax,0x4000100040001
    69d2:	c7 05 40 79 24 00 05 00 00 00 	mov    DWORD PTR [rip+0x247940],0x5        # 24e31c <pair+0x5c>
    69dc:	48 89 05 ff 7f 24 00 	mov    QWORD PTR [rip+0x247fff],rax        # 24e9e2 <alias+0x22>
    69e3:	c7 05 7f 79 24 00 06 00 00 00 	mov    DWORD PTR [rip+0x24797f],0x6        # 24e36c <pair+0xac>
    69ed:	c7 05 d5 79 24 00 05 00 00 00 	mov    DWORD PTR [rip+0x2479d5],0x5        # 24e3cc <pair+0x10c>
    69f7:	c7 05 1b 7a 24 00 06 00 00 00 	mov    DWORD PTR [rip+0x247a1b],0x6        # 24e41c <pair+0x15c>
    6a01:	c7 05 71 7a 24 00 05 00 00 00 	mov    DWORD PTR [rip+0x247a71],0x5        # 24e47c <pair+0x1bc>
    6a0b:	c7 05 b7 7a 24 00 06 00 00 00 	mov    DWORD PTR [rip+0x247ab7],0x6        # 24e4cc <pair+0x20c>
    6a15:	c7 05 0d 7b 24 00 05 00 00 00 	mov    DWORD PTR [rip+0x247b0d],0x5        # 24e52c <pair+0x26c>
    6a1f:	c7 05 53 7b 24 00 06 00 00 00 	mov    DWORD PTR [rip+0x247b53],0x6        # 24e57c <pair+0x2bc>
    6a29:	c7 05 a9 7b 24 00 05 00 00 00 	mov    DWORD PTR [rip+0x247ba9],0x5        # 24e5dc <pair+0x31c>
    6a33:	c7 05 ef 7b 24 00 06 00 00 00 	mov    DWORD PTR [rip+0x247bef],0x6        # 24e62c <pair+0x36c>
    6a3d:	c7 05 45 7c 24 00 05 00 00 00 	mov    DWORD PTR [rip+0x247c45],0x5        # 24e68c <pair+0x3cc>
    6a47:	c7 05 8b 7c 24 00 06 00 00 00 	mov    DWORD PTR [rip+0x247c8b],0x6        # 24e6dc <pair+0x41c>
    6a51:	c7 05 e1 7c 24 00 05 00 00 00 	mov    DWORD PTR [rip+0x247ce1],0x5        # 24e73c <pair+0x47c>
    6a5b:	c7 05 27 7d 24 00 06 00 00 00 	mov    DWORD PTR [rip+0x247d27],0x6        # 24e78c <pair+0x4cc>
    6a65:	c7 05 7d 7d 24 00 05 00 00 00 	mov    DWORD PTR [rip+0x247d7d],0x5        # 24e7ec <pair+0x52c>
    6a6f:	c7 05 c3 7d 24 00 06 00 00 00 	mov    DWORD PTR [rip+0x247dc3],0x6        # 24e83c <pair+0x57c>
    6a79:	c7 05 19 7e 24 00 05 00 00 00 	mov    DWORD PTR [rip+0x247e19],0x5        # 24e89c <pair+0x5dc>
    6a83:	c7 05 5f 7e 24 00 06 00 00 00 	mov    DWORD PTR [rip+0x247e5f],0x6        # 24e8ec <pair+0x62c>
    6a8d:	c7 05 b5 7e 24 00 05 00 00 00 	mov    DWORD PTR [rip+0x247eb5],0x5        # 24e94c <pair+0x68c>
    6a97:	c7 05 fb 7e 24 00 06 00 00 00 	mov    DWORD PTR [rip+0x247efb],0x6        # 24e99c <pair+0x6dc>
    6aa1:	0f 11 05 1a 7f 24 00 	movups XMMWORD PTR [rip+0x247f1a],xmm0        # 24e9c2 <alias+0x2>
    6aa8:	0f 11 05 23 7f 24 00 	movups XMMWORD PTR [rip+0x247f23],xmm0        # 24e9d2 <alias+0x12>
    6aaf:	e9 f8 fa ff ff       	jmp    65ac <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xb2c>
    6ab4:	48 8d 3d dd ab 02 00 	lea    rdi,[rip+0x2abdd]        # 31698 <_IO_stdin_used+0x698>
    6abb:	e8 c0 cc ff ff       	call   3780 <std::__throw_logic_error(char const*)@plt>
    6ac0:	e8 9b cd ff ff       	call   3860 <__stack_chk_fail@plt>
    6ac5:	48 8b 7c 24 20       	mov    rdi,QWORD PTR [rsp+0x20]
    6aca:	e9 47 fc ff ff       	jmp    6716 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0xc96>
    6acf:	f3 0f 1e fa          	endbr64 
    6ad3:	48 89 c5             	mov    rbp,rax
    6ad6:	e9 c3 00 00 00       	jmp    6b9e <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x111e>
    6adb:	f3 0f 1e fa          	endbr64 
    6adf:	48 89 c5             	mov    rbp,rax
    6ae2:	eb 34                	jmp    6b18 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x1098>
    6ae4:	f3 0f 1e fa          	endbr64 
    6ae8:	48 89 c5             	mov    rbp,rax
    6aeb:	e9 c5 00 00 00       	jmp    6bb5 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x1135>
    6af0:	49 8b 7d 00          	mov    rdi,QWORD PTR [r13+0x0]
    6af4:	48 85 ff             	test   rdi,rdi
    6af7:	74 05                	je     6afe <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x107e>
    6af9:	e8 e2 cc ff ff       	call   37e0 <operator delete(void*)@plt>
    6afe:	49 83 c5 20          	add    r13,0x20
    6b02:	4d 39 ec             	cmp    r12,r13
    6b05:	75 e9                	jne    6af0 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x1070>
    6b07:	48 8b bb 30 01 00 00 	mov    rdi,QWORD PTR [rbx+0x130]
    6b0e:	48 85 ff             	test   rdi,rdi
    6b11:	74 05                	je     6b18 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x1098>
    6b13:	e8 c8 cc ff ff       	call   37e0 <operator delete(void*)@plt>
    6b18:	48 8b bb 10 01 00 00 	mov    rdi,QWORD PTR [rbx+0x110]
    6b1f:	48 85 ff             	test   rdi,rdi
    6b22:	74 05                	je     6b29 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x10a9>
    6b24:	e8 b7 cc ff ff       	call   37e0 <operator delete(void*)@plt>
    6b29:	48 8b bb f8 00 00 00 	mov    rdi,QWORD PTR [rbx+0xf8]
    6b30:	48 85 ff             	test   rdi,rdi
    6b33:	74 05                	je     6b3a <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x10ba>
    6b35:	e8 a6 cc ff ff       	call   37e0 <operator delete(void*)@plt>
    6b3a:	48 8b bb e0 00 00 00 	mov    rdi,QWORD PTR [rbx+0xe0]
    6b41:	48 85 ff             	test   rdi,rdi
    6b44:	74 05                	je     6b4b <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x10cb>
    6b46:	e8 95 cc ff ff       	call   37e0 <operator delete(void*)@plt>
    6b4b:	48 8b bb c8 00 00 00 	mov    rdi,QWORD PTR [rbx+0xc8]
    6b52:	48 85 ff             	test   rdi,rdi
    6b55:	74 05                	je     6b5c <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x10dc>
    6b57:	e8 84 cc ff ff       	call   37e0 <operator delete(void*)@plt>
    6b5c:	48 8b bb b0 00 00 00 	mov    rdi,QWORD PTR [rbx+0xb0]
    6b63:	48 85 ff             	test   rdi,rdi
    6b66:	74 05                	je     6b6d <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x10ed>
    6b68:	e8 73 cc ff ff       	call   37e0 <operator delete(void*)@plt>
    6b6d:	48 8b bb 88 00 00 00 	mov    rdi,QWORD PTR [rbx+0x88]
    6b74:	48 85 ff             	test   rdi,rdi
    6b77:	74 05                	je     6b7e <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x10fe>
    6b79:	e8 62 cc ff ff       	call   37e0 <operator delete(void*)@plt>
    6b7e:	48 8b 7b 60          	mov    rdi,QWORD PTR [rbx+0x60]
    6b82:	48 39 7c 24 28       	cmp    QWORD PTR [rsp+0x28],rdi
    6b87:	74 05                	je     6b8e <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x110e>
    6b89:	e8 52 cc ff ff       	call   37e0 <operator delete(void*)@plt>
    6b8e:	48 8b 7b 40          	mov    rdi,QWORD PTR [rbx+0x40]
    6b92:	48 39 7c 24 30       	cmp    QWORD PTR [rsp+0x30],rdi
    6b97:	74 05                	je     6b9e <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x111e>
    6b99:	e8 42 cc ff ff       	call   37e0 <operator delete(void*)@plt>
    6b9e:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    6ba1:	48 39 7c 24 20       	cmp    QWORD PTR [rsp+0x20],rdi
    6ba6:	74 05                	je     6bad <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x112d>
    6ba8:	e8 33 cc ff ff       	call   37e0 <operator delete(void*)@plt>
    6bad:	48 89 ef             	mov    rdi,rbp
    6bb0:	e8 9b ce ff ff       	call   3a50 <_Unwind_Resume@plt>
    6bb5:	4c 8b a3 78 01 00 00 	mov    r12,QWORD PTR [rbx+0x178]
    6bbc:	4c 8b ab 70 01 00 00 	mov    r13,QWORD PTR [rbx+0x170]
    6bc3:	4d 39 ec             	cmp    r12,r13
    6bc6:	75 24                	jne    6bec <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x116c>
    6bc8:	48 8b bb 70 01 00 00 	mov    rdi,QWORD PTR [rbx+0x170]
    6bcf:	48 85 ff             	test   rdi,rdi
    6bd2:	74 05                	je     6bd9 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x1159>
    6bd4:	e8 07 cc ff ff       	call   37e0 <operator delete(void*)@plt>
    6bd9:	4c 8b a3 38 01 00 00 	mov    r12,QWORD PTR [rbx+0x138]
    6be0:	4c 8b ab 30 01 00 00 	mov    r13,QWORD PTR [rbx+0x130]
    6be7:	e9 16 ff ff ff       	jmp    6b02 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x1082>
    6bec:	49 8b 7d 00          	mov    rdi,QWORD PTR [r13+0x0]
    6bf0:	48 85 ff             	test   rdi,rdi
    6bf3:	74 05                	je     6bfa <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x117a>
    6bf5:	e8 e6 cb ff ff       	call   37e0 <operator delete(void*)@plt>
    6bfa:	49 83 c5 18          	add    r13,0x18
    6bfe:	eb c3                	jmp    6bc3 <SparseMFEFold::SparseMFEFold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x1143>

0000000000006c00 <int HairpinE<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, short*, short*, vrna_param_s*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, short* const&, short* const&, vrna_param_s* const&, int, int)>:
    6c00:	f3 0f 1e fa          	endbr64 
    6c04:	41 57                	push   r15
    6c06:	41 56                	push   r14
    6c08:	41 55                	push   r13
    6c0a:	4d 63 e8             	movsxd r13,r8d
    6c0d:	41 54                	push   r12
    6c0f:	41 bc 80 96 98 00    	mov    r12d,0x989680
    6c15:	55                   	push   rbp
    6c16:	53                   	push   rbx
    6c17:	48 83 ec 48          	sub    rsp,0x48
    6c1b:	48 8b 36             	mov    rsi,QWORD PTR [rsi]
    6c1e:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
    6c27:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
    6c2c:	31 c0                	xor    eax,eax
    6c2e:	49 63 c1             	movsxd rax,r9d
    6c31:	48 0f bf 1c 46       	movsx  rbx,WORD PTR [rsi+rax*2]
    6c36:	4a 0f bf 34 6e       	movsx  rsi,WORD PTR [rsi+r13*2]
    6c3b:	4c 8d 1c 00          	lea    r11,[rax+rax*1]
    6c3f:	48 8d 04 b6          	lea    rax,[rsi+rsi*4]
    6c43:	48 8d 04 86          	lea    rax,[rsi+rax*4]
    6c47:	48 8d 35 72 76 24 00 	lea    rsi,[rip+0x247672]        # 24e2c0 <pair>
    6c4e:	48 01 d8             	add    rax,rbx
    6c51:	8b 2c 86             	mov    ebp,DWORD PTR [rsi+rax*4]
    6c54:	40 84 ed             	test   bpl,bpl
    6c57:	0f 84 98 00 00 00    	je     6cf5 <int HairpinE<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, short*, short*, vrna_param_s*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, short* const&, short* const&, vrna_param_s* const&, int, int)+0xf5>
    6c5d:	4c 8b 31             	mov    r14,QWORD PTR [rcx]
    6c60:	45 29 c1             	sub    r9d,r8d
    6c63:	48 8b 0a             	mov    rcx,QWORD PTR [rdx]
    6c66:	4f 8d 54 2d 00       	lea    r10,[r13+r13*1+0x0]
    6c6b:	41 8d 59 ff          	lea    ebx,[r9-0x1]
    6c6f:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    6c72:	42 0f b7 54 19 fe    	movzx  edx,WORD PTR [rcx+r11*1-0x2]
    6c78:	46 0f b7 7c 11 02    	movzx  r15d,WORD PTR [rcx+r10*1+0x2]
    6c7e:	83 fb 1e             	cmp    ebx,0x1e
    6c81:	0f 8f 99 00 00 00    	jg     6d20 <int HairpinE<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, short*, short*, vrna_param_s*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, short* const&, short* const&, vrna_param_s* const&, int, int)+0x120>
    6c87:	48 63 cb             	movsxd rcx,ebx
    6c8a:	45 8b a4 8e 04 01 00 00 	mov    r12d,DWORD PTR [r14+rcx*4+0x104]
    6c92:	83 fb 02             	cmp    ebx,0x2
    6c95:	7e 5e                	jle    6cf5 <int HairpinE<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, short*, short*, vrna_param_s*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, short* const&, short* const&, vrna_param_s* const&, int, int)+0xf5>
    6c97:	4a 8d 44 28 ff       	lea    rax,[rax+r13*1-0x1]
    6c9c:	48 0f be ed          	movsx  rbp,bpl
    6ca0:	48 85 c0             	test   rax,rax
    6ca3:	74 2b                	je     6cd0 <int HairpinE<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, short*, short*, vrna_param_s*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, short* const&, short* const&, vrna_param_s* const&, int, int)+0xd0>
    6ca5:	41 8b 8e b0 35 03 00 	mov    ecx,DWORD PTR [r14+0x335b0]
    6cac:	85 c9                	test   ecx,ecx
    6cae:	74 20                	je     6cd0 <int HairpinE<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, short*, short*, vrna_param_s*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, short* const&, short* const&, vrna_param_s* const&, int, int)+0xd0>
    6cb0:	83 fb 04             	cmp    ebx,0x4
    6cb3:	0f 84 77 01 00 00    	je     6e30 <int HairpinE<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, short*, short*, vrna_param_s*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, short* const&, short* const&, vrna_param_s* const&, int, int)+0x230>
    6cb9:	83 fb 06             	cmp    ebx,0x6
    6cbc:	0f 84 0e 01 00 00    	je     6dd0 <int HairpinE<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, short*, short*, vrna_param_s*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, short* const&, short* const&, vrna_param_s* const&, int, int)+0x1d0>
    6cc2:	83 fb 03             	cmp    ebx,0x3
    6cc5:	0f 84 a5 00 00 00    	je     6d70 <int HairpinE<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, short*, short*, vrna_param_s*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, short* const&, short* const&, vrna_param_s* const&, int, int)+0x170>
    6ccb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    6cd0:	49 0f bf c7          	movsx  rax,r15w
    6cd4:	48 8d 4c ad 00       	lea    rcx,[rbp+rbp*4+0x0]
    6cd9:	48 0f bf d2          	movsx  rdx,dx
    6cdd:	48 8d 0c 89          	lea    rcx,[rcx+rcx*4]
    6ce1:	48 8d 04 80          	lea    rax,[rax+rax*4]
    6ce5:	48 01 c8             	add    rax,rcx
    6ce8:	48 8d 84 02 bc 03 00 00 	lea    rax,[rdx+rax*1+0x3bc]
    6cf0:	45 03 64 86 08       	add    r12d,DWORD PTR [r14+rax*4+0x8]
    6cf5:	48 8b 44 24 38       	mov    rax,QWORD PTR [rsp+0x38]
    6cfa:	64 48 33 04 25 28 00 00 00 	xor    rax,QWORD PTR fs:0x28
    6d03:	0f 85 a2 01 00 00    	jne    6eab <int HairpinE<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, short*, short*, vrna_param_s*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, short* const&, short* const&, vrna_param_s* const&, int, int)+0x2ab>
    6d09:	48 83 c4 48          	add    rsp,0x48
    6d0d:	44 89 e0             	mov    eax,r12d
    6d10:	5b                   	pop    rbx
    6d11:	5d                   	pop    rbp
    6d12:	41 5c                	pop    r12
    6d14:	41 5d                	pop    r13
    6d16:	41 5e                	pop    r14
    6d18:	41 5f                	pop    r15
    6d1a:	c3                   	ret    
    6d1b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    6d20:	66 0f ef c0          	pxor   xmm0,xmm0
    6d24:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    6d29:	f2 41 0f 10 8e 90 1d 03 00 	movsd  xmm1,QWORD PTR [r14+0x31d90]
    6d32:	89 54 24 14          	mov    DWORD PTR [rsp+0x14],edx
    6d36:	45 8b a6 7c 01 00 00 	mov    r12d,DWORD PTR [r14+0x17c]
    6d3d:	f2 0f 2a c3          	cvtsi2sd xmm0,ebx
    6d41:	f2 0f 5e 05 57 ad 02 00 	divsd  xmm0,QWORD PTR [rip+0x2ad57]        # 31aa0 <Law_and_Order+0x60>
    6d49:	f2 0f 11 4c 24 08    	movsd  QWORD PTR [rsp+0x8],xmm1
    6d4f:	e8 3c ca ff ff       	call   3790 <log@plt>
    6d54:	f2 0f 59 44 24 08    	mulsd  xmm0,QWORD PTR [rsp+0x8]
    6d5a:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
    6d5f:	8b 54 24 14          	mov    edx,DWORD PTR [rsp+0x14]
    6d63:	f2 0f 2c c8          	cvttsd2si ecx,xmm0
    6d67:	41 01 cc             	add    r12d,ecx
    6d6a:	e9 28 ff ff ff       	jmp    6c97 <int HairpinE<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, short*, short*, vrna_param_s*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, short* const&, short* const&, vrna_param_s* const&, int, int)+0x97>
    6d6f:	90                   	nop
    6d70:	8b 10                	mov    edx,DWORD PTR [rax]
    6d72:	49 8d 9e 18 27 03 00 	lea    rbx,[r14+0x32718]
    6d79:	0f b6 40 04          	movzx  eax,BYTE PTR [rax+0x4]
    6d7d:	48 8d 74 24 2f       	lea    rsi,[rsp+0x2f]
    6d82:	48 89 df             	mov    rdi,rbx
    6d85:	c6 44 24 34 00       	mov    BYTE PTR [rsp+0x34],0x0
    6d8a:	89 54 24 2f          	mov    DWORD PTR [rsp+0x2f],edx
    6d8e:	88 44 24 33          	mov    BYTE PTR [rsp+0x33],al
    6d92:	e8 69 c8 ff ff       	call   3600 <strstr@plt>
    6d97:	48 85 c0             	test   rax,rax
    6d9a:	0f 84 f6 00 00 00    	je     6e96 <int HairpinE<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, short*, short*, vrna_param_s*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, short* const&, short* const&, vrna_param_s* const&, int, int)+0x296>
    6da0:	48 ba ab aa aa aa aa aa aa 2a 	movabs rdx,0x2aaaaaaaaaaaaaab
    6daa:	48 29 d8             	sub    rax,rbx
    6dad:	48 89 c1             	mov    rcx,rax
    6db0:	48 f7 ea             	imul   rdx
    6db3:	48 89 c8             	mov    rax,rcx
    6db6:	48 c1 f8 3f          	sar    rax,0x3f
    6dba:	48 29 c2             	sub    rdx,rax
    6dbd:	45 8b a4 96 78 26 03 00 	mov    r12d,DWORD PTR [r14+rdx*4+0x32678]
    6dc5:	e9 2b ff ff ff       	jmp    6cf5 <int HairpinE<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, short*, short*, vrna_param_s*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, short* const&, short* const&, vrna_param_s* const&, int, int)+0xf5>
    6dca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    6dd0:	48 8b 00             	mov    rax,QWORD PTR [rax]
    6dd3:	49 8d 9e ac 28 03 00 	lea    rbx,[r14+0x328ac]
    6dda:	48 8d 74 24 2f       	lea    rsi,[rsp+0x2f]
    6ddf:	89 54 24 08          	mov    DWORD PTR [rsp+0x8],edx
    6de3:	48 89 df             	mov    rdi,rbx
    6de6:	c6 44 24 37 00       	mov    BYTE PTR [rsp+0x37],0x0
    6deb:	48 89 44 24 2f       	mov    QWORD PTR [rsp+0x2f],rax
    6df0:	e8 0b c8 ff ff       	call   3600 <strstr@plt>
    6df5:	8b 54 24 08          	mov    edx,DWORD PTR [rsp+0x8]
    6df9:	48 85 c0             	test   rax,rax
    6dfc:	0f 84 ce fe ff ff    	je     6cd0 <int HairpinE<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, short*, short*, vrna_param_s*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, short* const&, short* const&, vrna_param_s* const&, int, int)+0xd0>
    6e02:	48 ba 72 1c c7 71 1c c7 71 1c 	movabs rdx,0x1c71c71c71c71c72
    6e0c:	48 29 d8             	sub    rax,rbx
    6e0f:	48 89 c1             	mov    rcx,rax
    6e12:	48 f7 ea             	imul   rdx
    6e15:	48 89 c8             	mov    rax,rcx
    6e18:	48 c1 f8 3f          	sar    rax,0x3f
    6e1c:	48 29 c2             	sub    rdx,rax
    6e1f:	45 8b a4 96 0c 28 03 00 	mov    r12d,DWORD PTR [r14+rdx*4+0x3280c]
    6e27:	e9 c9 fe ff ff       	jmp    6cf5 <int HairpinE<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, short*, short*, vrna_param_s*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, short* const&, short* const&, vrna_param_s* const&, int, int)+0xf5>
    6e2c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    6e30:	8b 08                	mov    ecx,DWORD PTR [rax]
    6e32:	49 8d 9e fc 20 03 00 	lea    rbx,[r14+0x320fc]
    6e39:	0f b7 40 04          	movzx  eax,WORD PTR [rax+0x4]
    6e3d:	89 54 24 08          	mov    DWORD PTR [rsp+0x8],edx
    6e41:	48 8d 74 24 2f       	lea    rsi,[rsp+0x2f]
    6e46:	48 89 df             	mov    rdi,rbx
    6e49:	c6 44 24 35 00       	mov    BYTE PTR [rsp+0x35],0x0
    6e4e:	89 4c 24 2f          	mov    DWORD PTR [rsp+0x2f],ecx
    6e52:	66 89 44 24 33       	mov    WORD PTR [rsp+0x33],ax
    6e57:	e8 a4 c7 ff ff       	call   3600 <strstr@plt>
    6e5c:	8b 54 24 08          	mov    edx,DWORD PTR [rsp+0x8]
    6e60:	48 85 c0             	test   rax,rax
    6e63:	0f 84 67 fe ff ff    	je     6cd0 <int HairpinE<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, short*, short*, vrna_param_s*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, short* const&, short* const&, vrna_param_s* const&, int, int)+0xd0>
    6e69:	48 ba 25 49 92 24 49 92 24 49 	movabs rdx,0x4924924924924925
    6e73:	48 29 d8             	sub    rax,rbx
    6e76:	48 89 c1             	mov    rcx,rax
    6e79:	48 f7 ea             	imul   rdx
    6e7c:	48 89 c8             	mov    rax,rcx
    6e7f:	48 c1 f8 3f          	sar    rax,0x3f
    6e83:	48 d1 fa             	sar    rdx,1
    6e86:	48 29 c2             	sub    rdx,rax
    6e89:	45 8b a4 96 dc 1d 03 00 	mov    r12d,DWORD PTR [r14+rdx*4+0x31ddc]
    6e91:	e9 5f fe ff ff       	jmp    6cf5 <int HairpinE<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, short*, short*, vrna_param_s*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, short* const&, short* const&, vrna_param_s* const&, int, int)+0xf5>
    6e96:	83 fd 02             	cmp    ebp,0x2
    6e99:	0f 8e 56 fe ff ff    	jle    6cf5 <int HairpinE<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, short*, short*, vrna_param_s*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, short* const&, short* const&, vrna_param_s* const&, int, int)+0xf5>
    6e9f:	45 03 a6 d4 1d 03 00 	add    r12d,DWORD PTR [r14+0x31dd4]
    6ea6:	e9 4a fe ff ff       	jmp    6cf5 <int HairpinE<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, short*, short*, vrna_param_s*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, short* const&, short* const&, vrna_param_s* const&, int, int)+0xf5>
    6eab:	e8 b0 c9 ff ff       	call   3860 <__stack_chk_fail@plt>

0000000000006eb0 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)>:
    6eb0:	f3 0f 1e fa          	endbr64 
    6eb4:	41 57                	push   r15
    6eb6:	4d 63 c0             	movsxd r8,r8d
    6eb9:	41 56                	push   r14
    6ebb:	4e 8d 1c 85 00 00 00 00 	lea    r11,[r8*4+0x0]
    6ec3:	41 55                	push   r13
    6ec5:	4d 63 e9             	movsxd r13,r9d
    6ec8:	41 54                	push   r12
    6eca:	55                   	push   rbp
    6ecb:	53                   	push   rbx
    6ecc:	48 8b 44 24 38       	mov    rax,QWORD PTR [rsp+0x38]
    6ed1:	48 8b 09             	mov    rcx,QWORD PTR [rcx]
    6ed4:	4c 8b 10             	mov    r10,QWORD PTR [rax]
    6ed7:	44 8b a1 ac 35 03 00 	mov    r12d,DWORD PTR [rcx+0x335ac]
    6ede:	43 8b 04 82          	mov    eax,DWORD PTR [r10+r8*4]
    6ee2:	83 f8 ff             	cmp    eax,0xffffffff
    6ee5:	7c 19                	jl     6f00 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x50>
    6ee7:	44 39 c8             	cmp    eax,r9d
    6eea:	74 1b                	je     6f07 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x57>
    6eec:	b8 80 96 98 00       	mov    eax,0x989680
    6ef1:	5b                   	pop    rbx
    6ef2:	5d                   	pop    rbp
    6ef3:	41 5c                	pop    r12
    6ef5:	41 5d                	pop    r13
    6ef7:	41 5e                	pop    r14
    6ef9:	41 5f                	pop    r15
    6efb:	c3                   	ret    
    6efc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    6f00:	43 83 3c aa ff       	cmp    DWORD PTR [r10+r13*4],0xffffffff
    6f05:	7d e0                	jge    6ee7 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x37>
    6f07:	48 8b 12             	mov    rdx,QWORD PTR [rdx]
    6f0a:	4b 8d 2c 00          	lea    rbp,[r8+r8*1]
    6f0e:	4b 8d 5c 2d 00       	lea    rbx,[r13+r13*1+0x0]
    6f13:	4e 0f bf 34 42       	movsx  r14,WORD PTR [rdx+r8*2]
    6f18:	4e 0f bf 04 6a       	movsx  r8,WORD PTR [rdx+r13*2]
    6f1d:	4b 8d 04 80          	lea    rax,[r8+r8*4]
    6f21:	49 8d 04 80          	lea    rax,[r8+rax*4]
    6f25:	4c 8d 05 94 73 24 00 	lea    r8,[rip+0x247394]        # 24e2c0 <pair>
    6f2c:	4c 01 f0             	add    rax,r14
    6f2f:	45 8b 04 80          	mov    r8d,DWORD PTR [r8+rax*4]
    6f33:	41 83 fc 01          	cmp    r12d,0x1
    6f37:	0f 84 d3 00 00 00    	je     7010 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x160>
    6f3d:	41 83 fc 02          	cmp    r12d,0x2
    6f41:	74 4d                	je     6f90 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0xe0>
    6f43:	45 85 e4             	test   r12d,r12d
    6f46:	75 a4                	jne    6eec <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x3c>
    6f48:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    6f4b:	41 83 e9 01          	sub    r9d,0x1
    6f4f:	4d 63 c9             	movsxd r9,r9d
    6f52:	42 8b 04 88          	mov    eax,DWORD PTR [rax+r9*4]
    6f56:	3d 80 96 98 00       	cmp    eax,0x989680
    6f5b:	74 94                	je     6ef1 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x41>
    6f5d:	49 0f be d0          	movsx  rdx,r8b
    6f61:	41 80 f8 02          	cmp    r8b,0x2
    6f65:	7e 07                	jle    6f6e <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0xbe>
    6f67:	44 8b a1 d4 1d 03 00 	mov    r12d,DWORD PTR [rcx+0x31dd4]
    6f6e:	44 03 a4 91 9c 1d 03 00 	add    r12d,DWORD PTR [rcx+rdx*4+0x31d9c]
    6f76:	44 03 a1 bc 1d 03 00 	add    r12d,DWORD PTR [rcx+0x31dbc]
    6f7d:	5b                   	pop    rbx
    6f7e:	44 01 e0             	add    eax,r12d
    6f81:	5d                   	pop    rbp
    6f82:	41 5c                	pop    r12
    6f84:	41 5d                	pop    r13
    6f86:	41 5e                	pop    r14
    6f88:	41 5f                	pop    r15
    6f8a:	c3                   	ret    
    6f8b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    6f90:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    6f93:	41 83 e9 01          	sub    r9d,0x1
    6f97:	4d 63 c9             	movsxd r9,r9d
    6f9a:	42 8b 04 88          	mov    eax,DWORD PTR [rax+r9*4]
    6f9e:	3d 80 96 98 00       	cmp    eax,0x989680
    6fa3:	0f 84 48 ff ff ff    	je     6ef1 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x41>
    6fa9:	48 0f be 74 2a 02    	movsx  rsi,BYTE PTR [rdx+rbp*1+0x2]
    6faf:	45 0f be c0          	movsx  r8d,r8b
    6fb3:	48 0f be 54 1a fe    	movsx  rdx,BYTE PTR [rdx+rbx*1-0x2]
    6fb9:	85 f6                	test   esi,esi
    6fbb:	0f 88 4f 02 00 00    	js     7210 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x360>
    6fc1:	85 d2                	test   edx,edx
    6fc3:	0f 88 67 02 00 00    	js     7230 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x380>
    6fc9:	49 63 f8             	movsxd rdi,r8d
    6fcc:	48 8d 14 92          	lea    rdx,[rdx+rdx*4]
    6fd0:	4c 8d 0c bf          	lea    r9,[rdi+rdi*4]
    6fd4:	4f 8d 0c 89          	lea    r9,[r9+r9*4]
    6fd8:	4c 01 ca             	add    rdx,r9
    6fdb:	48 8d 94 16 84 04 00 00 	lea    rdx,[rsi+rdx*1+0x484]
    6fe3:	8b 54 91 08          	mov    edx,DWORD PTR [rcx+rdx*4+0x8]
    6fe7:	41 83 f8 02          	cmp    r8d,0x2
    6feb:	7e 06                	jle    6ff3 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x143>
    6fed:	03 91 d4 1d 03 00    	add    edx,DWORD PTR [rcx+0x31dd4]
    6ff3:	03 94 b9 9c 1d 03 00 	add    edx,DWORD PTR [rcx+rdi*4+0x31d9c]
    6ffa:	03 91 bc 1d 03 00    	add    edx,DWORD PTR [rcx+0x31dbc]
    7000:	5b                   	pop    rbx
    7001:	01 d0                	add    eax,edx
    7003:	5d                   	pop    rbp
    7004:	41 5c                	pop    r12
    7006:	41 5d                	pop    r13
    7008:	41 5e                	pop    r14
    700a:	41 5f                	pop    r15
    700c:	c3                   	ret    
    700d:	0f 1f 00             	nop    DWORD PTR [rax]
    7010:	4c 8b 2f             	mov    r13,QWORD PTR [rdi]
    7013:	41 8d 79 ff          	lea    edi,[r9-0x1]
    7017:	48 63 ff             	movsxd rdi,edi
    701a:	41 8b 44 bd 00       	mov    eax,DWORD PTR [r13+rdi*4+0x0]
    701f:	3d 80 96 98 00       	cmp    eax,0x989680
    7024:	74 23                	je     7049 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x199>
    7026:	4d 0f be f0          	movsx  r14,r8b
    702a:	45 31 e4             	xor    r12d,r12d
    702d:	41 80 f8 02          	cmp    r8b,0x2
    7031:	0f 8f 41 01 00 00    	jg     7178 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x2c8>
    7037:	46 03 a4 b1 9c 1d 03 00 	add    r12d,DWORD PTR [rcx+r14*4+0x31d9c]
    703f:	44 03 a1 bc 1d 03 00 	add    r12d,DWORD PTR [rcx+0x31dbc]
    7046:	44 01 e0             	add    eax,r12d
    7049:	47 8b 64 1a 04       	mov    r12d,DWORD PTR [r10+r11*1+0x4]
    704e:	41 bb 80 96 98 00    	mov    r11d,0x989680
    7054:	45 85 e4             	test   r12d,r12d
    7057:	78 27                	js     7080 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x1d0>
    7059:	41 8b 3c ba          	mov    edi,DWORD PTR [r10+rdi*4]
    705d:	41 39 c3             	cmp    r11d,eax
    7060:	41 0f 4e c3          	cmovle eax,r11d
    7064:	85 ff                	test   edi,edi
    7066:	0f 88 94 00 00 00    	js     7100 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x250>
    706c:	41 39 c3             	cmp    r11d,eax
    706f:	41 0f 4e c3          	cmovle eax,r11d
    7073:	e9 79 fe ff ff       	jmp    6ef1 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x41>
    7078:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    7080:	4c 8b 1e             	mov    r11,QWORD PTR [rsi]
    7083:	45 8b 1c bb          	mov    r11d,DWORD PTR [r11+rdi*4]
    7087:	41 81 fb 80 96 98 00 	cmp    r11d,0x989680
    708e:	74 c9                	je     7059 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x1a9>
    7090:	4c 0f be 74 2a 02    	movsx  r14,BYTE PTR [rdx+rbp*1+0x2]
    7096:	4d 0f be f8          	movsx  r15,r8b
    709a:	44 89 7c 24 f4       	mov    DWORD PTR [rsp-0xc],r15d
    709f:	45 85 f6             	test   r14d,r14d
    70a2:	0f 88 a8 01 00 00    	js     7250 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x3a0>
    70a8:	4c 89 74 24 f8       	mov    QWORD PTR [rsp-0x8],r14
    70ad:	4f 8d 34 bf          	lea    r14,[r15+r15*4]
    70b1:	4c 89 7c 24 e8       	mov    QWORD PTR [rsp-0x18],r15
    70b6:	4c 8b 7c 24 f8       	mov    r15,QWORD PTR [rsp-0x8]
    70bb:	4f 8d b4 37 74 05 00 00 	lea    r14,[r15+r14*1+0x574]
    70c3:	46 8b 74 b1 08       	mov    r14d,DWORD PTR [rcx+r14*4+0x8]
    70c8:	83 7c 24 f4 02       	cmp    DWORD PTR [rsp-0xc],0x2
    70cd:	7e 07                	jle    70d6 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x226>
    70cf:	44 03 b1 d4 1d 03 00 	add    r14d,DWORD PTR [rcx+0x31dd4]
    70d6:	4c 8b 7c 24 e8       	mov    r15,QWORD PTR [rsp-0x18]
    70db:	46 03 b4 b9 9c 1d 03 00 	add    r14d,DWORD PTR [rcx+r15*4+0x31d9c]
    70e3:	44 03 b1 bc 1d 03 00 	add    r14d,DWORD PTR [rcx+0x31dbc]
    70ea:	44 03 b1 98 1d 03 00 	add    r14d,DWORD PTR [rcx+0x31d98]
    70f1:	45 01 f3             	add    r11d,r14d
    70f4:	e9 60 ff ff ff       	jmp    7059 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x1a9>
    70f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    7100:	41 83 e9 02          	sub    r9d,0x2
    7104:	4d 63 c9             	movsxd r9,r9d
    7107:	43 8b 7c 8d 00       	mov    edi,DWORD PTR [r13+r9*4+0x0]
    710c:	81 ff 80 96 98 00    	cmp    edi,0x989680
    7112:	74 4d                	je     7161 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x2b1>
    7114:	4c 0f be 54 1a fe    	movsx  r10,BYTE PTR [rdx+rbx*1-0x2]
    711a:	45 0f be e8          	movsx  r13d,r8b
    711e:	45 85 d2             	test   r10d,r10d
    7121:	0f 88 41 01 00 00    	js     7268 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x3b8>
    7127:	4d 63 dd             	movsxd r11,r13d
    712a:	4f 8d 34 9b          	lea    r14,[r11+r11*4]
    712e:	4f 8d 94 32 4c 05 00 00 	lea    r10,[r10+r14*1+0x54c]
    7136:	46 8b 54 91 08       	mov    r10d,DWORD PTR [rcx+r10*4+0x8]
    713b:	41 83 fd 02          	cmp    r13d,0x2
    713f:	7e 07                	jle    7148 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x298>
    7141:	44 03 91 d4 1d 03 00 	add    r10d,DWORD PTR [rcx+0x31dd4]
    7148:	46 03 94 99 9c 1d 03 00 	add    r10d,DWORD PTR [rcx+r11*4+0x31d9c]
    7150:	44 03 91 bc 1d 03 00 	add    r10d,DWORD PTR [rcx+0x31dbc]
    7157:	44 03 91 98 1d 03 00 	add    r10d,DWORD PTR [rcx+0x31d98]
    715e:	44 01 d7             	add    edi,r10d
    7161:	39 c7                	cmp    edi,eax
    7163:	0f 4e c7             	cmovle eax,edi
    7166:	45 85 e4             	test   r12d,r12d
    7169:	78 1d                	js     7188 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x2d8>
    716b:	39 f8                	cmp    eax,edi
    716d:	0f 4f c7             	cmovg  eax,edi
    7170:	e9 7c fd ff ff       	jmp    6ef1 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x41>
    7175:	0f 1f 00             	nop    DWORD PTR [rax]
    7178:	44 8b a1 d4 1d 03 00 	mov    r12d,DWORD PTR [rcx+0x31dd4]
    717f:	e9 b3 fe ff ff       	jmp    7037 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x187>
    7184:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    7188:	48 8b 36             	mov    rsi,QWORD PTR [rsi]
    718b:	42 8b 34 8e          	mov    esi,DWORD PTR [rsi+r9*4]
    718f:	81 fe 80 96 98 00    	cmp    esi,0x989680
    7195:	0f 84 e2 00 00 00    	je     727d <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x3cd>
    719b:	0f be 7c 2a 02       	movsx  edi,BYTE PTR [rdx+rbp*1+0x2]
    71a0:	48 0f be 54 1a fe    	movsx  rdx,BYTE PTR [rdx+rbx*1-0x2]
    71a6:	45 0f be c0          	movsx  r8d,r8b
    71aa:	85 d2                	test   edx,edx
    71ac:	0f 88 f4 00 00 00    	js     72a6 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x3f6>
    71b2:	85 ff                	test   edi,edi
    71b4:	0f 88 d0 00 00 00    	js     728a <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x3da>
    71ba:	4c 63 cf             	movsxd r9,edi
    71bd:	49 63 f8             	movsxd rdi,r8d
    71c0:	48 8d 14 92          	lea    rdx,[rdx+rdx*4]
    71c4:	4c 8d 14 bf          	lea    r10,[rdi+rdi*4]
    71c8:	4f 8d 14 92          	lea    r10,[r10+r10*4]
    71cc:	4c 01 d2             	add    rdx,r10
    71cf:	49 8d 94 11 84 04 00 00 	lea    rdx,[r9+rdx*1+0x484]
    71d7:	8b 54 91 08          	mov    edx,DWORD PTR [rcx+rdx*4+0x8]
    71db:	41 83 f8 02          	cmp    r8d,0x2
    71df:	7e 06                	jle    71e7 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x337>
    71e1:	03 91 d4 1d 03 00    	add    edx,DWORD PTR [rcx+0x31dd4]
    71e7:	03 94 b9 9c 1d 03 00 	add    edx,DWORD PTR [rcx+rdi*4+0x31d9c]
    71ee:	03 91 bc 1d 03 00    	add    edx,DWORD PTR [rcx+0x31dbc]
    71f4:	8b 89 98 1d 03 00    	mov    ecx,DWORD PTR [rcx+0x31d98]
    71fa:	44 8d 1c 4a          	lea    r11d,[rdx+rcx*2]
    71fe:	41 01 f3             	add    r11d,esi
    7201:	41 39 c3             	cmp    r11d,eax
    7204:	41 0f 4e c3          	cmovle eax,r11d
    7208:	e9 e4 fc ff ff       	jmp    6ef1 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x41>
    720d:	0f 1f 00             	nop    DWORD PTR [rax]
    7210:	85 d2                	test   edx,edx
    7212:	78 1c                	js     7230 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x380>
    7214:	49 63 f8             	movsxd rdi,r8d
    7217:	48 8d 34 bf          	lea    rsi,[rdi+rdi*4]
    721b:	48 8d 94 32 4c 05 00 00 	lea    rdx,[rdx+rsi*1+0x54c]
    7223:	8b 54 91 08          	mov    edx,DWORD PTR [rcx+rdx*4+0x8]
    7227:	e9 bb fd ff ff       	jmp    6fe7 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x137>
    722c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    7230:	85 f6                	test   esi,esi
    7232:	78 3f                	js     7273 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x3c3>
    7234:	49 63 f8             	movsxd rdi,r8d
    7237:	48 8d 14 bf          	lea    rdx,[rdi+rdi*4]
    723b:	48 8d 94 16 74 05 00 00 	lea    rdx,[rsi+rdx*1+0x574]
    7243:	8b 54 91 08          	mov    edx,DWORD PTR [rcx+rdx*4+0x8]
    7247:	e9 9b fd ff ff       	jmp    6fe7 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x137>
    724c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    7250:	4c 63 7c 24 f4       	movsxd r15,DWORD PTR [rsp-0xc]
    7255:	45 31 f6             	xor    r14d,r14d
    7258:	4c 89 7c 24 e8       	mov    QWORD PTR [rsp-0x18],r15
    725d:	e9 66 fe ff ff       	jmp    70c8 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x218>
    7262:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    7268:	45 31 d2             	xor    r10d,r10d
    726b:	4d 63 dd             	movsxd r11,r13d
    726e:	e9 c8 fe ff ff       	jmp    713b <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x28b>
    7273:	31 d2                	xor    edx,edx
    7275:	49 63 f8             	movsxd rdi,r8d
    7278:	e9 6a fd ff ff       	jmp    6fe7 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x137>
    727d:	3d 80 96 98 00       	cmp    eax,0x989680
    7282:	0f 4f c6             	cmovg  eax,esi
    7285:	e9 67 fc ff ff       	jmp    6ef1 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x41>
    728a:	85 d2                	test   edx,edx
    728c:	78 18                	js     72a6 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x3f6>
    728e:	49 63 f8             	movsxd rdi,r8d
    7291:	4c 8d 0c bf          	lea    r9,[rdi+rdi*4]
    7295:	4a 8d 94 0a 4c 05 00 00 	lea    rdx,[rdx+r9*1+0x54c]
    729d:	8b 54 91 08          	mov    edx,DWORD PTR [rcx+rdx*4+0x8]
    72a1:	e9 35 ff ff ff       	jmp    71db <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x32b>
    72a6:	85 ff                	test   edi,edi
    72a8:	78 1b                	js     72c5 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x415>
    72aa:	48 63 d7             	movsxd rdx,edi
    72ad:	49 63 f8             	movsxd rdi,r8d
    72b0:	4c 8d 0c bf          	lea    r9,[rdi+rdi*4]
    72b4:	4a 8d 94 0a 74 05 00 00 	lea    rdx,[rdx+r9*1+0x574]
    72bc:	8b 54 91 08          	mov    edx,DWORD PTR [rcx+rdx*4+0x8]
    72c0:	e9 16 ff ff ff       	jmp    71db <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x32b>
    72c5:	31 d2                	xor    edx,edx
    72c7:	49 63 f8             	movsxd rdi,r8d
    72ca:	e9 0c ff ff ff       	jmp    71db <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)+0x32b>
    72cf:	90                   	nop

00000000000072d0 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)>:
    72d0:	f3 0f 1e fa          	endbr64 
    72d4:	41 57                	push   r15
    72d6:	41 56                	push   r14
    72d8:	41 55                	push   r13
    72da:	4d 89 c5             	mov    r13,r8
    72dd:	41 54                	push   r12
    72df:	55                   	push   rbp
    72e0:	4c 89 cd             	mov    rbp,r9
    72e3:	53                   	push   rbx
    72e4:	48 83 ec 38          	sub    rsp,0x38
    72e8:	48 63 5c 24 70       	movsxd rbx,DWORD PTR [rsp+0x70]
    72ed:	4c 63 7c 24 78       	movsxd r15,DWORD PTR [rsp+0x78]
    72f2:	48 89 34 24          	mov    QWORD PTR [rsp],rsi
    72f6:	48 8b 84 24 90 00 00 00 	mov    rax,QWORD PTR [rsp+0x90]
    72fe:	48 89 54 24 08       	mov    QWORD PTR [rsp+0x8],rdx
    7303:	48 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],rcx
    7308:	49 8b 09             	mov    rcx,QWORD PTR [r9]
    730b:	4d 89 fc             	mov    r12,r15
    730e:	4c 8d 1c 1b          	lea    r11,[rbx+rbx*1]
    7312:	48 8b 30             	mov    rsi,QWORD PTR [rax]
    7315:	4f 8d 04 3f          	lea    r8,[r15+r15*1]
    7319:	4c 8d 14 9d 00 00 00 00 	lea    r10,[rbx*4+0x0]
    7321:	8b 81 ac 35 03 00    	mov    eax,DWORD PTR [rcx+0x335ac]
    7327:	8b 14 9e             	mov    edx,DWORD PTR [rsi+rbx*4]
    732a:	83 fa ff             	cmp    edx,0xffffffff
    732d:	7c 31                	jl     7360 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x90>
    732f:	41 be 80 96 98 00    	mov    r14d,0x989680
    7335:	44 39 e2             	cmp    edx,r12d
    7338:	0f 84 d2 02 00 00    	je     7610 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x340>
    733e:	83 f8 01             	cmp    eax,0x1
    7341:	0f 84 e1 00 00 00    	je     7428 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x158>
    7347:	48 83 c4 38          	add    rsp,0x38
    734b:	44 89 f0             	mov    eax,r14d
    734e:	5b                   	pop    rbx
    734f:	5d                   	pop    rbp
    7350:	41 5c                	pop    r12
    7352:	41 5d                	pop    r13
    7354:	41 5e                	pop    r14
    7356:	41 5f                	pop    r15
    7358:	c3                   	ret    
    7359:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    7360:	42 83 3c be ff       	cmp    DWORD PTR [rsi+r15*4],0xffffffff
    7365:	7d c8                	jge    732f <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x5f>
    7367:	83 7c 24 70 01       	cmp    DWORD PTR [rsp+0x70],0x1
    736c:	49 8b 55 00          	mov    rdx,QWORD PTR [r13+0x0]
    7370:	be ff ff ff ff       	mov    esi,0xffffffff
    7375:	44 8b 37             	mov    r14d,DWORD PTR [rdi]
    7378:	7e 06                	jle    7380 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0xb0>
    737a:	42 0f be 74 1a fe    	movsx  esi,BYTE PTR [rdx+r11*1-0x2]
    7380:	41 b9 ff ff ff ff    	mov    r9d,0xffffffff
    7386:	44 3b a4 24 88 00 00 00 	cmp    r12d,DWORD PTR [rsp+0x88]
    738e:	7d 06                	jge    7396 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0xc6>
    7390:	46 0f b6 4c 02 02    	movzx  r9d,BYTE PTR [rdx+r8*1+0x2]
    7396:	41 81 fe 80 96 98 00 	cmp    r14d,0x989680
    739d:	74 9f                	je     733e <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x6e>
    739f:	4a 0f bf 3c 7a       	movsx  rdi,WORD PTR [rdx+r15*2]
    73a4:	48 0f bf 14 5a       	movsx  rdx,WORD PTR [rdx+rbx*2]
    73a9:	4c 89 54 24 28       	mov    QWORD PTR [rsp+0x28],r10
    73ae:	4c 89 44 24 20       	mov    QWORD PTR [rsp+0x20],r8
    73b3:	48 89 7c 24 18       	mov    QWORD PTR [rsp+0x18],rdi
    73b8:	48 8d 3c 92          	lea    rdi,[rdx+rdx*4]
    73bc:	48 8d 14 ba          	lea    rdx,[rdx+rdi*4]
    73c0:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
    73c5:	4c 89 5c 24 18       	mov    QWORD PTR [rsp+0x18],r11
    73ca:	48 01 d7             	add    rdi,rdx
    73cd:	48 8d 15 ec 6e 24 00 	lea    rdx,[rip+0x246eec]        # 24e2c0 <pair>
    73d4:	0f be 3c ba          	movsx  edi,BYTE PTR [rdx+rdi*4]
    73d8:	83 f8 02             	cmp    eax,0x2
    73db:	0f 84 ff 02 00 00    	je     76e0 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x410>
    73e1:	ba ff ff ff ff       	mov    edx,0xffffffff
    73e6:	be ff ff ff ff       	mov    esi,0xffffffff
    73eb:	e8 fb 6d 00 00       	call   e1eb <vrna_E_ext_stem>
    73f0:	4c 8b 54 24 28       	mov    r10,QWORD PTR [rsp+0x28]
    73f5:	4c 8b 44 24 20       	mov    r8,QWORD PTR [rsp+0x20]
    73fa:	4c 8b 5c 24 18       	mov    r11,QWORD PTR [rsp+0x18]
    73ff:	41 01 c6             	add    r14d,eax
    7402:	48 8b 4d 00          	mov    rcx,QWORD PTR [rbp+0x0]
    7406:	b8 80 96 98 00       	mov    eax,0x989680
    740b:	41 81 fe 80 96 98 00 	cmp    r14d,0x989680
    7412:	44 0f 4f f0          	cmovg  r14d,eax
    7416:	8b 81 ac 35 03 00    	mov    eax,DWORD PTR [rcx+0x335ac]
    741c:	83 f8 01             	cmp    eax,0x1
    741f:	0f 85 22 ff ff ff    	jne    7347 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x77>
    7425:	0f 1f 00             	nop    DWORD PTR [rax]
    7428:	48 8b 84 24 90 00 00 00 	mov    rax,QWORD PTR [rsp+0x90]
    7430:	49 8b 7d 00          	mov    rdi,QWORD PTR [r13+0x0]
    7434:	48 8b 00             	mov    rax,QWORD PTR [rax]
    7437:	42 8b 74 10 04       	mov    esi,DWORD PTR [rax+r10*1+0x4]
    743c:	8b 14 98             	mov    edx,DWORD PTR [rax+rbx*4]
    743f:	83 fe ff             	cmp    esi,0xffffffff
    7442:	0f 8c 90 01 00 00    	jl     75d8 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x308>
    7448:	44 39 e6             	cmp    esi,r12d
    744b:	0f 84 92 01 00 00    	je     75e3 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x313>
    7451:	4a 0f bf 4c 07 fe    	movsx  rcx,WORD PTR [rdi+r8*1-0x2]
    7457:	4d 8d 48 fe          	lea    r9,[r8-0x2]
    745b:	83 fa ff             	cmp    edx,0xffffffff
    745e:	0f 8d 8d 01 00 00    	jge    75f1 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x321>
    7464:	42 83 7c b8 fc ff    	cmp    DWORD PTR [rax+r15*4-0x4],0xffffffff
    746a:	4a 8d 34 bd 00 00 00 00 	lea    rsi,[r15*4+0x0]
    7472:	0f 8d 79 01 00 00    	jge    75f1 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x321>
    7478:	8b 34 30             	mov    esi,DWORD PTR [rax+rsi*1]
    747b:	85 f6                	test   esi,esi
    747d:	0f 89 ad 00 00 00    	jns    7530 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x260>
    7483:	41 8d 44 24 ff       	lea    eax,[r12-0x1]
    7488:	2b 44 24 70          	sub    eax,DWORD PTR [rsp+0x70]
    748c:	41 b8 80 96 98 00    	mov    r8d,0x989680
    7492:	83 f8 03             	cmp    eax,0x3
    7495:	7e 68                	jle    74ff <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x22f>
    7497:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
    749c:	44 8b 00             	mov    r8d,DWORD PTR [rax]
    749f:	41 81 f8 80 96 98 00 	cmp    r8d,0x989680
    74a6:	74 57                	je     74ff <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x22f>
    74a8:	48 0f bf 04 5f       	movsx  rax,WORD PTR [rdi+rbx*2]
    74ad:	42 0f be 14 7f       	movsx  edx,BYTE PTR [rdi+r15*2]
    74b2:	44 89 44 24 20       	mov    DWORD PTR [rsp+0x20],r8d
    74b7:	4c 89 4c 24 18       	mov    QWORD PTR [rsp+0x18],r9
    74bc:	48 8d 34 80          	lea    rsi,[rax+rax*4]
    74c0:	4c 89 54 24 08       	mov    QWORD PTR [rsp+0x8],r10
    74c5:	48 8d 04 b0          	lea    rax,[rax+rsi*4]
    74c9:	be ff ff ff ff       	mov    esi,0xffffffff
    74ce:	4c 89 1c 24          	mov    QWORD PTR [rsp],r11
    74d2:	48 01 c8             	add    rax,rcx
    74d5:	48 8d 0d e4 6d 24 00 	lea    rcx,[rip+0x246de4]        # 24e2c0 <pair>
    74dc:	0f be 3c 81          	movsx  edi,BYTE PTR [rcx+rax*4]
    74e0:	48 8b 4d 00          	mov    rcx,QWORD PTR [rbp+0x0]
    74e4:	e8 02 6d 00 00       	call   e1eb <vrna_E_ext_stem>
    74e9:	44 8b 44 24 20       	mov    r8d,DWORD PTR [rsp+0x20]
    74ee:	4c 8b 4c 24 18       	mov    r9,QWORD PTR [rsp+0x18]
    74f3:	4c 8b 54 24 08       	mov    r10,QWORD PTR [rsp+0x8]
    74f8:	4c 8b 1c 24          	mov    r11,QWORD PTR [rsp]
    74fc:	41 01 c0             	add    r8d,eax
    74ff:	45 39 f0             	cmp    r8d,r14d
    7502:	44 89 f2             	mov    edx,r14d
    7505:	41 0f 4e d0          	cmovle edx,r8d
    7509:	0f 8e 01 02 00 00    	jle    7710 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x440>
    750f:	49 8b 7d 00          	mov    rdi,QWORD PTR [r13+0x0]
    7513:	48 8b 84 24 90 00 00 00 	mov    rax,QWORD PTR [rsp+0x90]
    751b:	41 89 d6             	mov    r14d,edx
    751e:	4a 0f bf 0c 0f       	movsx  rcx,WORD PTR [rdi+r9*1]
    7523:	48 8b 00             	mov    rax,QWORD PTR [rax]
    7526:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    7530:	42 8b 54 10 04       	mov    edx,DWORD PTR [rax+r10*1+0x4]
    7535:	83 fa ff             	cmp    edx,0xffffffff
    7538:	0f 8c ea 00 00 00    	jl     7628 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x358>
    753e:	41 8d 74 24 ff       	lea    esi,[r12-0x1]
    7543:	39 f2                	cmp    edx,esi
    7545:	0f 85 fc fd ff ff    	jne    7347 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x77>
    754b:	8b 14 98             	mov    edx,DWORD PTR [rax+rbx*4]
    754e:	85 d2                	test   edx,edx
    7550:	0f 89 f1 fd ff ff    	jns    7347 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x77>
    7556:	42 8b 04 b8          	mov    eax,DWORD PTR [rax+r15*4]
    755a:	85 c0                	test   eax,eax
    755c:	0f 89 e5 fd ff ff    	jns    7347 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x77>
    7562:	41 83 ec 01          	sub    r12d,0x1
    7566:	44 2b 64 24 70       	sub    r12d,DWORD PTR [rsp+0x70]
    756b:	41 bd 80 96 98 00    	mov    r13d,0x989680
    7571:	41 83 fc 04          	cmp    r12d,0x4
    7575:	7e 42                	jle    75b9 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x2e9>
    7577:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
    757c:	44 8b 28             	mov    r13d,DWORD PTR [rax]
    757f:	41 81 fd 80 96 98 00 	cmp    r13d,0x989680
    7586:	74 31                	je     75b9 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x2e9>
    7588:	4a 0f bf 44 1f 02    	movsx  rax,WORD PTR [rdi+r11*1+0x2]
    758e:	42 0f be 14 7f       	movsx  edx,BYTE PTR [rdi+r15*2]
    7593:	0f be 34 5f          	movsx  esi,BYTE PTR [rdi+rbx*2]
    7597:	48 8d 3c 80          	lea    rdi,[rax+rax*4]
    759b:	48 8d 04 b8          	lea    rax,[rax+rdi*4]
    759f:	48 01 c8             	add    rax,rcx
    75a2:	48 8d 0d 17 6d 24 00 	lea    rcx,[rip+0x246d17]        # 24e2c0 <pair>
    75a9:	0f be 3c 81          	movsx  edi,BYTE PTR [rcx+rax*4]
    75ad:	48 8b 4d 00          	mov    rcx,QWORD PTR [rbp+0x0]
    75b1:	e8 35 6c 00 00       	call   e1eb <vrna_E_ext_stem>
    75b6:	41 01 c5             	add    r13d,eax
    75b9:	45 39 ee             	cmp    r14d,r13d
    75bc:	44 89 e8             	mov    eax,r13d
    75bf:	41 0f 4e c6          	cmovle eax,r14d
    75c3:	0f 8d 57 01 00 00    	jge    7720 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x450>
    75c9:	41 89 c6             	mov    r14d,eax
    75cc:	e9 76 fd ff ff       	jmp    7347 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x77>
    75d1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    75d8:	42 83 3c b8 ff       	cmp    DWORD PTR [rax+r15*4],0xffffffff
    75dd:	0f 8d 65 fe ff ff    	jge    7448 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x178>
    75e3:	85 d2                	test   edx,edx
    75e5:	78 59                	js     7640 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x370>
    75e7:	4a 0f bf 4c 07 fe    	movsx  rcx,WORD PTR [rdi+r8*1-0x2]
    75ed:	4d 8d 48 fe          	lea    r9,[r8-0x2]
    75f1:	41 8d 74 24 ff       	lea    esi,[r12-0x1]
    75f6:	39 d6                	cmp    esi,edx
    75f8:	0f 85 32 ff ff ff    	jne    7530 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x260>
    75fe:	4a 8d 34 bd 00 00 00 00 	lea    rsi,[r15*4+0x0]
    7606:	e9 6d fe ff ff       	jmp    7478 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x1a8>
    760b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    7610:	8b 54 24 70          	mov    edx,DWORD PTR [rsp+0x70]
    7614:	42 39 14 be          	cmp    DWORD PTR [rsi+r15*4],edx
    7618:	0f 85 20 fd ff ff    	jne    733e <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x6e>
    761e:	e9 44 fd ff ff       	jmp    7367 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x97>
    7623:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    7628:	42 83 7c b8 fc ff    	cmp    DWORD PTR [rax+r15*4-0x4],0xffffffff
    762e:	0f 8d 0a ff ff ff    	jge    753e <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x26e>
    7634:	e9 12 ff ff ff       	jmp    754b <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x27b>
    7639:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    7640:	44 89 e0             	mov    eax,r12d
    7643:	2b 44 24 70          	sub    eax,DWORD PTR [rsp+0x70]
    7647:	41 b9 80 96 98 00    	mov    r9d,0x989680
    764d:	83 f8 04             	cmp    eax,0x4
    7650:	7e 68                	jle    76ba <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x3ea>
    7652:	48 8b 04 24          	mov    rax,QWORD PTR [rsp]
    7656:	44 8b 08             	mov    r9d,DWORD PTR [rax]
    7659:	41 81 f9 80 96 98 00 	cmp    r9d,0x989680
    7660:	74 58                	je     76ba <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x3ea>
    7662:	4a 0f bf 44 1f 02    	movsx  rax,WORD PTR [rdi+r11*1+0x2]
    7668:	4a 0f bf 14 7f       	movsx  rdx,WORD PTR [rdi+r15*2]
    766d:	44 89 4c 24 28       	mov    DWORD PTR [rsp+0x28],r9d
    7672:	0f be 34 5f          	movsx  esi,BYTE PTR [rdi+rbx*2]
    7676:	4c 89 54 24 20       	mov    QWORD PTR [rsp+0x20],r10
    767b:	48 8d 3c 80          	lea    rdi,[rax+rax*4]
    767f:	4c 89 44 24 18       	mov    QWORD PTR [rsp+0x18],r8
    7684:	48 8d 04 b8          	lea    rax,[rax+rdi*4]
    7688:	4c 89 1c 24          	mov    QWORD PTR [rsp],r11
    768c:	48 01 d0             	add    rax,rdx
    768f:	48 8d 15 2a 6c 24 00 	lea    rdx,[rip+0x246c2a]        # 24e2c0 <pair>
    7696:	0f be 3c 82          	movsx  edi,BYTE PTR [rdx+rax*4]
    769a:	ba ff ff ff ff       	mov    edx,0xffffffff
    769f:	e8 47 6b 00 00       	call   e1eb <vrna_E_ext_stem>
    76a4:	44 8b 4c 24 28       	mov    r9d,DWORD PTR [rsp+0x28]
    76a9:	4c 8b 54 24 20       	mov    r10,QWORD PTR [rsp+0x20]
    76ae:	4c 8b 44 24 18       	mov    r8,QWORD PTR [rsp+0x18]
    76b3:	4c 8b 1c 24          	mov    r11,QWORD PTR [rsp]
    76b7:	41 01 c1             	add    r9d,eax
    76ba:	45 39 ce             	cmp    r14d,r9d
    76bd:	44 89 c9             	mov    ecx,r9d
    76c0:	41 0f 4e ce          	cmovle ecx,r14d
    76c4:	7d 3a                	jge    7700 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x430>
    76c6:	48 8b 84 24 90 00 00 00 	mov    rax,QWORD PTR [rsp+0x90]
    76ce:	49 8b 7d 00          	mov    rdi,QWORD PTR [r13+0x0]
    76d2:	41 89 ce             	mov    r14d,ecx
    76d5:	48 8b 00             	mov    rax,QWORD PTR [rax]
    76d8:	8b 14 98             	mov    edx,DWORD PTR [rax+rbx*4]
    76db:	e9 71 fd ff ff       	jmp    7451 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x181>
    76e0:	41 0f be d1          	movsx  edx,r9b
    76e4:	e8 02 6b 00 00       	call   e1eb <vrna_E_ext_stem>
    76e9:	4c 8b 5c 24 18       	mov    r11,QWORD PTR [rsp+0x18]
    76ee:	4c 8b 44 24 20       	mov    r8,QWORD PTR [rsp+0x20]
    76f3:	4c 8b 54 24 28       	mov    r10,QWORD PTR [rsp+0x28]
    76f8:	41 01 c6             	add    r14d,eax
    76fb:	e9 02 fd ff ff       	jmp    7402 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x132>
    7700:	48 8b 84 24 80 00 00 00 	mov    rax,QWORD PTR [rsp+0x80]
    7708:	c6 00 01             	mov    BYTE PTR [rax],0x1
    770b:	eb b9                	jmp    76c6 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x3f6>
    770d:	0f 1f 00             	nop    DWORD PTR [rax]
    7710:	48 8b 84 24 80 00 00 00 	mov    rax,QWORD PTR [rsp+0x80]
    7718:	c6 00 02             	mov    BYTE PTR [rax],0x2
    771b:	e9 ef fd ff ff       	jmp    750f <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x23f>
    7720:	48 8b 9c 24 80 00 00 00 	mov    rbx,QWORD PTR [rsp+0x80]
    7728:	41 89 c6             	mov    r14d,eax
    772b:	c6 03 03             	mov    BYTE PTR [rbx],0x3
    772e:	e9 14 fc ff ff       	jmp    7347 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)+0x77>
    7733:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    773d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000007740 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)>:
    7740:	f3 0f 1e fa          	endbr64 
    7744:	41 57                	push   r15
    7746:	4d 89 cf             	mov    r15,r9
    7749:	41 56                	push   r14
    774b:	41 55                	push   r13
    774d:	41 54                	push   r12
    774f:	55                   	push   rbp
    7750:	53                   	push   rbx
    7751:	4d 8b 08             	mov    r9,QWORD PTR [r8]
    7754:	48 89 54 24 c8       	mov    QWORD PTR [rsp-0x38],rdx
    7759:	48 63 54 24 38       	movsxd rdx,DWORD PTR [rsp+0x38]
    775e:	48 89 4c 24 d0       	mov    QWORD PTR [rsp-0x30],rcx
    7763:	48 63 4c 24 40       	movsxd rcx,DWORD PTR [rsp+0x40]
    7768:	48 8d 04 12          	lea    rax,[rdx+rdx*1]
    776c:	48 89 74 24 c0       	mov    QWORD PTR [rsp-0x40],rsi
    7771:	41 0f b7 1c 51       	movzx  ebx,WORD PTR [r9+rdx*2]
    7776:	48 89 44 24 d8       	mov    QWORD PTR [rsp-0x28],rax
    777b:	48 8d 04 09          	lea    rax,[rcx+rcx*1]
    777f:	49 89 ce             	mov    r14,rcx
    7782:	48 89 44 24 e0       	mov    QWORD PTR [rsp-0x20],rax
    7787:	41 0f bf 04 49       	movsx  eax,WORD PTR [r9+rcx*2]
    778c:	89 44 24 b8          	mov    DWORD PTR [rsp-0x48],eax
    7790:	41 89 c3             	mov    r11d,eax
    7793:	48 8b 44 24 58       	mov    rax,QWORD PTR [rsp+0x58]
    7798:	4c 8b 10             	mov    r10,QWORD PTR [rax]
    779b:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
    77a3:	48 89 44 24 e8       	mov    QWORD PTR [rsp-0x18],rax
    77a8:	41 8b 34 92          	mov    esi,DWORD PTR [r10+rdx*4]
    77ac:	83 fe ff             	cmp    esi,0xffffffff
    77af:	0f 8c 3b 02 00 00    	jl     79f0 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x2b0>
    77b5:	44 39 f6             	cmp    esi,r14d
    77b8:	74 26                	je     77e0 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0xa0>
    77ba:	49 8b 3f             	mov    rdi,QWORD PTR [r15]
    77bd:	b8 80 96 98 00       	mov    eax,0x989680
    77c2:	83 bf ac 35 03 00 01 	cmp    DWORD PTR [rdi+0x335ac],0x1
    77c9:	0f 84 c1 00 00 00    	je     7890 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x150>
    77cf:	5b                   	pop    rbx
    77d0:	5d                   	pop    rbp
    77d1:	41 5c                	pop    r12
    77d3:	41 5d                	pop    r13
    77d5:	41 5e                	pop    r14
    77d7:	41 5f                	pop    r15
    77d9:	c3                   	ret    
    77da:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    77e0:	8b 07                	mov    eax,DWORD PTR [rdi]
    77e2:	3d 80 96 98 00       	cmp    eax,0x989680
    77e7:	74 e6                	je     77cf <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x8f>
    77e9:	49 8b 3f             	mov    rdi,QWORD PTR [r15]
    77ec:	8b af ac 35 03 00    	mov    ebp,DWORD PTR [rdi+0x335ac]
    77f2:	89 6c 24 e8          	mov    DWORD PTR [rsp-0x18],ebp
    77f6:	83 7c 24 38 01       	cmp    DWORD PTR [rsp+0x38],0x1
    77fb:	c6 44 24 f0 ff       	mov    BYTE PTR [rsp-0x10],0xff
    7800:	7e 0f                	jle    7811 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0xd1>
    7802:	48 8d 2c 12          	lea    rbp,[rdx+rdx*1]
    7806:	41 0f b6 6c 29 fe    	movzx  ebp,BYTE PTR [r9+rbp*1-0x2]
    780c:	40 88 6c 24 f0       	mov    BYTE PTR [rsp-0x10],bpl
    7811:	4c 0f bf eb          	movsx  r13,bx
    7815:	48 63 6c 24 b8       	movsxd rbp,DWORD PTR [rsp-0x48]
    781a:	4f 8d 64 ad 00       	lea    r12,[r13+r13*4+0x0]
    781f:	4f 8d 6c a5 00       	lea    r13,[r13+r12*4+0x0]
    7824:	4c 01 ed             	add    rbp,r13
    7827:	4c 8d 2d 92 6a 24 00 	lea    r13,[rip+0x246a92]        # 24e2c0 <pair>
    782e:	49 0f be 6c ad 00    	movsx  rbp,BYTE PTR [r13+rbp*4+0x0]
    7834:	4c 8b 6c 24 50       	mov    r13,QWORD PTR [rsp+0x50]
    7839:	45 39 75 00          	cmp    DWORD PTR [r13+0x0],r14d
    783d:	0f 8e 95 02 00 00    	jle    7ad8 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x398>
    7843:	83 7c 24 e8 02       	cmp    DWORD PTR [rsp-0x18],0x2
    7848:	0f 84 aa 03 00 00    	je     7bf8 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x4b8>
    784e:	45 31 e4             	xor    r12d,r12d
    7851:	83 fd 02             	cmp    ebp,0x2
    7854:	7e 07                	jle    785d <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x11d>
    7856:	44 8b a7 d4 1d 03 00 	mov    r12d,DWORD PTR [rdi+0x31dd4]
    785d:	44 03 a4 af 9c 1d 03 00 	add    r12d,DWORD PTR [rdi+rbp*4+0x31d9c]
    7865:	44 01 e0             	add    eax,r12d
    7868:	3d 80 96 98 00       	cmp    eax,0x989680
    786d:	bd 80 96 98 00       	mov    ebp,0x989680
    7872:	0f 4f c5             	cmovg  eax,ebp
    7875:	44 39 f6             	cmp    esi,r14d
    7878:	0f 84 51 ff ff ff    	je     77cf <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x8f>
    787e:	83 7c 24 e8 01       	cmp    DWORD PTR [rsp-0x18],0x1
    7883:	0f 85 46 ff ff ff    	jne    77cf <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x8f>
    7889:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    7890:	41 8b 2c 8a          	mov    ebp,DWORD PTR [r10+rcx*4]
    7894:	4c 8d 24 8d 00 00 00 00 	lea    r12,[rcx*4+0x0]
    789c:	3b 6c 24 38          	cmp    ebp,DWORD PTR [rsp+0x38]
    78a0:	0f 84 29 ff ff ff    	je     77cf <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x8f>
    78a6:	41 89 dd             	mov    r13d,ebx
    78a9:	44 89 db             	mov    ebx,r11d
    78ac:	4c 8d 1c 95 00 00 00 00 	lea    r11,[rdx*4+0x0]
    78b4:	47 8b 5c 1a 04       	mov    r11d,DWORD PTR [r10+r11*1+0x4]
    78b9:	83 fd ff             	cmp    ebp,0xffffffff
    78bc:	7d 0a                	jge    78c8 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x188>
    78be:	41 83 fb ff          	cmp    r11d,0xffffffff
    78c2:	0f 8c 50 02 00 00    	jl     7b18 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x3d8>
    78c8:	45 39 f3             	cmp    r11d,r14d
    78cb:	0f 84 47 02 00 00    	je     7b18 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x3d8>
    78d1:	83 fe ff             	cmp    esi,0xffffffff
    78d4:	7d 0c                	jge    78e2 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x1a2>
    78d6:	43 83 7c 22 fc ff    	cmp    DWORD PTR [r10+r12*1-0x4],0xffffffff
    78dc:	0f 8c 3e 01 00 00    	jl     7a20 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x2e0>
    78e2:	41 8d 7e ff          	lea    edi,[r14-0x1]
    78e6:	39 f7                	cmp    edi,esi
    78e8:	0f 84 32 01 00 00    	je     7a20 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x2e0>
    78ee:	48 8d 34 95 00 00 00 00 	lea    rsi,[rdx*4+0x0]
    78f6:	41 8b 74 32 04       	mov    esi,DWORD PTR [r10+rsi*1+0x4]
    78fb:	83 fe ff             	cmp    esi,0xffffffff
    78fe:	0f 8c dc 02 00 00    	jl     7be0 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x4a0>
    7904:	41 8d 7e ff          	lea    edi,[r14-0x1]
    7908:	39 fe                	cmp    esi,edi
    790a:	0f 85 bf fe ff ff    	jne    77cf <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x8f>
    7910:	41 8b 34 92          	mov    esi,DWORD PTR [r10+rdx*4]
    7914:	85 f6                	test   esi,esi
    7916:	0f 89 b3 fe ff ff    	jns    77cf <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x8f>
    791c:	41 8b 14 8a          	mov    edx,DWORD PTR [r10+rcx*4]
    7920:	85 d2                	test   edx,edx
    7922:	0f 89 a7 fe ff ff    	jns    77cf <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x8f>
    7928:	41 8d 56 ff          	lea    edx,[r14-0x1]
    792c:	2b 54 24 38          	sub    edx,DWORD PTR [rsp+0x38]
    7930:	83 fa 04             	cmp    edx,0x4
    7933:	0f 8e 96 fe ff ff    	jle    77cf <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x8f>
    7939:	48 8b 4c 24 d0       	mov    rcx,QWORD PTR [rsp-0x30]
    793e:	8b 11                	mov    edx,DWORD PTR [rcx]
    7940:	81 fa 80 96 98 00    	cmp    edx,0x989680
    7946:	0f 84 83 fe ff ff    	je     77cf <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x8f>
    794c:	49 8b 0f             	mov    rcx,QWORD PTR [r15]
    794f:	4c 8b 7c 24 d8       	mov    r15,QWORD PTR [rsp-0x28]
    7954:	4c 0f be db          	movsx  r11,bl
    7958:	49 0f be dd          	movsx  rbx,r13b
    795c:	8b b1 98 1d 03 00    	mov    esi,DWORD PTR [rcx+0x31d98]
    7962:	8d 3c 72             	lea    edi,[rdx+rsi*2]
    7965:	49 8b 10             	mov    rdx,QWORD PTR [r8]
    7968:	48 8b 74 24 e0       	mov    rsi,QWORD PTR [rsp-0x20]
    796d:	48 0f bf 74 32 fe    	movsx  rsi,WORD PTR [rdx+rsi*1-0x2]
    7973:	4a 0f bf 54 3a 02    	movsx  rdx,WORD PTR [rdx+r15*1+0x2]
    7979:	4c 8d 04 92          	lea    r8,[rdx+rdx*4]
    797d:	4a 8d 14 82          	lea    rdx,[rdx+r8*4]
    7981:	48 01 f2             	add    rdx,rsi
    7984:	48 8d 35 35 69 24 00 	lea    rsi,[rip+0x246935]        # 24e2c0 <pair>
    798b:	44 0f be 04 96       	movsx  r8d,BYTE PTR [rsi+rdx*4]
    7990:	85 db                	test   ebx,ebx
    7992:	0f 88 5d 03 00 00    	js     7cf5 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x5b5>
    7998:	45 85 db             	test   r11d,r11d
    799b:	0f 88 38 03 00 00    	js     7cd9 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x599>
    79a1:	49 63 f0             	movsxd rsi,r8d
    79a4:	4c 8d 0c 9b          	lea    r9,[rbx+rbx*4]
    79a8:	48 8d 14 b6          	lea    rdx,[rsi+rsi*4]
    79ac:	48 8d 14 92          	lea    rdx,[rdx+rdx*4]
    79b0:	4c 01 ca             	add    rdx,r9
    79b3:	49 8d 94 13 84 04 00 00 	lea    rdx,[r11+rdx*1+0x484]
    79bb:	8b 54 91 08          	mov    edx,DWORD PTR [rcx+rdx*4+0x8]
    79bf:	41 83 f8 02          	cmp    r8d,0x2
    79c3:	7e 06                	jle    79cb <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x28b>
    79c5:	03 91 d4 1d 03 00    	add    edx,DWORD PTR [rcx+0x31dd4]
    79cb:	03 94 b1 9c 1d 03 00 	add    edx,DWORD PTR [rcx+rsi*4+0x31d9c]
    79d2:	01 fa                	add    edx,edi
    79d4:	39 d0                	cmp    eax,edx
    79d6:	89 d1                	mov    ecx,edx
    79d8:	0f 4e c8             	cmovle ecx,eax
    79db:	0f 8d e9 02 00 00    	jge    7cca <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x58a>
    79e1:	89 c8                	mov    eax,ecx
    79e3:	e9 e7 fd ff ff       	jmp    77cf <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x8f>
    79e8:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    79f0:	41 83 3c 8a ff       	cmp    DWORD PTR [r10+rcx*4],0xffffffff
    79f5:	0f 8d ba fd ff ff    	jge    77b5 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x75>
    79fb:	8b 07                	mov    eax,DWORD PTR [rdi]
    79fd:	49 8b 3f             	mov    rdi,QWORD PTR [r15]
    7a00:	8b af ac 35 03 00    	mov    ebp,DWORD PTR [rdi+0x335ac]
    7a06:	89 6c 24 e8          	mov    DWORD PTR [rsp-0x18],ebp
    7a0a:	3d 80 96 98 00       	cmp    eax,0x989680
    7a0f:	0f 85 e1 fd ff ff    	jne    77f6 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0xb6>
    7a15:	e9 5b fe ff ff       	jmp    7875 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x135>
    7a1a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    7a20:	41 8b 3c 8a          	mov    edi,DWORD PTR [r10+rcx*4]
    7a24:	85 ff                	test   edi,edi
    7a26:	0f 89 c2 fe ff ff    	jns    78ee <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x1ae>
    7a2c:	41 8d 76 ff          	lea    esi,[r14-0x1]
    7a30:	2b 74 24 38          	sub    esi,DWORD PTR [rsp+0x38]
    7a34:	83 fe 03             	cmp    esi,0x3
    7a37:	0f 8e b1 fe ff ff    	jle    78ee <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x1ae>
    7a3d:	48 8b 7c 24 c8       	mov    rdi,QWORD PTR [rsp-0x38]
    7a42:	8b 37                	mov    esi,DWORD PTR [rdi]
    7a44:	81 fe 80 96 98 00    	cmp    esi,0x989680
    7a4a:	0f 84 9e fe ff ff    	je     78ee <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x1ae>
    7a50:	49 8b 2f             	mov    rbp,QWORD PTR [r15]
    7a53:	48 8d 3c 09          	lea    rdi,[rcx+rcx*1]
    7a57:	4c 0f be db          	movsx  r11,bl
    7a5b:	03 b5 98 1d 03 00    	add    esi,DWORD PTR [rbp+0x31d98]
    7a61:	89 74 24 b8          	mov    DWORD PTR [rsp-0x48],esi
    7a65:	49 8b 30             	mov    rsi,QWORD PTR [r8]
    7a68:	48 0f bf 7c 3e fe    	movsx  rdi,WORD PTR [rsi+rdi*1-0x2]
    7a6e:	48 0f bf 34 56       	movsx  rsi,WORD PTR [rsi+rdx*2]
    7a73:	4c 8d 0c b6          	lea    r9,[rsi+rsi*4]
    7a77:	4a 8d 34 8e          	lea    rsi,[rsi+r9*4]
    7a7b:	48 01 f7             	add    rdi,rsi
    7a7e:	48 8d 35 3b 68 24 00 	lea    rsi,[rip+0x24683b]        # 24e2c0 <pair>
    7a85:	44 0f be 0c be       	movsx  r9d,BYTE PTR [rsi+rdi*4]
    7a8a:	45 85 db             	test   r11d,r11d
    7a8d:	0f 88 fa 01 00 00    	js     7c8d <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x54d>
    7a93:	49 63 f1             	movsxd rsi,r9d
    7a96:	48 8d 3c b6          	lea    rdi,[rsi+rsi*4]
    7a9a:	49 8d bc 3b 74 05 00 00 	lea    rdi,[r11+rdi*1+0x574]
    7aa2:	8b 7c bd 08          	mov    edi,DWORD PTR [rbp+rdi*4+0x8]
    7aa6:	41 83 f9 02          	cmp    r9d,0x2
    7aaa:	7e 06                	jle    7ab2 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x372>
    7aac:	03 bd d4 1d 03 00    	add    edi,DWORD PTR [rbp+0x31dd4]
    7ab2:	03 bc b5 9c 1d 03 00 	add    edi,DWORD PTR [rbp+rsi*4+0x31d9c]
    7ab9:	8b 74 24 b8          	mov    esi,DWORD PTR [rsp-0x48]
    7abd:	01 fe                	add    esi,edi
    7abf:	89 c7                	mov    edi,eax
    7ac1:	39 c6                	cmp    esi,eax
    7ac3:	0f 4e fe             	cmovle edi,esi
    7ac6:	0f 8e cb 01 00 00    	jle    7c97 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x557>
    7acc:	89 f8                	mov    eax,edi
    7ace:	e9 1b fe ff ff       	jmp    78ee <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x1ae>
    7ad3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    7ad8:	83 7c 24 e8 02       	cmp    DWORD PTR [rsp-0x18],0x2
    7add:	0f 85 6b fd ff ff    	jne    784e <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x10e>
    7ae3:	4c 0f be 64 24 f0    	movsx  r12,BYTE PTR [rsp-0x10]
    7ae9:	45 85 e4             	test   r12d,r12d
    7aec:	0f 88 7e 01 00 00    	js     7c70 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x530>
    7af2:	4c 63 ed             	movsxd r13,ebp
    7af5:	4c 89 6c 24 f0       	mov    QWORD PTR [rsp-0x10],r13
    7afa:	4f 8d 6c ad 00       	lea    r13,[r13+r13*4+0x0]
    7aff:	4f 8d a4 2c 4c 05 00 00 	lea    r12,[r12+r13*1+0x54c]
    7b07:	46 8b 64 a7 08       	mov    r12d,DWORD PTR [rdi+r12*4+0x8]
    7b0c:	e9 39 01 00 00       	jmp    7c4a <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x50a>
    7b11:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    7b18:	85 f6                	test   esi,esi
    7b1a:	0f 89 c2 fd ff ff    	jns    78e2 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x1a2>
    7b20:	45 89 f3             	mov    r11d,r14d
    7b23:	44 2b 5c 24 38       	sub    r11d,DWORD PTR [rsp+0x38]
    7b28:	41 83 fb 04          	cmp    r11d,0x4
    7b2c:	0f 8e 9f fd ff ff    	jle    78d1 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x191>
    7b32:	4c 8b 5c 24 c0       	mov    r11,QWORD PTR [rsp-0x40]
    7b37:	45 8b 1b             	mov    r11d,DWORD PTR [r11]
    7b3a:	41 81 fb 80 96 98 00 	cmp    r11d,0x989680
    7b41:	0f 84 8a fd ff ff    	je     78d1 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x191>
    7b47:	44 03 9f 98 1d 03 00 	add    r11d,DWORD PTR [rdi+0x31d98]
    7b4e:	49 0f be ed          	movsx  rbp,r13b
    7b52:	44 89 5c 24 c0       	mov    DWORD PTR [rsp-0x40],r11d
    7b57:	4c 63 5c 24 b8       	movsxd r11,DWORD PTR [rsp-0x48]
    7b5c:	4c 89 5c 24 b8       	mov    QWORD PTR [rsp-0x48],r11
    7b61:	4c 8d 1c 12          	lea    r11,[rdx+rdx*1]
    7b65:	4f 0f bf 4c 19 02    	movsx  r9,WORD PTR [r9+r11*1+0x2]
    7b6b:	4f 8d 1c 89          	lea    r11,[r9+r9*4]
    7b6f:	4f 8d 0c 99          	lea    r9,[r9+r11*4]
    7b73:	4c 8d 1d 46 67 24 00 	lea    r11,[rip+0x246746]        # 24e2c0 <pair>
    7b7a:	4c 03 4c 24 b8       	add    r9,QWORD PTR [rsp-0x48]
    7b7f:	47 0f be 1c 8b       	movsx  r11d,BYTE PTR [r11+r9*4]
    7b84:	85 ed                	test   ebp,ebp
    7b86:	0f 88 f1 00 00 00    	js     7c7d <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x53d>
    7b8c:	4d 63 cb             	movsxd r9,r11d
    7b8f:	4c 89 4c 24 b8       	mov    QWORD PTR [rsp-0x48],r9
    7b94:	4f 8d 0c 89          	lea    r9,[r9+r9*4]
    7b98:	4e 8d 8c 0d 4c 05 00 00 	lea    r9,[rbp+r9*1+0x54c]
    7ba0:	46 8b 4c 8f 08       	mov    r9d,DWORD PTR [rdi+r9*4+0x8]
    7ba5:	41 83 fb 02          	cmp    r11d,0x2
    7ba9:	7e 07                	jle    7bb2 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x472>
    7bab:	44 03 8f d4 1d 03 00 	add    r9d,DWORD PTR [rdi+0x31dd4]
    7bb2:	4c 8b 5c 24 b8       	mov    r11,QWORD PTR [rsp-0x48]
    7bb7:	46 03 8c 9f 9c 1d 03 00 	add    r9d,DWORD PTR [rdi+r11*4+0x31d9c]
    7bbf:	8b 7c 24 c0          	mov    edi,DWORD PTR [rsp-0x40]
    7bc3:	44 01 cf             	add    edi,r9d
    7bc6:	41 89 c1             	mov    r9d,eax
    7bc9:	39 c7                	cmp    edi,eax
    7bcb:	44 0f 4e cf          	cmovle r9d,edi
    7bcf:	0f 8e d9 00 00 00    	jle    7cae <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x56e>
    7bd5:	44 89 c8             	mov    eax,r9d
    7bd8:	e9 f4 fc ff ff       	jmp    78d1 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x191>
    7bdd:	0f 1f 00             	nop    DWORD PTR [rax]
    7be0:	43 83 7c 22 fc ff    	cmp    DWORD PTR [r10+r12*1-0x4],0xffffffff
    7be6:	0f 8d 18 fd ff ff    	jge    7904 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x1c4>
    7bec:	e9 1f fd ff ff       	jmp    7910 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x1d0>
    7bf1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    7bf8:	4c 8d 24 09          	lea    r12,[rcx+rcx*1]
    7bfc:	4f 0f be 6c 21 02    	movsx  r13,BYTE PTR [r9+r12*1+0x2]
    7c02:	4c 0f be 64 24 f0    	movsx  r12,BYTE PTR [rsp-0x10]
    7c08:	45 85 ed             	test   r13d,r13d
    7c0b:	0f 88 0b 01 00 00    	js     7d1c <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x5dc>
    7c11:	45 85 e4             	test   r12d,r12d
    7c14:	0f 88 0b 01 00 00    	js     7d25 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x5e5>
    7c1a:	4c 89 6c 24 f8       	mov    QWORD PTR [rsp-0x8],r13
    7c1f:	4c 63 ed             	movsxd r13,ebp
    7c22:	4f 8d 24 a4          	lea    r12,[r12+r12*4]
    7c26:	4c 89 6c 24 f0       	mov    QWORD PTR [rsp-0x10],r13
    7c2b:	4f 8d 6c ad 00       	lea    r13,[r13+r13*4+0x0]
    7c30:	4f 8d 6c ad 00       	lea    r13,[r13+r13*4+0x0]
    7c35:	4d 01 ec             	add    r12,r13
    7c38:	4c 8b 6c 24 f8       	mov    r13,QWORD PTR [rsp-0x8]
    7c3d:	4f 8d a4 25 84 04 00 00 	lea    r12,[r13+r12*1+0x484]
    7c45:	46 8b 64 a7 08       	mov    r12d,DWORD PTR [rdi+r12*4+0x8]
    7c4a:	83 fd 02             	cmp    ebp,0x2
    7c4d:	7e 07                	jle    7c56 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x516>
    7c4f:	44 03 a7 d4 1d 03 00 	add    r12d,DWORD PTR [rdi+0x31dd4]
    7c56:	48 8b 6c 24 f0       	mov    rbp,QWORD PTR [rsp-0x10]
    7c5b:	44 03 a4 af 9c 1d 03 00 	add    r12d,DWORD PTR [rdi+rbp*4+0x31d9c]
    7c63:	44 01 e0             	add    eax,r12d
    7c66:	e9 fd fb ff ff       	jmp    7868 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x128>
    7c6b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    7c70:	4c 63 ed             	movsxd r13,ebp
    7c73:	45 31 e4             	xor    r12d,r12d
    7c76:	4c 89 6c 24 f0       	mov    QWORD PTR [rsp-0x10],r13
    7c7b:	eb cd                	jmp    7c4a <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x50a>
    7c7d:	49 63 eb             	movsxd rbp,r11d
    7c80:	45 31 c9             	xor    r9d,r9d
    7c83:	48 89 6c 24 b8       	mov    QWORD PTR [rsp-0x48],rbp
    7c88:	e9 18 ff ff ff       	jmp    7ba5 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x465>
    7c8d:	31 ff                	xor    edi,edi
    7c8f:	49 63 f1             	movsxd rsi,r9d
    7c92:	e9 0f fe ff ff       	jmp    7aa6 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x366>
    7c97:	48 8b 44 24 48       	mov    rax,QWORD PTR [rsp+0x48]
    7c9c:	c6 00 02             	mov    BYTE PTR [rax],0x2
    7c9f:	48 8b 44 24 58       	mov    rax,QWORD PTR [rsp+0x58]
    7ca4:	4c 8b 10             	mov    r10,QWORD PTR [rax]
    7ca7:	89 f8                	mov    eax,edi
    7ca9:	e9 40 fc ff ff       	jmp    78ee <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x1ae>
    7cae:	48 8b 44 24 48       	mov    rax,QWORD PTR [rsp+0x48]
    7cb3:	c6 00 01             	mov    BYTE PTR [rax],0x1
    7cb6:	48 8b 44 24 58       	mov    rax,QWORD PTR [rsp+0x58]
    7cbb:	4c 8b 10             	mov    r10,QWORD PTR [rax]
    7cbe:	44 89 c8             	mov    eax,r9d
    7cc1:	41 8b 34 92          	mov    esi,DWORD PTR [r10+rdx*4]
    7cc5:	e9 07 fc ff ff       	jmp    78d1 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x191>
    7cca:	48 8b 44 24 48       	mov    rax,QWORD PTR [rsp+0x48]
    7ccf:	c6 00 03             	mov    BYTE PTR [rax],0x3
    7cd2:	89 c8                	mov    eax,ecx
    7cd4:	e9 f6 fa ff ff       	jmp    77cf <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x8f>
    7cd9:	85 db                	test   ebx,ebx
    7cdb:	78 18                	js     7cf5 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x5b5>
    7cdd:	49 63 f0             	movsxd rsi,r8d
    7ce0:	48 8d 14 b6          	lea    rdx,[rsi+rsi*4]
    7ce4:	48 8d 94 13 4c 05 00 00 	lea    rdx,[rbx+rdx*1+0x54c]
    7cec:	8b 54 91 08          	mov    edx,DWORD PTR [rcx+rdx*4+0x8]
    7cf0:	e9 ca fc ff ff       	jmp    79bf <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x27f>
    7cf5:	45 85 db             	test   r11d,r11d
    7cf8:	78 18                	js     7d12 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x5d2>
    7cfa:	49 63 f0             	movsxd rsi,r8d
    7cfd:	48 8d 14 b6          	lea    rdx,[rsi+rsi*4]
    7d01:	49 8d 94 13 74 05 00 00 	lea    rdx,[r11+rdx*1+0x574]
    7d09:	8b 54 91 08          	mov    edx,DWORD PTR [rcx+rdx*4+0x8]
    7d0d:	e9 ad fc ff ff       	jmp    79bf <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x27f>
    7d12:	31 d2                	xor    edx,edx
    7d14:	49 63 f0             	movsxd rsi,r8d
    7d17:	e9 a3 fc ff ff       	jmp    79bf <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x27f>
    7d1c:	45 85 e4             	test   r12d,r12d
    7d1f:	0f 89 cd fd ff ff    	jns    7af2 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x3b2>
    7d25:	45 85 ed             	test   r13d,r13d
    7d28:	0f 88 42 ff ff ff    	js     7c70 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x530>
    7d2e:	4d 63 e5             	movsxd r12,r13d
    7d31:	4d 89 e5             	mov    r13,r12
    7d34:	4c 63 e5             	movsxd r12,ebp
    7d37:	4c 89 64 24 f0       	mov    QWORD PTR [rsp-0x10],r12
    7d3c:	4f 8d 24 a4          	lea    r12,[r12+r12*4]
    7d40:	4f 8d a4 25 74 05 00 00 	lea    r12,[r13+r12*1+0x574]
    7d48:	46 8b 64 a7 08       	mov    r12d,DWORD PTR [rdi+r12*4+0x8]
    7d4d:	e9 f8 fe ff ff       	jmp    7c4a <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)+0x50a>
    7d52:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    7d5c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000007d60 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)>:
    7d60:	f3 0f 1e fa          	endbr64 
    7d64:	48 b9 ff ff ff ff ff ff ff 1f 	movabs rcx,0x1fffffffffffffff
    7d6e:	41 57                	push   r15
    7d70:	41 56                	push   r14
    7d72:	41 55                	push   r13
    7d74:	41 54                	push   r12
    7d76:	55                   	push   rbp
    7d77:	53                   	push   rbx
    7d78:	48 83 ec 18          	sub    rsp,0x18
    7d7c:	4c 8b 67 08          	mov    r12,QWORD PTR [rdi+0x8]
    7d80:	4c 8b 07             	mov    r8,QWORD PTR [rdi]
    7d83:	4c 89 e0             	mov    rax,r12
    7d86:	4c 29 c0             	sub    rax,r8
    7d89:	48 c1 f8 02          	sar    rax,0x2
    7d8d:	48 39 c8             	cmp    rax,rcx
    7d90:	0f 84 05 01 00 00    	je     7e9b <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)+0x13b>
    7d96:	49 89 d7             	mov    r15,rdx
    7d99:	48 89 f2             	mov    rdx,rsi
    7d9c:	48 89 fd             	mov    rbp,rdi
    7d9f:	49 89 f5             	mov    r13,rsi
    7da2:	4c 29 c2             	sub    rdx,r8
    7da5:	48 85 c0             	test   rax,rax
    7da8:	0f 84 e2 00 00 00    	je     7e90 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)+0x130>
    7dae:	49 be fc ff ff ff ff ff ff 7f 	movabs r14,0x7ffffffffffffffc
    7db8:	48 8d 34 00          	lea    rsi,[rax+rax*1]
    7dbc:	48 39 f0             	cmp    rax,rsi
    7dbf:	0f 86 93 00 00 00    	jbe    7e58 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)+0xf8>
    7dc5:	4c 89 f7             	mov    rdi,r14
    7dc8:	48 89 54 24 08       	mov    QWORD PTR [rsp+0x8],rdx
    7dcd:	4c 89 04 24          	mov    QWORD PTR [rsp],r8
    7dd1:	e8 4a ba ff ff       	call   3820 <operator new(unsigned long)@plt>
    7dd6:	4c 8b 04 24          	mov    r8,QWORD PTR [rsp]
    7dda:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
    7ddf:	48 89 c3             	mov    rbx,rax
    7de2:	49 01 c6             	add    r14,rax
    7de5:	41 8b 07             	mov    eax,DWORD PTR [r15]
    7de8:	4d 29 ec             	sub    r12,r13
    7deb:	4c 8d 7c 13 04       	lea    r15,[rbx+rdx*1+0x4]
    7df0:	89 04 13             	mov    DWORD PTR [rbx+rdx*1],eax
    7df3:	4b 8d 04 27          	lea    rax,[r15+r12*1]
    7df7:	48 89 04 24          	mov    QWORD PTR [rsp],rax
    7dfb:	48 85 d2             	test   rdx,rdx
    7dfe:	7f 30                	jg     7e30 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)+0xd0>
    7e00:	4d 85 e4             	test   r12,r12
    7e03:	7f 63                	jg     7e68 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)+0x108>
    7e05:	4d 85 c0             	test   r8,r8
    7e08:	75 40                	jne    7e4a <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)+0xea>
    7e0a:	66 48 0f 6e c3       	movq   xmm0,rbx
    7e0f:	4c 89 75 10          	mov    QWORD PTR [rbp+0x10],r14
    7e13:	0f 16 04 24          	movhps xmm0,QWORD PTR [rsp]
    7e17:	0f 11 45 00          	movups XMMWORD PTR [rbp+0x0],xmm0
    7e1b:	48 83 c4 18          	add    rsp,0x18
    7e1f:	5b                   	pop    rbx
    7e20:	5d                   	pop    rbp
    7e21:	41 5c                	pop    r12
    7e23:	41 5d                	pop    r13
    7e25:	41 5e                	pop    r14
    7e27:	41 5f                	pop    r15
    7e29:	c3                   	ret    
    7e2a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    7e30:	4c 89 c6             	mov    rsi,r8
    7e33:	48 89 df             	mov    rdi,rbx
    7e36:	4c 89 44 24 08       	mov    QWORD PTR [rsp+0x8],r8
    7e3b:	e8 90 bb ff ff       	call   39d0 <memmove@plt>
    7e40:	4d 85 e4             	test   r12,r12
    7e43:	4c 8b 44 24 08       	mov    r8,QWORD PTR [rsp+0x8]
    7e48:	7f 1e                	jg     7e68 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)+0x108>
    7e4a:	4c 89 c7             	mov    rdi,r8
    7e4d:	e8 8e b9 ff ff       	call   37e0 <operator delete(void*)@plt>
    7e52:	eb b6                	jmp    7e0a <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)+0xaa>
    7e54:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    7e58:	48 85 f6             	test   rsi,rsi
    7e5b:	75 4a                	jne    7ea7 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)+0x147>
    7e5d:	45 31 f6             	xor    r14d,r14d
    7e60:	31 db                	xor    ebx,ebx
    7e62:	eb 81                	jmp    7de5 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)+0x85>
    7e64:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    7e68:	4c 89 e2             	mov    rdx,r12
    7e6b:	4c 89 ee             	mov    rsi,r13
    7e6e:	4c 89 ff             	mov    rdi,r15
    7e71:	4c 89 44 24 08       	mov    QWORD PTR [rsp+0x8],r8
    7e76:	e8 25 b9 ff ff       	call   37a0 <memcpy@plt>
    7e7b:	4c 8b 44 24 08       	mov    r8,QWORD PTR [rsp+0x8]
    7e80:	4d 85 c0             	test   r8,r8
    7e83:	74 85                	je     7e0a <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)+0xaa>
    7e85:	eb c3                	jmp    7e4a <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)+0xea>
    7e87:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    7e90:	41 be 04 00 00 00    	mov    r14d,0x4
    7e96:	e9 2a ff ff ff       	jmp    7dc5 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)+0x65>
    7e9b:	48 8d 3d 46 98 02 00 	lea    rdi,[rip+0x29846]        # 316e8 <_IO_stdin_used+0x6e8>
    7ea2:	e8 49 b8 ff ff       	call   36f0 <std::__throw_length_error(char const*)@plt>
    7ea7:	48 39 ce             	cmp    rsi,rcx
    7eaa:	48 0f 46 ce          	cmovbe rcx,rsi
    7eae:	49 89 ce             	mov    r14,rcx
    7eb1:	49 c1 e6 02          	shl    r14,0x2
    7eb5:	e9 0b ff ff ff       	jmp    7dc5 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)+0x65>
    7eba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000007ec0 <void detect_restricted_pairs<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int*, int*, int*)>:
    7ec0:	f3 0f 1e fa          	endbr64 
    7ec4:	41 57                	push   r15
    7ec6:	66 0f ef c0          	pxor   xmm0,xmm0
    7eca:	41 56                	push   r14
    7ecc:	49 89 fe             	mov    r14,rdi
    7ecf:	41 55                	push   r13
    7ed1:	49 89 cd             	mov    r13,rcx
    7ed4:	41 54                	push   r12
    7ed6:	49 89 d4             	mov    r12,rdx
    7ed9:	55                   	push   rbp
    7eda:	48 89 f5             	mov    rbp,rsi
    7edd:	31 f6                	xor    esi,esi
    7edf:	53                   	push   rbx
    7ee0:	48 83 ec 48          	sub    rsp,0x48
    7ee4:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
    7eed:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
    7ef2:	31 c0                	xor    eax,eax
    7ef4:	48 8b 47 08          	mov    rax,QWORD PTR [rdi+0x8]
    7ef8:	48 8d 54 24 1c       	lea    rdx,[rsp+0x1c]
    7efd:	0f 29 44 24 20       	movaps XMMWORD PTR [rsp+0x20],xmm0
    7f02:	48 c7 44 24 30 00 00 00 00 	mov    QWORD PTR [rsp+0x30],0x0
    7f0b:	89 44 24 1c          	mov    DWORD PTR [rsp+0x1c],eax
    7f0f:	48 8d 44 24 20       	lea    rax,[rsp+0x20]
    7f14:	48 89 c7             	mov    rdi,rax
    7f17:	48 89 04 24          	mov    QWORD PTR [rsp],rax
    7f1b:	e8 40 fe ff ff       	call   7d60 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)>
    7f20:	8b 44 24 1c          	mov    eax,DWORD PTR [rsp+0x1c]
    7f24:	48 8b 74 24 28       	mov    rsi,QWORD PTR [rsp+0x28]
    7f29:	89 44 24 18          	mov    DWORD PTR [rsp+0x18],eax
    7f2d:	85 c0                	test   eax,eax
    7f2f:	0f 8e 93 01 00 00    	jle    80c8 <void detect_restricted_pairs<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int*, int*, int*)+0x208>
    7f35:	48 8d 4c 24 18       	lea    rcx,[rsp+0x18]
    7f3a:	4d 8b 0e             	mov    r9,QWORD PTR [r14]
    7f3d:	31 db                	xor    ebx,ebx
    7f3f:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
    7f44:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    7f48:	8d 50 ff             	lea    edx,[rax-0x1]
    7f4b:	48 63 d2             	movsxd rdx,edx
    7f4e:	4c 01 ca             	add    rdx,r9
    7f51:	0f b6 0a             	movzx  ecx,BYTE PTR [rdx]
    7f54:	89 cf                	mov    edi,ecx
    7f56:	83 e7 df             	and    edi,0xffffffdf
    7f59:	40 80 ff 58          	cmp    dil,0x58
    7f5d:	0f 85 f5 00 00 00    	jne    8058 <void detect_restricted_pairs<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int*, int*, int*)+0x198>
    7f63:	48 63 c8             	movsxd rcx,eax
    7f66:	c7 44 8d 00 ff ff ff ff 	mov    DWORD PTR [rbp+rcx*4+0x0],0xffffffff
    7f6e:	0f b6 0a             	movzx  ecx,BYTE PTR [rdx]
    7f71:	89 cf                	mov    edi,ecx
    7f73:	83 e7 df             	and    edi,0xffffffdf
    7f76:	40 80 ff 5d          	cmp    dil,0x5d
    7f7a:	40 0f 94 c7          	sete   dil
    7f7e:	80 f9 29             	cmp    cl,0x29
    7f81:	0f 94 c2             	sete   dl
    7f84:	40 08 d7             	or     dil,dl
    7f87:	75 09                	jne    7f92 <void detect_restricted_pairs<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int*, int*, int*)+0xd2>
    7f89:	80 f9 3e             	cmp    cl,0x3e
    7f8c:	0f 85 ee 00 00 00    	jne    8080 <void detect_restricted_pairs<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int*, int*, int*)+0x1c0>
    7f92:	48 39 74 24 30       	cmp    QWORD PTR [rsp+0x30],rsi
    7f97:	0f 84 0b 01 00 00    	je     80a8 <void detect_restricted_pairs<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int*, int*, int*)+0x1e8>
    7f9d:	89 06                	mov    DWORD PTR [rsi],eax
    7f9f:	48 83 c6 04          	add    rsi,0x4
    7fa3:	48 89 74 24 28       	mov    QWORD PTR [rsp+0x28],rsi
    7fa8:	8b 7c 24 18          	mov    edi,DWORD PTR [rsp+0x18]
    7fac:	83 c3 01             	add    ebx,0x1
    7faf:	8b 46 fc             	mov    eax,DWORD PTR [rsi-0x4]
    7fb2:	48 63 cf             	movsxd rcx,edi
    7fb5:	4c 8d 46 fc          	lea    r8,[rsi-0x4]
    7fb9:	4c 8b 7c 24 20       	mov    r15,QWORD PTR [rsp+0x20]
    7fbe:	41 89 04 8c          	mov    DWORD PTR [r12+rcx*4],eax
    7fc2:	8d 47 ff             	lea    eax,[rdi-0x1]
    7fc5:	48 63 d0             	movsxd rdx,eax
    7fc8:	41 89 5c 8d 00       	mov    DWORD PTR [r13+rcx*4+0x0],ebx
    7fcd:	41 0f b6 14 11       	movzx  edx,BYTE PTR [r9+rdx*1]
    7fd2:	80 fa 3c             	cmp    dl,0x3c
    7fd5:	41 0f 94 c3          	sete   r11b
    7fd9:	80 fa 28             	cmp    dl,0x28
    7fdc:	41 0f 94 c2          	sete   r10b
    7fe0:	45 08 d3             	or     r11b,r10b
    7fe3:	75 0c                	jne    7ff1 <void detect_restricted_pairs<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int*, int*, int*)+0x131>
    7fe5:	83 e2 df             	and    edx,0xffffffdf
    7fe8:	80 fa 5b             	cmp    dl,0x5b
    7feb:	0f 85 9f 00 00 00    	jne    8090 <void detect_restricted_pairs<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int*, int*, int*)+0x1d0>
    7ff1:	49 63 10             	movsxd rdx,DWORD PTR [r8]
    7ff4:	48 83 ee 04          	sub    rsi,0x4
    7ff8:	89 44 24 18          	mov    DWORD PTR [rsp+0x18],eax
    7ffc:	83 eb 01             	sub    ebx,0x1
    7fff:	48 89 74 24 28       	mov    QWORD PTR [rsp+0x28],rsi
    8004:	89 54 8d 00          	mov    DWORD PTR [rbp+rcx*4+0x0],edx
    8008:	89 7c 95 00          	mov    DWORD PTR [rbp+rdx*4+0x0],edi
    800c:	85 c0                	test   eax,eax
    800e:	0f 8f 34 ff ff ff    	jg     7f48 <void detect_restricted_pairs<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int*, int*, int*)+0x88>
    8014:	48 83 ee 04          	sub    rsi,0x4
    8018:	48 89 74 24 28       	mov    QWORD PTR [rsp+0x28],rsi
    801d:	4c 39 fe             	cmp    rsi,r15
    8020:	0f 85 ac 00 00 00    	jne    80d2 <void detect_restricted_pairs<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int*, int*, int*)+0x212>
    8026:	4c 89 ff             	mov    rdi,r15
    8029:	e8 b2 b7 ff ff       	call   37e0 <operator delete(void*)@plt>
    802e:	48 8b 44 24 38       	mov    rax,QWORD PTR [rsp+0x38]
    8033:	64 48 33 04 25 28 00 00 00 	xor    rax,QWORD PTR fs:0x28
    803c:	0f 85 b7 00 00 00    	jne    80f9 <void detect_restricted_pairs<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int*, int*, int*)+0x239>
    8042:	48 83 c4 48          	add    rsp,0x48
    8046:	5b                   	pop    rbx
    8047:	5d                   	pop    rbp
    8048:	41 5c                	pop    r12
    804a:	41 5d                	pop    r13
    804c:	41 5e                	pop    r14
    804e:	41 5f                	pop    r15
    8050:	c3                   	ret    
    8051:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    8058:	80 f9 2e             	cmp    cl,0x2e
    805b:	0f 85 15 ff ff ff    	jne    7f76 <void detect_restricted_pairs<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int*, int*, int*)+0xb6>
    8061:	48 63 c8             	movsxd rcx,eax
    8064:	c7 44 8d 00 fe ff ff ff 	mov    DWORD PTR [rbp+rcx*4+0x0],0xfffffffe
    806c:	0f b6 0a             	movzx  ecx,BYTE PTR [rdx]
    806f:	89 cf                	mov    edi,ecx
    8071:	83 e7 df             	and    edi,0xffffffdf
    8074:	e9 fd fe ff ff       	jmp    7f76 <void detect_restricted_pairs<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int*, int*, int*)+0xb6>
    8079:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    8080:	89 c7                	mov    edi,eax
    8082:	e9 28 ff ff ff       	jmp    7faf <void detect_restricted_pairs<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int*, int*, int*)+0xef>
    8087:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    8090:	89 44 24 18          	mov    DWORD PTR [rsp+0x18],eax
    8094:	85 c0                	test   eax,eax
    8096:	0f 8f ac fe ff ff    	jg     7f48 <void detect_restricted_pairs<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int*, int*, int*)+0x88>
    809c:	e9 73 ff ff ff       	jmp    8014 <void detect_restricted_pairs<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int*, int*, int*)+0x154>
    80a1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    80a8:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
    80ad:	48 8b 3c 24          	mov    rdi,QWORD PTR [rsp]
    80b1:	e8 aa fc ff ff       	call   7d60 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)>
    80b6:	48 8b 74 24 28       	mov    rsi,QWORD PTR [rsp+0x28]
    80bb:	4d 8b 0e             	mov    r9,QWORD PTR [r14]
    80be:	e9 e5 fe ff ff       	jmp    7fa8 <void detect_restricted_pairs<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int*, int*, int*)+0xe8>
    80c3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    80c8:	4c 8b 7c 24 20       	mov    r15,QWORD PTR [rsp+0x20]
    80cd:	e9 42 ff ff ff       	jmp    8014 <void detect_restricted_pairs<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int*, int*, int*)+0x154>
    80d2:	48 8b 0d 47 60 24 00 	mov    rcx,QWORD PTR [rip+0x246047]        # 24e120 <stderr@@GLIBC_2.2.5>
    80d9:	ba 51 00 00 00       	mov    edx,0x51
    80de:	be 01 00 00 00       	mov    esi,0x1
    80e3:	48 8d 3d 1e 96 02 00 	lea    rdi,[rip+0x2961e]        # 31708 <_IO_stdin_used+0x708>
    80ea:	e8 e1 b9 ff ff       	call   3ad0 <fwrite@plt>
    80ef:	bf 01 00 00 00       	mov    edi,0x1
    80f4:	e8 c7 b7 ff ff       	call   38c0 <exit@plt>
    80f9:	e8 62 b7 ff ff       	call   3860 <__stack_chk_fail@plt>
    80fe:	f3 0f 1e fa          	endbr64 
    8102:	48 89 c5             	mov    rbp,rax
    8105:	48 8b 7c 24 20       	mov    rdi,QWORD PTR [rsp+0x20]
    810a:	48 85 ff             	test   rdi,rdi
    810d:	74 05                	je     8114 <void detect_restricted_pairs<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int*, int*, int*)+0x254>
    810f:	e8 cc b6 ff ff       	call   37e0 <operator delete(void*)@plt>
    8114:	48 89 ef             	mov    rdi,rbp
    8117:	e8 34 b9 ff ff       	call   3a50 <_Unwind_Resume@plt>
    811c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000008120 <void std::vector<quatret, std::allocator<quatret> >::_M_realloc_insert<quatret>(__gnu_cxx::__normal_iterator<quatret*, std::vector<quatret, std::allocator<quatret> > >, quatret&&)>:
    8120:	f3 0f 1e fa          	endbr64 
    8124:	48 b9 ff ff ff ff ff ff ff 07 	movabs rcx,0x7ffffffffffffff
    812e:	41 57                	push   r15
    8130:	41 56                	push   r14
    8132:	41 55                	push   r13
    8134:	41 54                	push   r12
    8136:	55                   	push   rbp
    8137:	48 89 f5             	mov    rbp,rsi
    813a:	53                   	push   rbx
    813b:	48 83 ec 28          	sub    rsp,0x28
    813f:	48 8b 77 08          	mov    rsi,QWORD PTR [rdi+0x8]
    8143:	4c 8b 27             	mov    r12,QWORD PTR [rdi]
    8146:	48 89 f0             	mov    rax,rsi
    8149:	4c 29 e0             	sub    rax,r12
    814c:	48 c1 f8 04          	sar    rax,0x4
    8150:	48 39 c8             	cmp    rax,rcx
    8153:	0f 84 75 01 00 00    	je     82ce <void std::vector<quatret, std::allocator<quatret> >::_M_realloc_insert<quatret>(__gnu_cxx::__normal_iterator<quatret*, std::vector<quatret, std::allocator<quatret> > >, quatret&&)+0x1ae>
    8159:	49 89 e8             	mov    r8,rbp
    815c:	49 89 fe             	mov    r14,rdi
    815f:	4d 29 e0             	sub    r8,r12
    8162:	48 85 c0             	test   rax,rax
    8165:	0f 84 45 01 00 00    	je     82b0 <void std::vector<quatret, std::allocator<quatret> >::_M_realloc_insert<quatret>(__gnu_cxx::__normal_iterator<quatret*, std::vector<quatret, std::allocator<quatret> > >, quatret&&)+0x190>
    816b:	49 bf f0 ff ff ff ff ff ff 7f 	movabs r15,0x7ffffffffffffff0
    8175:	48 8d 3c 00          	lea    rdi,[rax+rax*1]
    8179:	48 39 f8             	cmp    rax,rdi
    817c:	0f 86 fe 00 00 00    	jbe    8280 <void std::vector<quatret, std::allocator<quatret> >::_M_realloc_insert<quatret>(__gnu_cxx::__normal_iterator<quatret*, std::vector<quatret, std::allocator<quatret> > >, quatret&&)+0x160>
    8182:	4c 89 ff             	mov    rdi,r15
    8185:	48 89 54 24 18       	mov    QWORD PTR [rsp+0x18],rdx
    818a:	4c 89 44 24 10       	mov    QWORD PTR [rsp+0x10],r8
    818f:	48 89 74 24 08       	mov    QWORD PTR [rsp+0x8],rsi
    8194:	e8 87 b6 ff ff       	call   3820 <operator new(unsigned long)@plt>
    8199:	48 8b 54 24 18       	mov    rdx,QWORD PTR [rsp+0x18]
    819e:	4c 8b 44 24 10       	mov    r8,QWORD PTR [rsp+0x10]
    81a3:	48 89 c3             	mov    rbx,rax
    81a6:	48 8b 74 24 08       	mov    rsi,QWORD PTR [rsp+0x8]
    81ab:	49 01 c7             	add    r15,rax
    81ae:	4c 8d 68 10          	lea    r13,[rax+0x10]
    81b2:	f3 0f 6f 1a          	movdqu xmm3,XMMWORD PTR [rdx]
    81b6:	42 0f 11 1c 03       	movups XMMWORD PTR [rbx+r8*1],xmm3
    81bb:	4c 39 e5             	cmp    rbp,r12
    81be:	0f 84 de 00 00 00    	je     82a2 <void std::vector<quatret, std::allocator<quatret> >::_M_realloc_insert<quatret>(__gnu_cxx::__normal_iterator<quatret*, std::vector<quatret, std::allocator<quatret> > >, quatret&&)+0x182>
    81c4:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
    81c8:	31 d2                	xor    edx,edx
    81ca:	31 c9                	xor    ecx,ecx
    81cc:	4c 29 e7             	sub    rdi,r12
    81cf:	48 89 f8             	mov    rax,rdi
    81d2:	48 c1 e8 04          	shr    rax,0x4
    81d6:	48 83 c0 01          	add    rax,0x1
    81da:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    81e0:	f3 41 0f 6f 0c 14    	movdqu xmm1,XMMWORD PTR [r12+rdx*1]
    81e6:	48 83 c1 01          	add    rcx,0x1
    81ea:	0f 11 0c 13          	movups XMMWORD PTR [rbx+rdx*1],xmm1
    81ee:	48 83 c2 10          	add    rdx,0x10
    81f2:	48 39 c8             	cmp    rax,rcx
    81f5:	77 e9                	ja     81e0 <void std::vector<quatret, std::allocator<quatret> >::_M_realloc_insert<quatret>(__gnu_cxx::__normal_iterator<quatret*, std::vector<quatret, std::allocator<quatret> > >, quatret&&)+0xc0>
    81f7:	4c 8d 6c 3b 20       	lea    r13,[rbx+rdi*1+0x20]
    81fc:	48 39 f5             	cmp    rbp,rsi
    81ff:	74 6f                	je     8270 <void std::vector<quatret, std::allocator<quatret> >::_M_realloc_insert<quatret>(__gnu_cxx::__normal_iterator<quatret*, std::vector<quatret, std::allocator<quatret> > >, quatret&&)+0x150>
    8201:	48 29 ee             	sub    rsi,rbp
    8204:	31 d2                	xor    edx,edx
    8206:	31 c9                	xor    ecx,ecx
    8208:	48 83 ee 10          	sub    rsi,0x10
    820c:	48 89 f0             	mov    rax,rsi
    820f:	48 c1 e8 04          	shr    rax,0x4
    8213:	48 83 c0 01          	add    rax,0x1
    8217:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    8220:	f3 0f 6f 54 15 00    	movdqu xmm2,XMMWORD PTR [rbp+rdx*1+0x0]
    8226:	48 83 c1 01          	add    rcx,0x1
    822a:	41 0f 11 54 15 00    	movups XMMWORD PTR [r13+rdx*1+0x0],xmm2
    8230:	48 83 c2 10          	add    rdx,0x10
    8234:	48 39 c8             	cmp    rax,rcx
    8237:	77 e7                	ja     8220 <void std::vector<quatret, std::allocator<quatret> >::_M_realloc_insert<quatret>(__gnu_cxx::__normal_iterator<quatret*, std::vector<quatret, std::allocator<quatret> > >, quatret&&)+0x100>
    8239:	4d 8d 6c 35 10       	lea    r13,[r13+rsi*1+0x10]
    823e:	4d 85 e4             	test   r12,r12
    8241:	75 2d                	jne    8270 <void std::vector<quatret, std::allocator<quatret> >::_M_realloc_insert<quatret>(__gnu_cxx::__normal_iterator<quatret*, std::vector<quatret, std::allocator<quatret> > >, quatret&&)+0x150>
    8243:	66 48 0f 6e c3       	movq   xmm0,rbx
    8248:	66 49 0f 6e e5       	movq   xmm4,r13
    824d:	4d 89 7e 10          	mov    QWORD PTR [r14+0x10],r15
    8251:	66 0f 6c c4          	punpcklqdq xmm0,xmm4
    8255:	41 0f 11 06          	movups XMMWORD PTR [r14],xmm0
    8259:	48 83 c4 28          	add    rsp,0x28
    825d:	5b                   	pop    rbx
    825e:	5d                   	pop    rbp
    825f:	41 5c                	pop    r12
    8261:	41 5d                	pop    r13
    8263:	41 5e                	pop    r14
    8265:	41 5f                	pop    r15
    8267:	c3                   	ret    
    8268:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    8270:	4c 89 e7             	mov    rdi,r12
    8273:	e8 68 b5 ff ff       	call   37e0 <operator delete(void*)@plt>
    8278:	eb c9                	jmp    8243 <void std::vector<quatret, std::allocator<quatret> >::_M_realloc_insert<quatret>(__gnu_cxx::__normal_iterator<quatret*, std::vector<quatret, std::allocator<quatret> > >, quatret&&)+0x123>
    827a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    8280:	48 85 ff             	test   rdi,rdi
    8283:	75 36                	jne    82bb <void std::vector<quatret, std::allocator<quatret> >::_M_realloc_insert<quatret>(__gnu_cxx::__normal_iterator<quatret*, std::vector<quatret, std::allocator<quatret> > >, quatret&&)+0x19b>
    8285:	f3 0f 6f 1a          	movdqu xmm3,XMMWORD PTR [rdx]
    8289:	31 db                	xor    ebx,ebx
    828b:	41 bd 10 00 00 00    	mov    r13d,0x10
    8291:	45 31 ff             	xor    r15d,r15d
    8294:	42 0f 11 1c 03       	movups XMMWORD PTR [rbx+r8*1],xmm3
    8299:	4c 39 e5             	cmp    rbp,r12
    829c:	0f 85 22 ff ff ff    	jne    81c4 <void std::vector<quatret, std::allocator<quatret> >::_M_realloc_insert<quatret>(__gnu_cxx::__normal_iterator<quatret*, std::vector<quatret, std::allocator<quatret> > >, quatret&&)+0xa4>
    82a2:	48 39 f5             	cmp    rbp,rsi
    82a5:	0f 85 56 ff ff ff    	jne    8201 <void std::vector<quatret, std::allocator<quatret> >::_M_realloc_insert<quatret>(__gnu_cxx::__normal_iterator<quatret*, std::vector<quatret, std::allocator<quatret> > >, quatret&&)+0xe1>
    82ab:	eb 91                	jmp    823e <void std::vector<quatret, std::allocator<quatret> >::_M_realloc_insert<quatret>(__gnu_cxx::__normal_iterator<quatret*, std::vector<quatret, std::allocator<quatret> > >, quatret&&)+0x11e>
    82ad:	0f 1f 00             	nop    DWORD PTR [rax]
    82b0:	41 bf 10 00 00 00    	mov    r15d,0x10
    82b6:	e9 c7 fe ff ff       	jmp    8182 <void std::vector<quatret, std::allocator<quatret> >::_M_realloc_insert<quatret>(__gnu_cxx::__normal_iterator<quatret*, std::vector<quatret, std::allocator<quatret> > >, quatret&&)+0x62>
    82bb:	48 39 cf             	cmp    rdi,rcx
    82be:	48 0f 46 cf          	cmovbe rcx,rdi
    82c2:	49 89 cf             	mov    r15,rcx
    82c5:	49 c1 e7 04          	shl    r15,0x4
    82c9:	e9 b4 fe ff ff       	jmp    8182 <void std::vector<quatret, std::allocator<quatret> >::_M_realloc_insert<quatret>(__gnu_cxx::__normal_iterator<quatret*, std::vector<quatret, std::allocator<quatret> > >, quatret&&)+0x62>
    82ce:	48 8d 3d 13 94 02 00 	lea    rdi,[rip+0x29413]        # 316e8 <_IO_stdin_used+0x6e8>
    82d5:	e8 16 b4 ff ff       	call   36f0 <std::__throw_length_error(char const*)@plt>
    82da:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000082e0 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)>:
    82e0:	f3 0f 1e fa          	endbr64 
    82e4:	41 57                	push   r15
    82e6:	49 89 f7             	mov    r15,rsi
    82e9:	41 56                	push   r14
    82eb:	41 55                	push   r13
    82ed:	41 54                	push   r12
    82ef:	55                   	push   rbp
    82f0:	53                   	push   rbx
    82f1:	48 81 ec 48 02 00 00 	sub    rsp,0x248
    82f8:	48 8b 84 24 88 02 00 00 	mov    rax,QWORD PTR [rsp+0x288]
    8300:	4c 8b b4 24 80 02 00 00 	mov    r14,QWORD PTR [rsp+0x280]
    8308:	48 89 bc 24 f0 01 00 00 	mov    QWORD PTR [rsp+0x1f0],rdi
    8310:	48 89 8c 24 c8 00 00 00 	mov    QWORD PTR [rsp+0xc8],rcx
    8318:	48 89 84 24 08 01 00 00 	mov    QWORD PTR [rsp+0x108],rax
    8320:	48 8b 84 24 90 02 00 00 	mov    rax,QWORD PTR [rsp+0x290]
    8328:	4c 89 44 24 68       	mov    QWORD PTR [rsp+0x68],r8
    832d:	48 89 44 24 78       	mov    QWORD PTR [rsp+0x78],rax
    8332:	48 8b 84 24 98 02 00 00 	mov    rax,QWORD PTR [rsp+0x298]
    833a:	4c 89 8c 24 f0 00 00 00 	mov    QWORD PTR [rsp+0xf0],r9
    8342:	48 89 84 24 80 00 00 00 	mov    QWORD PTR [rsp+0x80],rax
    834a:	48 8b 84 24 a0 02 00 00 	mov    rax,QWORD PTR [rsp+0x2a0]
    8352:	48 89 84 24 00 01 00 00 	mov    QWORD PTR [rsp+0x100],rax
    835a:	48 8b 84 24 a8 02 00 00 	mov    rax,QWORD PTR [rsp+0x2a8]
    8362:	48 89 84 24 98 01 00 00 	mov    QWORD PTR [rsp+0x198],rax
    836a:	48 8b 84 24 b0 02 00 00 	mov    rax,QWORD PTR [rsp+0x2b0]
    8372:	48 89 84 24 a0 01 00 00 	mov    QWORD PTR [rsp+0x1a0],rax
    837a:	48 8b 84 24 b8 02 00 00 	mov    rax,QWORD PTR [rsp+0x2b8]
    8382:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
    8387:	48 8b 84 24 c0 02 00 00 	mov    rax,QWORD PTR [rsp+0x2c0]
    838f:	48 89 84 24 c8 01 00 00 	mov    QWORD PTR [rsp+0x1c8],rax
    8397:	48 8b 84 24 d0 02 00 00 	mov    rax,QWORD PTR [rsp+0x2d0]
    839f:	48 89 84 24 b0 01 00 00 	mov    QWORD PTR [rsp+0x1b0],rax
    83a7:	48 8b 84 24 d8 02 00 00 	mov    rax,QWORD PTR [rsp+0x2d8]
    83af:	48 89 84 24 28 01 00 00 	mov    QWORD PTR [rsp+0x128],rax
    83b7:	48 8b 84 24 e0 02 00 00 	mov    rax,QWORD PTR [rsp+0x2e0]
    83bf:	48 89 84 24 18 01 00 00 	mov    QWORD PTR [rsp+0x118],rax
    83c7:	48 8b 84 24 c8 02 00 00 	mov    rax,QWORD PTR [rsp+0x2c8]
    83cf:	48 89 84 24 f8 01 00 00 	mov    QWORD PTR [rsp+0x1f8],rax
    83d7:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
    83e0:	48 89 84 24 38 02 00 00 	mov    QWORD PTR [rsp+0x238],rax
    83e8:	31 c0                	xor    eax,eax
    83ea:	49 8b 06             	mov    rax,QWORD PTR [r14]
    83ed:	c6 84 24 0b 02 00 00 03 	mov    BYTE PTR [rsp+0x20b],0x3
    83f5:	8b b0 ac 35 03 00    	mov    esi,DWORD PTR [rax+0x335ac]
    83fb:	85 f6                	test   esi,esi
    83fd:	75 08                	jne    8407 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x127>
    83ff:	c6 84 24 0b 02 00 00 00 	mov    BYTE PTR [rsp+0x20b],0x0
    8407:	48 8b 44 24 48       	mov    rax,QWORD PTR [rsp+0x48]
    840c:	48 63 00             	movsxd rax,DWORD PTR [rax]
    840f:	85 c0                	test   eax,eax
    8411:	0f 8e f9 08 00 00    	jle    8d10 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xa30>
    8417:	89 c2                	mov    edx,eax
    8419:	48 63 d8             	movsxd rbx,eax
    841c:	4d 89 f5             	mov    r13,r14
    841f:	4d 89 fe             	mov    r14,r15
    8422:	f7 da                	neg    edx
    8424:	48 89 5c 24 30       	mov    QWORD PTR [rsp+0x30],rbx
    8429:	89 94 24 b8 01 00 00 	mov    DWORD PTR [rsp+0x1b8],edx
    8430:	48 8b 7c 24 30       	mov    rdi,QWORD PTR [rsp+0x30]
    8435:	89 fa                	mov    edx,edi
    8437:	89 bc 24 8c 01 00 00 	mov    DWORD PTR [rsp+0x18c],edi
    843e:	83 c2 04             	add    edx,0x4
    8441:	89 7c 24 14          	mov    DWORD PTR [rsp+0x14],edi
    8445:	39 c2                	cmp    edx,eax
    8447:	0f 8f cd 06 00 00    	jg     8b1a <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x83a>
    844d:	48 8d 04 bd 00 00 00 00 	lea    rax,[rdi*4+0x0]
    8455:	89 fb                	mov    ebx,edi
    8457:	48 63 d2             	movsxd rdx,edx
    845a:	4d 89 f7             	mov    r15,r14
    845d:	48 89 84 24 10 01 00 00 	mov    QWORD PTR [rsp+0x110],rax
    8465:	48 8d 04 3f          	lea    rax,[rdi+rdi*1]
    8469:	48 89 84 24 30 01 00 00 	mov    QWORD PTR [rsp+0x130],rax
    8471:	48 83 c0 02          	add    rax,0x2
    8475:	48 89 84 24 e8 00 00 00 	mov    QWORD PTR [rsp+0xe8],rax
    847d:	89 f8                	mov    eax,edi
    847f:	48 69 c0 85 10 42 08 	imul   rax,rax,0x8421085
    8486:	4c 89 2c 24          	mov    QWORD PTR [rsp],r13
    848a:	49 89 d5             	mov    r13,rdx
    848d:	48 c1 e8 20          	shr    rax,0x20
    8491:	48 89 c1             	mov    rcx,rax
    8494:	89 f8                	mov    eax,edi
    8496:	29 c8                	sub    eax,ecx
    8498:	d1 e8                	shr    eax,1
    849a:	01 c8                	add    eax,ecx
    849c:	c1 e8 04             	shr    eax,0x4
    849f:	89 c1                	mov    ecx,eax
    84a1:	c1 e1 05             	shl    ecx,0x5
    84a4:	29 c1                	sub    ecx,eax
    84a6:	89 f8                	mov    eax,edi
    84a8:	83 c0 01             	add    eax,0x1
    84ab:	29 cb                	sub    ebx,ecx
    84ad:	48 89 c7             	mov    rdi,rax
    84b0:	89 84 24 bc 01 00 00 	mov    DWORD PTR [rsp+0x1bc],eax
    84b7:	48 69 c0 85 10 42 08 	imul   rax,rax,0x8421085
    84be:	48 89 9c 24 d0 00 00 00 	mov    QWORD PTR [rsp+0xd0],rbx
    84c6:	89 fb                	mov    ebx,edi
    84c8:	48 c1 e8 20          	shr    rax,0x20
    84cc:	48 89 c1             	mov    rcx,rax
    84cf:	89 f8                	mov    eax,edi
    84d1:	29 c8                	sub    eax,ecx
    84d3:	d1 e8                	shr    eax,1
    84d5:	01 c8                	add    eax,ecx
    84d7:	c1 e8 04             	shr    eax,0x4
    84da:	89 c1                	mov    ecx,eax
    84dc:	c1 e1 05             	shl    ecx,0x5
    84df:	29 c1                	sub    ecx,eax
    84e1:	48 63 c7             	movsxd rax,edi
    84e4:	48 89 84 24 a8 01 00 00 	mov    QWORD PTR [rsp+0x1a8],rax
    84ec:	48 01 c0             	add    rax,rax
    84ef:	29 cb                	sub    ebx,ecx
    84f1:	48 89 84 24 c0 01 00 00 	mov    QWORD PTR [rsp+0x1c0],rax
    84f9:	48 8d 84 24 f8 01 00 00 	lea    rax,[rsp+0x1f8]
    8501:	48 89 44 24 70       	mov    QWORD PTR [rsp+0x70],rax
    8506:	48 8d 84 24 1c 02 00 00 	lea    rax,[rsp+0x21c]
    850e:	48 89 84 24 b8 00 00 00 	mov    QWORD PTR [rsp+0xb8],rax
    8516:	48 8d 84 24 18 02 00 00 	lea    rax,[rsp+0x218]
    851e:	48 89 84 24 b0 00 00 00 	mov    QWORD PTR [rsp+0xb0],rax
    8526:	48 8d 84 24 14 02 00 00 	lea    rax,[rsp+0x214]
    852e:	48 89 84 24 a8 00 00 00 	mov    QWORD PTR [rsp+0xa8],rax
    8536:	48 8d 84 24 10 02 00 00 	lea    rax,[rsp+0x210]
    853e:	48 89 84 24 a0 00 00 00 	mov    QWORD PTR [rsp+0xa0],rax
    8546:	48 8d 84 24 0b 02 00 00 	lea    rax,[rsp+0x20b]
    854e:	48 89 9c 24 20 01 00 00 	mov    QWORD PTR [rsp+0x120],rbx
    8556:	48 89 84 24 98 00 00 00 	mov    QWORD PTR [rsp+0x98],rax
    855e:	66 90                	xchg   ax,ax
    8560:	4a 8d 04 ad 00 00 00 00 	lea    rax,[r13*4+0x0]
    8568:	48 8b 5c 24 30       	mov    rbx,QWORD PTR [rsp+0x30]
    856d:	44 89 6c 24 64       	mov    DWORD PTR [rsp+0x64],r13d
    8572:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
    8577:	48 8b 84 24 28 01 00 00 	mov    rax,QWORD PTR [rsp+0x128]
    857f:	44 89 6c 24 60       	mov    DWORD PTR [rsp+0x60],r13d
    8584:	c6 44 24 38 00       	mov    BYTE PTR [rsp+0x38],0x0
    8589:	8b 3c 98             	mov    edi,DWORD PTR [rax+rbx*4]
    858c:	42 39 3c a8          	cmp    DWORD PTR [rax+r13*4],edi
    8590:	7c 06                	jl     8598 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x2b8>
    8592:	0f 8e de 07 00 00    	jle    8d76 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xa96>
    8598:	48 8b 9c 24 c8 00 00 00 	mov    rbx,QWORD PTR [rsp+0xc8]
    85a0:	4b 8d 7c 6d 00       	lea    rdi,[r13+r13*2+0x0]
    85a5:	c7 84 24 0c 02 00 00 80 96 98 00 	mov    DWORD PTR [rsp+0x20c],0x989680
    85b0:	48 8d 04 fd 00 00 00 00 	lea    rax,[rdi*8+0x0]
    85b8:	48 8b ac 24 f8 01 00 00 	mov    rbp,QWORD PTR [rsp+0x1f8]
    85c0:	48 89 84 24 e0 00 00 00 	mov    QWORD PTR [rsp+0xe0],rax
    85c8:	48 03 03             	add    rax,QWORD PTR [rbx]
    85cb:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    85ce:	4c 8b 50 08          	mov    r10,QWORD PTR [rax+0x8]
    85d2:	49 39 ca             	cmp    r10,rcx
    85d5:	0f 84 6d 08 00 00    	je     8e48 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xb68>
    85db:	48 8b 84 24 80 00 00 00 	mov    rax,QWORD PTR [rsp+0x80]
    85e3:	4c 89 6c 24 20       	mov    QWORD PTR [rsp+0x20],r13
    85e8:	41 bb 80 96 98 00    	mov    r11d,0x989680
    85ee:	41 be 80 96 98 00    	mov    r14d,0x989680
    85f4:	4c 89 7c 24 28       	mov    QWORD PTR [rsp+0x28],r15
    85f9:	4c 8b 2c 24          	mov    r13,QWORD PTR [rsp]
    85fd:	48 8b 18             	mov    rbx,QWORD PTR [rax]
    8600:	48 8b 44 24 78       	mov    rax,QWORD PTR [rsp+0x78]
    8605:	48 89 6c 24 18       	mov    QWORD PTR [rsp+0x18],rbp
    860a:	4c 8b bc 24 18 01 00 00 	mov    r15,QWORD PTR [rsp+0x118]
    8612:	4c 8b 20             	mov    r12,QWORD PTR [rax]
    8615:	b8 80 96 98 00       	mov    eax,0x989680
    861a:	89 c5                	mov    ebp,eax
    861c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    8620:	48 63 31             	movsxd rsi,DWORD PTR [rcx]
    8623:	44 8b 49 08          	mov    r9d,DWORD PTR [rcx+0x8]
    8627:	8b 51 0c             	mov    edx,DWORD PTR [rcx+0xc]
    862a:	8d 7e ff             	lea    edi,[rsi-0x1]
    862d:	41 c1 f9 02          	sar    r9d,0x2
    8631:	89 f0                	mov    eax,esi
    8633:	2b 44 24 14          	sub    eax,DWORD PTR [rsp+0x14]
    8637:	48 63 ff             	movsxd rdi,edi
    863a:	c1 fa 02             	sar    edx,0x2
    863d:	44 8b 04 bb          	mov    r8d,DWORD PTR [rbx+rdi*4]
    8641:	45 01 c8             	add    r8d,r9d
    8644:	45 39 c6             	cmp    r14d,r8d
    8647:	45 0f 4f f0          	cmovg  r14d,r8d
    864b:	41 39 44 b7 fc       	cmp    DWORD PTR [r15+rsi*4-0x4],eax
    8650:	7c 15                	jl     8667 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x387>
    8652:	49 8b 75 00          	mov    rsi,QWORD PTR [r13+0x0]
    8656:	0f af 86 98 1d 03 00 	imul   eax,DWORD PTR [rsi+0x31d98]
    865d:	44 01 c8             	add    eax,r9d
    8660:	41 39 c6             	cmp    r14d,eax
    8663:	44 0f 4f f0          	cmovg  r14d,eax
    8667:	44 39 c5             	cmp    ebp,r8d
    866a:	41 0f 4f e8          	cmovg  ebp,r8d
    866e:	41 03 14 bc          	add    edx,DWORD PTR [r12+rdi*4]
    8672:	41 39 d3             	cmp    r11d,edx
    8675:	44 0f 4f da          	cmovg  r11d,edx
    8679:	48 83 c1 10          	add    rcx,0x10
    867d:	49 39 ca             	cmp    r10,rcx
    8680:	75 9e                	jne    8620 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x340>
    8682:	44 89 9c 24 0c 02 00 00 	mov    DWORD PTR [rsp+0x20c],r11d
    868a:	4c 8b 6c 24 20       	mov    r13,QWORD PTR [rsp+0x20]
    868f:	89 ac 24 88 00 00 00 	mov    DWORD PTR [rsp+0x88],ebp
    8696:	4c 8b 7c 24 28       	mov    r15,QWORD PTR [rsp+0x28]
    869b:	48 8b 6c 24 18       	mov    rbp,QWORD PTR [rsp+0x18]
    86a0:	48 8b 44 24 58       	mov    rax,QWORD PTR [rsp+0x58]
    86a5:	8b 44 05 00          	mov    eax,DWORD PTR [rbp+rax*1+0x0]
    86a9:	85 c0                	test   eax,eax
    86ab:	79 6b                	jns    8718 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x438>
    86ad:	8b 5c 24 64          	mov    ebx,DWORD PTR [rsp+0x64]
    86b1:	48 8b 7c 24 78       	mov    rdi,QWORD PTR [rsp+0x78]
    86b6:	8d 4b ff             	lea    ecx,[rbx-0x1]
    86b9:	48 8b 17             	mov    rdx,QWORD PTR [rdi]
    86bc:	48 8b 1c 24          	mov    rbx,QWORD PTR [rsp]
    86c0:	48 63 c9             	movsxd rcx,ecx
    86c3:	48 8b bc 24 00 01 00 00 	mov    rdi,QWORD PTR [rsp+0x100]
    86cb:	8b 14 8a             	mov    edx,DWORD PTR [rdx+rcx*4]
    86ce:	48 8b 37             	mov    rsi,QWORD PTR [rdi]
    86d1:	41 39 d3             	cmp    r11d,edx
    86d4:	44 0f 4f da          	cmovg  r11d,edx
    86d8:	48 8b 13             	mov    rdx,QWORD PTR [rbx]
    86db:	8b 1c 8e             	mov    ebx,DWORD PTR [rsi+rcx*4]
    86de:	8b 92 98 1d 03 00    	mov    edx,DWORD PTR [rdx+0x31d98]
    86e4:	44 89 9c 24 0c 02 00 00 	mov    DWORD PTR [rsp+0x20c],r11d
    86ec:	01 d3                	add    ebx,edx
    86ee:	89 de                	mov    esi,ebx
    86f0:	8b 9c 24 88 00 00 00 	mov    ebx,DWORD PTR [rsp+0x88]
    86f7:	39 f3                	cmp    ebx,esi
    86f9:	0f 4e f3             	cmovle esi,ebx
    86fc:	48 8b 9c 24 80 00 00 00 	mov    rbx,QWORD PTR [rsp+0x80]
    8704:	89 b4 24 88 00 00 00 	mov    DWORD PTR [rsp+0x88],esi
    870b:	48 8b 33             	mov    rsi,QWORD PTR [rbx]
    870e:	03 14 8e             	add    edx,DWORD PTR [rsi+rcx*4]
    8711:	41 39 d6             	cmp    r14d,edx
    8714:	44 0f 4f f2          	cmovg  r14d,edx
    8718:	48 8b bc 24 10 01 00 00 	mov    rdi,QWORD PTR [rsp+0x110]
    8720:	44 89 eb             	mov    ebx,r13d
    8723:	48 8d 54 3d 00       	lea    rdx,[rbp+rdi*1+0x0]
    8728:	48 8b 7c 24 30       	mov    rdi,QWORD PTR [rsp+0x30]
    872d:	8b 0a                	mov    ecx,DWORD PTR [rdx]
    872f:	39 f8                	cmp    eax,edi
    8731:	89 bc 24 dc 00 00 00 	mov    DWORD PTR [rsp+0xdc],edi
    8738:	40 0f 94 c7          	sete   dil
    873c:	44 39 e9             	cmp    ecx,r13d
    873f:	40 0f 94 c6          	sete   sil
    8743:	21 f7                	and    edi,esi
    8745:	40 88 bc 24 5a 01 00 00 	mov    BYTE PTR [rsp+0x15a],dil
    874d:	83 f9 ff             	cmp    ecx,0xffffffff
    8750:	0f 84 f2 05 00 00    	je     8d48 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xa68>
    8756:	83 f8 ff             	cmp    eax,0xffffffff
    8759:	41 0f 94 c0          	sete   r8b
    875d:	31 ff                	xor    edi,edi
    875f:	83 f9 ff             	cmp    ecx,0xffffffff
    8762:	7d 07                	jge    876b <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x48b>
    8764:	83 f8 ff             	cmp    eax,0xffffffff
    8767:	40 0f 9c c7          	setl   dil
    876b:	48 8b 44 24 68       	mov    rax,QWORD PTR [rsp+0x68]
    8770:	48 8b b4 24 30 01 00 00 	mov    rsi,QWORD PTR [rsp+0x130]
    8778:	4f 8d 64 2d 00       	lea    r12,[r13+r13*1+0x0]
    877d:	48 8b 00             	mov    rax,QWORD PTR [rax]
    8780:	4a 0f bf 0c 68       	movsx  rcx,WORD PTR [rax+r13*2]
    8785:	48 0f bf 04 30       	movsx  rax,WORD PTR [rax+rsi*1]
    878a:	c7 84 24 10 02 00 00 80 96 98 00 	mov    DWORD PTR [rsp+0x210],0x989680
    8795:	48 8d 34 80          	lea    rsi,[rax+rax*4]
    8799:	48 8d 04 b0          	lea    rax,[rax+rsi*4]
    879d:	48 01 c1             	add    rcx,rax
    87a0:	48 8d 05 19 5b 24 00 	lea    rax,[rip+0x245b19]        # 24e2c0 <pair>
    87a7:	8b 04 88             	mov    eax,DWORD PTR [rax+rcx*4]
    87aa:	84 c0                	test   al,al
    87ac:	88 84 24 5b 01 00 00 	mov    BYTE PTR [rsp+0x15b],al
    87b3:	0f 9f c0             	setg   al
    87b6:	84 44 24 38          	test   BYTE PTR [rsp+0x38],al
    87ba:	0f 84 93 05 00 00    	je     8d53 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xa73>
    87c0:	45 84 c0             	test   r8b,r8b
    87c3:	0f 85 8a 05 00 00    	jne    8d53 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xa73>
    87c9:	8b 84 24 8c 01 00 00 	mov    eax,DWORD PTR [rsp+0x18c]
    87d0:	48 8b b4 24 18 01 00 00 	mov    rsi,QWORD PTR [rsp+0x118]
    87d8:	f7 d0                	not    eax
    87da:	03 44 24 64          	add    eax,DWORD PTR [rsp+0x64]
    87de:	42 39 44 ae fc       	cmp    DWORD PTR [rsi+r13*4-0x4],eax
    87e3:	7c 0e                	jl     87f3 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x513>
    87e5:	40 0a bc 24 5a 01 00 00 	or     dil,BYTE PTR [rsp+0x15a]
    87ed:	0f 85 2a 0f 00 00    	jne    971d <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x143d>
    87f3:	c7 84 24 90 01 00 00 80 96 98 00 	mov    DWORD PTR [rsp+0x190],0x989680
    87fe:	8b 02                	mov    eax,DWORD PTR [rdx]
    8800:	83 f8 ff             	cmp    eax,0xffffffff
    8803:	0f 8c 5f 06 00 00    	jl     8e68 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xb88>
    8809:	39 d8                	cmp    eax,ebx
    880b:	0f 84 67 06 00 00    	je     8e78 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xb98>
    8811:	c7 44 24 38 80 96 98 00 	mov    DWORD PTR [rsp+0x38],0x989680
    8819:	c7 84 24 8c 00 00 00 00 00 00 00 	mov    DWORD PTR [rsp+0x8c],0x0
    8824:	c7 84 24 94 00 00 00 00 00 00 00 	mov    DWORD PTR [rsp+0x94],0x0
    882f:	44 89 5c 24 18       	mov    DWORD PTR [rsp+0x18],r11d
    8834:	48 83 ec 08          	sub    rsp,0x8
    8838:	ff 74 24 78          	push   QWORD PTR [rsp+0x78]
    883c:	48 8b b4 24 b0 01 00 00 	mov    rsi,QWORD PTR [rsp+0x1b0]
    8844:	48 8b bc 24 a8 01 00 00 	mov    rdi,QWORD PTR [rsp+0x1a8]
    884c:	44 8b 4c 24 70       	mov    r9d,DWORD PTR [rsp+0x70]
    8851:	44 8b 44 24 24       	mov    r8d,DWORD PTR [rsp+0x24]
    8856:	48 8b 4c 24 10       	mov    rcx,QWORD PTR [rsp+0x10]
    885b:	48 8b 54 24 78       	mov    rdx,QWORD PTR [rsp+0x78]
    8860:	e8 4b e6 ff ff       	call   6eb0 <int E_MbLoop<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >, short*, vrna_param_s*, int const*>(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, short* const&, vrna_param_s* const&, int, int, int const* const&)>
    8865:	5a                   	pop    rdx
    8866:	59                   	pop    rcx
    8867:	8b 5c 24 38          	mov    ebx,DWORD PTR [rsp+0x38]
    886b:	8b bc 24 90 01 00 00 	mov    edi,DWORD PTR [rsp+0x190]
    8872:	44 8b 5c 24 18       	mov    r11d,DWORD PTR [rsp+0x18]
    8877:	39 d8                	cmp    eax,ebx
    8879:	89 de                	mov    esi,ebx
    887b:	0f 4e f0             	cmovle esi,eax
    887e:	39 fe                	cmp    esi,edi
    8880:	0f 4f f7             	cmovg  esi,edi
    8883:	39 f8                	cmp    eax,edi
    8885:	0f 4f c7             	cmovg  eax,edi
    8888:	89 b4 24 10 02 00 00 	mov    DWORD PTR [rsp+0x210],esi
    888f:	39 c3                	cmp    ebx,eax
    8891:	0f 8c 19 0d 00 00    	jl     95b0 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x12d0>
    8897:	49 8b 47 20          	mov    rax,QWORD PTR [r15+0x20]
    889b:	48 8b 8c 24 d0 00 00 00 	mov    rcx,QWORD PTR [rsp+0xd0]
    88a3:	49 8b 17             	mov    rdx,QWORD PTR [r15]
    88a6:	48 0f af c8          	imul   rcx,rax
    88aa:	4a 8d 3c 29          	lea    rdi,[rcx+r13*1]
    88ae:	89 34 ba             	mov    DWORD PTR [rdx+rdi*4],esi
    88b1:	48 0f af 84 24 20 01 00 00 	imul   rax,QWORD PTR [rsp+0x120]
    88ba:	4d 8d 65 ff          	lea    r12,[r13-0x1]
    88be:	4c 01 e1             	add    rcx,r12
    88c1:	4a 8d 34 28          	lea    rsi,[rax+r13*1]
    88c5:	4c 01 e0             	add    rax,r12
    88c8:	8b 34 b2             	mov    esi,DWORD PTR [rdx+rsi*4]
    88cb:	89 b4 24 14 02 00 00 	mov    DWORD PTR [rsp+0x214],esi
    88d2:	8b 0c 8a             	mov    ecx,DWORD PTR [rdx+rcx*4]
    88d5:	89 8c 24 18 02 00 00 	mov    DWORD PTR [rsp+0x218],ecx
    88dc:	8b 04 82             	mov    eax,DWORD PTR [rdx+rax*4]
    88df:	89 84 24 1c 02 00 00 	mov    DWORD PTR [rsp+0x21c],eax
    88e6:	48 8b 04 24          	mov    rax,QWORD PTR [rsp]
    88ea:	48 8b 00             	mov    rax,QWORD PTR [rax]
    88ed:	83 b8 ac 35 03 00 01 	cmp    DWORD PTR [rax+0x335ac],0x1
    88f4:	75 08                	jne    88fe <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x61e>
    88f6:	c6 84 24 0b 02 00 00 00 	mov    BYTE PTR [rsp+0x20b],0x0
    88fe:	44 89 5c 24 38       	mov    DWORD PTR [rsp+0x38],r11d
    8903:	48 83 ec 08          	sub    rsp,0x8
    8907:	ff 74 24 78          	push   QWORD PTR [rsp+0x78]
    890b:	48 8b 44 24 58       	mov    rax,QWORD PTR [rsp+0x58]
    8910:	8b 00                	mov    eax,DWORD PTR [rax]
    8912:	50                   	push   rax
    8913:	ff b4 24 b0 00 00 00 	push   QWORD PTR [rsp+0xb0]
    891a:	8b bc 24 80 00 00 00 	mov    edi,DWORD PTR [rsp+0x80]
    8921:	57                   	push   rdi
    8922:	8b 5c 24 3c          	mov    ebx,DWORD PTR [rsp+0x3c]
    8926:	53                   	push   rbx
    8927:	48 8b 6c 24 30       	mov    rbp,QWORD PTR [rsp+0x30]
    892c:	4c 8b 84 24 98 00 00 00 	mov    r8,QWORD PTR [rsp+0x98]
    8934:	48 8b 8c 24 e8 00 00 00 	mov    rcx,QWORD PTR [rsp+0xe8]
    893c:	48 8b 94 24 e0 00 00 00 	mov    rdx,QWORD PTR [rsp+0xe0]
    8944:	48 8b b4 24 d8 00 00 00 	mov    rsi,QWORD PTR [rsp+0xd8]
    894c:	49 89 e9             	mov    r9,rbp
    894f:	48 8b bc 24 d0 00 00 00 	mov    rdi,QWORD PTR [rsp+0xd0]
    8957:	e8 74 e9 ff ff       	call   72d0 <int E_ext_Stem<int, int, int, int, short*, vrna_param_s*, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int, int const* const&)>
    895c:	48 83 c4 28          	add    rsp,0x28
    8960:	49 89 e9             	mov    r9,rbp
    8963:	ff 74 24 78          	push   QWORD PTR [rsp+0x78]
    8967:	89 c3                	mov    ebx,eax
    8969:	ff 74 24 58          	push   QWORD PTR [rsp+0x58]
    896d:	ff b4 24 b0 00 00 00 	push   QWORD PTR [rsp+0xb0]
    8974:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [rsp+0x80]
    897b:	50                   	push   rax
    897c:	8b 44 24 3c          	mov    eax,DWORD PTR [rsp+0x3c]
    8980:	50                   	push   rax
    8981:	4c 8b 84 24 98 00 00 00 	mov    r8,QWORD PTR [rsp+0x98]
    8989:	48 8b 8c 24 e8 00 00 00 	mov    rcx,QWORD PTR [rsp+0xe8]
    8991:	48 8b 94 24 e0 00 00 00 	mov    rdx,QWORD PTR [rsp+0xe0]
    8999:	48 8b b4 24 d8 00 00 00 	mov    rsi,QWORD PTR [rsp+0xd8]
    89a1:	48 8b bc 24 d0 00 00 00 	mov    rdi,QWORD PTR [rsp+0xd0]
    89a9:	48 89 6c 24 30       	mov    QWORD PTR [rsp+0x30],rbp
    89ae:	e8 8d ed ff ff       	call   7740 <int E_MLStem<int, int, int, int, short*, vrna_param_s*, int, int const*>(int const&, int const&, int const&, int const&, short* const&, vrna_param_s* const&, int, int, signed char&, int const&, int const* const&)>
    89b3:	89 c5                	mov    ebp,eax
    89b5:	48 8b 44 24 30       	mov    rax,QWORD PTR [rsp+0x30]
    89ba:	48 83 c4 30          	add    rsp,0x30
    89be:	44 8b 5c 24 38       	mov    r11d,DWORD PTR [rsp+0x38]
    89c3:	48 8b 00             	mov    rax,QWORD PTR [rax]
    89c6:	83 b8 ac 35 03 00 01 	cmp    DWORD PTR [rax+0x335ac],0x1
    89cd:	0f 84 c5 03 00 00    	je     8d98 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xab8>
    89d3:	44 39 db             	cmp    ebx,r11d
    89d6:	44 89 d9             	mov    ecx,r11d
    89d9:	45 89 f4             	mov    r12d,r14d
    89dc:	0f b6 bc 24 5a 01 00 00 	movzx  edi,BYTE PTR [rsp+0x15a]
    89e4:	0f 4e cb             	cmovle ecx,ebx
    89e7:	44 39 f5             	cmp    ebp,r14d
    89ea:	44 0f 4e e5          	cmovle r12d,ebp
    89ee:	44 39 db             	cmp    ebx,r11d
    89f1:	0f 9c c0             	setl   al
    89f4:	40 08 c7             	or     dil,al
    89f7:	75 09                	jne    8a02 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x722>
    89f9:	44 39 f5             	cmp    ebp,r14d
    89fc:	0f 8d c9 00 00 00    	jge    8acb <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x7eb>
    8a02:	0f be 84 24 0b 02 00 00 	movsx  eax,BYTE PTR [rsp+0x20b]
    8a0a:	c1 e3 02             	shl    ebx,0x2
    8a0d:	c1 e5 02             	shl    ebp,0x2
    8a10:	49 8b 17             	mov    rdx,QWORD PTR [r15]
    8a13:	09 c3                	or     ebx,eax
    8a15:	09 c5                	or     ebp,eax
    8a17:	48 8b 84 24 d0 00 00 00 	mov    rax,QWORD PTR [rsp+0xd0]
    8a1f:	49 0f af 47 20       	imul   rax,QWORD PTR [r15+0x20]
    8a24:	4c 01 e8             	add    rax,r13
    8a27:	48 8d 04 82          	lea    rax,[rdx+rax*4]
    8a2b:	8b 54 24 64          	mov    edx,DWORD PTR [rsp+0x64]
    8a2f:	83 c2 04             	add    edx,0x4
    8a32:	39 94 24 dc 00 00 00 	cmp    DWORD PTR [rsp+0xdc],edx
    8a39:	0f 8f 5d 0d 00 00    	jg     979c <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x14bc>
    8a3f:	48 8b 94 24 c8 00 00 00 	mov    rdx,QWORD PTR [rsp+0xc8]
    8a47:	8b 00                	mov    eax,DWORD PTR [rax]
    8a49:	89 ac 24 28 02 00 00 	mov    DWORD PTR [rsp+0x228],ebp
    8a50:	48 8b bc 24 e0 00 00 00 	mov    rdi,QWORD PTR [rsp+0xe0]
    8a58:	89 9c 24 2c 02 00 00 	mov    DWORD PTR [rsp+0x22c],ebx
    8a5f:	48 03 3a             	add    rdi,QWORD PTR [rdx]
    8a62:	8b 54 24 14          	mov    edx,DWORD PTR [rsp+0x14]
    8a66:	89 84 24 24 02 00 00 	mov    DWORD PTR [rsp+0x224],eax
    8a6d:	48 8b 77 08          	mov    rsi,QWORD PTR [rdi+0x8]
    8a71:	89 94 24 20 02 00 00 	mov    DWORD PTR [rsp+0x220],edx
    8a78:	48 3b 77 10          	cmp    rsi,QWORD PTR [rdi+0x10]
    8a7c:	0f 84 a6 03 00 00    	je     8e28 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xb48>
    8a82:	66 0f 6e ca          	movd   xmm1,edx
    8a86:	66 0f 6e e8          	movd   xmm5,eax
    8a8a:	66 0f 6e c5          	movd   xmm0,ebp
    8a8e:	48 83 c6 10          	add    rsi,0x10
    8a92:	66 0f 6e e3          	movd   xmm4,ebx
    8a96:	66 0f 62 cd          	punpckldq xmm1,xmm5
    8a9a:	66 0f 62 c4          	punpckldq xmm0,xmm4
    8a9e:	66 0f 6f d9          	movdqa xmm3,xmm1
    8aa2:	66 0f 6c d8          	punpcklqdq xmm3,xmm0
    8aa6:	0f 11 5e f0          	movups XMMWORD PTR [rsi-0x10],xmm3
    8aaa:	48 89 77 08          	mov    QWORD PTR [rdi+0x8],rsi
    8aae:	48 8b 74 24 30       	mov    rsi,QWORD PTR [rsp+0x30]
    8ab3:	48 8b bc 24 08 01 00 00 	mov    rdi,QWORD PTR [rsp+0x108]
    8abb:	4c 89 ea             	mov    rdx,r13
    8abe:	89 4c 24 38          	mov    DWORD PTR [rsp+0x38],ecx
    8ac2:	e8 b9 0e 00 00       	call   9980 <inc_source_ref_count(TraceArrows&, unsigned long, unsigned long)>
    8ac7:	8b 4c 24 38          	mov    ecx,DWORD PTR [rsp+0x38]
    8acb:	48 8b 44 24 78       	mov    rax,QWORD PTR [rsp+0x78]
    8ad0:	48 8b 5c 24 58       	mov    rbx,QWORD PTR [rsp+0x58]
    8ad5:	49 83 c5 01          	add    r13,0x1
    8ad9:	8b bc 24 88 00 00 00 	mov    edi,DWORD PTR [rsp+0x88]
    8ae0:	48 8b 00             	mov    rax,QWORD PTR [rax]
    8ae3:	89 0c 18             	mov    DWORD PTR [rax+rbx*1],ecx
    8ae6:	48 8b 84 24 80 00 00 00 	mov    rax,QWORD PTR [rsp+0x80]
    8aee:	48 8b 00             	mov    rax,QWORD PTR [rax]
    8af1:	44 89 24 18          	mov    DWORD PTR [rax+rbx*1],r12d
    8af5:	48 8b 84 24 00 01 00 00 	mov    rax,QWORD PTR [rsp+0x100]
    8afd:	48 8b 00             	mov    rax,QWORD PTR [rax]
    8b00:	89 3c 18             	mov    DWORD PTR [rax+rbx*1],edi
    8b03:	48 8b 44 24 48       	mov    rax,QWORD PTR [rsp+0x48]
    8b08:	8b 00                	mov    eax,DWORD PTR [rax]
    8b0a:	44 39 e8             	cmp    eax,r13d
    8b0d:	0f 8d 4d fa ff ff    	jge    8560 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x280>
    8b13:	4c 8b 2c 24          	mov    r13,QWORD PTR [rsp]
    8b17:	4d 89 fe             	mov    r14,r15
    8b1a:	48 8b 9c 24 98 01 00 00 	mov    rbx,QWORD PTR [rsp+0x198]
    8b22:	48 8b bc 24 a0 01 00 00 	mov    rdi,QWORD PTR [rsp+0x1a0]
    8b2a:	f3 0f 6f 3b          	movdqu xmm7,XMMWORD PTR [rbx]
    8b2e:	f3 0f 6f 07          	movdqu xmm0,XMMWORD PTR [rdi]
    8b32:	48 8b 57 10          	mov    rdx,QWORD PTR [rdi+0x10]
    8b36:	0f 11 3f             	movups XMMWORD PTR [rdi],xmm7
    8b39:	48 8b 4b 10          	mov    rcx,QWORD PTR [rbx+0x10]
    8b3d:	48 89 4f 10          	mov    QWORD PTR [rdi+0x10],rcx
    8b41:	48 8b bc 24 00 01 00 00 	mov    rdi,QWORD PTR [rsp+0x100]
    8b49:	0f 11 03             	movups XMMWORD PTR [rbx],xmm0
    8b4c:	48 89 53 10          	mov    QWORD PTR [rbx+0x10],rdx
    8b50:	f3 0f 6f 3f          	movdqu xmm7,XMMWORD PTR [rdi]
    8b54:	0f 11 3b             	movups XMMWORD PTR [rbx],xmm7
    8b57:	48 8b 4f 10          	mov    rcx,QWORD PTR [rdi+0x10]
    8b5b:	0f 29 3c 24          	movaps XMMWORD PTR [rsp],xmm7
    8b5f:	48 89 4b 10          	mov    QWORD PTR [rbx+0x10],rcx
    8b63:	48 8b 9c 24 c8 01 00 00 	mov    rbx,QWORD PTR [rsp+0x1c8]
    8b6b:	48 89 57 10          	mov    QWORD PTR [rdi+0x10],rdx
    8b6f:	80 3b 00             	cmp    BYTE PTR [rbx],0x0
    8b72:	0f 11 07             	movups XMMWORD PTR [rdi],xmm0
    8b75:	74 12                	je     8b89 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x8a9>
    8b77:	8b 9c 24 8c 01 00 00 	mov    ebx,DWORD PTR [rsp+0x18c]
    8b7e:	8d 53 1e             	lea    edx,[rbx+0x1e]
    8b81:	39 d0                	cmp    eax,edx
    8b83:	0f 8f f9 0b 00 00    	jg     9782 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x14a2>
    8b89:	48 8b 84 24 c8 00 00 00 	mov    rax,QWORD PTR [rsp+0xc8]
    8b91:	49 bf ff ff ff ff ff ff ff 07 	movabs r15,0x7ffffffffffffff
    8b9b:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    8b9f:	48 8b 28             	mov    rbp,QWORD PTR [rax]
    8ba2:	48 39 eb             	cmp    rbx,rbp
    8ba5:	75 3b                	jne    8be2 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x902>
    8ba7:	e9 34 01 00 00       	jmp    8ce0 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xa00>
    8bac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    8bb0:	66 0f ef c0          	pxor   xmm0,xmm0
    8bb4:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
    8bb9:	48 85 d2             	test   rdx,rdx
    8bbc:	78 64                	js     8c22 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x942>
    8bbe:	66 0f ef c9          	pxor   xmm1,xmm1
    8bc2:	f2 48 0f 2a ca       	cvtsi2sd xmm1,rdx
    8bc7:	f2 0f 59 0d d9 8e 02 00 	mulsd  xmm1,QWORD PTR [rip+0x28ed9]        # 31aa8 <Law_and_Order+0x68>
    8bcf:	66 0f 2f c1          	comisd xmm0,xmm1
    8bd3:	77 77                	ja     8c4c <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x96c>
    8bd5:	48 83 c5 18          	add    rbp,0x18
    8bd9:	48 39 eb             	cmp    rbx,rbp
    8bdc:	0f 84 fe 00 00 00    	je     8ce0 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xa00>
    8be2:	48 8b 7d 08          	mov    rdi,QWORD PTR [rbp+0x8]
    8be6:	48 8b 75 00          	mov    rsi,QWORD PTR [rbp+0x0]
    8bea:	48 8b 45 10          	mov    rax,QWORD PTR [rbp+0x10]
    8bee:	49 89 fc             	mov    r12,rdi
    8bf1:	49 29 f4             	sub    r12,rsi
    8bf4:	48 29 f0             	sub    rax,rsi
    8bf7:	4c 89 e2             	mov    rdx,r12
    8bfa:	48 c1 fa 04          	sar    rdx,0x4
    8bfe:	48 c1 f8 04          	sar    rax,0x4
    8c02:	79 ac                	jns    8bb0 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x8d0>
    8c04:	48 89 c1             	mov    rcx,rax
    8c07:	83 e0 01             	and    eax,0x1
    8c0a:	66 0f ef c0          	pxor   xmm0,xmm0
    8c0e:	48 d1 e9             	shr    rcx,1
    8c11:	48 09 c1             	or     rcx,rax
    8c14:	f2 48 0f 2a c1       	cvtsi2sd xmm0,rcx
    8c19:	f2 0f 58 c0          	addsd  xmm0,xmm0
    8c1d:	48 85 d2             	test   rdx,rdx
    8c20:	79 9c                	jns    8bbe <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x8de>
    8c22:	48 89 d0             	mov    rax,rdx
    8c25:	48 89 d1             	mov    rcx,rdx
    8c28:	66 0f ef c9          	pxor   xmm1,xmm1
    8c2c:	48 d1 e8             	shr    rax,1
    8c2f:	83 e1 01             	and    ecx,0x1
    8c32:	48 09 c8             	or     rax,rcx
    8c35:	f2 48 0f 2a c8       	cvtsi2sd xmm1,rax
    8c3a:	f2 0f 58 c9          	addsd  xmm1,xmm1
    8c3e:	f2 0f 59 0d 62 8e 02 00 	mulsd  xmm1,QWORD PTR [rip+0x28e62]        # 31aa8 <Law_and_Order+0x68>
    8c46:	66 0f 2f c1          	comisd xmm0,xmm1
    8c4a:	76 89                	jbe    8bd5 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x8f5>
    8c4c:	4c 39 fa             	cmp    rdx,r15
    8c4f:	0f 87 6b 0b 00 00    	ja     97c0 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x14e0>
    8c55:	48 85 d2             	test   rdx,rdx
    8c58:	0f 84 12 0b 00 00    	je     9770 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x1490>
    8c5e:	4c 89 e7             	mov    rdi,r12
    8c61:	e8 ba ab ff ff       	call   3820 <operator new(unsigned long)@plt>
    8c66:	48 8b 7d 08          	mov    rdi,QWORD PTR [rbp+0x8]
    8c6a:	48 8b 75 00          	mov    rsi,QWORD PTR [rbp+0x0]
    8c6e:	4a 8d 14 20          	lea    rdx,[rax+r12*1]
    8c72:	48 89 c1             	mov    rcx,rax
    8c75:	49 89 f8             	mov    r8,rdi
    8c78:	49 89 d4             	mov    r12,rdx
    8c7b:	49 29 f0             	sub    r8,rsi
    8c7e:	66 90                	xchg   ax,ax
    8c80:	66 0f 6f 15 08 8e 02 00 	movdqa xmm2,XMMWORD PTR [rip+0x28e08]        # 31a90 <Law_and_Order+0x50>
    8c88:	48 83 c0 10          	add    rax,0x10
    8c8c:	0f 11 50 f0          	movups XMMWORD PTR [rax-0x10],xmm2
    8c90:	48 39 c2             	cmp    rdx,rax
    8c93:	75 eb                	jne    8c80 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x9a0>
    8c95:	48 89 14 24          	mov    QWORD PTR [rsp],rdx
    8c99:	48 39 fe             	cmp    rsi,rdi
    8c9c:	74 12                	je     8cb0 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x9d0>
    8c9e:	48 89 cf             	mov    rdi,rcx
    8ca1:	4c 89 c2             	mov    rdx,r8
    8ca4:	e8 27 ad ff ff       	call   39d0 <memmove@plt>
    8ca9:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    8cad:	48 89 c1             	mov    rcx,rax
    8cb0:	66 48 0f 6e c1       	movq   xmm0,rcx
    8cb5:	4c 89 65 10          	mov    QWORD PTR [rbp+0x10],r12
    8cb9:	0f 16 04 24          	movhps xmm0,QWORD PTR [rsp]
    8cbd:	0f 11 45 00          	movups XMMWORD PTR [rbp+0x0],xmm0
    8cc1:	48 85 ff             	test   rdi,rdi
    8cc4:	0f 84 0b ff ff ff    	je     8bd5 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x8f5>
    8cca:	e8 11 ab ff ff       	call   37e0 <operator delete(void*)@plt>
    8ccf:	48 83 c5 18          	add    rbp,0x18
    8cd3:	48 39 eb             	cmp    rbx,rbp
    8cd6:	0f 85 06 ff ff ff    	jne    8be2 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x902>
    8cdc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    8ce0:	48 8b bc 24 08 01 00 00 	mov    rdi,QWORD PTR [rsp+0x108]
    8ce8:	e8 23 13 00 00       	call   a010 <compactify(TraceArrows&)>
    8ced:	48 83 6c 24 30 01    	sub    QWORD PTR [rsp+0x30],0x1
    8cf3:	48 8b 44 24 48       	mov    rax,QWORD PTR [rsp+0x48]
    8cf8:	48 8b 5c 24 30       	mov    rbx,QWORD PTR [rsp+0x30]
    8cfd:	83 84 24 b8 01 00 00 01 	add    DWORD PTR [rsp+0x1b8],0x1
    8d05:	48 63 00             	movsxd rax,DWORD PTR [rax]
    8d08:	85 db                	test   ebx,ebx
    8d0a:	0f 8f 20 f7 ff ff    	jg     8430 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x150>
    8d10:	48 8b 5c 24 78       	mov    rbx,QWORD PTR [rsp+0x78]
    8d15:	48 8b 13             	mov    rdx,QWORD PTR [rbx]
    8d18:	8b 04 82             	mov    eax,DWORD PTR [rdx+rax*4]
    8d1b:	48 8b 94 24 38 02 00 00 	mov    rdx,QWORD PTR [rsp+0x238]
    8d23:	64 48 33 14 25 28 00 00 00 	xor    rdx,QWORD PTR fs:0x28
    8d2c:	0f 85 89 0a 00 00    	jne    97bb <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x14db>
    8d32:	48 81 c4 48 02 00 00 	add    rsp,0x248
    8d39:	5b                   	pop    rbx
    8d3a:	5d                   	pop    rbp
    8d3b:	41 5c                	pop    r12
    8d3d:	41 5d                	pop    r13
    8d3f:	41 5e                	pop    r14
    8d41:	41 5f                	pop    r15
    8d43:	c3                   	ret    
    8d44:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    8d48:	c7 84 24 10 02 00 00 80 96 98 00 	mov    DWORD PTR [rsp+0x210],0x989680
    8d53:	49 8b 47 20          	mov    rax,QWORD PTR [r15+0x20]
    8d57:	48 8b 8c 24 d0 00 00 00 	mov    rcx,QWORD PTR [rsp+0xd0]
    8d5f:	49 8b 17             	mov    rdx,QWORD PTR [r15]
    8d62:	48 0f af c8          	imul   rcx,rax
    8d66:	4a 8d 34 29          	lea    rsi,[rcx+r13*1]
    8d6a:	c7 04 b2 80 96 98 00 	mov    DWORD PTR [rdx+rsi*4],0x989680
    8d71:	e9 3b fb ff ff       	jmp    88b1 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x5d1>
    8d76:	0f 85 50 0a 00 00    	jne    97cc <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x14ec>
    8d7c:	48 8b 84 24 b0 01 00 00 	mov    rax,QWORD PTR [rsp+0x1b0]
    8d84:	44 39 2c 98          	cmp    DWORD PTR [rax+rbx*4],r13d
    8d88:	0f 9d 44 24 38       	setge  BYTE PTR [rsp+0x38]
    8d8d:	e9 06 f8 ff ff       	jmp    8598 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x2b8>
    8d92:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    8d98:	0f b6 84 24 0b 02 00 00 	movzx  eax,BYTE PTR [rsp+0x20b]
    8da0:	84 c0                	test   al,al
    8da2:	0f 8e 2b fc ff ff    	jle    89d3 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x6f3>
    8da8:	48 8b 54 24 30       	mov    rdx,QWORD PTR [rsp+0x30]
    8dad:	48 89 d6             	mov    rsi,rdx
    8db0:	3c 02                	cmp    al,0x2
    8db2:	74 16                	je     8dca <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xaea>
    8db4:	48 8b b4 24 a8 01 00 00 	mov    rsi,QWORD PTR [rsp+0x1a8]
    8dbc:	3c 03                	cmp    al,0x3
    8dbe:	74 0a                	je     8dca <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xaea>
    8dc0:	4d 89 ec             	mov    r12,r13
    8dc3:	3c 01                	cmp    al,0x1
    8dc5:	74 03                	je     8dca <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xaea>
    8dc7:	48 89 d6             	mov    rsi,rdx
    8dca:	48 8b bc 24 08 01 00 00 	mov    rdi,QWORD PTR [rsp+0x108]
    8dd2:	4c 89 e2             	mov    rdx,r12
    8dd5:	44 89 5c 24 38       	mov    DWORD PTR [rsp+0x38],r11d
    8dda:	48 89 74 24 18       	mov    QWORD PTR [rsp+0x18],rsi
    8ddf:	e8 ec 0a 00 00       	call   98d0 <exists_trace_arrow_from(TraceArrows&, unsigned long, unsigned long)>
    8de4:	44 8b 5c 24 38       	mov    r11d,DWORD PTR [rsp+0x38]
    8de9:	84 c0                	test   al,al
    8deb:	0f 84 e2 fb ff ff    	je     89d3 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x6f3>
    8df1:	44 39 f5             	cmp    ebp,r14d
    8df4:	48 8b 74 24 18       	mov    rsi,QWORD PTR [rsp+0x18]
    8df9:	7c 09                	jl     8e04 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xb24>
    8dfb:	44 39 db             	cmp    ebx,r11d
    8dfe:	0f 8d cf fb ff ff    	jge    89d3 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x6f3>
    8e04:	48 8b bc 24 08 01 00 00 	mov    rdi,QWORD PTR [rsp+0x108]
    8e0c:	4c 89 e2             	mov    rdx,r12
    8e0f:	44 89 5c 24 38       	mov    DWORD PTR [rsp+0x38],r11d
    8e14:	e8 67 0b 00 00       	call   9980 <inc_source_ref_count(TraceArrows&, unsigned long, unsigned long)>
    8e19:	44 8b 5c 24 38       	mov    r11d,DWORD PTR [rsp+0x38]
    8e1e:	e9 b0 fb ff ff       	jmp    89d3 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x6f3>
    8e23:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    8e28:	48 8d 94 24 20 02 00 00 	lea    rdx,[rsp+0x220]
    8e30:	89 4c 24 38          	mov    DWORD PTR [rsp+0x38],ecx
    8e34:	e8 e7 f2 ff ff       	call   8120 <void std::vector<quatret, std::allocator<quatret> >::_M_realloc_insert<quatret>(__gnu_cxx::__normal_iterator<quatret*, std::vector<quatret, std::allocator<quatret> > >, quatret&&)>
    8e39:	8b 4c 24 38          	mov    ecx,DWORD PTR [rsp+0x38]
    8e3d:	e9 6c fc ff ff       	jmp    8aae <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x7ce>
    8e42:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    8e48:	41 bb 80 96 98 00    	mov    r11d,0x989680
    8e4e:	41 be 80 96 98 00    	mov    r14d,0x989680
    8e54:	c7 84 24 88 00 00 00 80 96 98 00 	mov    DWORD PTR [rsp+0x88],0x989680
    8e5f:	e9 3c f8 ff ff       	jmp    86a0 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x3c0>
    8e64:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    8e68:	48 8b 54 24 58       	mov    rdx,QWORD PTR [rsp+0x58]
    8e6d:	83 7c 15 00 ff       	cmp    DWORD PTR [rbp+rdx*1+0x0],0xffffffff
    8e72:	0f 8d 91 f9 ff ff    	jge    8809 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x529>
    8e78:	8b 84 24 8c 01 00 00 	mov    eax,DWORD PTR [rsp+0x18c]
    8e7f:	8b 5c 24 64          	mov    ebx,DWORD PTR [rsp+0x64]
    8e83:	83 c0 1f             	add    eax,0x1f
    8e86:	8d 53 fb             	lea    edx,[rbx-0x5]
    8e89:	39 d0                	cmp    eax,edx
    8e8b:	0f 4f c2             	cmovg  eax,edx
    8e8e:	8b 94 24 bc 01 00 00 	mov    edx,DWORD PTR [rsp+0x1bc]
    8e95:	39 d0                	cmp    eax,edx
    8e97:	0f 8c 74 f9 ff ff    	jl     8811 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x531>
    8e9d:	83 c0 01             	add    eax,0x1
    8ea0:	89 54 24 3c          	mov    DWORD PTR [rsp+0x3c],edx
    8ea4:	83 eb 01             	sub    ebx,0x1
    8ea7:	45 31 c9             	xor    r9d,r9d
    8eaa:	89 84 24 7c 01 00 00 	mov    DWORD PTR [rsp+0x17c],eax
    8eb1:	49 8d 44 24 fe       	lea    rax,[r12-0x2]
    8eb6:	4c 8b 54 24 68       	mov    r10,QWORD PTR [rsp+0x68]
    8ebb:	48 89 84 24 f8 00 00 00 	mov    QWORD PTR [rsp+0xf8],rax
    8ec3:	48 8b 84 24 c0 01 00 00 	mov    rax,QWORD PTR [rsp+0x1c0]
    8ecb:	89 9c 24 94 01 00 00 	mov    DWORD PTR [rsp+0x194],ebx
    8ed2:	48 63 db             	movsxd rbx,ebx
    8ed5:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
    8eda:	8b 84 24 b8 01 00 00 	mov    eax,DWORD PTR [rsp+0x1b8]
    8ee1:	48 89 9c 24 80 01 00 00 	mov    QWORD PTR [rsp+0x180],rbx
    8ee9:	83 e8 20             	sub    eax,0x20
    8eec:	c7 44 24 38 80 96 98 00 	mov    DWORD PTR [rsp+0x38],0x989680
    8ef4:	89 84 24 88 01 00 00 	mov    DWORD PTR [rsp+0x188],eax
    8efb:	48 0f be 84 24 5b 01 00 00 	movsx  rax,BYTE PTR [rsp+0x15b]
    8f04:	c7 84 24 8c 00 00 00 00 00 00 00 	mov    DWORD PTR [rsp+0x8c],0x0
    8f0f:	48 69 d0 88 13 00 00 	imul   rdx,rax,0x1388
    8f16:	48 89 44 24 50       	mov    QWORD PTR [rsp+0x50],rax
    8f1b:	48 69 c0 e8 03 00 00 	imul   rax,rax,0x3e8
    8f22:	44 89 b4 24 e0 01 00 00 	mov    DWORD PTR [rsp+0x1e0],r14d
    8f2a:	c7 84 24 94 00 00 00 00 00 00 00 	mov    DWORD PTR [rsp+0x94],0x0
    8f35:	44 89 9c 24 e4 01 00 00 	mov    DWORD PTR [rsp+0x1e4],r11d
    8f3d:	48 89 84 24 d8 01 00 00 	mov    QWORD PTR [rsp+0x1d8],rax
    8f45:	48 89 94 24 d0 01 00 00 	mov    QWORD PTR [rsp+0x1d0],rdx
    8f4d:	4c 89 fa             	mov    rdx,r15
    8f50:	4c 89 ac 24 e8 01 00 00 	mov    QWORD PTR [rsp+0x1e8],r13
    8f58:	45 89 cd             	mov    r13d,r9d
    8f5b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    8f60:	48 63 44 24 3c       	movsxd rax,DWORD PTR [rsp+0x3c]
    8f65:	48 89 c3             	mov    rbx,rax
    8f68:	48 69 c0 43 08 21 84 	imul   rax,rax,0xffffffff84210843
    8f6f:	89 d9                	mov    ecx,ebx
    8f71:	8d 73 04             	lea    esi,[rbx+0x4]
    8f74:	c1 f9 1f             	sar    ecx,0x1f
    8f77:	48 c1 e8 20          	shr    rax,0x20
    8f7b:	01 d8                	add    eax,ebx
    8f7d:	c1 f8 04             	sar    eax,0x4
    8f80:	29 c8                	sub    eax,ecx
    8f82:	89 c1                	mov    ecx,eax
    8f84:	c1 e1 05             	shl    ecx,0x5
    8f87:	29 c1                	sub    ecx,eax
    8f89:	89 d8                	mov    eax,ebx
    8f8b:	29 c8                	sub    eax,ecx
    8f8d:	8b 8c 24 88 01 00 00 	mov    ecx,DWORD PTR [rsp+0x188]
    8f94:	03 4c 24 64          	add    ecx,DWORD PTR [rsp+0x64]
    8f98:	01 d9                	add    ecx,ebx
    8f9a:	39 f1                	cmp    ecx,esi
    8f9c:	0f 4c ce             	cmovl  ecx,esi
    8f9f:	48 63 d9             	movsxd rbx,ecx
    8fa2:	48 89 5c 24 28       	mov    QWORD PTR [rsp+0x28],rbx
    8fa7:	48 89 df             	mov    rdi,rbx
    8faa:	48 8b 9c 24 80 01 00 00 	mov    rbx,QWORD PTR [rsp+0x180]
    8fb2:	48 39 df             	cmp    rdi,rbx
    8fb5:	0f 87 45 03 00 00    	ja     9300 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x1020>
    8fbb:	48 98                	cdqe   
    8fbd:	48 8b 7c 24 20       	mov    rdi,QWORD PTR [rsp+0x20]
    8fc2:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    8fc7:	8b 84 24 94 01 00 00 	mov    eax,DWORD PTR [rsp+0x194]
    8fce:	48 83 ef 02          	sub    rdi,0x2
    8fd2:	29 d8                	sub    eax,ebx
    8fd4:	48 89 bc 24 c0 00 00 00 	mov    QWORD PTR [rsp+0xc0],rdi
    8fdc:	89 84 24 90 00 00 00 	mov    DWORD PTR [rsp+0x90],eax
    8fe3:	41 89 c4             	mov    r12d,eax
    8fe6:	e9 2a 01 00 00       	jmp    9115 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xe35>
    8feb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    8ff0:	85 c9                	test   ecx,ecx
    8ff2:	0f 84 a0 01 00 00    	je     9198 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xeb8>
    8ff8:	48 8b b4 24 f0 00 00 00 	mov    rsi,QWORD PTR [rsp+0xf0]
    9000:	4c 8b bc 24 e8 00 00 00 	mov    r15,QWORD PTR [rsp+0xe8]
    9008:	48 8b 36             	mov    rsi,QWORD PTR [rsi]
    900b:	46 0f bf 5c 06 02    	movsx  r11d,WORD PTR [rsi+r8*1+0x2]
    9011:	44 89 5c 24 40       	mov    DWORD PTR [rsp+0x40],r11d
    9016:	4c 8b 9c 24 c0 00 00 00 	mov    r11,QWORD PTR [rsp+0xc0]
    901e:	4e 0f bf 0c 1e       	movsx  r9,WORD PTR [rsi+r11*1]
    9023:	4c 8b 9c 24 f8 00 00 00 	mov    r11,QWORD PTR [rsp+0xf8]
    902b:	4e 0f bf 04 1e       	movsx  r8,WORD PTR [rsi+r11*1]
    9030:	4a 0f bf 34 3e       	movsx  rsi,WORD PTR [rsi+r15*1]
    9035:	83 f9 01             	cmp    ecx,0x1
    9038:	0f 84 92 01 00 00    	je     91d0 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xef0>
    903e:	83 f9 02             	cmp    ecx,0x2
    9041:	0f 84 f9 02 00 00    	je     9340 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x1060>
    9047:	44 8d 5c 0d 00       	lea    r11d,[rbp+rcx*1+0x0]
    904c:	41 83 fb 1e          	cmp    r11d,0x1e
    9050:	0f 8f 5a 03 00 00    	jg     93b0 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x10d0>
    9056:	4d 63 db             	movsxd r11,r11d
    9059:	46 8b bc 98 fc 01 00 00 	mov    r15d,DWORD PTR [rax+r11*4+0x1fc]
    9061:	29 cd                	sub    ebp,ecx
    9063:	48 8b 4c 24 50       	mov    rcx,QWORD PTR [rsp+0x50]
    9068:	0f af a8 80 1d 03 00 	imul   ebp,DWORD PTR [rax+0x31d80]
    906f:	48 8d 34 b6          	lea    rsi,[rsi+rsi*4]
    9073:	44 8b 1d a6 01 1e 00 	mov    r11d,DWORD PTR [rip+0x1e01a6]        # 1e9220 <MAX_NINIO>
    907a:	48 8d 0c 89          	lea    rcx,[rcx+rcx*4]
    907e:	44 39 dd             	cmp    ebp,r11d
    9081:	48 8d 0c 89          	lea    rcx,[rcx+rcx*4]
    9085:	44 0f 4e dd          	cmovle r11d,ebp
    9089:	48 01 f1             	add    rcx,rsi
    908c:	49 8d b4 08 64 01 00 00 	lea    rsi,[r8+rcx*1+0x164]
    9094:	48 63 4c 24 40       	movsxd rcx,DWORD PTR [rsp+0x40]
    9099:	4f 8d 04 b6          	lea    r8,[r14+r14*4]
    909d:	4f 8d 04 80          	lea    r8,[r8+r8*4]
    90a1:	45 01 df             	add    r15d,r11d
    90a4:	48 8d 0c 89          	lea    rcx,[rcx+rcx*4]
    90a8:	49 01 c8             	add    r8,rcx
    90ab:	4b 8d 8c 01 64 01 00 00 	lea    rcx,[r9+r8*1+0x164]
    90b3:	8b 4c 88 08          	mov    ecx,DWORD PTR [rax+rcx*4+0x8]
    90b7:	03 4c b0 08          	add    ecx,DWORD PTR [rax+rsi*4+0x8]
    90bb:	41 01 cf             	add    r15d,ecx
    90be:	41 01 ff             	add    r15d,edi
    90c1:	44 39 7c 24 38       	cmp    DWORD PTR [rsp+0x38],r15d
    90c6:	7e 3a                	jle    9102 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xe22>
    90c8:	8b 84 24 90 00 00 00 	mov    eax,DWORD PTR [rsp+0x90]
    90cf:	48 8b 0a             	mov    rcx,QWORD PTR [rdx]
    90d2:	44 89 7c 24 38       	mov    DWORD PTR [rsp+0x38],r15d
    90d7:	01 d8                	add    eax,ebx
    90d9:	89 84 24 94 00 00 00 	mov    DWORD PTR [rsp+0x94],eax
    90e0:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
    90e5:	48 0f af 42 20       	imul   rax,QWORD PTR [rdx+0x20]
    90ea:	48 01 d8             	add    rax,rbx
    90ed:	8b 04 81             	mov    eax,DWORD PTR [rcx+rax*4]
    90f0:	89 84 24 d8 00 00 00 	mov    DWORD PTR [rsp+0xd8],eax
    90f7:	8b 44 24 3c          	mov    eax,DWORD PTR [rsp+0x3c]
    90fb:	89 84 24 8c 00 00 00 	mov    DWORD PTR [rsp+0x8c],eax
    9102:	48 83 eb 01          	sub    rbx,0x1
    9106:	41 83 c4 01          	add    r12d,0x1
    910a:	48 3b 5c 24 28       	cmp    rbx,QWORD PTR [rsp+0x28]
    910f:	0f 82 eb 01 00 00    	jb     9300 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x1020>
    9115:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
    911a:	48 8b 0a             	mov    rcx,QWORD PTR [rdx]
    911d:	44 89 e5             	mov    ebp,r12d
    9120:	4c 8d 04 1b          	lea    r8,[rbx+rbx*1]
    9124:	48 0f af 42 20       	imul   rax,QWORD PTR [rdx+0x20]
    9129:	4c 8b 7c 24 20       	mov    r15,QWORD PTR [rsp+0x20]
    912e:	48 01 d8             	add    rax,rbx
    9131:	8b 3c 81             	mov    edi,DWORD PTR [rcx+rax*4]
    9134:	49 8b 0a             	mov    rcx,QWORD PTR [r10]
    9137:	48 8b 04 24          	mov    rax,QWORD PTR [rsp]
    913b:	48 0f bf 34 59       	movsx  rsi,WORD PTR [rcx+rbx*2]
    9140:	4a 0f bf 0c 39       	movsx  rcx,WORD PTR [rcx+r15*1]
    9145:	48 8b 00             	mov    rax,QWORD PTR [rax]
    9148:	4c 8d 0c 89          	lea    r9,[rcx+rcx*4]
    914c:	4a 8d 0c 89          	lea    rcx,[rcx+r9*4]
    9150:	48 01 ce             	add    rsi,rcx
    9153:	48 8d 0d 66 51 24 00 	lea    rcx,[rip+0x245166]        # 24e2c0 <pair>
    915a:	45 39 ec             	cmp    r12d,r13d
    915d:	48 63 0c b1          	movsxd rcx,DWORD PTR [rcx+rsi*4]
    9161:	41 0f 4c ed          	cmovl  ebp,r13d
    9165:	48 8d 35 54 00 1e 00 	lea    rsi,[rip+0x1e0054]        # 1e91c0 <rtype>
    916c:	4c 63 34 8e          	movsxd r14,DWORD PTR [rsi+rcx*4]
    9170:	44 89 e9             	mov    ecx,r13d
    9173:	41 0f 4c cc          	cmovl  ecx,r12d
    9177:	85 ed                	test   ebp,ebp
    9179:	0f 85 71 fe ff ff    	jne    8ff0 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xd10>
    917f:	48 8b 74 24 50       	mov    rsi,QWORD PTR [rsp+0x50]
    9184:	49 8d 0c f6          	lea    rcx,[r14+rsi*8]
    9188:	44 8b 7c 88 04       	mov    r15d,DWORD PTR [rax+rcx*4+0x4]
    918d:	e9 2c ff ff ff       	jmp    90be <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xdde>
    9192:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    9198:	83 fd 1e             	cmp    ebp,0x1e
    919b:	0f 8f bf 00 00 00    	jg     9260 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xf80>
    91a1:	48 63 cd             	movsxd rcx,ebp
    91a4:	44 8b bc 88 80 01 00 00 	mov    r15d,DWORD PTR [rax+rcx*4+0x180]
    91ac:	83 fd 01             	cmp    ebp,0x1
    91af:	0f 85 20 01 00 00    	jne    92d5 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xff5>
    91b5:	48 8b 74 24 50       	mov    rsi,QWORD PTR [rsp+0x50]
    91ba:	49 8d 0c f6          	lea    rcx,[r14+rsi*8]
    91be:	44 03 7c 88 04       	add    r15d,DWORD PTR [rax+rcx*4+0x4]
    91c3:	e9 f6 fe ff ff       	jmp    90be <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xdde>
    91c8:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    91d0:	83 fd 01             	cmp    ebp,0x1
    91d3:	0f 84 e7 02 00 00    	je     94c0 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x11e0>
    91d9:	83 fd 02             	cmp    ebp,0x2
    91dc:	0f 84 8e 02 00 00    	je     9470 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x1190>
    91e2:	8d 4d 01             	lea    ecx,[rbp+0x1]
    91e5:	83 fd 1d             	cmp    ebp,0x1d
    91e8:	0f 8f 0a 03 00 00    	jg     94f8 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x1218>
    91ee:	48 63 c9             	movsxd rcx,ecx
    91f1:	8b 8c 88 fc 01 00 00 	mov    ecx,DWORD PTR [rax+rcx*4+0x1fc]
    91f8:	83 ed 01             	sub    ebp,0x1
    91fb:	0f af a8 80 1d 03 00 	imul   ebp,DWORD PTR [rax+0x31d80]
    9202:	44 8b 1d 17 00 1e 00 	mov    r11d,DWORD PTR [rip+0x1e0017]        # 1e9220 <MAX_NINIO>
    9209:	48 8d 34 b6          	lea    rsi,[rsi+rsi*4]
    920d:	44 39 dd             	cmp    ebp,r11d
    9210:	41 0f 4f eb          	cmovg  ebp,r11d
    9214:	4c 8b 5c 24 50       	mov    r11,QWORD PTR [rsp+0x50]
    9219:	4f 8d 1c 9b          	lea    r11,[r11+r11*4]
    921d:	01 e9                	add    ecx,ebp
    921f:	4f 8d 1c 9b          	lea    r11,[r11+r11*4]
    9223:	49 01 f3             	add    r11,rsi
    9226:	4b 8d b4 18 2c 02 00 00 	lea    rsi,[r8+r11*1+0x22c]
    922e:	4c 63 44 24 40       	movsxd r8,DWORD PTR [rsp+0x40]
    9233:	4f 8d 1c b6          	lea    r11,[r14+r14*4]
    9237:	4f 8d 1c 9b          	lea    r11,[r11+r11*4]
    923b:	4f 8d 04 80          	lea    r8,[r8+r8*4]
    923f:	4d 01 c3             	add    r11,r8
    9242:	4f 8d 84 19 2c 02 00 00 	lea    r8,[r9+r11*1+0x22c]
    924a:	46 8b 7c 80 08       	mov    r15d,DWORD PTR [rax+r8*4+0x8]
    924f:	44 03 7c b0 08       	add    r15d,DWORD PTR [rax+rsi*4+0x8]
    9254:	41 01 cf             	add    r15d,ecx
    9257:	e9 62 fe ff ff       	jmp    90be <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xdde>
    925c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    9260:	f2 0f 10 b8 90 1d 03 00 	movsd  xmm7,QWORD PTR [rax+0x31d90]
    9268:	66 0f ef c0          	pxor   xmm0,xmm0
    926c:	44 8b b8 f8 01 00 00 	mov    r15d,DWORD PTR [rax+0x1f8]
    9273:	4c 89 94 24 50 01 00 00 	mov    QWORD PTR [rsp+0x150],r10
    927b:	48 89 94 24 48 01 00 00 	mov    QWORD PTR [rsp+0x148],rdx
    9283:	f2 0f 2a c5          	cvtsi2sd xmm0,ebp
    9287:	f2 0f 5e 05 11 88 02 00 	divsd  xmm0,QWORD PTR [rip+0x28811]        # 31aa0 <Law_and_Order+0x60>
    928f:	89 bc 24 40 01 00 00 	mov    DWORD PTR [rsp+0x140],edi
    9296:	48 89 84 24 38 01 00 00 	mov    QWORD PTR [rsp+0x138],rax
    929e:	f2 0f 11 7c 24 40    	movsd  QWORD PTR [rsp+0x40],xmm7
    92a4:	e8 e7 a4 ff ff       	call   3790 <log@plt>
    92a9:	f2 0f 59 44 24 40    	mulsd  xmm0,QWORD PTR [rsp+0x40]
    92af:	48 8b 84 24 38 01 00 00 	mov    rax,QWORD PTR [rsp+0x138]
    92b7:	8b bc 24 40 01 00 00 	mov    edi,DWORD PTR [rsp+0x140]
    92be:	48 8b 94 24 48 01 00 00 	mov    rdx,QWORD PTR [rsp+0x148]
    92c6:	4c 8b 94 24 50 01 00 00 	mov    r10,QWORD PTR [rsp+0x150]
    92ce:	f2 0f 2c c8          	cvttsd2si ecx,xmm0
    92d2:	41 01 cf             	add    r15d,ecx
    92d5:	80 bc 24 5b 01 00 00 02 	cmp    BYTE PTR [rsp+0x15b],0x2
    92dd:	7e 07                	jle    92e6 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x1006>
    92df:	44 03 b8 d4 1d 03 00 	add    r15d,DWORD PTR [rax+0x31dd4]
    92e6:	41 83 fe 02          	cmp    r14d,0x2
    92ea:	0f 8e ce fd ff ff    	jle    90be <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xdde>
    92f0:	44 03 b8 d4 1d 03 00 	add    r15d,DWORD PTR [rax+0x31dd4]
    92f7:	e9 c2 fd ff ff       	jmp    90be <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xdde>
    92fc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    9300:	83 44 24 3c 01       	add    DWORD PTR [rsp+0x3c],0x1
    9305:	41 83 c5 01          	add    r13d,0x1
    9309:	8b 44 24 3c          	mov    eax,DWORD PTR [rsp+0x3c]
    930d:	48 83 44 24 20 02    	add    QWORD PTR [rsp+0x20],0x2
    9313:	3b 84 24 7c 01 00 00 	cmp    eax,DWORD PTR [rsp+0x17c]
    931a:	0f 85 40 fc ff ff    	jne    8f60 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xc80>
    9320:	44 8b b4 24 e0 01 00 00 	mov    r14d,DWORD PTR [rsp+0x1e0]
    9328:	44 8b 9c 24 e4 01 00 00 	mov    r11d,DWORD PTR [rsp+0x1e4]
    9330:	49 89 d7             	mov    r15,rdx
    9333:	4c 8b ac 24 e8 01 00 00 	mov    r13,QWORD PTR [rsp+0x1e8]
    933b:	e9 ef f4 ff ff       	jmp    882f <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x54f>
    9340:	83 fd 02             	cmp    ebp,0x2
    9343:	0f 84 27 03 00 00    	je     9670 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x1390>
    9349:	83 fd 03             	cmp    ebp,0x3
    934c:	0f 85 f5 fc ff ff    	jne    9047 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xd67>
    9352:	48 8b 4c 24 50       	mov    rcx,QWORD PTR [rsp+0x50]
    9357:	48 8d 34 b6          	lea    rsi,[rsi+rsi*4]
    935b:	44 8b 98 80 1d 03 00 	mov    r11d,DWORD PTR [rax+0x31d80]
    9362:	44 03 98 10 02 00 00 	add    r11d,DWORD PTR [rax+0x210]
    9369:	48 8d 0c 89          	lea    rcx,[rcx+rcx*4]
    936d:	48 8d 0c 89          	lea    rcx,[rcx+rcx*4]
    9371:	48 01 f1             	add    rcx,rsi
    9374:	48 63 74 24 40       	movsxd rsi,DWORD PTR [rsp+0x40]
    9379:	49 8d 8c 08 f4 02 00 00 	lea    rcx,[r8+rcx*1+0x2f4]
    9381:	4f 8d 04 b6          	lea    r8,[r14+r14*4]
    9385:	4f 8d 04 80          	lea    r8,[r8+r8*4]
    9389:	48 8d 34 b6          	lea    rsi,[rsi+rsi*4]
    938d:	4c 01 c6             	add    rsi,r8
    9390:	49 8d b4 31 f4 02 00 00 	lea    rsi,[r9+rsi*1+0x2f4]
    9398:	8b 74 b0 08          	mov    esi,DWORD PTR [rax+rsi*4+0x8]
    939c:	03 74 88 08          	add    esi,DWORD PTR [rax+rcx*4+0x8]
    93a0:	41 89 f7             	mov    r15d,esi
    93a3:	45 01 df             	add    r15d,r11d
    93a6:	e9 13 fd ff ff       	jmp    90be <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xdde>
    93ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    93b0:	f2 0f 10 b0 90 1d 03 00 	movsd  xmm6,QWORD PTR [rax+0x31d90]
    93b8:	66 0f ef c0          	pxor   xmm0,xmm0
    93bc:	44 8b b8 74 02 00 00 	mov    r15d,DWORD PTR [rax+0x274]
    93c3:	4c 89 94 24 70 01 00 00 	mov    QWORD PTR [rsp+0x170],r10
    93cb:	f2 41 0f 2a c3       	cvtsi2sd xmm0,r11d
    93d0:	48 89 94 24 68 01 00 00 	mov    QWORD PTR [rsp+0x168],rdx
    93d8:	f2 0f 5e 05 c0 86 02 00 	divsd  xmm0,QWORD PTR [rip+0x286c0]        # 31aa0 <Law_and_Order+0x60>
    93e0:	89 8c 24 60 01 00 00 	mov    DWORD PTR [rsp+0x160],ecx
    93e7:	89 b4 24 78 01 00 00 	mov    DWORD PTR [rsp+0x178],esi
    93ee:	44 89 84 24 5c 01 00 00 	mov    DWORD PTR [rsp+0x15c],r8d
    93f6:	44 89 8c 24 50 01 00 00 	mov    DWORD PTR [rsp+0x150],r9d
    93fe:	89 bc 24 48 01 00 00 	mov    DWORD PTR [rsp+0x148],edi
    9405:	48 89 84 24 40 01 00 00 	mov    QWORD PTR [rsp+0x140],rax
    940d:	f2 0f 11 b4 24 38 01 00 00 	movsd  QWORD PTR [rsp+0x138],xmm6
    9416:	e8 75 a3 ff ff       	call   3790 <log@plt>
    941b:	4c 8b 94 24 70 01 00 00 	mov    r10,QWORD PTR [rsp+0x170]
    9423:	f2 0f 59 84 24 38 01 00 00 	mulsd  xmm0,QWORD PTR [rsp+0x138]
    942c:	48 8b 94 24 68 01 00 00 	mov    rdx,QWORD PTR [rsp+0x168]
    9434:	8b 8c 24 60 01 00 00 	mov    ecx,DWORD PTR [rsp+0x160]
    943b:	48 63 b4 24 78 01 00 00 	movsxd rsi,DWORD PTR [rsp+0x178]
    9443:	4c 63 84 24 5c 01 00 00 	movsxd r8,DWORD PTR [rsp+0x15c]
    944b:	4c 63 8c 24 50 01 00 00 	movsxd r9,DWORD PTR [rsp+0x150]
    9453:	8b bc 24 48 01 00 00 	mov    edi,DWORD PTR [rsp+0x148]
    945a:	48 8b 84 24 40 01 00 00 	mov    rax,QWORD PTR [rsp+0x140]
    9462:	f2 44 0f 2c d8       	cvttsd2si r11d,xmm0
    9467:	45 01 df             	add    r15d,r11d
    946a:	e9 f2 fb ff ff       	jmp    9061 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xd81>
    946f:	90                   	nop
    9470:	48 63 4c 24 40       	movsxd rcx,DWORD PTR [rsp+0x40]
    9475:	41 83 fd 01          	cmp    r13d,0x1
    9479:	0f 84 41 02 00 00    	je     96c0 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x13e0>
    947f:	4c 8b 7c 24 50       	mov    r15,QWORD PTR [rsp+0x50]
    9484:	48 8d 0c 89          	lea    rcx,[rcx+rcx*4]
    9488:	48 8d 34 b6          	lea    rsi,[rsi+rsi*4]
    948c:	4d 69 f6 e8 03 00 00 	imul   r14,r14,0x3e8
    9493:	48 8d 0c 89          	lea    rcx,[rcx+rcx*4]
    9497:	48 01 ce             	add    rsi,rcx
    949a:	4c 89 f9             	mov    rcx,r15
    949d:	48 c1 e1 05          	shl    rcx,0x5
    94a1:	4c 29 f9             	sub    rcx,r15
    94a4:	49 8d 0c 8f          	lea    rcx,[r15+rcx*4]
    94a8:	48 01 f1             	add    rcx,rsi
    94ab:	49 01 ce             	add    r14,rcx
    94ae:	4b 8d 8c 31 dc 0b 00 00 	lea    rcx,[r9+r14*1+0xbdc]
    94b6:	44 8b 7c 88 08       	mov    r15d,DWORD PTR [rax+rcx*4+0x8]
    94bb:	e9 fe fb ff ff       	jmp    90be <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xdde>
    94c0:	4b 8d 0c b6          	lea    rcx,[r14+r14*4]
    94c4:	48 8d 34 b6          	lea    rsi,[rsi+rsi*4]
    94c8:	48 8d 0c 89          	lea    rcx,[rcx+rcx*4]
    94cc:	48 01 f1             	add    rcx,rsi
    94cf:	48 8b 74 24 50       	mov    rsi,QWORD PTR [rsp+0x50]
    94d4:	48 8d 34 b6          	lea    rsi,[rsi+rsi*4]
    94d8:	48 8d 34 b6          	lea    rsi,[rsi+rsi*4]
    94dc:	48 8d 0c f1          	lea    rcx,[rcx+rsi*8]
    94e0:	49 8d 8c 08 9c 05 00 00 	lea    rcx,[r8+rcx*1+0x59c]
    94e8:	44 8b 7c 88 08       	mov    r15d,DWORD PTR [rax+rcx*4+0x8]
    94ed:	e9 cc fb ff ff       	jmp    90be <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xdde>
    94f2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    94f8:	f2 0f 10 a8 90 1d 03 00 	movsd  xmm5,QWORD PTR [rax+0x31d90]
    9500:	66 0f ef c0          	pxor   xmm0,xmm0
    9504:	44 8b b8 74 02 00 00 	mov    r15d,DWORD PTR [rax+0x274]
    950b:	4c 89 94 24 68 01 00 00 	mov    QWORD PTR [rsp+0x168],r10
    9513:	f2 0f 2a c1          	cvtsi2sd xmm0,ecx
    9517:	48 89 94 24 60 01 00 00 	mov    QWORD PTR [rsp+0x160],rdx
    951f:	f2 0f 5e 05 79 85 02 00 	divsd  xmm0,QWORD PTR [rip+0x28579]        # 31aa0 <Law_and_Order+0x60>
    9527:	89 b4 24 78 01 00 00 	mov    DWORD PTR [rsp+0x178],esi
    952e:	44 89 84 24 5c 01 00 00 	mov    DWORD PTR [rsp+0x15c],r8d
    9536:	44 89 8c 24 50 01 00 00 	mov    DWORD PTR [rsp+0x150],r9d
    953e:	89 bc 24 48 01 00 00 	mov    DWORD PTR [rsp+0x148],edi
    9545:	48 89 84 24 40 01 00 00 	mov    QWORD PTR [rsp+0x140],rax
    954d:	f2 0f 11 ac 24 38 01 00 00 	movsd  QWORD PTR [rsp+0x138],xmm5
    9556:	e8 35 a2 ff ff       	call   3790 <log@plt>
    955b:	4c 8b 94 24 68 01 00 00 	mov    r10,QWORD PTR [rsp+0x168]
    9563:	f2 0f 59 84 24 38 01 00 00 	mulsd  xmm0,QWORD PTR [rsp+0x138]
    956c:	48 8b 94 24 60 01 00 00 	mov    rdx,QWORD PTR [rsp+0x160]
    9574:	48 63 b4 24 78 01 00 00 	movsxd rsi,DWORD PTR [rsp+0x178]
    957c:	4c 63 84 24 5c 01 00 00 	movsxd r8,DWORD PTR [rsp+0x15c]
    9584:	4c 63 8c 24 50 01 00 00 	movsxd r9,DWORD PTR [rsp+0x150]
    958c:	8b bc 24 48 01 00 00 	mov    edi,DWORD PTR [rsp+0x148]
    9593:	48 8b 84 24 40 01 00 00 	mov    rax,QWORD PTR [rsp+0x140]
    959b:	f2 0f 2c c8          	cvttsd2si ecx,xmm0
    959f:	44 01 f9             	add    ecx,r15d
    95a2:	e9 51 fc ff ff       	jmp    91f8 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xf18>
    95a7:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    95b0:	48 8b 84 24 c8 00 00 00 	mov    rax,QWORD PTR [rsp+0xc8]
    95b8:	4c 63 84 24 94 00 00 00 	movsxd r8,DWORD PTR [rsp+0x94]
    95c0:	4c 63 8c 24 8c 00 00 00 	movsxd r9,DWORD PTR [rsp+0x8c]
    95c8:	48 8b 00             	mov    rax,QWORD PTR [rax]
    95cb:	4b 8d 14 40          	lea    rdx,[r8+r8*2]
    95cf:	48 8d 04 d0          	lea    rax,[rax+rdx*8]
    95d3:	4c 8b 50 08          	mov    r10,QWORD PTR [rax+0x8]
    95d7:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    95da:	4c 89 d0             	mov    rax,r10
    95dd:	48 29 f8             	sub    rax,rdi
    95e0:	48 c1 f8 04          	sar    rax,0x4
    95e4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    95e8:	48 85 c0             	test   rax,rax
    95eb:	7e 28                	jle    9615 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x1335>
    95ed:	48 89 c1             	mov    rcx,rax
    95f0:	48 d1 f9             	sar    rcx,1
    95f3:	48 89 ca             	mov    rdx,rcx
    95f6:	48 c1 e2 04          	shl    rdx,0x4
    95fa:	48 01 fa             	add    rdx,rdi
    95fd:	48 63 32             	movsxd rsi,DWORD PTR [rdx]
    9600:	49 39 f1             	cmp    r9,rsi
    9603:	73 63                	jae    9668 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x1388>
    9605:	48 29 c8             	sub    rax,rcx
    9608:	48 8d 7a 10          	lea    rdi,[rdx+0x10]
    960c:	48 83 e8 01          	sub    rax,0x1
    9610:	48 85 c0             	test   rax,rax
    9613:	7f d8                	jg     95ed <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x130d>
    9615:	49 39 fa             	cmp    r10,rdi
    9618:	74 0f                	je     9629 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x1349>
    961a:	8b 84 24 8c 00 00 00 	mov    eax,DWORD PTR [rsp+0x8c]
    9621:	3b 07                	cmp    eax,DWORD PTR [rdi]
    9623:	0f 84 d1 00 00 00    	je     96fa <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x141a>
    9629:	48 8b 74 24 30       	mov    rsi,QWORD PTR [rsp+0x30]
    962e:	4c 89 ea             	mov    rdx,r13
    9631:	44 89 5c 24 38       	mov    DWORD PTR [rsp+0x38],r11d
    9636:	48 63 8c 24 8c 00 00 00 	movsxd rcx,DWORD PTR [rsp+0x8c]
    963e:	44 8b 8c 24 d8 00 00 00 	mov    r9d,DWORD PTR [rsp+0xd8]
    9646:	48 8b bc 24 08 01 00 00 	mov    rdi,QWORD PTR [rsp+0x108]
    964e:	e8 ed 0c 00 00       	call   a340 <register_trace_arrow(TraceArrows&, unsigned long, unsigned long, unsigned long, unsigned long, int)>
    9653:	8b b4 24 10 02 00 00 	mov    esi,DWORD PTR [rsp+0x210]
    965a:	44 8b 5c 24 38       	mov    r11d,DWORD PTR [rsp+0x38]
    965f:	e9 33 f2 ff ff       	jmp    8897 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x5b7>
    9664:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    9668:	48 89 c8             	mov    rax,rcx
    966b:	e9 78 ff ff ff       	jmp    95e8 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x1308>
    9670:	4d 69 f6 71 02 00 00 	imul   r14,r14,0x271
    9677:	4f 8d 0c 89          	lea    r9,[r9+r9*4]
    967b:	48 63 4c 24 40       	movsxd rcx,DWORD PTR [rsp+0x40]
    9680:	4f 8d 0c 89          	lea    r9,[r9+r9*4]
    9684:	4d 01 ce             	add    r14,r9
    9687:	49 89 f1             	mov    r9,rsi
    968a:	49 c1 e1 05          	shl    r9,0x5
    968e:	49 29 f1             	sub    r9,rsi
    9691:	4a 8d 34 8e          	lea    rsi,[rsi+r9*4]
    9695:	49 01 f6             	add    r14,rsi
    9698:	48 8d 34 89          	lea    rsi,[rcx+rcx*4]
    969c:	4c 01 f6             	add    rsi,r14
    969f:	48 03 b4 24 d0 01 00 00 	add    rsi,QWORD PTR [rsp+0x1d0]
    96a7:	49 8d 8c 30 1c 2b 00 00 	lea    rcx,[r8+rsi*1+0x2b1c]
    96af:	44 8b 7c 88 08       	mov    r15d,DWORD PTR [rax+rcx*4+0x8]
    96b4:	e9 05 fa ff ff       	jmp    90be <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xdde>
    96b9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    96c0:	48 8d 34 b6          	lea    rsi,[rsi+rsi*4]
    96c4:	48 8d 0c 89          	lea    rcx,[rcx+rcx*4]
    96c8:	48 8d 34 b6          	lea    rsi,[rsi+rsi*4]
    96cc:	48 01 f1             	add    rcx,rsi
    96cf:	4c 89 f6             	mov    rsi,r14
    96d2:	48 c1 e6 05          	shl    rsi,0x5
    96d6:	4c 29 f6             	sub    rsi,r14
    96d9:	49 8d 34 b6          	lea    rsi,[r14+rsi*4]
    96dd:	48 01 f1             	add    rcx,rsi
    96e0:	48 03 8c 24 d8 01 00 00 	add    rcx,QWORD PTR [rsp+0x1d8]
    96e8:	49 8d 8c 08 dc 0b 00 00 	lea    rcx,[r8+rcx*1+0xbdc]
    96f0:	44 8b 7c 88 08       	mov    r15d,DWORD PTR [rax+rcx*4+0x8]
    96f5:	e9 c4 f9 ff ff       	jmp    90be <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0xdde>
    96fa:	48 8b bc 24 08 01 00 00 	mov    rdi,QWORD PTR [rsp+0x108]
    9702:	44 89 5c 24 38       	mov    DWORD PTR [rsp+0x38],r11d
    9707:	e8 64 02 00 00       	call   9970 <avoid_trace_arrow(TraceArrows&)>
    970c:	8b b4 24 10 02 00 00 	mov    esi,DWORD PTR [rsp+0x210]
    9713:	44 8b 5c 24 38       	mov    r11d,DWORD PTR [rsp+0x38]
    9718:	e9 7a f1 ff ff       	jmp    8897 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x5b7>
    971d:	44 8b 4c 24 60       	mov    r9d,DWORD PTR [rsp+0x60]
    9722:	44 8b 44 24 14       	mov    r8d,DWORD PTR [rsp+0x14]
    9727:	44 89 5c 24 38       	mov    DWORD PTR [rsp+0x38],r11d
    972c:	48 8b 94 24 f0 00 00 00 	mov    rdx,QWORD PTR [rsp+0xf0]
    9734:	48 8b 0c 24          	mov    rcx,QWORD PTR [rsp]
    9738:	48 8b 74 24 68       	mov    rsi,QWORD PTR [rsp+0x68]
    973d:	48 8b bc 24 f0 01 00 00 	mov    rdi,QWORD PTR [rsp+0x1f0]
    9745:	e8 b6 d4 ff ff       	call   6c00 <int HairpinE<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, short*, short*, vrna_param_s*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, short* const&, short* const&, vrna_param_s* const&, int, int)>
    974a:	48 8b ac 24 f8 01 00 00 	mov    rbp,QWORD PTR [rsp+0x1f8]
    9752:	44 8b 5c 24 38       	mov    r11d,DWORD PTR [rsp+0x38]
    9757:	89 84 24 90 01 00 00 	mov    DWORD PTR [rsp+0x190],eax
    975e:	48 8b 84 24 10 01 00 00 	mov    rax,QWORD PTR [rsp+0x110]
    9766:	48 8d 54 05 00       	lea    rdx,[rbp+rax*1+0x0]
    976b:	e9 8e f0 ff ff       	jmp    87fe <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x51e>
    9770:	48 c7 04 24 00 00 00 00 	mov    QWORD PTR [rsp],0x0
    9778:	4d 89 e0             	mov    r8,r12
    977b:	31 c9                	xor    ecx,ecx
    977d:	e9 17 f5 ff ff       	jmp    8c99 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x9b9>
    9782:	89 de                	mov    esi,ebx
    9784:	48 8b bc 24 08 01 00 00 	mov    rdi,QWORD PTR [rsp+0x108]
    978c:	83 c6 1f             	add    esi,0x1f
    978f:	48 63 f6             	movsxd rsi,esi
    9792:	e8 69 07 00 00       	call   9f00 <gc_row(TraceArrows&, unsigned long)>
    9797:	e9 ed f3 ff ff       	jmp    8b89 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x8a9>
    979c:	48 8d 0d bd 7f 02 00 	lea    rcx,[rip+0x27fbd]        # 31760 <_IO_stdin_used+0x760>
    97a3:	ba dd 03 00 00       	mov    edx,0x3dd
    97a8:	48 8d 35 89 80 02 00 	lea    rsi,[rip+0x28089]        # 31838 <_IO_stdin_used+0x838>
    97af:	48 8d 3d e3 80 02 00 	lea    rdi,[rip+0x280e3]        # 31899 <_IO_stdin_used+0x899>
    97b6:	e8 85 9f ff ff       	call   3740 <__assert_fail@plt>
    97bb:	e8 a0 a0 ff ff       	call   3860 <__stack_chk_fail@plt>
    97c0:	48 8d 3d a1 80 02 00 	lea    rdi,[rip+0x280a1]        # 31868 <_IO_stdin_used+0x868>
    97c7:	e8 24 9f ff ff       	call   36f0 <std::__throw_length_error(char const*)@plt>
    97cc:	c6 44 24 38 01       	mov    BYTE PTR [rsp+0x38],0x1
    97d1:	e9 c2 ed ff ff       	jmp    8598 <int fold<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, LocARNA::Matrix<int>, SparseMFEFold::{unnamed type#1}, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, short*, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >, vrna_param_s*, TraceArrows, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >, std::allocator<int>, std::allocator<int>, std::allocator<int>, std::allocator<int>, int, bool>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LocARNA::Matrix<int>&, SparseMFEFold::{unnamed type#1} const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > >&, short* const&, std::vector<SparseMFEFold::{unnamed type#1}<quatret, std::allocator<std::vector> >, std::allocator<std::allocator<std::vector> > > const&, vrna_param_s* const&, TraceArrows&, SparseMFEFold::{unnamed type#1}<int, std::allocator<int> >&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, std::allocator<int>&, int const&, bool const&, int const*, int const, int const, int const)+0x2b8>
    97d6:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000097e0 <TraceArrows::TraceArrows(unsigned long)>:
    97e0:	f3 0f 1e fa          	endbr64 
    97e4:	66 0f ef c0          	pxor   xmm0,xmm0
    97e8:	48 c7 47 10 00 00 00 00 	mov    QWORD PTR [rdi+0x10],0x0
    97f0:	48 89 77 18          	mov    QWORD PTR [rdi+0x18],rsi
    97f4:	48 c7 47 20 00 00 00 00 	mov    QWORD PTR [rdi+0x20],0x0
    97fc:	48 c7 47 28 00 00 00 00 	mov    QWORD PTR [rdi+0x28],0x0
    9804:	48 c7 47 30 00 00 00 00 	mov    QWORD PTR [rdi+0x30],0x0
    980c:	48 c7 47 38 00 00 00 00 	mov    QWORD PTR [rdi+0x38],0x0
    9814:	0f 11 07             	movups XMMWORD PTR [rdi],xmm0
    9817:	c3                   	ret    
    9818:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009820 <trace_arrow_from(TraceArrows&, unsigned long, unsigned long)>:
    9820:	f3 0f 1e fa          	endbr64 
    9824:	48 c1 e6 05          	shl    rsi,0x5
    9828:	48 03 37             	add    rsi,QWORD PTR [rdi]
    982b:	4c 8b 46 08          	mov    r8,QWORD PTR [rsi+0x8]
    982f:	48 8b 06             	mov    rax,QWORD PTR [rsi]
    9832:	48 be ab aa aa aa aa aa aa aa 	movabs rsi,0xaaaaaaaaaaaaaaab
    983c:	4c 89 c1             	mov    rcx,r8
    983f:	48 29 c1             	sub    rcx,rax
    9842:	48 c1 f9 03          	sar    rcx,0x3
    9846:	48 0f af ce          	imul   rcx,rsi
    984a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    9850:	48 85 c9             	test   rcx,rcx
    9853:	7e 29                	jle    987e <trace_arrow_from(TraceArrows&, unsigned long, unsigned long)+0x5e>
    9855:	48 89 ce             	mov    rsi,rcx
    9858:	48 89 cf             	mov    rdi,rcx
    985b:	48 d1 fe             	sar    rsi,1
    985e:	48 83 e7 fe          	and    rdi,0xfffffffffffffffe
    9862:	48 01 f7             	add    rdi,rsi
    9865:	48 8d 3c f8          	lea    rdi,[rax+rdi*8]
    9869:	48 39 17             	cmp    QWORD PTR [rdi],rdx
    986c:	73 32                	jae    98a0 <trace_arrow_from(TraceArrows&, unsigned long, unsigned long)+0x80>
    986e:	48 29 f1             	sub    rcx,rsi
    9871:	48 8d 47 18          	lea    rax,[rdi+0x18]
    9875:	48 83 e9 01          	sub    rcx,0x1
    9879:	48 85 c9             	test   rcx,rcx
    987c:	7f d7                	jg     9855 <trace_arrow_from(TraceArrows&, unsigned long, unsigned long)+0x35>
    987e:	49 39 c0             	cmp    r8,rax
    9881:	74 0d                	je     9890 <trace_arrow_from(TraceArrows&, unsigned long, unsigned long)+0x70>
    9883:	48 39 10             	cmp    QWORD PTR [rax],rdx
    9886:	77 08                	ja     9890 <trace_arrow_from(TraceArrows&, unsigned long, unsigned long)+0x70>
    9888:	75 1b                	jne    98a5 <trace_arrow_from(TraceArrows&, unsigned long, unsigned long)+0x85>
    988a:	48 83 c0 08          	add    rax,0x8
    988e:	c3                   	ret    
    988f:	90                   	nop
    9890:	4c 89 c0             	mov    rax,r8
    9893:	48 83 c0 08          	add    rax,0x8
    9897:	c3                   	ret    
    9898:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    98a0:	48 89 f1             	mov    rcx,rsi
    98a3:	eb ab                	jmp    9850 <trace_arrow_from(TraceArrows&, unsigned long, unsigned long)+0x30>
    98a5:	50                   	push   rax
    98a6:	48 8d 0d 0b 82 02 00 	lea    rcx,[rip+0x2820b]        # 31ab8 <Law_and_Order+0x78>
    98ad:	ba 43 00 00 00       	mov    edx,0x43
    98b2:	48 8d 35 67 83 02 00 	lea    rsi,[rip+0x28367]        # 31c20 <Law_and_Order+0x1e0>
    98b9:	48 8d 3d 90 83 02 00 	lea    rdi,[rip+0x28390]        # 31c50 <Law_and_Order+0x210>
    98c0:	e8 7b 9e ff ff       	call   3740 <__assert_fail@plt>
    98c5:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000000098d0 <exists_trace_arrow_from(TraceArrows&, unsigned long, unsigned long)>:
    98d0:	f3 0f 1e fa          	endbr64 
    98d4:	48 c1 e6 05          	shl    rsi,0x5
    98d8:	48 03 37             	add    rsi,QWORD PTR [rdi]
    98db:	4c 8b 46 08          	mov    r8,QWORD PTR [rsi+0x8]
    98df:	48 8b 0e             	mov    rcx,QWORD PTR [rsi]
    98e2:	48 be ab aa aa aa aa aa aa aa 	movabs rsi,0xaaaaaaaaaaaaaaab
    98ec:	4c 89 c0             	mov    rax,r8
    98ef:	48 29 c8             	sub    rax,rcx
    98f2:	48 c1 f8 03          	sar    rax,0x3
    98f6:	48 0f af c6          	imul   rax,rsi
    98fa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    9900:	48 85 c0             	test   rax,rax
    9903:	7e 29                	jle    992e <exists_trace_arrow_from(TraceArrows&, unsigned long, unsigned long)+0x5e>
    9905:	48 89 c6             	mov    rsi,rax
    9908:	48 89 c7             	mov    rdi,rax
    990b:	48 d1 fe             	sar    rsi,1
    990e:	48 83 e7 fe          	and    rdi,0xfffffffffffffffe
    9912:	48 01 f7             	add    rdi,rsi
    9915:	48 8d 3c f9          	lea    rdi,[rcx+rdi*8]
    9919:	48 39 17             	cmp    QWORD PTR [rdi],rdx
    991c:	73 2a                	jae    9948 <exists_trace_arrow_from(TraceArrows&, unsigned long, unsigned long)+0x78>
    991e:	48 29 f0             	sub    rax,rsi
    9921:	48 8d 4f 18          	lea    rcx,[rdi+0x18]
    9925:	48 83 e8 01          	sub    rax,0x1
    9929:	48 85 c0             	test   rax,rax
    992c:	7f d7                	jg     9905 <exists_trace_arrow_from(TraceArrows&, unsigned long, unsigned long)+0x35>
    992e:	49 39 c8             	cmp    r8,rcx
    9931:	74 0d                	je     9940 <exists_trace_arrow_from(TraceArrows&, unsigned long, unsigned long)+0x70>
    9933:	48 39 11             	cmp    QWORD PTR [rcx],rdx
    9936:	77 08                	ja     9940 <exists_trace_arrow_from(TraceArrows&, unsigned long, unsigned long)+0x70>
    9938:	75 13                	jne    994d <exists_trace_arrow_from(TraceArrows&, unsigned long, unsigned long)+0x7d>
    993a:	b8 01 00 00 00       	mov    eax,0x1
    993f:	c3                   	ret    
    9940:	31 c0                	xor    eax,eax
    9942:	c3                   	ret    
    9943:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    9948:	48 89 f0             	mov    rax,rsi
    994b:	eb b3                	jmp    9900 <exists_trace_arrow_from(TraceArrows&, unsigned long, unsigned long)+0x30>
    994d:	50                   	push   rax
    994e:	48 8d 0d 2b 83 02 00 	lea    rcx,[rip+0x2832b]        # 31c80 <Law_and_Order+0x240>
    9955:	ba 3c 00 00 00       	mov    edx,0x3c
    995a:	48 8d 35 bf 82 02 00 	lea    rsi,[rip+0x282bf]        # 31c20 <Law_and_Order+0x1e0>
    9961:	48 8d 3d e8 82 02 00 	lea    rdi,[rip+0x282e8]        # 31c50 <Law_and_Order+0x210>
    9968:	e8 d3 9d ff ff       	call   3740 <__assert_fail@plt>
    996d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000009970 <avoid_trace_arrow(TraceArrows&)>:
    9970:	f3 0f 1e fa          	endbr64 
    9974:	48 83 47 28 01       	add    QWORD PTR [rdi+0x28],0x1
    9979:	c3                   	ret    
    997a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000009980 <inc_source_ref_count(TraceArrows&, unsigned long, unsigned long)>:
    9980:	f3 0f 1e fa          	endbr64 
    9984:	48 b9 ab aa aa aa aa aa aa aa 	movabs rcx,0xaaaaaaaaaaaaaaab
    998e:	48 c1 e6 05          	shl    rsi,0x5
    9992:	48 03 37             	add    rsi,QWORD PTR [rdi]
    9995:	4c 8b 46 08          	mov    r8,QWORD PTR [rsi+0x8]
    9999:	48 8b 36             	mov    rsi,QWORD PTR [rsi]
    999c:	4c 89 c0             	mov    rax,r8
    999f:	48 89 f7             	mov    rdi,rsi
    99a2:	48 29 f0             	sub    rax,rsi
    99a5:	48 c1 f8 03          	sar    rax,0x3
    99a9:	48 0f af c1          	imul   rax,rcx
    99ad:	48 89 c1             	mov    rcx,rax
    99b0:	48 85 c9             	test   rcx,rcx
    99b3:	7e 29                	jle    99de <inc_source_ref_count(TraceArrows&, unsigned long, unsigned long)+0x5e>
    99b5:	49 89 c9             	mov    r9,rcx
    99b8:	49 89 ca             	mov    r10,rcx
    99bb:	49 d1 f9             	sar    r9,1
    99be:	49 83 e2 fe          	and    r10,0xfffffffffffffffe
    99c2:	4d 01 ca             	add    r10,r9
    99c5:	4e 8d 14 d7          	lea    r10,[rdi+r10*8]
    99c9:	49 39 12             	cmp    QWORD PTR [r10],rdx
    99cc:	73 72                	jae    9a40 <inc_source_ref_count(TraceArrows&, unsigned long, unsigned long)+0xc0>
    99ce:	4c 29 c9             	sub    rcx,r9
    99d1:	49 8d 7a 18          	lea    rdi,[r10+0x18]
    99d5:	48 83 e9 01          	sub    rcx,0x1
    99d9:	48 85 c9             	test   rcx,rcx
    99dc:	7f d7                	jg     99b5 <inc_source_ref_count(TraceArrows&, unsigned long, unsigned long)+0x35>
    99de:	49 39 f8             	cmp    r8,rdi
    99e1:	0f 84 99 00 00 00    	je     9a80 <inc_source_ref_count(TraceArrows&, unsigned long, unsigned long)+0x100>
    99e7:	48 83 ec 08          	sub    rsp,0x8
    99eb:	48 39 17             	cmp    QWORD PTR [rdi],rdx
    99ee:	77 45                	ja     9a35 <inc_source_ref_count(TraceArrows&, unsigned long, unsigned long)+0xb5>
    99f0:	0f 85 8b 00 00 00    	jne    9a81 <inc_source_ref_count(TraceArrows&, unsigned long, unsigned long)+0x101>
    99f6:	48 85 c0             	test   rax,rax
    99f9:	7e 29                	jle    9a24 <inc_source_ref_count(TraceArrows&, unsigned long, unsigned long)+0xa4>
    99fb:	48 89 c1             	mov    rcx,rax
    99fe:	48 89 c7             	mov    rdi,rax
    9a01:	48 d1 f9             	sar    rcx,1
    9a04:	48 83 e7 fe          	and    rdi,0xfffffffffffffffe
    9a08:	48 01 cf             	add    rdi,rcx
    9a0b:	48 8d 3c fe          	lea    rdi,[rsi+rdi*8]
    9a0f:	48 39 17             	cmp    QWORD PTR [rdi],rdx
    9a12:	73 3c                	jae    9a50 <inc_source_ref_count(TraceArrows&, unsigned long, unsigned long)+0xd0>
    9a14:	48 29 c8             	sub    rax,rcx
    9a17:	48 8d 77 18          	lea    rsi,[rdi+0x18]
    9a1b:	48 83 e8 01          	sub    rax,0x1
    9a1f:	48 85 c0             	test   rax,rax
    9a22:	7f d7                	jg     99fb <inc_source_ref_count(TraceArrows&, unsigned long, unsigned long)+0x7b>
    9a24:	49 39 f0             	cmp    r8,rsi
    9a27:	74 05                	je     9a2e <inc_source_ref_count(TraceArrows&, unsigned long, unsigned long)+0xae>
    9a29:	48 39 16             	cmp    QWORD PTR [rsi],rdx
    9a2c:	76 2a                	jbe    9a58 <inc_source_ref_count(TraceArrows&, unsigned long, unsigned long)+0xd8>
    9a2e:	4c 89 c6             	mov    rsi,r8
    9a31:	83 46 10 01          	add    DWORD PTR [rsi+0x10],0x1
    9a35:	48 83 c4 08          	add    rsp,0x8
    9a39:	c3                   	ret    
    9a3a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    9a40:	4c 89 c9             	mov    rcx,r9
    9a43:	e9 68 ff ff ff       	jmp    99b0 <inc_source_ref_count(TraceArrows&, unsigned long, unsigned long)+0x30>
    9a48:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    9a50:	48 89 c8             	mov    rax,rcx
    9a53:	eb a1                	jmp    99f6 <inc_source_ref_count(TraceArrows&, unsigned long, unsigned long)+0x76>
    9a55:	0f 1f 00             	nop    DWORD PTR [rax]
    9a58:	74 d7                	je     9a31 <inc_source_ref_count(TraceArrows&, unsigned long, unsigned long)+0xb1>
    9a5a:	48 8d 0d 57 80 02 00 	lea    rcx,[rip+0x28057]        # 31ab8 <Law_and_Order+0x78>
    9a61:	ba 43 00 00 00       	mov    edx,0x43
    9a66:	48 8d 35 b3 81 02 00 	lea    rsi,[rip+0x281b3]        # 31c20 <Law_and_Order+0x1e0>
    9a6d:	48 8d 3d dc 81 02 00 	lea    rdi,[rip+0x281dc]        # 31c50 <Law_and_Order+0x210>
    9a74:	e8 c7 9c ff ff       	call   3740 <__assert_fail@plt>
    9a79:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    9a80:	c3                   	ret    
    9a81:	48 8d 0d f8 81 02 00 	lea    rcx,[rip+0x281f8]        # 31c80 <Law_and_Order+0x240>
    9a88:	ba 3c 00 00 00       	mov    edx,0x3c
    9a8d:	48 8d 35 8c 81 02 00 	lea    rsi,[rip+0x2818c]        # 31c20 <Law_and_Order+0x1e0>
    9a94:	48 8d 3d b5 81 02 00 	lea    rdi,[rip+0x281b5]        # 31c50 <Law_and_Order+0x210>
    9a9b:	e8 a0 9c ff ff       	call   3740 <__assert_fail@plt>

0000000000009aa0 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)>:
    9aa0:	f3 0f 1e fa          	endbr64 
    9aa4:	41 57                	push   r15
    9aa6:	48 89 f0             	mov    rax,rsi
    9aa9:	41 56                	push   r14
    9aab:	48 c1 e0 05          	shl    rax,0x5
    9aaf:	41 55                	push   r13
    9ab1:	41 54                	push   r12
    9ab3:	55                   	push   rbp
    9ab4:	48 89 fd             	mov    rbp,rdi
    9ab7:	53                   	push   rbx
    9ab8:	48 83 ec 28          	sub    rsp,0x28
    9abc:	4c 8b 17             	mov    r10,QWORD PTR [rdi]
    9abf:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
    9ac4:	4d 8d 24 02          	lea    r12,[r10+rax*1]
    9ac8:	48 b8 ab aa aa aa aa aa aa aa 	movabs rax,0xaaaaaaaaaaaaaaab
    9ad2:	49 8b 7c 24 08       	mov    rdi,QWORD PTR [r12+0x8]
    9ad7:	4d 8b 04 24          	mov    r8,QWORD PTR [r12]
    9adb:	49 89 f9             	mov    r9,rdi
    9ade:	4d 89 c3             	mov    r11,r8
    9ae1:	4d 29 c1             	sub    r9,r8
    9ae4:	4c 89 c9             	mov    rcx,r9
    9ae7:	48 c1 f9 03          	sar    rcx,0x3
    9aeb:	48 0f af c8          	imul   rcx,rax
    9aef:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
    9af4:	48 89 c8             	mov    rax,rcx
    9af7:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    9b00:	48 85 c0             	test   rax,rax
    9b03:	7e 2e                	jle    9b33 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x93>
    9b05:	48 89 c3             	mov    rbx,rax
    9b08:	49 89 c5             	mov    r13,rax
    9b0b:	48 d1 fb             	sar    rbx,1
    9b0e:	49 83 e5 fe          	and    r13,0xfffffffffffffffe
    9b12:	49 01 dd             	add    r13,rbx
    9b15:	4f 8d 2c eb          	lea    r13,[r11+r13*8]
    9b19:	49 39 55 00          	cmp    QWORD PTR [r13+0x0],rdx
    9b1d:	0f 83 35 03 00 00    	jae    9e58 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x3b8>
    9b23:	48 29 d8             	sub    rax,rbx
    9b26:	4d 8d 5d 18          	lea    r11,[r13+0x18]
    9b2a:	48 83 e8 01          	sub    rax,0x1
    9b2e:	48 85 c0             	test   rax,rax
    9b31:	7f d2                	jg     9b05 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x65>
    9b33:	4c 39 df             	cmp    rdi,r11
    9b36:	74 78                	je     9bb0 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x110>
    9b38:	49 39 13             	cmp    QWORD PTR [r11],rdx
    9b3b:	77 73                	ja     9bb0 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x110>
    9b3d:	0f 85 8a 03 00 00    	jne    9ecd <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x42d>
    9b43:	4c 89 c3             	mov    rbx,r8
    9b46:	48 89 c8             	mov    rax,rcx
    9b49:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    9b50:	48 85 c0             	test   rax,rax
    9b53:	7e 2d                	jle    9b82 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0xe2>
    9b55:	48 89 c1             	mov    rcx,rax
    9b58:	49 89 c3             	mov    r11,rax
    9b5b:	48 d1 f9             	sar    rcx,1
    9b5e:	49 83 e3 fe          	and    r11,0xfffffffffffffffe
    9b62:	49 01 cb             	add    r11,rcx
    9b65:	4e 8d 1c db          	lea    r11,[rbx+r11*8]
    9b69:	49 39 13             	cmp    QWORD PTR [r11],rdx
    9b6c:	0f 83 ee 02 00 00    	jae    9e60 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x3c0>
    9b72:	48 29 c8             	sub    rax,rcx
    9b75:	49 8d 5b 18          	lea    rbx,[r11+0x18]
    9b79:	48 83 e8 01          	sub    rax,0x1
    9b7d:	48 85 c0             	test   rax,rax
    9b80:	7f d3                	jg     9b55 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0xb5>
    9b82:	48 39 df             	cmp    rdi,rbx
    9b85:	74 49                	je     9bd0 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x130>
    9b87:	48 39 13             	cmp    QWORD PTR [rbx],rdx
    9b8a:	77 44                	ja     9bd0 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x130>
    9b8c:	0f 85 04 03 00 00    	jne    9e96 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x3f6>
    9b92:	8b 43 10             	mov    eax,DWORD PTR [rbx+0x10]
    9b95:	85 c0                	test   eax,eax
    9b97:	74 41                	je     9bda <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x13a>
    9b99:	48 83 c4 28          	add    rsp,0x28
    9b9d:	5b                   	pop    rbx
    9b9e:	5d                   	pop    rbp
    9b9f:	41 5c                	pop    r12
    9ba1:	41 5d                	pop    r13
    9ba3:	41 5e                	pop    r14
    9ba5:	41 5f                	pop    r15
    9ba7:	c3                   	ret    
    9ba8:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    9bb0:	48 8d 0d 49 82 02 00 	lea    rcx,[rip+0x28249]        # 31e00 <Law_and_Order+0x3c0>
    9bb7:	ba 40 00 00 00       	mov    edx,0x40
    9bbc:	48 8d 35 7d 82 02 00 	lea    rsi,[rip+0x2827d]        # 31e40 <Law_and_Order+0x400>
    9bc3:	48 8d 3d 89 83 02 00 	lea    rdi,[rip+0x28389]        # 31f53 <Law_and_Order+0x513>
    9bca:	e8 71 9b ff ff       	call   3740 <__assert_fail@plt>
    9bcf:	90                   	nop
    9bd0:	48 89 fb             	mov    rbx,rdi
    9bd3:	8b 43 10             	mov    eax,DWORD PTR [rbx+0x10]
    9bd6:	85 c0                	test   eax,eax
    9bd8:	75 bf                	jne    9b99 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0xf9>
    9bda:	0f b6 43 09          	movzx  eax,BYTE PTR [rbx+0x9]
    9bde:	49 89 d7             	mov    r15,rdx
    9be1:	48 b9 ab aa aa aa aa aa aa aa 	movabs rcx,0xaaaaaaaaaaaaaaab
    9beb:	49 29 c7             	sub    r15,rax
    9bee:	0f b6 43 08          	movzx  eax,BYTE PTR [rbx+0x8]
    9bf2:	48 01 f0             	add    rax,rsi
    9bf5:	48 c1 e0 05          	shl    rax,0x5
    9bf9:	49 01 c2             	add    r10,rax
    9bfc:	49 8b 42 08          	mov    rax,QWORD PTR [r10+0x8]
    9c00:	4d 8b 2a             	mov    r13,QWORD PTR [r10]
    9c03:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    9c08:	4c 29 e8             	sub    rax,r13
    9c0b:	4d 89 ee             	mov    r14,r13
    9c0e:	48 c1 f8 03          	sar    rax,0x3
    9c12:	48 0f af c1          	imul   rax,rcx
    9c16:	48 89 c1             	mov    rcx,rax
    9c19:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    9c20:	48 85 c9             	test   rcx,rcx
    9c23:	7e 2d                	jle    9c52 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x1b2>
    9c25:	49 89 ca             	mov    r10,rcx
    9c28:	49 89 cb             	mov    r11,rcx
    9c2b:	49 d1 fa             	sar    r10,1
    9c2e:	49 83 e3 fe          	and    r11,0xfffffffffffffffe
    9c32:	4d 01 d3             	add    r11,r10
    9c35:	4f 8d 1c de          	lea    r11,[r14+r11*8]
    9c39:	4d 3b 3b             	cmp    r15,QWORD PTR [r11]
    9c3c:	0f 86 2e 02 00 00    	jbe    9e70 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x3d0>
    9c42:	4c 29 d1             	sub    rcx,r10
    9c45:	4d 8d 73 18          	lea    r14,[r11+0x18]
    9c49:	48 83 e9 01          	sub    rcx,0x1
    9c4d:	48 85 c9             	test   rcx,rcx
    9c50:	7f d3                	jg     9c25 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x185>
    9c52:	4c 39 74 24 18       	cmp    QWORD PTR [rsp+0x18],r14
    9c57:	0f 84 a5 00 00 00    	je     9d02 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x262>
    9c5d:	4d 3b 3e             	cmp    r15,QWORD PTR [r14]
    9c60:	0f 82 9c 00 00 00    	jb     9d02 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x262>
    9c66:	0f 85 61 02 00 00    	jne    9ecd <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x42d>
    9c6c:	48 85 c0             	test   rax,rax
    9c6f:	7e 2e                	jle    9c9f <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x1ff>
    9c71:	48 89 c7             	mov    rdi,rax
    9c74:	48 89 c1             	mov    rcx,rax
    9c77:	48 d1 ff             	sar    rdi,1
    9c7a:	48 83 e1 fe          	and    rcx,0xfffffffffffffffe
    9c7e:	48 01 f9             	add    rcx,rdi
    9c81:	49 8d 4c cd 00       	lea    rcx,[r13+rcx*8+0x0]
    9c86:	4c 3b 39             	cmp    r15,QWORD PTR [rcx]
    9c89:	0f 86 f1 01 00 00    	jbe    9e80 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x3e0>
    9c8f:	48 29 f8             	sub    rax,rdi
    9c92:	4c 8d 69 18          	lea    r13,[rcx+0x18]
    9c96:	48 83 e8 01          	sub    rax,0x1
    9c9a:	48 85 c0             	test   rax,rax
    9c9d:	7f d2                	jg     9c71 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x1d1>
    9c9f:	4c 39 6c 24 18       	cmp    QWORD PTR [rsp+0x18],r13
    9ca4:	74 0a                	je     9cb0 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x210>
    9ca6:	4d 3b 7d 00          	cmp    r15,QWORD PTR [r13+0x0]
    9caa:	0f 83 e0 01 00 00    	jae    9e90 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x3f0>
    9cb0:	4c 8b 6c 24 18       	mov    r13,QWORD PTR [rsp+0x18]
    9cb5:	41 83 6d 10 01       	sub    DWORD PTR [r13+0x10],0x1
    9cba:	0f b6 43 09          	movzx  eax,BYTE PTR [rbx+0x9]
    9cbe:	48 89 ef             	mov    rdi,rbp
    9cc1:	48 29 c2             	sub    rdx,rax
    9cc4:	0f b6 43 08          	movzx  eax,BYTE PTR [rbx+0x8]
    9cc8:	48 01 c6             	add    rsi,rax
    9ccb:	e8 d0 fd ff ff       	call   9aa0 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)>
    9cd0:	4c 8b 64 24 10       	mov    r12,QWORD PTR [rsp+0x10]
    9cd5:	4c 03 65 00          	add    r12,QWORD PTR [rbp+0x0]
    9cd9:	48 b8 ab aa aa aa aa aa aa aa 	movabs rax,0xaaaaaaaaaaaaaaab
    9ce3:	49 8b 7c 24 08       	mov    rdi,QWORD PTR [r12+0x8]
    9ce8:	4d 8b 04 24          	mov    r8,QWORD PTR [r12]
    9cec:	49 89 f9             	mov    r9,rdi
    9cef:	4d 29 c1             	sub    r9,r8
    9cf2:	4c 89 ca             	mov    rdx,r9
    9cf5:	48 c1 fa 03          	sar    rdx,0x3
    9cf9:	48 0f af d0          	imul   rdx,rax
    9cfd:	48 89 54 24 08       	mov    QWORD PTR [rsp+0x8],rdx
    9d02:	48 ba 55 55 55 55 55 55 55 05 	movabs rdx,0x555555555555555
    9d0c:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
    9d11:	48 83 e8 01          	sub    rax,0x1
    9d15:	48 39 d0             	cmp    rax,rdx
    9d18:	0f 87 ce 01 00 00    	ja     9eec <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x44c>
    9d1e:	4d 8d 69 e8          	lea    r13,[r9-0x18]
    9d22:	48 85 c0             	test   rax,rax
    9d25:	0f 84 95 01 00 00    	je     9ec0 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x420>
    9d2b:	4c 89 ef             	mov    rdi,r13
    9d2e:	e8 ed 9a ff ff       	call   3820 <operator new(unsigned long)@plt>
    9d33:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    9d38:	4e 8d 0c 28          	lea    r9,[rax+r13*1]
    9d3c:	48 8d 14 7f          	lea    rdx,[rdi+rdi*2]
    9d40:	4c 8d 54 d0 e8       	lea    r10,[rax+rdx*8-0x18]
    9d45:	48 89 c2             	mov    rdx,rax
    9d48:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    9d50:	48 c7 02 00 00 00 00 	mov    QWORD PTR [rdx],0x0
    9d57:	48 83 c2 18          	add    rdx,0x18
    9d5b:	4c 39 d2             	cmp    rdx,r10
    9d5e:	75 f0                	jne    9d50 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x2b0>
    9d60:	4d 8b 04 24          	mov    r8,QWORD PTR [r12]
    9d64:	49 8b 7c 24 08       	mov    rdi,QWORD PTR [r12+0x8]
    9d69:	48 b9 ab aa aa aa aa aa aa aa 	movabs rcx,0xaaaaaaaaaaaaaaab
    9d73:	48 89 da             	mov    rdx,rbx
    9d76:	4c 29 c2             	sub    rdx,r8
    9d79:	49 89 d3             	mov    r11,rdx
    9d7c:	49 c1 fb 03          	sar    r11,0x3
    9d80:	4c 0f af d9          	imul   r11,rcx
    9d84:	48 85 d2             	test   rdx,rdx
    9d87:	0f 8e 2b 01 00 00    	jle    9eb8 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x418>
    9d8d:	48 89 c6             	mov    rsi,rax
    9d90:	4c 89 c1             	mov    rcx,r8
    9d93:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    9d98:	4c 8b 29             	mov    r13,QWORD PTR [rcx]
    9d9b:	48 83 c6 18          	add    rsi,0x18
    9d9f:	48 83 c1 18          	add    rcx,0x18
    9da3:	4c 89 6e e8          	mov    QWORD PTR [rsi-0x18],r13
    9da7:	4c 8b 69 f0          	mov    r13,QWORD PTR [rcx-0x10]
    9dab:	4c 89 6e f0          	mov    QWORD PTR [rsi-0x10],r13
    9daf:	44 8b 69 f8          	mov    r13d,DWORD PTR [rcx-0x8]
    9db3:	44 89 6e f8          	mov    DWORD PTR [rsi-0x8],r13d
    9db7:	49 83 eb 01          	sub    r11,0x1
    9dbb:	75 db                	jne    9d98 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x2f8>
    9dbd:	48 85 d2             	test   rdx,rdx
    9dc0:	b9 18 00 00 00       	mov    ecx,0x18
    9dc5:	48 0f 4e d1          	cmovle rdx,rcx
    9dc9:	48 01 c2             	add    rdx,rax
    9dcc:	48 be ab aa aa aa aa aa aa aa 	movabs rsi,0xaaaaaaaaaaaaaaab
    9dd6:	48 83 c3 18          	add    rbx,0x18
    9dda:	48 29 df             	sub    rdi,rbx
    9ddd:	48 89 f9             	mov    rcx,rdi
    9de0:	48 c1 f9 03          	sar    rcx,0x3
    9de4:	48 0f af ce          	imul   rcx,rsi
    9de8:	48 85 ff             	test   rdi,rdi
    9deb:	7e 26                	jle    9e13 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x373>
    9ded:	0f 1f 00             	nop    DWORD PTR [rax]
    9df0:	48 8b 33             	mov    rsi,QWORD PTR [rbx]
    9df3:	48 83 c2 18          	add    rdx,0x18
    9df7:	48 83 c3 18          	add    rbx,0x18
    9dfb:	48 89 72 e8          	mov    QWORD PTR [rdx-0x18],rsi
    9dff:	48 8b 73 f0          	mov    rsi,QWORD PTR [rbx-0x10]
    9e03:	48 89 72 f0          	mov    QWORD PTR [rdx-0x10],rsi
    9e07:	8b 73 f8             	mov    esi,DWORD PTR [rbx-0x8]
    9e0a:	89 72 f8             	mov    DWORD PTR [rdx-0x8],esi
    9e0d:	48 83 e9 01          	sub    rcx,0x1
    9e11:	75 dd                	jne    9df0 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x350>
    9e13:	66 48 0f 6e c0       	movq   xmm0,rax
    9e18:	66 49 0f 6e ca       	movq   xmm1,r10
    9e1d:	4d 89 4c 24 10       	mov    QWORD PTR [r12+0x10],r9
    9e22:	66 0f 6c c1          	punpcklqdq xmm0,xmm1
    9e26:	41 0f 11 04 24       	movups XMMWORD PTR [r12],xmm0
    9e2b:	4d 85 c0             	test   r8,r8
    9e2e:	74 08                	je     9e38 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x398>
    9e30:	4c 89 c7             	mov    rdi,r8
    9e33:	e8 a8 99 ff ff       	call   37e0 <operator delete(void*)@plt>
    9e38:	48 83 6d 20 01       	sub    QWORD PTR [rbp+0x20],0x1
    9e3d:	48 83 45 30 01       	add    QWORD PTR [rbp+0x30],0x1
    9e42:	48 83 c4 28          	add    rsp,0x28
    9e46:	5b                   	pop    rbx
    9e47:	5d                   	pop    rbp
    9e48:	41 5c                	pop    r12
    9e4a:	41 5d                	pop    r13
    9e4c:	41 5e                	pop    r14
    9e4e:	41 5f                	pop    r15
    9e50:	c3                   	ret    
    9e51:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    9e58:	48 89 d8             	mov    rax,rbx
    9e5b:	e9 a0 fc ff ff       	jmp    9b00 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x60>
    9e60:	48 89 c8             	mov    rax,rcx
    9e63:	e9 e8 fc ff ff       	jmp    9b50 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0xb0>
    9e68:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    9e70:	4c 89 d1             	mov    rcx,r10
    9e73:	e9 a8 fd ff ff       	jmp    9c20 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x180>
    9e78:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    9e80:	48 89 f8             	mov    rax,rdi
    9e83:	e9 e4 fd ff ff       	jmp    9c6c <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x1cc>
    9e88:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    9e90:	0f 84 1f fe ff ff    	je     9cb5 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x215>
    9e96:	48 8d 0d 1b 7c 02 00 	lea    rcx,[rip+0x27c1b]        # 31ab8 <Law_and_Order+0x78>
    9e9d:	ba 43 00 00 00       	mov    edx,0x43
    9ea2:	48 8d 35 77 7d 02 00 	lea    rsi,[rip+0x27d77]        # 31c20 <Law_and_Order+0x1e0>
    9ea9:	48 8d 3d a0 7d 02 00 	lea    rdi,[rip+0x27da0]        # 31c50 <Law_and_Order+0x210>
    9eb0:	e8 8b 98 ff ff       	call   3740 <__assert_fail@plt>
    9eb5:	0f 1f 00             	nop    DWORD PTR [rax]
    9eb8:	48 89 c2             	mov    rdx,rax
    9ebb:	e9 0c ff ff ff       	jmp    9dcc <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x32c>
    9ec0:	4d 89 e9             	mov    r9,r13
    9ec3:	31 c0                	xor    eax,eax
    9ec5:	45 31 d2             	xor    r10d,r10d
    9ec8:	e9 9c fe ff ff       	jmp    9d69 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)+0x2c9>
    9ecd:	48 8d 0d ac 7d 02 00 	lea    rcx,[rip+0x27dac]        # 31c80 <Law_and_Order+0x240>
    9ed4:	ba 3c 00 00 00       	mov    edx,0x3c
    9ed9:	48 8d 35 40 7d 02 00 	lea    rsi,[rip+0x27d40]        # 31c20 <Law_and_Order+0x1e0>
    9ee0:	48 8d 3d 69 7d 02 00 	lea    rdi,[rip+0x27d69]        # 31c50 <Law_and_Order+0x210>
    9ee7:	e8 54 98 ff ff       	call   3740 <__assert_fail@plt>
    9eec:	48 8d 3d 75 79 02 00 	lea    rdi,[rip+0x27975]        # 31868 <_IO_stdin_used+0x868>
    9ef3:	e8 f8 97 ff ff       	call   36f0 <std::__throw_length_error(char const*)@plt>
    9ef8:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009f00 <gc_row(TraceArrows&, unsigned long)>:
    9f00:	f3 0f 1e fa          	endbr64 
    9f04:	41 56                	push   r14
    9f06:	41 55                	push   r13
    9f08:	41 54                	push   r12
    9f0a:	55                   	push   rbp
    9f0b:	53                   	push   rbx
    9f0c:	48 8b 47 18          	mov    rax,QWORD PTR [rdi+0x18]
    9f10:	48 39 f0             	cmp    rax,rsi
    9f13:	0f 82 cb 00 00 00    	jb     9fe4 <gc_row(TraceArrows&, unsigned long)+0xe4>
    9f19:	48 89 f5             	mov    rbp,rsi
    9f1c:	4c 8d 66 04          	lea    r12,[rsi+0x4]
    9f20:	49 89 fd             	mov    r13,rdi
    9f23:	49 89 f6             	mov    r14,rsi
    9f26:	48 bb ab aa aa aa aa aa aa aa 	movabs rbx,0xaaaaaaaaaaaaaaab
    9f30:	48 c1 e5 05          	shl    rbp,0x5
    9f34:	4c 39 e0             	cmp    rax,r12
    9f37:	72 79                	jb     9fb2 <gc_row(TraceArrows&, unsigned long)+0xb2>
    9f39:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    9f40:	49 8b 45 00          	mov    rax,QWORD PTR [r13+0x0]
    9f44:	48 01 e8             	add    rax,rbp
    9f47:	48 8b 78 08          	mov    rdi,QWORD PTR [rax+0x8]
    9f4b:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    9f4e:	48 89 f8             	mov    rax,rdi
    9f51:	48 29 d0             	sub    rax,rdx
    9f54:	48 c1 f8 03          	sar    rax,0x3
    9f58:	48 0f af c3          	imul   rax,rbx
    9f5c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    9f60:	48 85 c0             	test   rax,rax
    9f63:	7e 29                	jle    9f8e <gc_row(TraceArrows&, unsigned long)+0x8e>
    9f65:	48 89 c1             	mov    rcx,rax
    9f68:	49 89 c0             	mov    r8,rax
    9f6b:	48 d1 f9             	sar    rcx,1
    9f6e:	49 83 e0 fe          	and    r8,0xfffffffffffffffe
    9f72:	49 01 c8             	add    r8,rcx
    9f75:	4a 8d 34 c2          	lea    rsi,[rdx+r8*8]
    9f79:	4c 39 26             	cmp    QWORD PTR [rsi],r12
    9f7c:	73 42                	jae    9fc0 <gc_row(TraceArrows&, unsigned long)+0xc0>
    9f7e:	48 29 c8             	sub    rax,rcx
    9f81:	48 8d 56 18          	lea    rdx,[rsi+0x18]
    9f85:	48 83 e8 01          	sub    rax,0x1
    9f89:	48 85 c0             	test   rax,rax
    9f8c:	7f d7                	jg     9f65 <gc_row(TraceArrows&, unsigned long)+0x65>
    9f8e:	48 39 d7             	cmp    rdi,rdx
    9f91:	74 15                	je     9fa8 <gc_row(TraceArrows&, unsigned long)+0xa8>
    9f93:	4c 39 22             	cmp    QWORD PTR [rdx],r12
    9f96:	77 10                	ja     9fa8 <gc_row(TraceArrows&, unsigned long)+0xa8>
    9f98:	75 2b                	jne    9fc5 <gc_row(TraceArrows&, unsigned long)+0xc5>
    9f9a:	4c 89 e2             	mov    rdx,r12
    9f9d:	4c 89 f6             	mov    rsi,r14
    9fa0:	4c 89 ef             	mov    rdi,r13
    9fa3:	e8 f8 fa ff ff       	call   9aa0 <gc_trace_arrow(TraceArrows&, unsigned long, unsigned long)>
    9fa8:	49 83 c4 01          	add    r12,0x1
    9fac:	4d 39 65 18          	cmp    QWORD PTR [r13+0x18],r12
    9fb0:	73 8e                	jae    9f40 <gc_row(TraceArrows&, unsigned long)+0x40>
    9fb2:	5b                   	pop    rbx
    9fb3:	5d                   	pop    rbp
    9fb4:	41 5c                	pop    r12
    9fb6:	41 5d                	pop    r13
    9fb8:	41 5e                	pop    r14
    9fba:	c3                   	ret    
    9fbb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    9fc0:	48 89 c8             	mov    rax,rcx
    9fc3:	eb 9b                	jmp    9f60 <gc_row(TraceArrows&, unsigned long)+0x60>
    9fc5:	48 8d 0d b4 7c 02 00 	lea    rcx,[rip+0x27cb4]        # 31c80 <Law_and_Order+0x240>
    9fcc:	ba 3c 00 00 00       	mov    edx,0x3c
    9fd1:	48 8d 35 48 7c 02 00 	lea    rsi,[rip+0x27c48]        # 31c20 <Law_and_Order+0x1e0>
    9fd8:	48 8d 3d 71 7c 02 00 	lea    rdi,[rip+0x27c71]        # 31c50 <Law_and_Order+0x210>
    9fdf:	e8 5c 97 ff ff       	call   3740 <__assert_fail@plt>
    9fe4:	48 8d 0d 85 7e 02 00 	lea    rcx,[rip+0x27e85]        # 31e70 <Law_and_Order+0x430>
    9feb:	ba 56 00 00 00       	mov    edx,0x56
    9ff0:	48 8d 35 49 7e 02 00 	lea    rsi,[rip+0x27e49]        # 31e40 <Law_and_Order+0x400>
    9ff7:	48 8d 3d 71 7f 02 00 	lea    rdi,[rip+0x27f71]        # 31f6f <Law_and_Order+0x52f>
    9ffe:	e8 3d 97 ff ff       	call   3740 <__assert_fail@plt>
    a003:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    a00e:	66 90                	xchg   ax,ax

000000000000a010 <compactify(TraceArrows&)>:
    a010:	f3 0f 1e fa          	endbr64 
    a014:	41 56                	push   r14
    a016:	41 55                	push   r13
    a018:	41 54                	push   r12
    a01a:	55                   	push   rbp
    a01b:	53                   	push   rbx
    a01c:	48 83 ec 10          	sub    rsp,0x10
    a020:	4c 8b 77 08          	mov    r14,QWORD PTR [rdi+0x8]
    a024:	48 8b 1f             	mov    rbx,QWORD PTR [rdi]
    a027:	4c 39 f3             	cmp    rbx,r14
    a02a:	0f 84 71 01 00 00    	je     a1a1 <compactify(TraceArrows&)+0x191>
    a030:	49 bd ab aa aa aa aa aa aa aa 	movabs r13,0xaaaaaaaaaaaaaaab
    a03a:	48 bd 55 55 55 55 55 55 55 05 	movabs rbp,0x555555555555555
    a044:	eb 3c                	jmp    a082 <compactify(TraceArrows&)+0x72>
    a046:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    a050:	66 0f ef c0          	pxor   xmm0,xmm0
    a054:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
    a059:	48 85 d2             	test   rdx,rdx
    a05c:	78 6b                	js     a0c9 <compactify(TraceArrows&)+0xb9>
    a05e:	66 0f ef c9          	pxor   xmm1,xmm1
    a062:	f2 48 0f 2a ca       	cvtsi2sd xmm1,rdx
    a067:	f2 0f 59 0d 09 7f 02 00 	mulsd  xmm1,QWORD PTR [rip+0x27f09]        # 31f78 <Law_and_Order+0x538>
    a06f:	66 0f 2f c1          	comisd xmm0,xmm1
    a073:	77 7e                	ja     a0f3 <compactify(TraceArrows&)+0xe3>
    a075:	48 83 c3 20          	add    rbx,0x20
    a079:	49 39 de             	cmp    r14,rbx
    a07c:	0f 84 1f 01 00 00    	je     a1a1 <compactify(TraceArrows&)+0x191>
    a082:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    a085:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
    a089:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
    a08d:	48 29 f8             	sub    rax,rdi
    a090:	48 c1 f8 03          	sar    rax,0x3
    a094:	49 29 fc             	sub    r12,rdi
    a097:	49 0f af c5          	imul   rax,r13
    a09b:	4c 89 e2             	mov    rdx,r12
    a09e:	48 c1 fa 03          	sar    rdx,0x3
    a0a2:	49 0f af d5          	imul   rdx,r13
    a0a6:	48 85 c0             	test   rax,rax
    a0a9:	79 a5                	jns    a050 <compactify(TraceArrows&)+0x40>
    a0ab:	48 89 c1             	mov    rcx,rax
    a0ae:	83 e0 01             	and    eax,0x1
    a0b1:	66 0f ef c0          	pxor   xmm0,xmm0
    a0b5:	48 d1 e9             	shr    rcx,1
    a0b8:	48 09 c1             	or     rcx,rax
    a0bb:	f2 48 0f 2a c1       	cvtsi2sd xmm0,rcx
    a0c0:	f2 0f 58 c0          	addsd  xmm0,xmm0
    a0c4:	48 85 d2             	test   rdx,rdx
    a0c7:	79 95                	jns    a05e <compactify(TraceArrows&)+0x4e>
    a0c9:	48 89 d0             	mov    rax,rdx
    a0cc:	48 89 d1             	mov    rcx,rdx
    a0cf:	66 0f ef c9          	pxor   xmm1,xmm1
    a0d3:	48 d1 e8             	shr    rax,1
    a0d6:	83 e1 01             	and    ecx,0x1
    a0d9:	48 09 c8             	or     rax,rcx
    a0dc:	f2 48 0f 2a c8       	cvtsi2sd xmm1,rax
    a0e1:	f2 0f 58 c9          	addsd  xmm1,xmm1
    a0e5:	f2 0f 59 0d 8b 7e 02 00 	mulsd  xmm1,QWORD PTR [rip+0x27e8b]        # 31f78 <Law_and_Order+0x538>
    a0ed:	66 0f 2f c1          	comisd xmm0,xmm1
    a0f1:	76 82                	jbe    a075 <compactify(TraceArrows&)+0x65>
    a0f3:	48 39 ea             	cmp    rdx,rbp
    a0f6:	0f 87 c9 00 00 00    	ja     a1c5 <compactify(TraceArrows&)+0x1b5>
    a0fc:	48 85 d2             	test   rdx,rdx
    a0ff:	0f 84 ab 00 00 00    	je     a1b0 <compactify(TraceArrows&)+0x1a0>
    a105:	4c 89 e7             	mov    rdi,r12
    a108:	e8 13 97 ff ff       	call   3820 <operator new(unsigned long)@plt>
    a10d:	4e 8d 0c 20          	lea    r9,[rax+r12*1]
    a111:	48 89 c2             	mov    rdx,rax
    a114:	4c 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],r9
    a119:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    a120:	48 c7 02 00 00 00 00 	mov    QWORD PTR [rdx],0x0
    a127:	48 83 c2 18          	add    rdx,0x18
    a12b:	4c 39 ca             	cmp    rdx,r9
    a12e:	75 f0                	jne    a120 <compactify(TraceArrows&)+0x110>
    a130:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    a133:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
    a137:	49 29 fc             	sub    r12,rdi
    a13a:	4c 89 e6             	mov    rsi,r12
    a13d:	48 c1 fe 03          	sar    rsi,0x3
    a141:	49 0f af f5          	imul   rsi,r13
    a145:	48 89 c1             	mov    rcx,rax
    a148:	48 89 fa             	mov    rdx,rdi
    a14b:	4d 85 e4             	test   r12,r12
    a14e:	7e 25                	jle    a175 <compactify(TraceArrows&)+0x165>
    a150:	4c 8b 02             	mov    r8,QWORD PTR [rdx]
    a153:	48 83 c1 18          	add    rcx,0x18
    a157:	48 83 c2 18          	add    rdx,0x18
    a15b:	4c 89 41 e8          	mov    QWORD PTR [rcx-0x18],r8
    a15f:	4c 8b 42 f0          	mov    r8,QWORD PTR [rdx-0x10]
    a163:	4c 89 41 f0          	mov    QWORD PTR [rcx-0x10],r8
    a167:	44 8b 42 f8          	mov    r8d,DWORD PTR [rdx-0x8]
    a16b:	44 89 41 f8          	mov    DWORD PTR [rcx-0x8],r8d
    a16f:	48 83 ee 01          	sub    rsi,0x1
    a173:	75 db                	jne    a150 <compactify(TraceArrows&)+0x140>
    a175:	66 48 0f 6e c0       	movq   xmm0,rax
    a17a:	4c 89 4b 10          	mov    QWORD PTR [rbx+0x10],r9
    a17e:	0f 16 44 24 08       	movhps xmm0,QWORD PTR [rsp+0x8]
    a183:	0f 11 03             	movups XMMWORD PTR [rbx],xmm0
    a186:	48 85 ff             	test   rdi,rdi
    a189:	0f 84 e6 fe ff ff    	je     a075 <compactify(TraceArrows&)+0x65>
    a18f:	e8 4c 96 ff ff       	call   37e0 <operator delete(void*)@plt>
    a194:	48 83 c3 20          	add    rbx,0x20
    a198:	49 39 de             	cmp    r14,rbx
    a19b:	0f 85 e1 fe ff ff    	jne    a082 <compactify(TraceArrows&)+0x72>
    a1a1:	48 83 c4 10          	add    rsp,0x10
    a1a5:	5b                   	pop    rbx
    a1a6:	5d                   	pop    rbp
    a1a7:	41 5c                	pop    r12
    a1a9:	41 5d                	pop    r13
    a1ab:	41 5e                	pop    r14
    a1ad:	c3                   	ret    
    a1ae:	66 90                	xchg   ax,ax
    a1b0:	48 c7 44 24 08 00 00 00 00 	mov    QWORD PTR [rsp+0x8],0x0
    a1b9:	4d 89 e1             	mov    r9,r12
    a1bc:	31 f6                	xor    esi,esi
    a1be:	31 c0                	xor    eax,eax
    a1c0:	e9 80 ff ff ff       	jmp    a145 <compactify(TraceArrows&)+0x135>
    a1c5:	48 8d 3d 9c 76 02 00 	lea    rdi,[rip+0x2769c]        # 31868 <_IO_stdin_used+0x868>
    a1cc:	e8 1f 95 ff ff       	call   36f0 <std::__throw_length_error(char const*)@plt>
    a1d1:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    a1dc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000a1e0 <numberT(TraceArrows&)>:
    a1e0:	f3 0f 1e fa          	endbr64 
    a1e4:	48 8b 17             	mov    rdx,QWORD PTR [rdi]
    a1e7:	48 8b 4f 08          	mov    rcx,QWORD PTR [rdi+0x8]
    a1eb:	45 31 c0             	xor    r8d,r8d
    a1ee:	48 39 ca             	cmp    rdx,rcx
    a1f1:	74 28                	je     a21b <numberT(TraceArrows&)+0x3b>
    a1f3:	48 be ab aa aa aa aa aa aa aa 	movabs rsi,0xaaaaaaaaaaaaaaab
    a1fd:	0f 1f 00             	nop    DWORD PTR [rax]
    a200:	48 8b 42 08          	mov    rax,QWORD PTR [rdx+0x8]
    a204:	48 2b 02             	sub    rax,QWORD PTR [rdx]
    a207:	48 83 c2 20          	add    rdx,0x20
    a20b:	48 c1 f8 03          	sar    rax,0x3
    a20f:	48 0f af c6          	imul   rax,rsi
    a213:	49 01 c0             	add    r8,rax
    a216:	48 39 d1             	cmp    rcx,rdx
    a219:	75 e5                	jne    a200 <numberT(TraceArrows&)+0x20>
    a21b:	4c 89 c0             	mov    rax,r8
    a21e:	c3                   	ret    
    a21f:	90                   	nop

000000000000a220 <capacityT(TraceArrows&)>:
    a220:	f3 0f 1e fa          	endbr64 
    a224:	48 8b 17             	mov    rdx,QWORD PTR [rdi]
    a227:	48 8b 4f 08          	mov    rcx,QWORD PTR [rdi+0x8]
    a22b:	45 31 c0             	xor    r8d,r8d
    a22e:	48 39 ca             	cmp    rdx,rcx
    a231:	74 28                	je     a25b <capacityT(TraceArrows&)+0x3b>
    a233:	48 be ab aa aa aa aa aa aa aa 	movabs rsi,0xaaaaaaaaaaaaaaab
    a23d:	0f 1f 00             	nop    DWORD PTR [rax]
    a240:	48 8b 42 10          	mov    rax,QWORD PTR [rdx+0x10]
    a244:	48 2b 02             	sub    rax,QWORD PTR [rdx]
    a247:	48 83 c2 20          	add    rdx,0x20
    a24b:	48 c1 f8 03          	sar    rax,0x3
    a24f:	48 0f af c6          	imul   rax,rsi
    a253:	49 01 c0             	add    r8,rax
    a256:	48 39 d1             	cmp    rcx,rdx
    a259:	75 e5                	jne    a240 <capacityT(TraceArrows&)+0x20>
    a25b:	4c 89 c0             	mov    rax,r8
    a25e:	c3                   	ret    
    a25f:	90                   	nop

000000000000a260 <erasedT(TraceArrows&)>:
    a260:	f3 0f 1e fa          	endbr64 
    a264:	48 8b 47 30          	mov    rax,QWORD PTR [rdi+0x30]
    a268:	c3                   	ret    
    a269:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

000000000000a270 <sizeT(TraceArrows&)>:
    a270:	f3 0f 1e fa          	endbr64 
    a274:	48 8b 47 20          	mov    rax,QWORD PTR [rdi+0x20]
    a278:	c3                   	ret    
    a279:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

000000000000a280 <avoidedT(TraceArrows&)>:
    a280:	f3 0f 1e fa          	endbr64 
    a284:	48 8b 47 28          	mov    rax,QWORD PTR [rdi+0x28]
    a288:	c3                   	ret    
    a289:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

000000000000a290 <maxT(TraceArrows&)>:
    a290:	f3 0f 1e fa          	endbr64 
    a294:	48 8b 47 38          	mov    rax,QWORD PTR [rdi+0x38]
    a298:	c3                   	ret    
    a299:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

000000000000a2a0 <resize(TraceArrows&, unsigned long)>:
    a2a0:	f3 0f 1e fa          	endbr64 
    a2a4:	41 55                	push   r13
    a2a6:	41 54                	push   r12
    a2a8:	55                   	push   rbp
    a2a9:	48 89 fd             	mov    rbp,rdi
    a2ac:	53                   	push   rbx
    a2ad:	48 83 ec 08          	sub    rsp,0x8
    a2b1:	4c 8b 67 08          	mov    r12,QWORD PTR [rdi+0x8]
    a2b5:	48 8b 17             	mov    rdx,QWORD PTR [rdi]
    a2b8:	4c 89 e0             	mov    rax,r12
    a2bb:	48 29 d0             	sub    rax,rdx
    a2be:	48 c1 f8 05          	sar    rax,0x5
    a2c2:	48 39 c6             	cmp    rsi,rax
    a2c5:	77 51                	ja     a318 <resize(TraceArrows&, unsigned long)+0x78>
    a2c7:	72 0f                	jb     a2d8 <resize(TraceArrows&, unsigned long)+0x38>
    a2c9:	48 83 c4 08          	add    rsp,0x8
    a2cd:	5b                   	pop    rbx
    a2ce:	5d                   	pop    rbp
    a2cf:	41 5c                	pop    r12
    a2d1:	41 5d                	pop    r13
    a2d3:	c3                   	ret    
    a2d4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    a2d8:	48 c1 e6 05          	shl    rsi,0x5
    a2dc:	4c 8d 2c 32          	lea    r13,[rdx+rsi*1]
    a2e0:	4d 39 ec             	cmp    r12,r13
    a2e3:	74 e4                	je     a2c9 <resize(TraceArrows&, unsigned long)+0x29>
    a2e5:	4c 89 eb             	mov    rbx,r13
    a2e8:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    a2f0:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    a2f3:	48 85 ff             	test   rdi,rdi
    a2f6:	74 38                	je     a330 <resize(TraceArrows&, unsigned long)+0x90>
    a2f8:	e8 e3 94 ff ff       	call   37e0 <operator delete(void*)@plt>
    a2fd:	48 83 c3 20          	add    rbx,0x20
    a301:	49 39 dc             	cmp    r12,rbx
    a304:	75 ea                	jne    a2f0 <resize(TraceArrows&, unsigned long)+0x50>
    a306:	4c 89 6d 08          	mov    QWORD PTR [rbp+0x8],r13
    a30a:	48 83 c4 08          	add    rsp,0x8
    a30e:	5b                   	pop    rbx
    a30f:	5d                   	pop    rbp
    a310:	41 5c                	pop    r12
    a312:	41 5d                	pop    r13
    a314:	c3                   	ret    
    a315:	0f 1f 00             	nop    DWORD PTR [rax]
    a318:	48 83 c4 08          	add    rsp,0x8
    a31c:	48 29 c6             	sub    rsi,rax
    a31f:	5b                   	pop    rbx
    a320:	5d                   	pop    rbp
    a321:	41 5c                	pop    r12
    a323:	41 5d                	pop    r13
    a325:	e9 36 02 00 00       	jmp    a560 <std::vector<SimpleMap<unsigned long, TraceArrow>, std::allocator<SimpleMap<unsigned long, TraceArrow> > >::_M_default_append(unsigned long)>
    a32a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    a330:	48 83 c3 20          	add    rbx,0x20
    a334:	49 39 dc             	cmp    r12,rbx
    a337:	75 b7                	jne    a2f0 <resize(TraceArrows&, unsigned long)+0x50>
    a339:	eb cb                	jmp    a306 <resize(TraceArrows&, unsigned long)+0x66>
    a33b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a340 <register_trace_arrow(TraceArrows&, unsigned long, unsigned long, unsigned long, unsigned long, int)>:
    a340:	f3 0f 1e fa          	endbr64 
    a344:	55                   	push   rbp
    a345:	41 89 ca             	mov    r10d,ecx
    a348:	4c 89 c5             	mov    rbp,r8
    a34b:	41 89 d0             	mov    r8d,edx
    a34e:	53                   	push   rbx
    a34f:	48 89 fb             	mov    rbx,rdi
    a352:	41 29 f2             	sub    r10d,esi
    a355:	41 29 e8             	sub    r8d,ebp
    a358:	48 83 ec 38          	sub    rsp,0x38
    a35c:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
    a365:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
    a36a:	31 c0                	xor    eax,eax
    a36c:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    a36f:	48 89 f7             	mov    rdi,rsi
    a372:	48 c1 e7 05          	shl    rdi,0x5
    a376:	48 01 c7             	add    rdi,rax
    a379:	48 8b 77 08          	mov    rsi,QWORD PTR [rdi+0x8]
    a37d:	48 39 37             	cmp    QWORD PTR [rdi],rsi
    a380:	74 0a                	je     a38c <register_trace_arrow(TraceArrows&, unsigned long, unsigned long, unsigned long, unsigned long, int)+0x4c>
    a382:	48 3b 56 e8          	cmp    rdx,QWORD PTR [rsi-0x18]
    a386:	0f 86 8d 01 00 00    	jbe    a519 <register_trace_arrow(TraceArrows&, unsigned long, unsigned long, unsigned long, unsigned long, int)+0x1d9>
    a38c:	48 89 54 24 10       	mov    QWORD PTR [rsp+0x10],rdx
    a391:	44 88 54 24 18       	mov    BYTE PTR [rsp+0x18],r10b
    a396:	44 88 44 24 19       	mov    BYTE PTR [rsp+0x19],r8b
    a39b:	44 89 4c 24 1c       	mov    DWORD PTR [rsp+0x1c],r9d
    a3a0:	c7 44 24 20 00 00 00 00 	mov    DWORD PTR [rsp+0x20],0x0
    a3a8:	48 3b 77 10          	cmp    rsi,QWORD PTR [rdi+0x10]
    a3ac:	0f 84 46 01 00 00    	je     a4f8 <register_trace_arrow(TraceArrows&, unsigned long, unsigned long, unsigned long, unsigned long, int)+0x1b8>
    a3b2:	66 0f 6f 44 24 10    	movdqa xmm0,XMMWORD PTR [rsp+0x10]
    a3b8:	48 83 c6 18          	add    rsi,0x18
    a3bc:	0f 11 46 e8          	movups XMMWORD PTR [rsi-0x18],xmm0
    a3c0:	48 8b 54 24 20       	mov    rdx,QWORD PTR [rsp+0x20]
    a3c5:	48 89 56 f8          	mov    QWORD PTR [rsi-0x8],rdx
    a3c9:	48 89 77 08          	mov    QWORD PTR [rdi+0x8],rsi
    a3cd:	48 ba ab aa aa aa aa aa aa aa 	movabs rdx,0xaaaaaaaaaaaaaaab
    a3d7:	48 c1 e1 05          	shl    rcx,0x5
    a3db:	48 01 c8             	add    rax,rcx
    a3de:	4c 8b 40 08          	mov    r8,QWORD PTR [rax+0x8]
    a3e2:	4c 8b 08             	mov    r9,QWORD PTR [rax]
    a3e5:	4c 89 c0             	mov    rax,r8
    a3e8:	4c 89 c9             	mov    rcx,r9
    a3eb:	4c 29 c8             	sub    rax,r9
    a3ee:	48 c1 f8 03          	sar    rax,0x3
    a3f2:	48 0f af c2          	imul   rax,rdx
    a3f6:	48 89 c2             	mov    rdx,rax
    a3f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    a400:	48 85 d2             	test   rdx,rdx
    a403:	7e 2d                	jle    a432 <register_trace_arrow(TraceArrows&, unsigned long, unsigned long, unsigned long, unsigned long, int)+0xf2>
    a405:	48 89 d6             	mov    rsi,rdx
    a408:	48 89 d7             	mov    rdi,rdx
    a40b:	48 d1 fe             	sar    rsi,1
    a40e:	48 83 e7 fe          	and    rdi,0xfffffffffffffffe
    a412:	48 01 f7             	add    rdi,rsi
    a415:	48 8d 3c f9          	lea    rdi,[rcx+rdi*8]
    a419:	48 3b 2f             	cmp    rbp,QWORD PTR [rdi]
    a41c:	0f 86 96 00 00 00    	jbe    a4b8 <register_trace_arrow(TraceArrows&, unsigned long, unsigned long, unsigned long, unsigned long, int)+0x178>
    a422:	48 29 f2             	sub    rdx,rsi
    a425:	48 8d 4f 18          	lea    rcx,[rdi+0x18]
    a429:	48 83 ea 01          	sub    rdx,0x1
    a42d:	48 85 d2             	test   rdx,rdx
    a430:	7f d3                	jg     a405 <register_trace_arrow(TraceArrows&, unsigned long, unsigned long, unsigned long, unsigned long, int)+0xc5>
    a432:	49 39 c8             	cmp    r8,rcx
    a435:	74 4e                	je     a485 <register_trace_arrow(TraceArrows&, unsigned long, unsigned long, unsigned long, unsigned long, int)+0x145>
    a437:	48 8b 31             	mov    rsi,QWORD PTR [rcx]
    a43a:	48 39 f5             	cmp    rbp,rsi
    a43d:	72 46                	jb     a485 <register_trace_arrow(TraceArrows&, unsigned long, unsigned long, unsigned long, unsigned long, int)+0x145>
    a43f:	0f 85 f3 00 00 00    	jne    a538 <register_trace_arrow(TraceArrows&, unsigned long, unsigned long, unsigned long, unsigned long, int)+0x1f8>
    a445:	48 85 c0             	test   rax,rax
    a448:	7e 29                	jle    a473 <register_trace_arrow(TraceArrows&, unsigned long, unsigned long, unsigned long, unsigned long, int)+0x133>
    a44a:	48 89 c2             	mov    rdx,rax
    a44d:	48 89 c1             	mov    rcx,rax
    a450:	48 d1 fa             	sar    rdx,1
    a453:	48 83 e1 fe          	and    rcx,0xfffffffffffffffe
    a457:	48 01 d1             	add    rcx,rdx
    a45a:	49 8d 0c c9          	lea    rcx,[r9+rcx*8]
    a45e:	48 3b 31             	cmp    rsi,QWORD PTR [rcx]
    a461:	76 5d                	jbe    a4c0 <register_trace_arrow(TraceArrows&, unsigned long, unsigned long, unsigned long, unsigned long, int)+0x180>
    a463:	48 29 d0             	sub    rax,rdx
    a466:	4c 8d 49 18          	lea    r9,[rcx+0x18]
    a46a:	48 83 e8 01          	sub    rax,0x1
    a46e:	48 85 c0             	test   rax,rax
    a471:	7f d7                	jg     a44a <register_trace_arrow(TraceArrows&, unsigned long, unsigned long, unsigned long, unsigned long, int)+0x10a>
    a473:	4d 39 c8             	cmp    r8,r9
    a476:	74 05                	je     a47d <register_trace_arrow(TraceArrows&, unsigned long, unsigned long, unsigned long, unsigned long, int)+0x13d>
    a478:	49 3b 31             	cmp    rsi,QWORD PTR [r9]
    a47b:	73 53                	jae    a4d0 <register_trace_arrow(TraceArrows&, unsigned long, unsigned long, unsigned long, unsigned long, int)+0x190>
    a47d:	4d 89 c1             	mov    r9,r8
    a480:	41 83 41 10 01       	add    DWORD PTR [r9+0x10],0x1
    a485:	48 8b 43 20          	mov    rax,QWORD PTR [rbx+0x20]
    a489:	48 83 c0 01          	add    rax,0x1
    a48d:	48 39 43 38          	cmp    QWORD PTR [rbx+0x38],rax
    a491:	48 89 43 20          	mov    QWORD PTR [rbx+0x20],rax
    a495:	48 0f 43 43 38       	cmovae rax,QWORD PTR [rbx+0x38]
    a49a:	48 89 43 38          	mov    QWORD PTR [rbx+0x38],rax
    a49e:	48 8b 44 24 28       	mov    rax,QWORD PTR [rsp+0x28]
    a4a3:	64 48 33 04 25 28 00 00 00 	xor    rax,QWORD PTR fs:0x28
    a4ac:	75 66                	jne    a514 <register_trace_arrow(TraceArrows&, unsigned long, unsigned long, unsigned long, unsigned long, int)+0x1d4>
    a4ae:	48 83 c4 38          	add    rsp,0x38
    a4b2:	5b                   	pop    rbx
    a4b3:	5d                   	pop    rbp
    a4b4:	c3                   	ret    
    a4b5:	0f 1f 00             	nop    DWORD PTR [rax]
    a4b8:	48 89 f2             	mov    rdx,rsi
    a4bb:	e9 40 ff ff ff       	jmp    a400 <register_trace_arrow(TraceArrows&, unsigned long, unsigned long, unsigned long, unsigned long, int)+0xc0>
    a4c0:	48 89 d0             	mov    rax,rdx
    a4c3:	e9 7d ff ff ff       	jmp    a445 <register_trace_arrow(TraceArrows&, unsigned long, unsigned long, unsigned long, unsigned long, int)+0x105>
    a4c8:	0f 1f 84 00 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    a4d0:	74 ae                	je     a480 <register_trace_arrow(TraceArrows&, unsigned long, unsigned long, unsigned long, unsigned long, int)+0x140>
    a4d2:	48 8d 0d df 75 02 00 	lea    rcx,[rip+0x275df]        # 31ab8 <Law_and_Order+0x78>
    a4d9:	ba 43 00 00 00       	mov    edx,0x43
    a4de:	48 8d 35 3b 77 02 00 	lea    rsi,[rip+0x2773b]        # 31c20 <Law_and_Order+0x1e0>
    a4e5:	48 8d 3d 64 77 02 00 	lea    rdi,[rip+0x27764]        # 31c50 <Law_and_Order+0x210>
    a4ec:	e8 4f 92 ff ff       	call   3740 <__assert_fail@plt>
    a4f1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    a4f8:	48 8d 54 24 10       	lea    rdx,[rsp+0x10]
    a4fd:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
    a502:	e8 79 02 00 00       	call   a780 <void std::vector<std::pair<unsigned long, TraceArrow>, std::allocator<std::pair<unsigned long, TraceArrow> > >::_M_realloc_insert<std::pair<unsigned long, TraceArrow> >(__gnu_cxx::__normal_iterator<std::pair<unsigned long, TraceArrow>*, std::vector<std::pair<unsigned long, TraceArrow>, std::allocator<std::pair<unsigned long, TraceArrow> > > >, std::pair<unsigned long, TraceArrow>&&)>
    a507:	48 8b 03             	mov    rax,QWORD PTR [rbx]
    a50a:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
    a50f:	e9 b9 fe ff ff       	jmp    a3cd <register_trace_arrow(TraceArrows&, unsigned long, unsigned long, unsigned long, unsigned long, int)+0x8d>
    a514:	e8 47 93 ff ff       	call   3860 <__stack_chk_fail@plt>
    a519:	48 8d 0d 78 79 02 00 	lea    rcx,[rip+0x27978]        # 31e98 <Law_and_Order+0x458>
    a520:	ba 55 00 00 00       	mov    edx,0x55
    a525:	48 8d 35 f4 76 02 00 	lea    rsi,[rip+0x276f4]        # 31c20 <Law_and_Order+0x1e0>
    a52c:	48 8d 3d e5 79 02 00 	lea    rdi,[rip+0x279e5]        # 31f18 <Law_and_Order+0x4d8>
    a533:	e8 08 92 ff ff       	call   3740 <__assert_fail@plt>
    a538:	48 8d 0d 41 77 02 00 	lea    rcx,[rip+0x27741]        # 31c80 <Law_and_Order+0x240>
    a53f:	ba 3c 00 00 00       	mov    edx,0x3c
    a544:	48 8d 35 d5 76 02 00 	lea    rsi,[rip+0x276d5]        # 31c20 <Law_and_Order+0x1e0>
    a54b:	48 8d 3d fe 76 02 00 	lea    rdi,[rip+0x276fe]        # 31c50 <Law_and_Order+0x210>
    a552:	e8 e9 91 ff ff       	call   3740 <__assert_fail@plt>
    a557:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]

000000000000a560 <std::vector<SimpleMap<unsigned long, TraceArrow>, std::allocator<SimpleMap<unsigned long, TraceArrow> > >::_M_default_append(unsigned long)>:
    a560:	f3 0f 1e fa          	endbr64 
    a564:	48 85 f6             	test   rsi,rsi
    a567:	0f 84 8b 00 00 00    	je     a5f8 <std::vector<SimpleMap<unsigned long, TraceArrow>, std::allocator<SimpleMap<unsigned long, TraceArrow> > >::_M_default_append(unsigned long)+0x98>
    a56d:	48 ba ff ff ff ff ff ff ff 03 	movabs rdx,0x3ffffffffffffff
    a577:	41 57                	push   r15
    a579:	41 56                	push   r14
    a57b:	41 55                	push   r13
    a57d:	41 54                	push   r12
    a57f:	49 89 fc             	mov    r12,rdi
    a582:	55                   	push   rbp
    a583:	53                   	push   rbx
    a584:	48 89 f3             	mov    rbx,rsi
    a587:	48 89 d6             	mov    rsi,rdx
    a58a:	48 83 ec 08          	sub    rsp,0x8
    a58e:	48 8b 4f 08          	mov    rcx,QWORD PTR [rdi+0x8]
    a592:	48 8b 47 10          	mov    rax,QWORD PTR [rdi+0x10]
    a596:	48 89 cd             	mov    rbp,rcx
    a599:	48 2b 2f             	sub    rbp,QWORD PTR [rdi]
    a59c:	48 29 c8             	sub    rax,rcx
    a59f:	49 89 ee             	mov    r14,rbp
    a5a2:	48 c1 f8 05          	sar    rax,0x5
    a5a6:	49 c1 fe 05          	sar    r14,0x5
    a5aa:	4c 29 f6             	sub    rsi,r14
    a5ad:	48 39 c3             	cmp    rbx,rax
    a5b0:	77 4e                	ja     a600 <std::vector<SimpleMap<unsigned long, TraceArrow>, std::allocator<SimpleMap<unsigned long, TraceArrow> > >::_M_default_append(unsigned long)+0xa0>
    a5b2:	48 89 c8             	mov    rax,rcx
    a5b5:	48 89 da             	mov    rdx,rbx
    a5b8:	66 0f ef c0          	pxor   xmm0,xmm0
    a5bc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    a5c0:	48 c7 40 10 00 00 00 00 	mov    QWORD PTR [rax+0x10],0x0
    a5c8:	48 83 c0 20          	add    rax,0x20
    a5cc:	0f 11 40 e0          	movups XMMWORD PTR [rax-0x20],xmm0
    a5d0:	48 83 ea 01          	sub    rdx,0x1
    a5d4:	75 ea                	jne    a5c0 <std::vector<SimpleMap<unsigned long, TraceArrow>, std::allocator<SimpleMap<unsigned long, TraceArrow> > >::_M_default_append(unsigned long)+0x60>
    a5d6:	48 c1 e3 05          	shl    rbx,0x5
    a5da:	48 01 d9             	add    rcx,rbx
    a5dd:	49 89 4c 24 08       	mov    QWORD PTR [r12+0x8],rcx
    a5e2:	48 83 c4 08          	add    rsp,0x8
    a5e6:	5b                   	pop    rbx
    a5e7:	5d                   	pop    rbp
    a5e8:	41 5c                	pop    r12
    a5ea:	41 5d                	pop    r13
    a5ec:	41 5e                	pop    r14
    a5ee:	41 5f                	pop    r15
    a5f0:	c3                   	ret    
    a5f1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    a5f8:	c3                   	ret    
    a5f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    a600:	48 39 de             	cmp    rsi,rbx
    a603:	0f 82 66 01 00 00    	jb     a76f <std::vector<SimpleMap<unsigned long, TraceArrow>, std::allocator<SimpleMap<unsigned long, TraceArrow> > >::_M_default_append(unsigned long)+0x20f>
    a609:	4c 39 f3             	cmp    rbx,r14
    a60c:	4d 89 f7             	mov    r15,r14
    a60f:	4c 0f 43 fb          	cmovae r15,rbx
    a613:	4d 01 f7             	add    r15,r14
    a616:	49 39 d7             	cmp    r15,rdx
    a619:	4c 0f 47 fa          	cmova  r15,rdx
    a61d:	49 c1 e7 05          	shl    r15,0x5
    a621:	4c 89 ff             	mov    rdi,r15
    a624:	e8 f7 91 ff ff       	call   3820 <operator new(unsigned long)@plt>
    a629:	48 89 d9             	mov    rcx,rbx
    a62c:	66 0f ef c0          	pxor   xmm0,xmm0
    a630:	49 89 c5             	mov    r13,rax
    a633:	48 8d 14 28          	lea    rdx,[rax+rbp*1]
    a637:	66 0f 1f 84 00 00 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    a640:	48 c7 42 10 00 00 00 00 	mov    QWORD PTR [rdx+0x10],0x0
    a648:	48 83 c2 20          	add    rdx,0x20
    a64c:	0f 11 42 e0          	movups XMMWORD PTR [rdx-0x20],xmm0
    a650:	48 83 e9 01          	sub    rcx,0x1
    a654:	75 ea                	jne    a640 <std::vector<SimpleMap<unsigned long, TraceArrow>, std::allocator<SimpleMap<unsigned long, TraceArrow> > >::_M_default_append(unsigned long)+0xe0>
    a656:	49 8b 74 24 08       	mov    rsi,QWORD PTR [r12+0x8]
    a65b:	49 8b 3c 24          	mov    rdi,QWORD PTR [r12]
    a65f:	48 39 fe             	cmp    rsi,rdi
    a662:	0f 84 af 00 00 00    	je     a717 <std::vector<SimpleMap<unsigned long, TraceArrow>, std::allocator<SimpleMap<unsigned long, TraceArrow> > >::_M_default_append(unsigned long)+0x1b7>
    a668:	48 8d 46 e0          	lea    rax,[rsi-0x20]
    a66c:	48 8d 57 37          	lea    rdx,[rdi+0x37]
    a670:	48 89 f9             	mov    rcx,rdi
    a673:	48 29 f8             	sub    rax,rdi
    a676:	4c 29 ea             	sub    rdx,r13
    a679:	49 89 c0             	mov    r8,rax
    a67c:	49 c1 e8 05          	shr    r8,0x5
    a680:	48 83 fa 6e          	cmp    rdx,0x6e
    a684:	4c 89 ea             	mov    rdx,r13
    a687:	0f 86 c0 00 00 00    	jbe    a74d <std::vector<SimpleMap<unsigned long, TraceArrow>, std::allocator<SimpleMap<unsigned long, TraceArrow> > >::_M_default_append(unsigned long)+0x1ed>
    a68d:	48 3d a0 00 00 00    	cmp    rax,0xa0
    a693:	0f 86 b4 00 00 00    	jbe    a74d <std::vector<SimpleMap<unsigned long, TraceArrow>, std::allocator<SimpleMap<unsigned long, TraceArrow> > >::_M_default_append(unsigned long)+0x1ed>
    a699:	48 83 e0 c0          	and    rax,0xffffffffffffffc0
    a69d:	48 01 f8             	add    rax,rdi
    a6a0:	f3 0f 6f 09          	movdqu xmm1,XMMWORD PTR [rcx]
    a6a4:	f3 0f 6f 59 10       	movdqu xmm3,XMMWORD PTR [rcx+0x10]
    a6a9:	48 83 c1 40          	add    rcx,0x40
    a6ad:	48 83 c2 40          	add    rdx,0x40
    a6b1:	f3 0f 6f 41 e0       	movdqu xmm0,XMMWORD PTR [rcx-0x20]
    a6b6:	f3 0f 6f 51 f0       	movdqu xmm2,XMMWORD PTR [rcx-0x10]
    a6bb:	66 0f d6 4a c0       	movq   QWORD PTR [rdx-0x40],xmm1
    a6c0:	0f 17 4a c8          	movhps QWORD PTR [rdx-0x38],xmm1
    a6c4:	66 0f d6 5a d0       	movq   QWORD PTR [rdx-0x30],xmm3
    a6c9:	66 0f d6 42 e0       	movq   QWORD PTR [rdx-0x20],xmm0
    a6ce:	0f 17 42 e8          	movhps QWORD PTR [rdx-0x18],xmm0
    a6d2:	66 0f d6 52 f0       	movq   QWORD PTR [rdx-0x10],xmm2
    a6d7:	48 39 c1             	cmp    rcx,rax
    a6da:	75 c4                	jne    a6a0 <std::vector<SimpleMap<unsigned long, TraceArrow>, std::allocator<SimpleMap<unsigned long, TraceArrow> > >::_M_default_append(unsigned long)+0x140>
    a6dc:	4c 89 c0             	mov    rax,r8
    a6df:	48 83 e0 fe          	and    rax,0xfffffffffffffffe
    a6e3:	48 c1 e0 05          	shl    rax,0x5
    a6e7:	48 8d 14 07          	lea    rdx,[rdi+rax*1]
    a6eb:	4c 01 e8             	add    rax,r13
    a6ee:	48 8b 4a 10          	mov    rcx,QWORD PTR [rdx+0x10]
    a6f2:	f3 0f 6f 2a          	movdqu xmm5,XMMWORD PTR [rdx]
    a6f6:	48 89 48 10          	mov    QWORD PTR [rax+0x10],rcx
    a6fa:	48 8d 4a 20          	lea    rcx,[rdx+0x20]
    a6fe:	0f 11 28             	movups XMMWORD PTR [rax],xmm5
    a701:	48 39 ce             	cmp    rsi,rcx
    a704:	74 11                	je     a717 <std::vector<SimpleMap<unsigned long, TraceArrow>, std::allocator<SimpleMap<unsigned long, TraceArrow> > >::_M_default_append(unsigned long)+0x1b7>
    a706:	f3 0f 6f 72 20       	movdqu xmm6,XMMWORD PTR [rdx+0x20]
    a70b:	48 8b 52 30          	mov    rdx,QWORD PTR [rdx+0x30]
    a70f:	48 89 50 30          	mov    QWORD PTR [rax+0x30],rdx
    a713:	0f 11 70 20          	movups XMMWORD PTR [rax+0x20],xmm6
    a717:	48 85 ff             	test   rdi,rdi
    a71a:	74 05                	je     a721 <std::vector<SimpleMap<unsigned long, TraceArrow>, std::allocator<SimpleMap<unsigned long, TraceArrow> > >::_M_default_append(unsigned long)+0x1c1>
    a71c:	e8 bf 90 ff ff       	call   37e0 <operator delete(void*)@plt>
    a721:	4c 01 f3             	add    rbx,r14
    a724:	4d 89 2c 24          	mov    QWORD PTR [r12],r13
    a728:	48 c1 e3 05          	shl    rbx,0x5
    a72c:	49 8d 54 1d 00       	lea    rdx,[r13+rbx*1+0x0]
    a731:	4d 01 fd             	add    r13,r15
    a734:	49 89 54 24 08       	mov    QWORD PTR [r12+0x8],rdx
    a739:	4d 89 6c 24 10       	mov    QWORD PTR [r12+0x10],r13
    a73e:	48 83 c4 08          	add    rsp,0x8
    a742:	5b                   	pop    rbx
    a743:	5d                   	pop    rbp
    a744:	41 5c                	pop    r12
    a746:	41 5d                	pop    r13
    a748:	41 5e                	pop    r14
    a74a:	41 5f                	pop    r15
    a74c:	c3                   	ret    
    a74d:	48 89 f8             	mov    rax,rdi
    a750:	f3 0f 6f 20          	movdqu xmm4,XMMWORD PTR [rax]
    a754:	48 83 c0 20          	add    rax,0x20
    a758:	48 83 c2 20          	add    rdx,0x20
    a75c:	0f 11 62 e0          	movups XMMWORD PTR [rdx-0x20],xmm4
    a760:	48 8b 48 f0          	mov    rcx,QWORD PTR [rax-0x10]
    a764:	48 89 4a f0          	mov    QWORD PTR [rdx-0x10],rcx
    a768:	48 39 c6             	cmp    rsi,rax
    a76b:	75 e3                	jne    a750 <std::vector<SimpleMap<unsigned long, TraceArrow>, std::allocator<SimpleMap<unsigned long, TraceArrow> > >::_M_default_append(unsigned long)+0x1f0>
    a76d:	eb a8                	jmp    a717 <std::vector<SimpleMap<unsigned long, TraceArrow>, std::allocator<SimpleMap<unsigned long, TraceArrow> > >::_M_default_append(unsigned long)+0x1b7>
    a76f:	48 8d 3d 05 6f 02 00 	lea    rdi,[rip+0x26f05]        # 3167b <_IO_stdin_used+0x67b>
    a776:	e8 75 8f ff ff       	call   36f0 <std::__throw_length_error(char const*)@plt>
    a77b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a780 <void std::vector<std::pair<unsigned long, TraceArrow>, std::allocator<std::pair<unsigned long, TraceArrow> > >::_M_realloc_insert<std::pair<unsigned long, TraceArrow> >(__gnu_cxx::__normal_iterator<std::pair<unsigned long, TraceArrow>*, std::vector<std::pair<unsigned long, TraceArrow>, std::allocator<std::pair<unsigned long, TraceArrow> > > >, std::pair<unsigned long, TraceArrow>&&)>:
    a780:	f3 0f 1e fa          	endbr64 
    a784:	48 b9 ab aa aa aa aa aa aa aa 	movabs rcx,0xaaaaaaaaaaaaaaab
    a78e:	41 57                	push   r15
    a790:	41 56                	push   r14
    a792:	41 55                	push   r13
    a794:	41 54                	push   r12
    a796:	55                   	push   rbp
    a797:	53                   	push   rbx
    a798:	48 83 ec 28          	sub    rsp,0x28
    a79c:	4c 8b 7f 08          	mov    r15,QWORD PTR [rdi+0x8]
    a7a0:	4c 8b 2f             	mov    r13,QWORD PTR [rdi]
    a7a3:	4c 89 f8             	mov    rax,r15
    a7a6:	4c 29 e8             	sub    rax,r13
    a7a9:	48 c1 f8 03          	sar    rax,0x3
    a7ad:	48 0f af c1          	imul   rax,rcx
    a7b1:	48 b9 55 55 55 55 55 55 55 05 	movabs rcx,0x555555555555555
    a7bb:	48 39 c8             	cmp    rax,rcx
    a7be:	0f 84 3f 01 00 00    	je     a903 <void std::vector<std::pair<unsigned long, TraceArrow>, std::allocator<std::pair<unsigned long, TraceArrow> > >::_M_realloc_insert<std::pair<unsigned long, TraceArrow> >(__gnu_cxx::__normal_iterator<std::pair<unsigned long, TraceArrow>*, std::vector<std::pair<unsigned long, TraceArrow>, std::allocator<std::pair<unsigned long, TraceArrow> > > >, std::pair<unsigned long, TraceArrow>&&)+0x183>
    a7c4:	48 89 f5             	mov    rbp,rsi
    a7c7:	49 89 fe             	mov    r14,rdi
    a7ca:	4c 29 ee             	sub    rsi,r13
    a7cd:	48 85 c0             	test   rax,rax
    a7d0:	0f 84 12 01 00 00    	je     a8e8 <void std::vector<std::pair<unsigned long, TraceArrow>, std::allocator<std::pair<unsigned long, TraceArrow> > >::_M_realloc_insert<std::pair<unsigned long, TraceArrow> >(__gnu_cxx::__normal_iterator<std::pair<unsigned long, TraceArrow>*, std::vector<std::pair<unsigned long, TraceArrow>, std::allocator<std::pair<unsigned long, TraceArrow> > > >, std::pair<unsigned long, TraceArrow>&&)+0x168>
    a7d6:	49 bc f8 ff ff ff ff ff ff 7f 	movabs r12,0x7ffffffffffffff8
    a7e0:	48 8d 3c 00          	lea    rdi,[rax+rax*1]
    a7e4:	48 39 f8             	cmp    rax,rdi
    a7e7:	0f 86 db 00 00 00    	jbe    a8c8 <void std::vector<std::pair<unsigned long, TraceArrow>, std::allocator<std::pair<unsigned long, TraceArrow> > >::_M_realloc_insert<std::pair<unsigned long, TraceArrow> >(__gnu_cxx::__normal_iterator<std::pair<unsigned long, TraceArrow>*, std::vector<std::pair<unsigned long, TraceArrow>, std::allocator<std::pair<unsigned long, TraceArrow> > > >, std::pair<unsigned long, TraceArrow>&&)+0x148>
    a7ed:	4c 89 e7             	mov    rdi,r12
    a7f0:	48 89 54 24 18       	mov    QWORD PTR [rsp+0x18],rdx
    a7f5:	48 89 74 24 10       	mov    QWORD PTR [rsp+0x10],rsi
    a7fa:	e8 21 90 ff ff       	call   3820 <operator new(unsigned long)@plt>
    a7ff:	48 8b 74 24 10       	mov    rsi,QWORD PTR [rsp+0x10]
    a804:	48 8b 54 24 18       	mov    rdx,QWORD PTR [rsp+0x18]
    a809:	48 89 c3             	mov    rbx,rax
    a80c:	4a 8d 04 20          	lea    rax,[rax+r12*1]
    a810:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    a815:	4c 8d 63 18          	lea    r12,[rbx+0x18]
    a819:	f3 0f 6f 12          	movdqu xmm2,XMMWORD PTR [rdx]
    a81d:	48 8b 42 10          	mov    rax,QWORD PTR [rdx+0x10]
    a821:	0f 11 14 33          	movups XMMWORD PTR [rbx+rsi*1],xmm2
    a825:	48 89 44 33 10       	mov    QWORD PTR [rbx+rsi*1+0x10],rax
    a82a:	4c 39 ed             	cmp    rbp,r13
    a82d:	74 36                	je     a865 <void std::vector<std::pair<unsigned long, TraceArrow>, std::allocator<std::pair<unsigned long, TraceArrow> > >::_M_realloc_insert<std::pair<unsigned long, TraceArrow> >(__gnu_cxx::__normal_iterator<std::pair<unsigned long, TraceArrow>*, std::vector<std::pair<unsigned long, TraceArrow>, std::allocator<std::pair<unsigned long, TraceArrow> > > >, std::pair<unsigned long, TraceArrow>&&)+0xe5>
    a82f:	48 89 da             	mov    rdx,rbx
    a832:	4c 89 e8             	mov    rax,r13
    a835:	0f 1f 00             	nop    DWORD PTR [rax]
    a838:	f3 0f 6f 08          	movdqu xmm1,XMMWORD PTR [rax]
    a83c:	48 83 c0 18          	add    rax,0x18
    a840:	48 83 c2 18          	add    rdx,0x18
    a844:	0f 11 4a e8          	movups XMMWORD PTR [rdx-0x18],xmm1
    a848:	48 8b 48 f8          	mov    rcx,QWORD PTR [rax-0x8]
    a84c:	48 89 4a f8          	mov    QWORD PTR [rdx-0x8],rcx
    a850:	48 39 c5             	cmp    rbp,rax
    a853:	75 e3                	jne    a838 <void std::vector<std::pair<unsigned long, TraceArrow>, std::allocator<std::pair<unsigned long, TraceArrow> > >::_M_realloc_insert<std::pair<unsigned long, TraceArrow> >(__gnu_cxx::__normal_iterator<std::pair<unsigned long, TraceArrow>*, std::vector<std::pair<unsigned long, TraceArrow>, std::allocator<std::pair<unsigned long, TraceArrow> > > >, std::pair<unsigned long, TraceArrow>&&)+0xb8>
    a855:	48 8d 45 e8          	lea    rax,[rbp-0x18]
    a859:	4c 29 e8             	sub    rax,r13
    a85c:	48 c1 e8 03          	shr    rax,0x3
    a860:	4c 8d 64 c3 30       	lea    r12,[rbx+rax*8+0x30]
    a865:	4c 39 fd             	cmp    rbp,r15
    a868:	74 24                	je     a88e <void std::vector<std::pair<unsigned long, TraceArrow>, std::allocator<std::pair<unsigned long, TraceArrow> > >::_M_realloc_insert<std::pair<unsigned long, TraceArrow> >(__gnu_cxx::__normal_iterator<std::pair<unsigned long, TraceArrow>*, std::vector<std::pair<unsigned long, TraceArrow>, std::allocator<std::pair<unsigned long, TraceArrow> > > >, std::pair<unsigned long, TraceArrow>&&)+0x10e>
    a86a:	49 29 ef             	sub    r15,rbp
    a86d:	4c 89 e7             	mov    rdi,r12
    a870:	48 89 ee             	mov    rsi,rbp
    a873:	49 8d 47 e8          	lea    rax,[r15-0x18]
    a877:	48 c1 e8 03          	shr    rax,0x3
    a87b:	4c 8d 3c c5 18 00 00 00 	lea    r15,[rax*8+0x18]
    a883:	4c 89 fa             	mov    rdx,r15
    a886:	4d 01 fc             	add    r12,r15
    a889:	e8 12 8f ff ff       	call   37a0 <memcpy@plt>
    a88e:	4d 85 ed             	test   r13,r13
    a891:	74 08                	je     a89b <void std::vector<std::pair<unsigned long, TraceArrow>, std::allocator<std::pair<unsigned long, TraceArrow> > >::_M_realloc_insert<std::pair<unsigned long, TraceArrow> >(__gnu_cxx::__normal_iterator<std::pair<unsigned long, TraceArrow>*, std::vector<std::pair<unsigned long, TraceArrow>, std::allocator<std::pair<unsigned long, TraceArrow> > > >, std::pair<unsigned long, TraceArrow>&&)+0x11b>
    a893:	4c 89 ef             	mov    rdi,r13
    a896:	e8 45 8f ff ff       	call   37e0 <operator delete(void*)@plt>
    a89b:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
    a8a0:	66 48 0f 6e c3       	movq   xmm0,rbx
    a8a5:	66 49 0f 6e dc       	movq   xmm3,r12
    a8aa:	66 0f 6c c3          	punpcklqdq xmm0,xmm3
    a8ae:	49 89 46 10          	mov    QWORD PTR [r14+0x10],rax
    a8b2:	41 0f 11 06          	movups XMMWORD PTR [r14],xmm0
    a8b6:	48 83 c4 28          	add    rsp,0x28
    a8ba:	5b                   	pop    rbx
    a8bb:	5d                   	pop    rbp
    a8bc:	41 5c                	pop    r12
    a8be:	41 5d                	pop    r13
    a8c0:	41 5e                	pop    r14
    a8c2:	41 5f                	pop    r15
    a8c4:	c3                   	ret    
    a8c5:	0f 1f 00             	nop    DWORD PTR [rax]
    a8c8:	48 85 ff             	test   rdi,rdi
    a8cb:	75 26                	jne    a8f3 <void std::vector<std::pair<unsigned long, TraceArrow>, std::allocator<std::pair<unsigned long, TraceArrow> > >::_M_realloc_insert<std::pair<unsigned long, TraceArrow> >(__gnu_cxx::__normal_iterator<std::pair<unsigned long, TraceArrow>*, std::vector<std::pair<unsigned long, TraceArrow>, std::allocator<std::pair<unsigned long, TraceArrow> > > >, std::pair<unsigned long, TraceArrow>&&)+0x173>
    a8cd:	48 c7 44 24 08 00 00 00 00 	mov    QWORD PTR [rsp+0x8],0x0
    a8d6:	41 bc 18 00 00 00    	mov    r12d,0x18
    a8dc:	31 db                	xor    ebx,ebx
    a8de:	e9 36 ff ff ff       	jmp    a819 <void std::vector<std::pair<unsigned long, TraceArrow>, std::allocator<std::pair<unsigned long, TraceArrow> > >::_M_realloc_insert<std::pair<unsigned long, TraceArrow> >(__gnu_cxx::__normal_iterator<std::pair<unsigned long, TraceArrow>*, std::vector<std::pair<unsigned long, TraceArrow>, std::allocator<std::pair<unsigned long, TraceArrow> > > >, std::pair<unsigned long, TraceArrow>&&)+0x99>
    a8e3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    a8e8:	41 bc 18 00 00 00    	mov    r12d,0x18
    a8ee:	e9 fa fe ff ff       	jmp    a7ed <void std::vector<std::pair<unsigned long, TraceArrow>, std::allocator<std::pair<unsigned long, TraceArrow> > >::_M_realloc_insert<std::pair<unsigned long, TraceArrow> >(__gnu_cxx::__normal_iterator<std::pair<unsigned long, TraceArrow>*, std::vector<std::pair<unsigned long, TraceArrow>, std::allocator<std::pair<unsigned long, TraceArrow> > > >, std::pair<unsigned long, TraceArrow>&&)+0x6d>
    a8f3:	48 39 cf             	cmp    rdi,rcx
    a8f6:	48 0f 46 cf          	cmovbe rcx,rdi
    a8fa:	4c 6b e1 18          	imul   r12,rcx,0x18
    a8fe:	e9 ea fe ff ff       	jmp    a7ed <void std::vector<std::pair<unsigned long, TraceArrow>, std::allocator<std::pair<unsigned long, TraceArrow> > >::_M_realloc_insert<std::pair<unsigned long, TraceArrow> >(__gnu_cxx::__normal_iterator<std::pair<unsigned long, TraceArrow>*, std::vector<std::pair<unsigned long, TraceArrow>, std::allocator<std::pair<unsigned long, TraceArrow> > > >, std::pair<unsigned long, TraceArrow>&&)+0x6d>
    a903:	48 8d 3d de 6d 02 00 	lea    rdi,[rip+0x26dde]        # 316e8 <_IO_stdin_used+0x6e8>
    a90a:	e8 e1 8d ff ff       	call   36f0 <std::__throw_length_error(char const*)@plt>

000000000000a90f <hc_default>:
    a90f:	f3 0f 1e fa          	endbr64 
    a913:	55                   	push   rbp
    a914:	48 89 e5             	mov    rbp,rsp
    a917:	48 83 ec 40          	sub    rsp,0x40
    a91b:	89 7d dc             	mov    DWORD PTR [rbp-0x24],edi
    a91e:	89 75 d8             	mov    DWORD PTR [rbp-0x28],esi
    a921:	89 55 d4             	mov    DWORD PTR [rbp-0x2c],edx
    a924:	89 4d d0             	mov    DWORD PTR [rbp-0x30],ecx
    a927:	44 89 c0             	mov    eax,r8d
    a92a:	4c 89 4d c0          	mov    QWORD PTR [rbp-0x40],r9
    a92e:	88 45 cc             	mov    BYTE PTR [rbp-0x34],al
    a931:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a935:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a939:	c6 45 eb 00          	mov    BYTE PTR [rbp-0x15],0x0
    a93d:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    a940:	2b 45 dc             	sub    eax,DWORD PTR [rbp-0x24]
    a943:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    a946:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    a949:	2b 45 d0             	sub    eax,DWORD PTR [rbp-0x30]
    a94c:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    a94f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a953:	8b 00                	mov    eax,DWORD PTR [rax]
    a955:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    a958:	0f b6 45 cc          	movzx  eax,BYTE PTR [rbp-0x34]
    a95c:	83 e8 0c             	sub    eax,0xc
    a95f:	83 f8 07             	cmp    eax,0x7
    a962:	0f 87 53 03 00 00    	ja     acbb <hc_default+0x3ac>
    a968:	89 c0                	mov    eax,eax
    a96a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    a972:	48 8d 05 3f 76 02 00 	lea    rax,[rip+0x2763f]        # 31fb8 <Law_and_Order+0x578>
    a979:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    a97c:	48 98                	cdqe   
    a97e:	48 8d 15 33 76 02 00 	lea    rdx,[rip+0x27633]        # 31fb8 <Law_and_Order+0x578>
    a985:	48 01 d0             	add    rax,rdx
    a988:	3e ff e0             	notrack jmp rax
    a98b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a98f:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    a993:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    a996:	0f af 45 f4          	imul   eax,DWORD PTR [rbp-0xc]
    a99a:	89 c1                	mov    ecx,eax
    a99c:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
    a99f:	01 c8                	add    eax,ecx
    a9a1:	89 c0                	mov    eax,eax
    a9a3:	48 01 d0             	add    rax,rdx
    a9a6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    a9a9:	0f b6 c0             	movzx  eax,al
    a9ac:	83 e0 01             	and    eax,0x1
    a9af:	85 c0                	test   eax,eax
    a9b1:	0f 84 1d 03 00 00    	je     acd4 <hc_default+0x3c5>
    a9b7:	c6 45 eb 01          	mov    BYTE PTR [rbp-0x15],0x1
    a9bb:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    a9be:	3b 45 d0             	cmp    eax,DWORD PTR [rbp-0x30]
    a9c1:	0f 84 0d 03 00 00    	je     acd4 <hc_default+0x3c5>
    a9c7:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
    a9ca:	2b 45 d4             	sub    eax,DWORD PTR [rbp-0x2c]
    a9cd:	83 e8 01             	sub    eax,0x1
    a9d0:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    a9d3:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
    a9d7:	0f 84 f7 02 00 00    	je     acd4 <hc_default+0x3c5>
    a9dd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a9e1:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
    a9e5:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
    a9e8:	48 63 d2             	movsxd rdx,edx
    a9eb:	48 83 c2 01          	add    rdx,0x1
    a9ef:	48 c1 e2 02          	shl    rdx,0x2
    a9f3:	48 01 d0             	add    rax,rdx
    a9f6:	8b 00                	mov    eax,DWORD PTR [rax]
    a9f8:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    a9fb:	0f 8e d3 02 00 00    	jle    acd4 <hc_default+0x3c5>
    aa01:	c6 45 eb 00          	mov    BYTE PTR [rbp-0x15],0x0
    aa05:	e9 ca 02 00 00       	jmp    acd4 <hc_default+0x3c5>
    aa0a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aa0e:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    aa12:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    aa15:	0f af 45 f4          	imul   eax,DWORD PTR [rbp-0xc]
    aa19:	89 c1                	mov    ecx,eax
    aa1b:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    aa1e:	01 c8                	add    eax,ecx
    aa20:	89 c0                	mov    eax,eax
    aa22:	48 01 d0             	add    rax,rdx
    aa25:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    aa28:	0f b6 c0             	movzx  eax,al
    aa2b:	83 e0 01             	and    eax,0x1
    aa2e:	85 c0                	test   eax,eax
    aa30:	0f 84 a1 02 00 00    	je     acd7 <hc_default+0x3c8>
    aa36:	c6 45 eb 01          	mov    BYTE PTR [rbp-0x15],0x1
    aa3a:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    aa3d:	3b 45 d0             	cmp    eax,DWORD PTR [rbp-0x30]
    aa40:	0f 84 91 02 00 00    	je     acd7 <hc_default+0x3c8>
    aa46:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
    aa49:	2b 45 d4             	sub    eax,DWORD PTR [rbp-0x2c]
    aa4c:	83 e8 01             	sub    eax,0x1
    aa4f:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    aa52:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
    aa56:	0f 84 7b 02 00 00    	je     acd7 <hc_default+0x3c8>
    aa5c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aa60:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
    aa64:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
    aa67:	48 63 d2             	movsxd rdx,edx
    aa6a:	48 83 c2 01          	add    rdx,0x1
    aa6e:	48 c1 e2 02          	shl    rdx,0x2
    aa72:	48 01 d0             	add    rax,rdx
    aa75:	8b 00                	mov    eax,DWORD PTR [rax]
    aa77:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    aa7a:	0f 8e 57 02 00 00    	jle    acd7 <hc_default+0x3c8>
    aa80:	c6 45 eb 00          	mov    BYTE PTR [rbp-0x15],0x0
    aa84:	e9 4e 02 00 00       	jmp    acd7 <hc_default+0x3c8>
    aa89:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aa8d:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    aa91:	8b 55 d8             	mov    edx,DWORD PTR [rbp-0x28]
    aa94:	83 ea 01             	sub    edx,0x1
    aa97:	89 d1                	mov    ecx,edx
    aa99:	0f af 4d f4          	imul   ecx,DWORD PTR [rbp-0xc]
    aa9d:	8b 55 d0             	mov    edx,DWORD PTR [rbp-0x30]
    aaa0:	01 ca                	add    edx,ecx
    aaa2:	89 d2                	mov    edx,edx
    aaa4:	48 01 d0             	add    rax,rdx
    aaa7:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    aaaa:	0f b6 c0             	movzx  eax,al
    aaad:	83 e0 01             	and    eax,0x1
    aab0:	85 c0                	test   eax,eax
    aab2:	0f 84 22 02 00 00    	je     acda <hc_default+0x3cb>
    aab8:	c6 45 eb 01          	mov    BYTE PTR [rbp-0x15],0x1
    aabc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aac0:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
    aac4:	8b 55 d8             	mov    edx,DWORD PTR [rbp-0x28]
    aac7:	48 63 d2             	movsxd rdx,edx
    aaca:	48 c1 e2 02          	shl    rdx,0x2
    aace:	48 01 d0             	add    rax,rdx
    aad1:	8b 00                	mov    eax,DWORD PTR [rax]
    aad3:	85 c0                	test   eax,eax
    aad5:	75 04                	jne    aadb <hc_default+0x1cc>
    aad7:	c6 45 eb 00          	mov    BYTE PTR [rbp-0x15],0x0
    aadb:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    aade:	3b 45 d0             	cmp    eax,DWORD PTR [rbp-0x30]
    aae1:	0f 84 f3 01 00 00    	je     acda <hc_default+0x3cb>
    aae7:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
    aaea:	2b 45 d4             	sub    eax,DWORD PTR [rbp-0x2c]
    aaed:	83 e8 01             	sub    eax,0x1
    aaf0:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    aaf3:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
    aaf7:	0f 84 dd 01 00 00    	je     acda <hc_default+0x3cb>
    aafd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ab01:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
    ab05:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
    ab08:	48 63 d2             	movsxd rdx,edx
    ab0b:	48 83 c2 01          	add    rdx,0x1
    ab0f:	48 c1 e2 02          	shl    rdx,0x2
    ab13:	48 01 d0             	add    rax,rdx
    ab16:	8b 00                	mov    eax,DWORD PTR [rax]
    ab18:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    ab1b:	0f 8e b9 01 00 00    	jle    acda <hc_default+0x3cb>
    ab21:	c6 45 eb 00          	mov    BYTE PTR [rbp-0x15],0x0
    ab25:	e9 b0 01 00 00       	jmp    acda <hc_default+0x3cb>
    ab2a:	c6 45 eb 01          	mov    BYTE PTR [rbp-0x15],0x1
    ab2e:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
    ab31:	2b 45 d4             	sub    eax,DWORD PTR [rbp-0x2c]
    ab34:	83 e8 01             	sub    eax,0x1
    ab37:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    ab3a:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
    ab3e:	0f 84 99 01 00 00    	je     acdd <hc_default+0x3ce>
    ab44:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ab48:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
    ab4c:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
    ab4f:	48 63 d2             	movsxd rdx,edx
    ab52:	48 83 c2 01          	add    rdx,0x1
    ab56:	48 c1 e2 02          	shl    rdx,0x2
    ab5a:	48 01 d0             	add    rax,rdx
    ab5d:	8b 00                	mov    eax,DWORD PTR [rax]
    ab5f:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    ab62:	0f 8e 75 01 00 00    	jle    acdd <hc_default+0x3ce>
    ab68:	c6 45 eb 00          	mov    BYTE PTR [rbp-0x15],0x0
    ab6c:	e9 6c 01 00 00       	jmp    acdd <hc_default+0x3ce>
    ab71:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ab75:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    ab79:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    ab7c:	0f af 45 f4          	imul   eax,DWORD PTR [rbp-0xc]
    ab80:	89 c1                	mov    ecx,eax
    ab82:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
    ab85:	01 c8                	add    eax,ecx
    ab87:	89 c0                	mov    eax,eax
    ab89:	48 01 d0             	add    rax,rdx
    ab8c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ab8f:	0f b6 c0             	movzx  eax,al
    ab92:	83 e0 01             	and    eax,0x1
    ab95:	85 c0                	test   eax,eax
    ab97:	0f 84 43 01 00 00    	je     ace0 <hc_default+0x3d1>
    ab9d:	c6 45 eb 01          	mov    BYTE PTR [rbp-0x15],0x1
    aba1:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
    aba5:	74 20                	je     abc7 <hc_default+0x2b8>
    aba7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    abab:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
    abaf:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
    abb2:	48 63 d2             	movsxd rdx,edx
    abb5:	48 c1 e2 02          	shl    rdx,0x2
    abb9:	48 01 d0             	add    rax,rdx
    abbc:	8b 00                	mov    eax,DWORD PTR [rax]
    abbe:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    abc1:	7e 04                	jle    abc7 <hc_default+0x2b8>
    abc3:	c6 45 eb 00          	mov    BYTE PTR [rbp-0x15],0x0
    abc7:	83 7d f0 00          	cmp    DWORD PTR [rbp-0x10],0x0
    abcb:	0f 84 0f 01 00 00    	je     ace0 <hc_default+0x3d1>
    abd1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    abd5:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
    abd9:	8b 55 d0             	mov    edx,DWORD PTR [rbp-0x30]
    abdc:	48 63 d2             	movsxd rdx,edx
    abdf:	48 83 c2 01          	add    rdx,0x1
    abe3:	48 c1 e2 02          	shl    rdx,0x2
    abe7:	48 01 d0             	add    rax,rdx
    abea:	8b 00                	mov    eax,DWORD PTR [rax]
    abec:	39 45 f0             	cmp    DWORD PTR [rbp-0x10],eax
    abef:	0f 8e eb 00 00 00    	jle    ace0 <hc_default+0x3d1>
    abf5:	c6 45 eb 00          	mov    BYTE PTR [rbp-0x15],0x0
    abf9:	e9 e2 00 00 00       	jmp    ace0 <hc_default+0x3d1>
    abfe:	c6 45 eb 01          	mov    BYTE PTR [rbp-0x15],0x1
    ac02:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
    ac06:	74 20                	je     ac28 <hc_default+0x319>
    ac08:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ac0c:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
    ac10:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
    ac13:	48 63 d2             	movsxd rdx,edx
    ac16:	48 c1 e2 02          	shl    rdx,0x2
    ac1a:	48 01 d0             	add    rax,rdx
    ac1d:	8b 00                	mov    eax,DWORD PTR [rax]
    ac1f:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    ac22:	7e 04                	jle    ac28 <hc_default+0x319>
    ac24:	c6 45 eb 00          	mov    BYTE PTR [rbp-0x15],0x0
    ac28:	83 7d f0 00          	cmp    DWORD PTR [rbp-0x10],0x0
    ac2c:	0f 84 b1 00 00 00    	je     ace3 <hc_default+0x3d4>
    ac32:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ac36:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
    ac3a:	8b 55 d0             	mov    edx,DWORD PTR [rbp-0x30]
    ac3d:	48 63 d2             	movsxd rdx,edx
    ac40:	48 83 c2 01          	add    rdx,0x1
    ac44:	48 c1 e2 02          	shl    rdx,0x2
    ac48:	48 01 d0             	add    rax,rdx
    ac4b:	8b 00                	mov    eax,DWORD PTR [rax]
    ac4d:	39 45 f0             	cmp    DWORD PTR [rbp-0x10],eax
    ac50:	0f 8e 8d 00 00 00    	jle    ace3 <hc_default+0x3d4>
    ac56:	c6 45 eb 00          	mov    BYTE PTR [rbp-0x15],0x0
    ac5a:	e9 84 00 00 00       	jmp    ace3 <hc_default+0x3d4>
    ac5f:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    ac62:	2b 45 dc             	sub    eax,DWORD PTR [rbp-0x24]
    ac65:	83 c0 01             	add    eax,0x1
    ac68:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    ac6b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ac6f:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
    ac73:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
    ac76:	48 63 d2             	movsxd rdx,edx
    ac79:	48 c1 e2 02          	shl    rdx,0x2
    ac7d:	48 01 d0             	add    rax,rdx
    ac80:	8b 00                	mov    eax,DWORD PTR [rax]
    ac82:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    ac85:	0f 9e c0             	setle  al
    ac88:	88 45 eb             	mov    BYTE PTR [rbp-0x15],al
    ac8b:	eb 5a                	jmp    ace7 <hc_default+0x3d8>
    ac8d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ac91:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    ac95:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    ac98:	0f af 45 f4          	imul   eax,DWORD PTR [rbp-0xc]
    ac9c:	89 c1                	mov    ecx,eax
    ac9e:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
    aca1:	01 c8                	add    eax,ecx
    aca3:	89 c0                	mov    eax,eax
    aca5:	48 01 d0             	add    rax,rdx
    aca8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    acab:	0f b6 c0             	movzx  eax,al
    acae:	83 e0 01             	and    eax,0x1
    acb1:	85 c0                	test   eax,eax
    acb3:	74 31                	je     ace6 <hc_default+0x3d7>
    acb5:	c6 45 eb 01          	mov    BYTE PTR [rbp-0x15],0x1
    acb9:	eb 2b                	jmp    ace6 <hc_default+0x3d7>
    acbb:	0f b6 45 cc          	movzx  eax,BYTE PTR [rbp-0x34]
    acbf:	89 c6                	mov    esi,eax
    acc1:	48 8d 3d b8 72 02 00 	lea    rdi,[rip+0x272b8]        # 31f80 <Law_and_Order+0x540>
    acc8:	b8 00 00 00 00       	mov    eax,0x0
    accd:	e8 c9 14 02 00       	call   2c19b <vrna_message_warning>
    acd2:	eb 13                	jmp    ace7 <hc_default+0x3d8>
    acd4:	90                   	nop
    acd5:	eb 10                	jmp    ace7 <hc_default+0x3d8>
    acd7:	90                   	nop
    acd8:	eb 0d                	jmp    ace7 <hc_default+0x3d8>
    acda:	90                   	nop
    acdb:	eb 0a                	jmp    ace7 <hc_default+0x3d8>
    acdd:	90                   	nop
    acde:	eb 07                	jmp    ace7 <hc_default+0x3d8>
    ace0:	90                   	nop
    ace1:	eb 04                	jmp    ace7 <hc_default+0x3d8>
    ace3:	90                   	nop
    ace4:	eb 01                	jmp    ace7 <hc_default+0x3d8>
    ace6:	90                   	nop
    ace7:	0f b6 45 eb          	movzx  eax,BYTE PTR [rbp-0x15]
    aceb:	c9                   	leave  
    acec:	c3                   	ret    

000000000000aced <hc_sn>:
    aced:	f3 0f 1e fa          	endbr64 
    acf1:	55                   	push   rbp
    acf2:	48 89 e5             	mov    rbp,rsp
    acf5:	89 7d dc             	mov    DWORD PTR [rbp-0x24],edi
    acf8:	89 75 d8             	mov    DWORD PTR [rbp-0x28],esi
    acfb:	89 55 d4             	mov    DWORD PTR [rbp-0x2c],edx
    acfe:	89 4d d0             	mov    DWORD PTR [rbp-0x30],ecx
    ad01:	44 89 c0             	mov    eax,r8d
    ad04:	4c 89 4d c0          	mov    QWORD PTR [rbp-0x40],r9
    ad08:	88 45 cc             	mov    BYTE PTR [rbp-0x34],al
    ad0b:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    ad0f:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    ad13:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad17:	48 8b 40 18          	mov    rax,QWORD PTR [rax+0x18]
    ad1b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ad1f:	c6 45 ef 00          	mov    BYTE PTR [rbp-0x11],0x0
    ad23:	b8 01 00 00 00       	mov    eax,0x1
    ad28:	5d                   	pop    rbp
    ad29:	c3                   	ret    

000000000000ad2a <hc_default_window>:
    ad2a:	f3 0f 1e fa          	endbr64 
    ad2e:	55                   	push   rbp
    ad2f:	48 89 e5             	mov    rbp,rsp
    ad32:	48 83 ec 40          	sub    rsp,0x40
    ad36:	89 7d dc             	mov    DWORD PTR [rbp-0x24],edi
    ad39:	89 75 d8             	mov    DWORD PTR [rbp-0x28],esi
    ad3c:	89 55 d4             	mov    DWORD PTR [rbp-0x2c],edx
    ad3f:	89 4d d0             	mov    DWORD PTR [rbp-0x30],ecx
    ad42:	44 89 c0             	mov    eax,r8d
    ad45:	4c 89 4d c0          	mov    QWORD PTR [rbp-0x40],r9
    ad49:	88 45 cc             	mov    BYTE PTR [rbp-0x34],al
    ad4c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    ad50:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ad54:	c6 45 ef 00          	mov    BYTE PTR [rbp-0x11],0x0
    ad58:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    ad5b:	2b 45 dc             	sub    eax,DWORD PTR [rbp-0x24]
    ad5e:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    ad61:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    ad64:	2b 45 d0             	sub    eax,DWORD PTR [rbp-0x30]
    ad67:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    ad6a:	0f b6 45 cc          	movzx  eax,BYTE PTR [rbp-0x34]
    ad6e:	83 e8 0c             	sub    eax,0xc
    ad71:	83 f8 08             	cmp    eax,0x8
    ad74:	0f 87 e9 03 00 00    	ja     b163 <hc_default_window+0x439>
    ad7a:	89 c0                	mov    eax,eax
    ad7c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    ad84:	48 8d 05 4d 72 02 00 	lea    rax,[rip+0x2724d]        # 31fd8 <Law_and_Order+0x598>
    ad8b:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    ad8e:	48 98                	cdqe   
    ad90:	48 8d 15 41 72 02 00 	lea    rdx,[rip+0x27241]        # 31fd8 <Law_and_Order+0x598>
    ad97:	48 01 d0             	add    rax,rdx
    ad9a:	3e ff e0             	notrack jmp rax
    ad9d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ada1:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    ada5:	8b 55 d0             	mov    edx,DWORD PTR [rbp-0x30]
    ada8:	48 63 d2             	movsxd rdx,edx
    adab:	48 c1 e2 03          	shl    rdx,0x3
    adaf:	48 01 d0             	add    rax,rdx
    adb2:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    adb5:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    adb8:	2b 45 d0             	sub    eax,DWORD PTR [rbp-0x30]
    adbb:	48 98                	cdqe   
    adbd:	48 01 d0             	add    rax,rdx
    adc0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    adc3:	0f b6 c0             	movzx  eax,al
    adc6:	83 e0 01             	and    eax,0x1
    adc9:	85 c0                	test   eax,eax
    adcb:	0f 84 ab 03 00 00    	je     b17c <hc_default_window+0x452>
    add1:	c6 45 ef 01          	mov    BYTE PTR [rbp-0x11],0x1
    add5:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    add8:	3b 45 d0             	cmp    eax,DWORD PTR [rbp-0x30]
    addb:	0f 84 9b 03 00 00    	je     b17c <hc_default_window+0x452>
    ade1:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
    ade4:	2b 45 d4             	sub    eax,DWORD PTR [rbp-0x2c]
    ade7:	83 e8 01             	sub    eax,0x1
    adea:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    aded:	83 7d f0 00          	cmp    DWORD PTR [rbp-0x10],0x0
    adf1:	0f 84 85 03 00 00    	je     b17c <hc_default_window+0x452>
    adf7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    adfb:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
    adff:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
    ae02:	48 63 d2             	movsxd rdx,edx
    ae05:	48 83 c2 01          	add    rdx,0x1
    ae09:	48 c1 e2 02          	shl    rdx,0x2
    ae0d:	48 01 d0             	add    rax,rdx
    ae10:	8b 00                	mov    eax,DWORD PTR [rax]
    ae12:	39 45 f0             	cmp    DWORD PTR [rbp-0x10],eax
    ae15:	0f 8e 61 03 00 00    	jle    b17c <hc_default_window+0x452>
    ae1b:	c6 45 ef 00          	mov    BYTE PTR [rbp-0x11],0x0
    ae1f:	e9 58 03 00 00       	jmp    b17c <hc_default_window+0x452>
    ae24:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae28:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    ae2c:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
    ae2f:	48 63 d2             	movsxd rdx,edx
    ae32:	48 c1 e2 03          	shl    rdx,0x3
    ae36:	48 01 d0             	add    rax,rdx
    ae39:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    ae3c:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    ae3f:	2b 45 dc             	sub    eax,DWORD PTR [rbp-0x24]
    ae42:	48 98                	cdqe   
    ae44:	48 01 d0             	add    rax,rdx
    ae47:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ae4a:	0f b6 c0             	movzx  eax,al
    ae4d:	83 e0 01             	and    eax,0x1
    ae50:	85 c0                	test   eax,eax
    ae52:	0f 84 27 03 00 00    	je     b17f <hc_default_window+0x455>
    ae58:	c6 45 ef 01          	mov    BYTE PTR [rbp-0x11],0x1
    ae5c:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    ae5f:	3b 45 d4             	cmp    eax,DWORD PTR [rbp-0x2c]
    ae62:	0f 84 17 03 00 00    	je     b17f <hc_default_window+0x455>
    ae68:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
    ae6b:	2b 45 d4             	sub    eax,DWORD PTR [rbp-0x2c]
    ae6e:	83 e8 01             	sub    eax,0x1
    ae71:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    ae74:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
    ae78:	0f 84 01 03 00 00    	je     b17f <hc_default_window+0x455>
    ae7e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae82:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
    ae86:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
    ae89:	48 63 d2             	movsxd rdx,edx
    ae8c:	48 83 c2 01          	add    rdx,0x1
    ae90:	48 c1 e2 02          	shl    rdx,0x2
    ae94:	48 01 d0             	add    rax,rdx
    ae97:	8b 00                	mov    eax,DWORD PTR [rax]
    ae99:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    ae9c:	0f 8e dd 02 00 00    	jle    b17f <hc_default_window+0x455>
    aea2:	c6 45 ef 00          	mov    BYTE PTR [rbp-0x11],0x0
    aea6:	e9 d4 02 00 00       	jmp    b17f <hc_default_window+0x455>
    aeab:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aeaf:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    aeb3:	8b 55 d0             	mov    edx,DWORD PTR [rbp-0x30]
    aeb6:	48 63 d2             	movsxd rdx,edx
    aeb9:	48 c1 e2 03          	shl    rdx,0x3
    aebd:	48 01 d0             	add    rax,rdx
    aec0:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    aec3:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    aec6:	83 e8 01             	sub    eax,0x1
    aec9:	2b 45 d0             	sub    eax,DWORD PTR [rbp-0x30]
    aecc:	48 98                	cdqe   
    aece:	48 01 d0             	add    rax,rdx
    aed1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    aed4:	0f b6 c0             	movzx  eax,al
    aed7:	83 e0 01             	and    eax,0x1
    aeda:	85 c0                	test   eax,eax
    aedc:	0f 84 a0 02 00 00    	je     b182 <hc_default_window+0x458>
    aee2:	c6 45 ef 01          	mov    BYTE PTR [rbp-0x11],0x1
    aee6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aeea:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
    aeee:	8b 55 d8             	mov    edx,DWORD PTR [rbp-0x28]
    aef1:	48 63 d2             	movsxd rdx,edx
    aef4:	48 c1 e2 02          	shl    rdx,0x2
    aef8:	48 01 d0             	add    rax,rdx
    aefb:	8b 00                	mov    eax,DWORD PTR [rax]
    aefd:	85 c0                	test   eax,eax
    aeff:	75 04                	jne    af05 <hc_default_window+0x1db>
    af01:	c6 45 ef 00          	mov    BYTE PTR [rbp-0x11],0x0
    af05:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    af08:	3b 45 d0             	cmp    eax,DWORD PTR [rbp-0x30]
    af0b:	0f 84 71 02 00 00    	je     b182 <hc_default_window+0x458>
    af11:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
    af14:	2b 45 d4             	sub    eax,DWORD PTR [rbp-0x2c]
    af17:	83 e8 01             	sub    eax,0x1
    af1a:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    af1d:	83 7d f0 00          	cmp    DWORD PTR [rbp-0x10],0x0
    af21:	0f 84 5b 02 00 00    	je     b182 <hc_default_window+0x458>
    af27:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    af2b:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
    af2f:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
    af32:	48 63 d2             	movsxd rdx,edx
    af35:	48 83 c2 01          	add    rdx,0x1
    af39:	48 c1 e2 02          	shl    rdx,0x2
    af3d:	48 01 d0             	add    rax,rdx
    af40:	8b 00                	mov    eax,DWORD PTR [rax]
    af42:	39 45 f0             	cmp    DWORD PTR [rbp-0x10],eax
    af45:	0f 8e 37 02 00 00    	jle    b182 <hc_default_window+0x458>
    af4b:	c6 45 ef 00          	mov    BYTE PTR [rbp-0x11],0x0
    af4f:	e9 2e 02 00 00       	jmp    b182 <hc_default_window+0x458>
    af54:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    af58:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    af5c:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
    af5f:	48 63 d2             	movsxd rdx,edx
    af62:	48 83 c2 01          	add    rdx,0x1
    af66:	48 c1 e2 03          	shl    rdx,0x3
    af6a:	48 01 d0             	add    rax,rdx
    af6d:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    af70:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    af73:	8d 48 01             	lea    ecx,[rax+0x1]
    af76:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    af79:	29 c8                	sub    eax,ecx
    af7b:	48 98                	cdqe   
    af7d:	48 01 d0             	add    rax,rdx
    af80:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    af83:	0f b6 c0             	movzx  eax,al
    af86:	83 e0 01             	and    eax,0x1
    af89:	85 c0                	test   eax,eax
    af8b:	0f 84 f4 01 00 00    	je     b185 <hc_default_window+0x45b>
    af91:	c6 45 ef 01          	mov    BYTE PTR [rbp-0x11],0x1
    af95:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    af99:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
    af9d:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
    afa0:	48 63 d2             	movsxd rdx,edx
    afa3:	48 c1 e2 02          	shl    rdx,0x2
    afa7:	48 01 d0             	add    rax,rdx
    afaa:	8b 00                	mov    eax,DWORD PTR [rax]
    afac:	85 c0                	test   eax,eax
    afae:	75 04                	jne    afb4 <hc_default_window+0x28a>
    afb0:	c6 45 ef 00          	mov    BYTE PTR [rbp-0x11],0x0
    afb4:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    afb7:	3b 45 d4             	cmp    eax,DWORD PTR [rbp-0x2c]
    afba:	0f 84 c5 01 00 00    	je     b185 <hc_default_window+0x45b>
    afc0:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
    afc3:	2b 45 d4             	sub    eax,DWORD PTR [rbp-0x2c]
    afc6:	83 e8 01             	sub    eax,0x1
    afc9:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    afcc:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
    afd0:	0f 84 af 01 00 00    	je     b185 <hc_default_window+0x45b>
    afd6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    afda:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
    afde:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
    afe1:	48 63 d2             	movsxd rdx,edx
    afe4:	48 83 c2 01          	add    rdx,0x1
    afe8:	48 c1 e2 02          	shl    rdx,0x2
    afec:	48 01 d0             	add    rax,rdx
    afef:	8b 00                	mov    eax,DWORD PTR [rax]
    aff1:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    aff4:	0f 8e 8b 01 00 00    	jle    b185 <hc_default_window+0x45b>
    affa:	c6 45 ef 00          	mov    BYTE PTR [rbp-0x11],0x0
    affe:	e9 82 01 00 00       	jmp    b185 <hc_default_window+0x45b>
    b003:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b007:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    b00b:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
    b00e:	48 63 d2             	movsxd rdx,edx
    b011:	48 c1 e2 03          	shl    rdx,0x3
    b015:	48 01 d0             	add    rax,rdx
    b018:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    b01b:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
    b01e:	2b 45 d4             	sub    eax,DWORD PTR [rbp-0x2c]
    b021:	48 98                	cdqe   
    b023:	48 01 d0             	add    rax,rdx
    b026:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b029:	0f b6 c0             	movzx  eax,al
    b02c:	83 e0 01             	and    eax,0x1
    b02f:	85 c0                	test   eax,eax
    b031:	0f 84 51 01 00 00    	je     b188 <hc_default_window+0x45e>
    b037:	c6 45 ef 01          	mov    BYTE PTR [rbp-0x11],0x1
    b03b:	83 7d f0 00          	cmp    DWORD PTR [rbp-0x10],0x0
    b03f:	74 20                	je     b061 <hc_default_window+0x337>
    b041:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b045:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
    b049:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
    b04c:	48 63 d2             	movsxd rdx,edx
    b04f:	48 c1 e2 02          	shl    rdx,0x2
    b053:	48 01 d0             	add    rax,rdx
    b056:	8b 00                	mov    eax,DWORD PTR [rax]
    b058:	39 45 f0             	cmp    DWORD PTR [rbp-0x10],eax
    b05b:	7e 04                	jle    b061 <hc_default_window+0x337>
    b05d:	c6 45 ef 00          	mov    BYTE PTR [rbp-0x11],0x0
    b061:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
    b065:	0f 84 1d 01 00 00    	je     b188 <hc_default_window+0x45e>
    b06b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b06f:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
    b073:	8b 55 d0             	mov    edx,DWORD PTR [rbp-0x30]
    b076:	48 63 d2             	movsxd rdx,edx
    b079:	48 83 c2 01          	add    rdx,0x1
    b07d:	48 c1 e2 02          	shl    rdx,0x2
    b081:	48 01 d0             	add    rax,rdx
    b084:	8b 00                	mov    eax,DWORD PTR [rax]
    b086:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    b089:	0f 8e f9 00 00 00    	jle    b188 <hc_default_window+0x45e>
    b08f:	c6 45 ef 00          	mov    BYTE PTR [rbp-0x11],0x0
    b093:	e9 f0 00 00 00       	jmp    b188 <hc_default_window+0x45e>
    b098:	c6 45 ef 01          	mov    BYTE PTR [rbp-0x11],0x1
    b09c:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
    b09f:	2b 45 d4             	sub    eax,DWORD PTR [rbp-0x2c]
    b0a2:	83 e8 01             	sub    eax,0x1
    b0a5:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    b0a8:	83 7d f0 00          	cmp    DWORD PTR [rbp-0x10],0x0
    b0ac:	0f 84 d9 00 00 00    	je     b18b <hc_default_window+0x461>
    b0b2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b0b6:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
    b0ba:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
    b0bd:	48 63 d2             	movsxd rdx,edx
    b0c0:	48 83 c2 01          	add    rdx,0x1
    b0c4:	48 c1 e2 02          	shl    rdx,0x2
    b0c8:	48 01 d0             	add    rax,rdx
    b0cb:	8b 00                	mov    eax,DWORD PTR [rax]
    b0cd:	39 45 f0             	cmp    DWORD PTR [rbp-0x10],eax
    b0d0:	0f 8e b5 00 00 00    	jle    b18b <hc_default_window+0x461>
    b0d6:	c6 45 ef 00          	mov    BYTE PTR [rbp-0x11],0x0
    b0da:	e9 ac 00 00 00       	jmp    b18b <hc_default_window+0x461>
    b0df:	c6 45 ef 01          	mov    BYTE PTR [rbp-0x11],0x1
    b0e3:	83 7d f0 00          	cmp    DWORD PTR [rbp-0x10],0x0
    b0e7:	74 20                	je     b109 <hc_default_window+0x3df>
    b0e9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b0ed:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
    b0f1:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
    b0f4:	48 63 d2             	movsxd rdx,edx
    b0f7:	48 c1 e2 02          	shl    rdx,0x2
    b0fb:	48 01 d0             	add    rax,rdx
    b0fe:	8b 00                	mov    eax,DWORD PTR [rax]
    b100:	39 45 f0             	cmp    DWORD PTR [rbp-0x10],eax
    b103:	7e 04                	jle    b109 <hc_default_window+0x3df>
    b105:	c6 45 ef 00          	mov    BYTE PTR [rbp-0x11],0x0
    b109:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
    b10d:	74 7f                	je     b18e <hc_default_window+0x464>
    b10f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b113:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
    b117:	8b 55 d0             	mov    edx,DWORD PTR [rbp-0x30]
    b11a:	48 63 d2             	movsxd rdx,edx
    b11d:	48 83 c2 01          	add    rdx,0x1
    b121:	48 c1 e2 02          	shl    rdx,0x2
    b125:	48 01 d0             	add    rax,rdx
    b128:	8b 00                	mov    eax,DWORD PTR [rax]
    b12a:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    b12d:	7e 5f                	jle    b18e <hc_default_window+0x464>
    b12f:	c6 45 ef 00          	mov    BYTE PTR [rbp-0x11],0x0
    b133:	eb 59                	jmp    b18e <hc_default_window+0x464>
    b135:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    b138:	2b 45 dc             	sub    eax,DWORD PTR [rbp-0x24]
    b13b:	83 c0 01             	add    eax,0x1
    b13e:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    b141:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b145:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
    b149:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
    b14c:	48 63 d2             	movsxd rdx,edx
    b14f:	48 c1 e2 02          	shl    rdx,0x2
    b153:	48 01 d0             	add    rax,rdx
    b156:	8b 00                	mov    eax,DWORD PTR [rax]
    b158:	39 45 f0             	cmp    DWORD PTR [rbp-0x10],eax
    b15b:	0f 9e c0             	setle  al
    b15e:	88 45 ef             	mov    BYTE PTR [rbp-0x11],al
    b161:	eb 2c                	jmp    b18f <hc_default_window+0x465>
    b163:	0f b6 45 cc          	movzx  eax,BYTE PTR [rbp-0x34]
    b167:	89 c6                	mov    esi,eax
    b169:	48 8d 3d 10 6e 02 00 	lea    rdi,[rip+0x26e10]        # 31f80 <Law_and_Order+0x540>
    b170:	b8 00 00 00 00       	mov    eax,0x0
    b175:	e8 21 10 02 00       	call   2c19b <vrna_message_warning>
    b17a:	eb 13                	jmp    b18f <hc_default_window+0x465>
    b17c:	90                   	nop
    b17d:	eb 10                	jmp    b18f <hc_default_window+0x465>
    b17f:	90                   	nop
    b180:	eb 0d                	jmp    b18f <hc_default_window+0x465>
    b182:	90                   	nop
    b183:	eb 0a                	jmp    b18f <hc_default_window+0x465>
    b185:	90                   	nop
    b186:	eb 07                	jmp    b18f <hc_default_window+0x465>
    b188:	90                   	nop
    b189:	eb 04                	jmp    b18f <hc_default_window+0x465>
    b18b:	90                   	nop
    b18c:	eb 01                	jmp    b18f <hc_default_window+0x465>
    b18e:	90                   	nop
    b18f:	0f b6 45 ef          	movzx  eax,BYTE PTR [rbp-0x11]
    b193:	c9                   	leave  
    b194:	c3                   	ret    

000000000000b195 <hc_default_sn>:
    b195:	f3 0f 1e fa          	endbr64 
    b199:	55                   	push   rbp
    b19a:	48 89 e5             	mov    rbp,rsp
    b19d:	48 83 ec 30          	sub    rsp,0x30
    b1a1:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    b1a4:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
    b1a7:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
    b1aa:	89 4d e0             	mov    DWORD PTR [rbp-0x20],ecx
    b1ad:	44 89 c0             	mov    eax,r8d
    b1b0:	4c 89 4d d0          	mov    QWORD PTR [rbp-0x30],r9
    b1b4:	88 45 dc             	mov    BYTE PTR [rbp-0x24],al
    b1b7:	0f b6 7d dc          	movzx  edi,BYTE PTR [rbp-0x24]
    b1bb:	4c 8b 45 d0          	mov    r8,QWORD PTR [rbp-0x30]
    b1bf:	8b 4d e0             	mov    ecx,DWORD PTR [rbp-0x20]
    b1c2:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    b1c5:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    b1c8:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    b1cb:	4d 89 c1             	mov    r9,r8
    b1ce:	41 89 f8             	mov    r8d,edi
    b1d1:	89 c7                	mov    edi,eax
    b1d3:	e8 37 f7 ff ff       	call   a90f <hc_default>
    b1d8:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
    b1db:	0f b6 7d dc          	movzx  edi,BYTE PTR [rbp-0x24]
    b1df:	4c 8b 45 d0          	mov    r8,QWORD PTR [rbp-0x30]
    b1e3:	8b 4d e0             	mov    ecx,DWORD PTR [rbp-0x20]
    b1e6:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    b1e9:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    b1ec:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    b1ef:	4d 89 c1             	mov    r9,r8
    b1f2:	41 89 f8             	mov    r8d,edi
    b1f5:	89 c7                	mov    edi,eax
    b1f7:	e8 f1 fa ff ff       	call   aced <hc_sn>
    b1fc:	84 c0                	test   al,al
    b1fe:	74 06                	je     b206 <hc_default_sn+0x71>
    b200:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
    b204:	eb 05                	jmp    b20b <hc_default_sn+0x76>
    b206:	b8 00 00 00 00       	mov    eax,0x0
    b20b:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
    b20e:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
    b212:	c9                   	leave  
    b213:	c3                   	ret    

000000000000b214 <hc_default_user>:
    b214:	f3 0f 1e fa          	endbr64 
    b218:	55                   	push   rbp
    b219:	48 89 e5             	mov    rbp,rsp
    b21c:	48 83 ec 30          	sub    rsp,0x30
    b220:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    b223:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
    b226:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
    b229:	89 4d e0             	mov    DWORD PTR [rbp-0x20],ecx
    b22c:	44 89 c0             	mov    eax,r8d
    b22f:	4c 89 4d d0          	mov    QWORD PTR [rbp-0x30],r9
    b233:	88 45 dc             	mov    BYTE PTR [rbp-0x24],al
    b236:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b23a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b23e:	0f b6 7d dc          	movzx  edi,BYTE PTR [rbp-0x24]
    b242:	4c 8b 45 d0          	mov    r8,QWORD PTR [rbp-0x30]
    b246:	8b 4d e0             	mov    ecx,DWORD PTR [rbp-0x20]
    b249:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    b24c:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    b24f:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    b252:	4d 89 c1             	mov    r9,r8
    b255:	41 89 f8             	mov    r8d,edi
    b258:	89 c7                	mov    edi,eax
    b25a:	e8 b0 f6 ff ff       	call   a90f <hc_default>
    b25f:	88 45 f7             	mov    BYTE PTR [rbp-0x9],al
    b262:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b266:	4c 8b 50 30          	mov    r10,QWORD PTR [rax+0x30]
    b26a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b26e:	4c 8b 40 28          	mov    r8,QWORD PTR [rax+0x28]
    b272:	0f b6 7d dc          	movzx  edi,BYTE PTR [rbp-0x24]
    b276:	8b 4d e0             	mov    ecx,DWORD PTR [rbp-0x20]
    b279:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    b27c:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    b27f:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    b282:	4d 89 c1             	mov    r9,r8
    b285:	41 89 f8             	mov    r8d,edi
    b288:	89 c7                	mov    edi,eax
    b28a:	41 ff d2             	call   r10
    b28d:	84 c0                	test   al,al
    b28f:	74 06                	je     b297 <hc_default_user+0x83>
    b291:	0f b6 45 f7          	movzx  eax,BYTE PTR [rbp-0x9]
    b295:	eb 05                	jmp    b29c <hc_default_user+0x88>
    b297:	b8 00 00 00 00       	mov    eax,0x0
    b29c:	88 45 f7             	mov    BYTE PTR [rbp-0x9],al
    b29f:	0f b6 45 f7          	movzx  eax,BYTE PTR [rbp-0x9]
    b2a3:	c9                   	leave  
    b2a4:	c3                   	ret    

000000000000b2a5 <hc_default_sn_user>:
    b2a5:	f3 0f 1e fa          	endbr64 
    b2a9:	55                   	push   rbp
    b2aa:	48 89 e5             	mov    rbp,rsp
    b2ad:	48 83 ec 30          	sub    rsp,0x30
    b2b1:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    b2b4:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
    b2b7:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
    b2ba:	89 4d e0             	mov    DWORD PTR [rbp-0x20],ecx
    b2bd:	44 89 c0             	mov    eax,r8d
    b2c0:	4c 89 4d d0          	mov    QWORD PTR [rbp-0x30],r9
    b2c4:	88 45 dc             	mov    BYTE PTR [rbp-0x24],al
    b2c7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b2cb:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b2cf:	0f b6 7d dc          	movzx  edi,BYTE PTR [rbp-0x24]
    b2d3:	4c 8b 45 d0          	mov    r8,QWORD PTR [rbp-0x30]
    b2d7:	8b 4d e0             	mov    ecx,DWORD PTR [rbp-0x20]
    b2da:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    b2dd:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    b2e0:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    b2e3:	4d 89 c1             	mov    r9,r8
    b2e6:	41 89 f8             	mov    r8d,edi
    b2e9:	89 c7                	mov    edi,eax
    b2eb:	e8 1f f6 ff ff       	call   a90f <hc_default>
    b2f0:	88 45 f7             	mov    BYTE PTR [rbp-0x9],al
    b2f3:	0f b6 7d dc          	movzx  edi,BYTE PTR [rbp-0x24]
    b2f7:	4c 8b 45 d0          	mov    r8,QWORD PTR [rbp-0x30]
    b2fb:	8b 4d e0             	mov    ecx,DWORD PTR [rbp-0x20]
    b2fe:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    b301:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    b304:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    b307:	4d 89 c1             	mov    r9,r8
    b30a:	41 89 f8             	mov    r8d,edi
    b30d:	89 c7                	mov    edi,eax
    b30f:	e8 d9 f9 ff ff       	call   aced <hc_sn>
    b314:	84 c0                	test   al,al
    b316:	74 06                	je     b31e <hc_default_sn_user+0x79>
    b318:	0f b6 45 f7          	movzx  eax,BYTE PTR [rbp-0x9]
    b31c:	eb 05                	jmp    b323 <hc_default_sn_user+0x7e>
    b31e:	b8 00 00 00 00       	mov    eax,0x0
    b323:	88 45 f7             	mov    BYTE PTR [rbp-0x9],al
    b326:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b32a:	4c 8b 50 30          	mov    r10,QWORD PTR [rax+0x30]
    b32e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b332:	4c 8b 40 28          	mov    r8,QWORD PTR [rax+0x28]
    b336:	0f b6 7d dc          	movzx  edi,BYTE PTR [rbp-0x24]
    b33a:	8b 4d e0             	mov    ecx,DWORD PTR [rbp-0x20]
    b33d:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    b340:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    b343:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    b346:	4d 89 c1             	mov    r9,r8
    b349:	41 89 f8             	mov    r8d,edi
    b34c:	89 c7                	mov    edi,eax
    b34e:	41 ff d2             	call   r10
    b351:	84 c0                	test   al,al
    b353:	74 06                	je     b35b <hc_default_sn_user+0xb6>
    b355:	0f b6 45 f7          	movzx  eax,BYTE PTR [rbp-0x9]
    b359:	eb 05                	jmp    b360 <hc_default_sn_user+0xbb>
    b35b:	b8 00 00 00 00       	mov    eax,0x0
    b360:	88 45 f7             	mov    BYTE PTR [rbp-0x9],al
    b363:	0f b6 45 f7          	movzx  eax,BYTE PTR [rbp-0x9]
    b367:	c9                   	leave  
    b368:	c3                   	ret    

000000000000b369 <hc_default_user_window>:
    b369:	f3 0f 1e fa          	endbr64 
    b36d:	55                   	push   rbp
    b36e:	48 89 e5             	mov    rbp,rsp
    b371:	48 83 ec 30          	sub    rsp,0x30
    b375:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    b378:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
    b37b:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
    b37e:	89 4d e0             	mov    DWORD PTR [rbp-0x20],ecx
    b381:	44 89 c0             	mov    eax,r8d
    b384:	4c 89 4d d0          	mov    QWORD PTR [rbp-0x30],r9
    b388:	88 45 dc             	mov    BYTE PTR [rbp-0x24],al
    b38b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b38f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b393:	0f b6 7d dc          	movzx  edi,BYTE PTR [rbp-0x24]
    b397:	4c 8b 45 d0          	mov    r8,QWORD PTR [rbp-0x30]
    b39b:	8b 4d e0             	mov    ecx,DWORD PTR [rbp-0x20]
    b39e:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    b3a1:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    b3a4:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    b3a7:	4d 89 c1             	mov    r9,r8
    b3aa:	41 89 f8             	mov    r8d,edi
    b3ad:	89 c7                	mov    edi,eax
    b3af:	e8 76 f9 ff ff       	call   ad2a <hc_default_window>
    b3b4:	88 45 f7             	mov    BYTE PTR [rbp-0x9],al
    b3b7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b3bb:	4c 8b 50 30          	mov    r10,QWORD PTR [rax+0x30]
    b3bf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b3c3:	4c 8b 40 28          	mov    r8,QWORD PTR [rax+0x28]
    b3c7:	0f b6 7d dc          	movzx  edi,BYTE PTR [rbp-0x24]
    b3cb:	8b 4d e0             	mov    ecx,DWORD PTR [rbp-0x20]
    b3ce:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    b3d1:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    b3d4:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    b3d7:	4d 89 c1             	mov    r9,r8
    b3da:	41 89 f8             	mov    r8d,edi
    b3dd:	89 c7                	mov    edi,eax
    b3df:	41 ff d2             	call   r10
    b3e2:	84 c0                	test   al,al
    b3e4:	74 06                	je     b3ec <hc_default_user_window+0x83>
    b3e6:	0f b6 45 f7          	movzx  eax,BYTE PTR [rbp-0x9]
    b3ea:	eb 05                	jmp    b3f1 <hc_default_user_window+0x88>
    b3ec:	b8 00 00 00 00       	mov    eax,0x0
    b3f1:	88 45 f7             	mov    BYTE PTR [rbp-0x9],al
    b3f4:	0f b6 45 f7          	movzx  eax,BYTE PTR [rbp-0x9]
    b3f8:	c9                   	leave  
    b3f9:	c3                   	ret    

000000000000b3fa <prepare_hc_default>:
    b3fa:	55                   	push   rbp
    b3fb:	48 89 e5             	mov    rbp,rsp
    b3fe:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    b402:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    b406:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b40a:	48 8b 40 48          	mov    rax,QWORD PTR [rax+0x48]
    b40e:	48 8b 50 18          	mov    rdx,QWORD PTR [rax+0x18]
    b412:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    b416:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
    b41a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b41e:	8b 50 04             	mov    edx,DWORD PTR [rax+0x4]
    b421:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    b425:	89 10                	mov    DWORD PTR [rax],edx
    b427:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b42b:	48 8b 40 48          	mov    rax,QWORD PTR [rax+0x48]
    b42f:	48 8b 50 20          	mov    rdx,QWORD PTR [rax+0x20]
    b433:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    b437:	48 89 50 20          	mov    QWORD PTR [rax+0x20],rdx
    b43b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b43f:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    b443:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    b447:	48 89 50 18          	mov    QWORD PTR [rax+0x18],rdx
    b44b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b44f:	48 8b 40 48          	mov    rax,QWORD PTR [rax+0x48]
    b453:	48 8b 40 40          	mov    rax,QWORD PTR [rax+0x40]
    b457:	48 85 c0             	test   rax,rax
    b45a:	74 46                	je     b4a2 <prepare_hc_default+0xa8>
    b45c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b460:	48 8b 40 48          	mov    rax,QWORD PTR [rax+0x48]
    b464:	48 8b 50 40          	mov    rdx,QWORD PTR [rax+0x40]
    b468:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    b46c:	48 89 50 30          	mov    QWORD PTR [rax+0x30],rdx
    b470:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b474:	48 8b 40 48          	mov    rax,QWORD PTR [rax+0x48]
    b478:	48 8b 50 48          	mov    rdx,QWORD PTR [rax+0x48]
    b47c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    b480:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    b484:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b488:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    b48b:	83 f8 01             	cmp    eax,0x1
    b48e:	75 09                	jne    b499 <prepare_hc_default+0x9f>
    b490:	48 8d 05 7d fd ff ff 	lea    rax,[rip+0xfffffffffffffd7d]        # b214 <hc_default_user>
    b497:	eb 25                	jmp    b4be <prepare_hc_default+0xc4>
    b499:	48 8d 05 05 fe ff ff 	lea    rax,[rip+0xfffffffffffffe05]        # b2a5 <hc_default_sn_user>
    b4a0:	eb 1c                	jmp    b4be <prepare_hc_default+0xc4>
    b4a2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b4a6:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    b4a9:	83 f8 01             	cmp    eax,0x1
    b4ac:	75 09                	jne    b4b7 <prepare_hc_default+0xbd>
    b4ae:	48 8d 05 5a f4 ff ff 	lea    rax,[rip+0xfffffffffffff45a]        # a90f <hc_default>
    b4b5:	eb 07                	jmp    b4be <prepare_hc_default+0xc4>
    b4b7:	48 8d 05 d7 fc ff ff 	lea    rax,[rip+0xfffffffffffffcd7]        # b195 <hc_default_sn>
    b4be:	5d                   	pop    rbp
    b4bf:	c3                   	ret    

000000000000b4c0 <prepare_hc_default_window>:
    b4c0:	55                   	push   rbp
    b4c1:	48 89 e5             	mov    rbp,rsp
    b4c4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    b4c8:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    b4cc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b4d0:	48 8b 40 48          	mov    rax,QWORD PTR [rax+0x48]
    b4d4:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    b4d8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    b4dc:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
    b4e0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b4e4:	48 8b 40 48          	mov    rax,QWORD PTR [rax+0x48]
    b4e8:	48 8b 50 20          	mov    rdx,QWORD PTR [rax+0x20]
    b4ec:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    b4f0:	48 89 50 20          	mov    QWORD PTR [rax+0x20],rdx
    b4f4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b4f8:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    b4fc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    b500:	48 89 50 18          	mov    QWORD PTR [rax+0x18],rdx
    b504:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b508:	48 8b 40 48          	mov    rax,QWORD PTR [rax+0x48]
    b50c:	48 8b 40 40          	mov    rax,QWORD PTR [rax+0x40]
    b510:	48 85 c0             	test   rax,rax
    b513:	74 31                	je     b546 <prepare_hc_default_window+0x86>
    b515:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b519:	48 8b 40 48          	mov    rax,QWORD PTR [rax+0x48]
    b51d:	48 8b 50 40          	mov    rdx,QWORD PTR [rax+0x40]
    b521:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    b525:	48 89 50 30          	mov    QWORD PTR [rax+0x30],rdx
    b529:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b52d:	48 8b 40 48          	mov    rax,QWORD PTR [rax+0x48]
    b531:	48 8b 50 48          	mov    rdx,QWORD PTR [rax+0x48]
    b535:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    b539:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    b53d:	48 8d 05 25 fe ff ff 	lea    rax,[rip+0xfffffffffffffe25]        # b369 <hc_default_user_window>
    b544:	eb 07                	jmp    b54d <prepare_hc_default_window+0x8d>
    b546:	48 8d 05 dd f7 ff ff 	lea    rax,[rip+0xfffffffffffff7dd]        # ad2a <hc_default_window>
    b54d:	5d                   	pop    rbp
    b54e:	c3                   	ret    

000000000000b54f <init_sc_wrapper>:
    b54f:	55                   	push   rbp
    b550:	48 89 e5             	mov    rbp,rsp
    b553:	48 83 ec 30          	sub    rsp,0x30
    b557:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    b55b:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    b55f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b563:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
    b56a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b56e:	48 c7 40 28 00 00 00 00 	mov    QWORD PTR [rax+0x28],0x0
    b576:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b57a:	48 c7 40 30 00 00 00 00 	mov    QWORD PTR [rax+0x30],0x0
    b582:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b586:	c7 40 38 01 00 00 00 	mov    DWORD PTR [rax+0x38],0x1
    b58d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b591:	48 c7 40 48 00 00 00 00 	mov    QWORD PTR [rax+0x48],0x0
    b599:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b59d:	48 c7 40 50 00 00 00 00 	mov    QWORD PTR [rax+0x50],0x0
    b5a5:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b5a9:	48 c7 40 58 00 00 00 00 	mov    QWORD PTR [rax+0x58],0x0
    b5b1:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b5b5:	48 c7 40 08 00 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
    b5bd:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b5c1:	48 c7 40 10 00 00 00 00 	mov    QWORD PTR [rax+0x10],0x0
    b5c9:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b5cd:	48 c7 40 18 00 00 00 00 	mov    QWORD PTR [rax+0x18],0x0
    b5d5:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b5d9:	48 c7 40 20 00 00 00 00 	mov    QWORD PTR [rax+0x20],0x0
    b5e1:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    b5e5:	8b 00                	mov    eax,DWORD PTR [rax]
    b5e7:	85 c0                	test   eax,eax
    b5e9:	74 0e                	je     b5f9 <init_sc_wrapper+0xaa>
    b5eb:	83 f8 01             	cmp    eax,0x1
    b5ee:	0f 84 40 01 00 00    	je     b734 <init_sc_wrapper+0x1e5>
    b5f4:	e9 c9 03 00 00       	jmp    b9c2 <init_sc_wrapper+0x473>
    b5f9:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    b5fd:	48 8b 80 d8 00 00 00 	mov    rax,QWORD PTR [rax+0xd8]
    b604:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b608:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    b60d:	0f 84 ab 03 00 00    	je     b9be <init_sc_wrapper+0x46f>
    b613:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b617:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    b61b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b61f:	48 89 10             	mov    QWORD PTR [rax],rdx
    b622:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b626:	48 8b 50 50          	mov    rdx,QWORD PTR [rax+0x50]
    b62a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b62e:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    b632:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b636:	48 8b 50 68          	mov    rdx,QWORD PTR [rax+0x68]
    b63a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b63e:	48 89 50 30          	mov    QWORD PTR [rax+0x30],rdx
    b642:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b646:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    b64a:	48 85 c0             	test   rax,rax
    b64d:	0f 84 8f 00 00 00    	je     b6e2 <init_sc_wrapper+0x193>
    b653:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b657:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    b65b:	48 85 c0             	test   rax,rax
    b65e:	74 41                	je     b6a1 <init_sc_wrapper+0x152>
    b660:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b664:	48 8d 15 c5 0e 00 00 	lea    rdx,[rip+0xec5]        # c530 <sc_user_def_f5_reduce_to_ext>
    b66b:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
    b66f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b673:	48 8d 15 c4 11 00 00 	lea    rdx,[rip+0x11c4]        # c83e <sc_user_def_f5_reduce_to_stem>
    b67a:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
    b67e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b682:	48 8d 15 c0 17 00 00 	lea    rdx,[rip+0x17c0]        # ce49 <sc_user_def_f5_split_in_ext_stem>
    b689:	48 89 50 18          	mov    QWORD PTR [rax+0x18],rdx
    b68d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b691:	48 8d 15 0c 1f 00 00 	lea    rdx,[rip+0x1f0c]        # d5a4 <sc_user_def_f5_split_in_ext_stem1>
    b698:	48 89 50 20          	mov    QWORD PTR [rax+0x20],rdx
    b69c:	e9 1d 03 00 00       	jmp    b9be <init_sc_wrapper+0x46f>
    b6a1:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b6a5:	48 8d 15 1f 08 00 00 	lea    rdx,[rip+0x81f]        # becb <sc_default_f5_reduce>
    b6ac:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
    b6b0:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b6b4:	48 8d 15 10 08 00 00 	lea    rdx,[rip+0x810]        # becb <sc_default_f5_reduce>
    b6bb:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
    b6bf:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b6c3:	48 8d 15 a8 12 00 00 	lea    rdx,[rip+0x12a8]        # c972 <sc_default_f5_split_in_ext_stem>
    b6ca:	48 89 50 18          	mov    QWORD PTR [rax+0x18],rdx
    b6ce:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b6d2:	48 8d 15 a4 18 00 00 	lea    rdx,[rip+0x18a4]        # cf7d <sc_default_f5_split_in_ext_stem1>
    b6d9:	48 89 50 20          	mov    QWORD PTR [rax+0x20],rdx
    b6dd:	e9 dc 02 00 00       	jmp    b9be <init_sc_wrapper+0x46f>
    b6e2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b6e6:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    b6ea:	48 85 c0             	test   rax,rax
    b6ed:	0f 84 cb 02 00 00    	je     b9be <init_sc_wrapper+0x46f>
    b6f3:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b6f7:	48 8d 15 58 0c 00 00 	lea    rdx,[rip+0xc58]        # c356 <sc_user_f5_reduce_to_ext>
    b6fe:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
    b702:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b706:	48 8d 15 57 0f 00 00 	lea    rdx,[rip+0xf57]        # c664 <sc_user_f5_reduce_to_stem>
    b70d:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
    b711:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b715:	48 8d 15 53 15 00 00 	lea    rdx,[rip+0x1553]        # cc6f <sc_user_f5_split_in_ext_stem>
    b71c:	48 89 50 18          	mov    QWORD PTR [rax+0x18],rdx
    b720:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b724:	48 8d 15 9f 1c 00 00 	lea    rdx,[rip+0x1c9f]        # d3ca <sc_user_f5_split_in_ext_stem1>
    b72b:	48 89 50 20          	mov    QWORD PTR [rax+0x20],rdx
    b72f:	e9 8a 02 00 00       	jmp    b9be <init_sc_wrapper+0x46f>
    b734:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    b738:	48 8b 80 10 01 00 00 	mov    rax,QWORD PTR [rax+0x110]
    b73f:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    b743:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    b747:	8b 80 b8 00 00 00    	mov    eax,DWORD PTR [rax+0xb8]
    b74d:	89 c2                	mov    edx,eax
    b74f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b753:	89 50 38             	mov    DWORD PTR [rax+0x38],edx
    b756:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    b75a:	48 8b 90 f0 00 00 00 	mov    rdx,QWORD PTR [rax+0xf0]
    b761:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b765:	48 89 50 40          	mov    QWORD PTR [rax+0x40],rdx
    b769:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
    b76e:	0f 84 4d 02 00 00    	je     b9c1 <init_sc_wrapper+0x472>
    b774:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    b778:	8b 80 b8 00 00 00    	mov    eax,DWORD PTR [rax+0xb8]
    b77e:	c1 e0 03             	shl    eax,0x3
    b781:	89 c7                	mov    edi,eax
    b783:	e8 39 07 02 00       	call   2bec1 <vrna_alloc>
    b788:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    b78c:	48 89 42 48          	mov    QWORD PTR [rdx+0x48],rax
    b790:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    b794:	8b 80 b8 00 00 00    	mov    eax,DWORD PTR [rax+0xb8]
    b79a:	c1 e0 03             	shl    eax,0x3
    b79d:	89 c7                	mov    edi,eax
    b79f:	e8 1d 07 02 00       	call   2bec1 <vrna_alloc>
    b7a4:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    b7a8:	48 89 42 50          	mov    QWORD PTR [rdx+0x50],rax
    b7ac:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    b7b0:	8b 80 b8 00 00 00    	mov    eax,DWORD PTR [rax+0xb8]
    b7b6:	c1 e0 03             	shl    eax,0x3
    b7b9:	89 c7                	mov    edi,eax
    b7bb:	e8 01 07 02 00       	call   2bec1 <vrna_alloc>
    b7c0:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    b7c4:	48 89 42 58          	mov    QWORD PTR [rdx+0x58],rax
    b7c8:	c7 45 e8 00 00 00 00 	mov    DWORD PTR [rbp-0x18],0x0
    b7cf:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    b7d6:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
    b7dd:	e9 f6 00 00 00       	jmp    b8d8 <init_sc_wrapper+0x389>
    b7e2:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    b7e5:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    b7ed:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    b7f1:	48 01 d0             	add    rax,rdx
    b7f4:	48 8b 00             	mov    rax,QWORD PTR [rax]
    b7f7:	48 85 c0             	test   rax,rax
    b7fa:	0f 84 d4 00 00 00    	je     b8d4 <init_sc_wrapper+0x385>
    b800:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    b803:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    b80b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    b80f:	48 01 d0             	add    rax,rdx
    b812:	48 8b 00             	mov    rax,QWORD PTR [rax]
    b815:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    b819:	48 8b 52 48          	mov    rdx,QWORD PTR [rdx+0x48]
    b81d:	8b 4d e4             	mov    ecx,DWORD PTR [rbp-0x1c]
    b820:	48 c1 e1 03          	shl    rcx,0x3
    b824:	48 01 ca             	add    rdx,rcx
    b827:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    b82b:	48 89 02             	mov    QWORD PTR [rdx],rax
    b82e:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    b831:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    b839:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    b83d:	48 01 d0             	add    rax,rdx
    b840:	48 8b 00             	mov    rax,QWORD PTR [rax]
    b843:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    b847:	48 8b 52 50          	mov    rdx,QWORD PTR [rdx+0x50]
    b84b:	8b 4d e4             	mov    ecx,DWORD PTR [rbp-0x1c]
    b84e:	48 c1 e1 03          	shl    rcx,0x3
    b852:	48 01 ca             	add    rdx,rcx
    b855:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    b859:	48 89 02             	mov    QWORD PTR [rdx],rax
    b85c:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    b85f:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    b867:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    b86b:	48 01 d0             	add    rax,rdx
    b86e:	48 8b 00             	mov    rax,QWORD PTR [rax]
    b871:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    b875:	48 8b 52 58          	mov    rdx,QWORD PTR [rdx+0x58]
    b879:	8b 4d e4             	mov    ecx,DWORD PTR [rbp-0x1c]
    b87c:	48 c1 e1 03          	shl    rcx,0x3
    b880:	48 01 ca             	add    rdx,rcx
    b883:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
    b887:	48 89 02             	mov    QWORD PTR [rdx],rax
    b88a:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    b88d:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    b895:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    b899:	48 01 d0             	add    rax,rdx
    b89c:	48 8b 00             	mov    rax,QWORD PTR [rax]
    b89f:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    b8a3:	48 85 c0             	test   rax,rax
    b8a6:	74 07                	je     b8af <init_sc_wrapper+0x360>
    b8a8:	c7 45 e8 01 00 00 00 	mov    DWORD PTR [rbp-0x18],0x1
    b8af:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    b8b2:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    b8ba:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    b8be:	48 01 d0             	add    rax,rdx
    b8c1:	48 8b 00             	mov    rax,QWORD PTR [rax]
    b8c4:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    b8c8:	48 85 c0             	test   rax,rax
    b8cb:	74 07                	je     b8d4 <init_sc_wrapper+0x385>
    b8cd:	c7 45 ec 01 00 00 00 	mov    DWORD PTR [rbp-0x14],0x1
    b8d4:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
    b8d8:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    b8dc:	8b 80 b8 00 00 00    	mov    eax,DWORD PTR [rax+0xb8]
    b8e2:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    b8e5:	0f 82 f7 fe ff ff    	jb     b7e2 <init_sc_wrapper+0x293>
    b8eb:	83 7d e8 00          	cmp    DWORD PTR [rbp-0x18],0x0
    b8ef:	0f 84 85 00 00 00    	je     b97a <init_sc_wrapper+0x42b>
    b8f5:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
    b8f9:	74 41                	je     b93c <init_sc_wrapper+0x3ed>
    b8fb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b8ff:	48 8d 15 c4 0c 00 00 	lea    rdx,[rip+0xcc4]        # c5ca <sc_user_def_f5_reduce_to_ext_comparative>
    b906:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
    b90a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b90e:	48 8d 15 c3 0f 00 00 	lea    rdx,[rip+0xfc3]        # c8d8 <sc_user_def_f5_reduce_to_stem_comparative>
    b915:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
    b919:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b91d:	48 8d 15 bf 15 00 00 	lea    rdx,[rip+0x15bf]        # cee3 <sc_user_def_f5_split_in_ext_stem_comparative>
    b924:	48 89 50 18          	mov    QWORD PTR [rax+0x18],rdx
    b928:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b92c:	48 8d 15 0b 1d 00 00 	lea    rdx,[rip+0x1d0b]        # d63e <sc_user_def_f5_split_in_ext_stem1_comparative>
    b933:	48 89 50 20          	mov    QWORD PTR [rax+0x20],rdx
    b937:	e9 85 00 00 00       	jmp    b9c1 <init_sc_wrapper+0x472>
    b93c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b940:	48 8d 15 ba 06 00 00 	lea    rdx,[rip+0x6ba]        # c001 <sc_default_f5_reduce_comparative>
    b947:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
    b94b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b94f:	48 8d 15 ab 06 00 00 	lea    rdx,[rip+0x6ab]        # c001 <sc_default_f5_reduce_comparative>
    b956:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
    b95a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b95e:	48 8d 15 e4 10 00 00 	lea    rdx,[rip+0x10e4]        # ca49 <sc_default_f5_split_in_ext_stem_comparative>
    b965:	48 89 50 18          	mov    QWORD PTR [rax+0x18],rdx
    b969:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b96d:	48 8d 15 42 17 00 00 	lea    rdx,[rip+0x1742]        # d0b6 <sc_default_f5_split_in_ext_stem1_comparative>
    b974:	48 89 50 20          	mov    QWORD PTR [rax+0x20],rdx
    b978:	eb 47                	jmp    b9c1 <init_sc_wrapper+0x472>
    b97a:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
    b97e:	74 41                	je     b9c1 <init_sc_wrapper+0x472>
    b980:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b984:	48 8d 15 5e 0a 00 00 	lea    rdx,[rip+0xa5e]        # c3e9 <sc_user_f5_reduce_to_ext_comparative>
    b98b:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
    b98f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b993:	48 8d 15 5d 0d 00 00 	lea    rdx,[rip+0xd5d]        # c6f7 <sc_user_f5_reduce_to_stem_comparative>
    b99a:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
    b99e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b9a2:	48 8d 15 59 13 00 00 	lea    rdx,[rip+0x1359]        # cd02 <sc_user_f5_split_in_ext_stem_comparative>
    b9a9:	48 89 50 18          	mov    QWORD PTR [rax+0x18],rdx
    b9ad:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b9b1:	48 8d 15 a5 1a 00 00 	lea    rdx,[rip+0x1aa5]        # d45d <sc_user_f5_split_in_ext_stem1_comparative>
    b9b8:	48 89 50 20          	mov    QWORD PTR [rax+0x20],rdx
    b9bc:	eb 03                	jmp    b9c1 <init_sc_wrapper+0x472>
    b9be:	90                   	nop
    b9bf:	eb 01                	jmp    b9c2 <init_sc_wrapper+0x473>
    b9c1:	90                   	nop
    b9c2:	90                   	nop
    b9c3:	c9                   	leave  
    b9c4:	c3                   	ret    

000000000000b9c5 <free_sc_wrapper>:
    b9c5:	55                   	push   rbp
    b9c6:	48 89 e5             	mov    rbp,rsp
    b9c9:	48 83 ec 10          	sub    rsp,0x10
    b9cd:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    b9d1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b9d5:	48 8b 40 48          	mov    rax,QWORD PTR [rax+0x48]
    b9d9:	48 89 c7             	mov    rdi,rax
    b9dc:	e8 cf 7e ff ff       	call   38b0 <free@plt>
    b9e1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b9e5:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    b9e9:	48 89 c7             	mov    rdi,rax
    b9ec:	e8 bf 7e ff ff       	call   38b0 <free@plt>
    b9f1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b9f5:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    b9f9:	48 89 c7             	mov    rdi,rax
    b9fc:	e8 af 7e ff ff       	call   38b0 <free@plt>
    ba01:	90                   	nop
    ba02:	c9                   	leave  
    ba03:	c3                   	ret    

000000000000ba04 <init_sc_wrapper_f3>:
    ba04:	55                   	push   rbp
    ba05:	48 89 e5             	mov    rbp,rsp
    ba08:	48 83 ec 40          	sub    rsp,0x40
    ba0c:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    ba10:	89 75 d4             	mov    DWORD PTR [rbp-0x2c],esi
    ba13:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    ba17:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ba1b:	8b 50 04             	mov    edx,DWORD PTR [rax+0x4]
    ba1e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    ba22:	89 10                	mov    DWORD PTR [rax],edx
    ba24:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    ba28:	c7 40 40 01 00 00 00 	mov    DWORD PTR [rax+0x40],0x1
    ba2f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    ba33:	48 c7 40 08 00 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
    ba3b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    ba3f:	48 c7 40 10 00 00 00 00 	mov    QWORD PTR [rax+0x10],0x0
    ba47:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    ba4b:	48 c7 40 18 00 00 00 00 	mov    QWORD PTR [rax+0x18],0x0
    ba53:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    ba57:	48 c7 40 20 00 00 00 00 	mov    QWORD PTR [rax+0x20],0x0
    ba5f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    ba63:	48 c7 40 28 00 00 00 00 	mov    QWORD PTR [rax+0x28],0x0
    ba6b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    ba6f:	48 c7 40 30 00 00 00 00 	mov    QWORD PTR [rax+0x30],0x0
    ba77:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    ba7b:	48 c7 40 38 00 00 00 00 	mov    QWORD PTR [rax+0x38],0x0
    ba83:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    ba87:	48 c7 40 50 00 00 00 00 	mov    QWORD PTR [rax+0x50],0x0
    ba8f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    ba93:	48 c7 40 58 00 00 00 00 	mov    QWORD PTR [rax+0x58],0x0
    ba9b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    ba9f:	48 c7 40 60 00 00 00 00 	mov    QWORD PTR [rax+0x60],0x0
    baa7:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    baab:	8b 00                	mov    eax,DWORD PTR [rax]
    baad:	85 c0                	test   eax,eax
    baaf:	74 0e                	je     babf <init_sc_wrapper_f3+0xbb>
    bab1:	83 f8 01             	cmp    eax,0x1
    bab4:	0f 84 41 01 00 00    	je     bbfb <init_sc_wrapper_f3+0x1f7>
    baba:	e9 ca 03 00 00       	jmp    be89 <init_sc_wrapper_f3+0x485>
    babf:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    bac3:	48 8b 80 d8 00 00 00 	mov    rax,QWORD PTR [rax+0xd8]
    baca:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    bace:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    bad3:	0f 84 ac 03 00 00    	je     be85 <init_sc_wrapper_f3+0x481>
    bad9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    badd:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    bae1:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    bae5:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
    bae9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    baed:	48 8b 50 50          	mov    rdx,QWORD PTR [rax+0x50]
    baf1:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    baf5:	48 89 50 30          	mov    QWORD PTR [rax+0x30],rdx
    baf9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    bafd:	48 8b 50 68          	mov    rdx,QWORD PTR [rax+0x68]
    bb01:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    bb05:	48 89 50 38          	mov    QWORD PTR [rax+0x38],rdx
    bb09:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    bb0d:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    bb11:	48 85 c0             	test   rax,rax
    bb14:	0f 84 8f 00 00 00    	je     bba9 <init_sc_wrapper_f3+0x1a5>
    bb1a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    bb1e:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    bb22:	48 85 c0             	test   rax,rax
    bb25:	74 41                	je     bb68 <init_sc_wrapper_f3+0x164>
    bb27:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    bb2b:	48 8d 15 4b 0a 00 00 	lea    rdx,[rip+0xa4b]        # c57d <sc_user_def_f3_reduce_to_ext>
    bb32:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
    bb36:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    bb3a:	48 8d 15 4a 0d 00 00 	lea    rdx,[rip+0xd4a]        # c88b <sc_user_def_f3_reduce_to_stem>
    bb41:	48 89 50 18          	mov    QWORD PTR [rax+0x18],rdx
    bb45:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    bb49:	48 8d 15 46 13 00 00 	lea    rdx,[rip+0x1346]        # ce96 <sc_user_def_f3_split_in_stem_ext>
    bb50:	48 89 50 20          	mov    QWORD PTR [rax+0x20],rdx
    bb54:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    bb58:	48 8d 15 92 1a 00 00 	lea    rdx,[rip+0x1a92]        # d5f1 <sc_user_def_f3_split_in_stem_ext1>
    bb5f:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    bb63:	e9 1d 03 00 00       	jmp    be85 <init_sc_wrapper_f3+0x481>
    bb68:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    bb6c:	48 8d 15 e9 03 00 00 	lea    rdx,[rip+0x3e9]        # bf5c <sc_default_f3_reduce>
    bb73:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
    bb77:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    bb7b:	48 8d 15 da 03 00 00 	lea    rdx,[rip+0x3da]        # bf5c <sc_default_f3_reduce>
    bb82:	48 89 50 18          	mov    QWORD PTR [rax+0x18],rdx
    bb86:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    bb8a:	48 8d 15 4c 0e 00 00 	lea    rdx,[rip+0xe4c]        # c9dd <sc_default_f3_split_in_stem_ext>
    bb91:	48 89 50 20          	mov    QWORD PTR [rax+0x20],rdx
    bb95:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    bb99:	48 8d 15 79 14 00 00 	lea    rdx,[rip+0x1479]        # d019 <sc_default_f3_split_in_stem_ext1>
    bba0:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    bba4:	e9 dc 02 00 00       	jmp    be85 <init_sc_wrapper_f3+0x481>
    bba9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    bbad:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    bbb1:	48 85 c0             	test   rax,rax
    bbb4:	0f 84 cb 02 00 00    	je     be85 <init_sc_wrapper_f3+0x481>
    bbba:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    bbbe:	48 8d 15 d8 07 00 00 	lea    rdx,[rip+0x7d8]        # c39d <sc_user_f3_reduce_to_ext>
    bbc5:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
    bbc9:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    bbcd:	48 8d 15 d7 0a 00 00 	lea    rdx,[rip+0xad7]        # c6ab <sc_user_f3_reduce_to_stem>
    bbd4:	48 89 50 18          	mov    QWORD PTR [rax+0x18],rdx
    bbd8:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    bbdc:	48 8d 15 d3 10 00 00 	lea    rdx,[rip+0x10d3]        # ccb6 <sc_user_f3_split_in_stem_ext>
    bbe3:	48 89 50 20          	mov    QWORD PTR [rax+0x20],rdx
    bbe7:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    bbeb:	48 8d 15 1f 18 00 00 	lea    rdx,[rip+0x181f]        # d411 <sc_user_f3_split_in_stem_ext1>
    bbf2:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    bbf6:	e9 8a 02 00 00       	jmp    be85 <init_sc_wrapper_f3+0x481>
    bbfb:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    bbff:	48 8b 80 10 01 00 00 	mov    rax,QWORD PTR [rax+0x110]
    bc06:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    bc0a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    bc0e:	8b 80 b8 00 00 00    	mov    eax,DWORD PTR [rax+0xb8]
    bc14:	89 c2                	mov    edx,eax
    bc16:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    bc1a:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    bc1d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    bc21:	48 8b 90 f0 00 00 00 	mov    rdx,QWORD PTR [rax+0xf0]
    bc28:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    bc2c:	48 89 50 48          	mov    QWORD PTR [rax+0x48],rdx
    bc30:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
    bc35:	0f 84 4d 02 00 00    	je     be88 <init_sc_wrapper_f3+0x484>
    bc3b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    bc3f:	8b 80 b8 00 00 00    	mov    eax,DWORD PTR [rax+0xb8]
    bc45:	c1 e0 03             	shl    eax,0x3
    bc48:	89 c7                	mov    edi,eax
    bc4a:	e8 72 02 02 00       	call   2bec1 <vrna_alloc>
    bc4f:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    bc53:	48 89 42 50          	mov    QWORD PTR [rdx+0x50],rax
    bc57:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    bc5b:	8b 80 b8 00 00 00    	mov    eax,DWORD PTR [rax+0xb8]
    bc61:	c1 e0 03             	shl    eax,0x3
    bc64:	89 c7                	mov    edi,eax
    bc66:	e8 56 02 02 00       	call   2bec1 <vrna_alloc>
    bc6b:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    bc6f:	48 89 42 58          	mov    QWORD PTR [rdx+0x58],rax
    bc73:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    bc77:	8b 80 b8 00 00 00    	mov    eax,DWORD PTR [rax+0xb8]
    bc7d:	c1 e0 03             	shl    eax,0x3
    bc80:	89 c7                	mov    edi,eax
    bc82:	e8 3a 02 02 00       	call   2bec1 <vrna_alloc>
    bc87:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    bc8b:	48 89 42 60          	mov    QWORD PTR [rdx+0x60],rax
    bc8f:	c7 45 e8 00 00 00 00 	mov    DWORD PTR [rbp-0x18],0x0
    bc96:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    bc9d:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
    bca4:	e9 f6 00 00 00       	jmp    bd9f <init_sc_wrapper_f3+0x39b>
    bca9:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    bcac:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    bcb4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    bcb8:	48 01 d0             	add    rax,rdx
    bcbb:	48 8b 00             	mov    rax,QWORD PTR [rax]
    bcbe:	48 85 c0             	test   rax,rax
    bcc1:	0f 84 d4 00 00 00    	je     bd9b <init_sc_wrapper_f3+0x397>
    bcc7:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    bcca:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    bcd2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    bcd6:	48 01 d0             	add    rax,rdx
    bcd9:	48 8b 00             	mov    rax,QWORD PTR [rax]
    bcdc:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    bce0:	48 8b 52 50          	mov    rdx,QWORD PTR [rdx+0x50]
    bce4:	8b 4d e4             	mov    ecx,DWORD PTR [rbp-0x1c]
    bce7:	48 c1 e1 03          	shl    rcx,0x3
    bceb:	48 01 ca             	add    rdx,rcx
    bcee:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    bcf2:	48 89 02             	mov    QWORD PTR [rdx],rax
    bcf5:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    bcf8:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    bd00:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    bd04:	48 01 d0             	add    rax,rdx
    bd07:	48 8b 00             	mov    rax,QWORD PTR [rax]
    bd0a:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    bd0e:	48 8b 52 58          	mov    rdx,QWORD PTR [rdx+0x58]
    bd12:	8b 4d e4             	mov    ecx,DWORD PTR [rbp-0x1c]
    bd15:	48 c1 e1 03          	shl    rcx,0x3
    bd19:	48 01 ca             	add    rdx,rcx
    bd1c:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    bd20:	48 89 02             	mov    QWORD PTR [rdx],rax
    bd23:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    bd26:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    bd2e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    bd32:	48 01 d0             	add    rax,rdx
    bd35:	48 8b 00             	mov    rax,QWORD PTR [rax]
    bd38:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    bd3c:	48 8b 52 60          	mov    rdx,QWORD PTR [rdx+0x60]
    bd40:	8b 4d e4             	mov    ecx,DWORD PTR [rbp-0x1c]
    bd43:	48 c1 e1 03          	shl    rcx,0x3
    bd47:	48 01 ca             	add    rdx,rcx
    bd4a:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
    bd4e:	48 89 02             	mov    QWORD PTR [rdx],rax
    bd51:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    bd54:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    bd5c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    bd60:	48 01 d0             	add    rax,rdx
    bd63:	48 8b 00             	mov    rax,QWORD PTR [rax]
    bd66:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    bd6a:	48 85 c0             	test   rax,rax
    bd6d:	74 07                	je     bd76 <init_sc_wrapper_f3+0x372>
    bd6f:	c7 45 e8 01 00 00 00 	mov    DWORD PTR [rbp-0x18],0x1
    bd76:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    bd79:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    bd81:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    bd85:	48 01 d0             	add    rax,rdx
    bd88:	48 8b 00             	mov    rax,QWORD PTR [rax]
    bd8b:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    bd8f:	48 85 c0             	test   rax,rax
    bd92:	74 07                	je     bd9b <init_sc_wrapper_f3+0x397>
    bd94:	c7 45 ec 01 00 00 00 	mov    DWORD PTR [rbp-0x14],0x1
    bd9b:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
    bd9f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    bda3:	8b 80 b8 00 00 00    	mov    eax,DWORD PTR [rax+0xb8]
    bda9:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    bdac:	0f 82 f7 fe ff ff    	jb     bca9 <init_sc_wrapper_f3+0x2a5>
    bdb2:	83 7d e8 00          	cmp    DWORD PTR [rbp-0x18],0x0
    bdb6:	0f 84 85 00 00 00    	je     be41 <init_sc_wrapper_f3+0x43d>
    bdbc:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
    bdc0:	74 41                	je     be03 <init_sc_wrapper_f3+0x3ff>
    bdc2:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    bdc6:	48 8d 15 4a 08 00 00 	lea    rdx,[rip+0x84a]        # c617 <sc_user_def_f3_reduce_to_ext_comparative>
    bdcd:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
    bdd1:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    bdd5:	48 8d 15 49 0b 00 00 	lea    rdx,[rip+0xb49]        # c925 <sc_user_def_f3_reduce_to_stem_comparative>
    bddc:	48 89 50 18          	mov    QWORD PTR [rax+0x18],rdx
    bde0:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    bde4:	48 8d 15 45 11 00 00 	lea    rdx,[rip+0x1145]        # cf30 <sc_user_def_f3_split_in_stem_ext_comparative>
    bdeb:	48 89 50 20          	mov    QWORD PTR [rax+0x20],rdx
    bdef:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    bdf3:	48 8d 15 91 18 00 00 	lea    rdx,[rip+0x1891]        # d68b <sc_user_def_f3_split_in_stem_ext1_comparative>
    bdfa:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    bdfe:	e9 85 00 00 00       	jmp    be88 <init_sc_wrapper_f3+0x484>
    be03:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    be07:	48 8d 15 76 03 00 00 	lea    rdx,[rip+0x376]        # c184 <sc_default_f3_reduce_comparative>
    be0e:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
    be12:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    be16:	48 8d 15 67 03 00 00 	lea    rdx,[rip+0x367]        # c184 <sc_default_f3_reduce_comparative>
    be1d:	48 89 50 18          	mov    QWORD PTR [rax+0x18],rdx
    be21:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    be25:	48 8d 15 30 0d 00 00 	lea    rdx,[rip+0xd30]        # cb5c <sc_default_f3_split_in_stem_ext_comparative>
    be2c:	48 89 50 20          	mov    QWORD PTR [rax+0x20],rdx
    be30:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    be34:	48 8d 15 05 14 00 00 	lea    rdx,[rip+0x1405]        # d240 <sc_default_f3_split_in_stem_ext1_comparative>
    be3b:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    be3f:	eb 47                	jmp    be88 <init_sc_wrapper_f3+0x484>
    be41:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
    be45:	74 41                	je     be88 <init_sc_wrapper_f3+0x484>
    be47:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    be4b:	48 8d 15 38 06 00 00 	lea    rdx,[rip+0x638]        # c48a <sc_user_f3_reduce_to_ext_comparative>
    be52:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
    be56:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    be5a:	48 8d 15 37 09 00 00 	lea    rdx,[rip+0x937]        # c798 <sc_user_f3_reduce_to_stem_comparative>
    be61:	48 89 50 18          	mov    QWORD PTR [rax+0x18],rdx
    be65:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    be69:	48 8d 15 33 0f 00 00 	lea    rdx,[rip+0xf33]        # cda3 <sc_user_f3_split_in_stem_ext_comparative>
    be70:	48 89 50 20          	mov    QWORD PTR [rax+0x20],rdx
    be74:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    be78:	48 8d 15 7f 16 00 00 	lea    rdx,[rip+0x167f]        # d4fe <sc_user_f3_split_in_stem_ext1_comparative>
    be7f:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    be83:	eb 03                	jmp    be88 <init_sc_wrapper_f3+0x484>
    be85:	90                   	nop
    be86:	eb 01                	jmp    be89 <init_sc_wrapper_f3+0x485>
    be88:	90                   	nop
    be89:	90                   	nop
    be8a:	c9                   	leave  
    be8b:	c3                   	ret    

000000000000be8c <free_sc_wrapper_f3>:
    be8c:	55                   	push   rbp
    be8d:	48 89 e5             	mov    rbp,rsp
    be90:	48 83 ec 10          	sub    rsp,0x10
    be94:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    be98:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    be9c:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    bea0:	48 89 c7             	mov    rdi,rax
    bea3:	e8 08 7a ff ff       	call   38b0 <free@plt>
    bea8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    beac:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    beb0:	48 89 c7             	mov    rdi,rax
    beb3:	e8 f8 79 ff ff       	call   38b0 <free@plt>
    beb8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    bebc:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    bec0:	48 89 c7             	mov    rdi,rax
    bec3:	e8 e8 79 ff ff       	call   38b0 <free@plt>
    bec8:	90                   	nop
    bec9:	c9                   	leave  
    beca:	c3                   	ret    

000000000000becb <sc_default_f5_reduce>:
    becb:	f3 0f 1e fa          	endbr64 
    becf:	55                   	push   rbp
    bed0:	48 89 e5             	mov    rbp,rsp
    bed3:	89 7d dc             	mov    DWORD PTR [rbp-0x24],edi
    bed6:	89 75 d8             	mov    DWORD PTR [rbp-0x28],esi
    bed9:	89 55 d4             	mov    DWORD PTR [rbp-0x2c],edx
    bedc:	48 89 4d c8          	mov    QWORD PTR [rbp-0x38],rcx
    bee0:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    bee4:	48 8b 00             	mov    rax,QWORD PTR [rax]
    bee7:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    beeb:	c7 45 e8 00 00 00 00 	mov    DWORD PTR [rbp-0x18],0x0
    bef2:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    bef5:	83 e8 01             	sub    eax,0x1
    bef8:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    befb:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    befe:	83 c0 01             	add    eax,0x1
    bf01:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    bf04:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    bf07:	2b 45 d4             	sub    eax,DWORD PTR [rbp-0x2c]
    bf0a:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    bf0d:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
    bf11:	74 1a                	je     bf2d <sc_default_f5_reduce+0x62>
    bf13:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    bf17:	48 83 c0 08          	add    rax,0x8
    bf1b:	48 8b 00             	mov    rax,QWORD PTR [rax]
    bf1e:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
    bf21:	48 c1 e2 02          	shl    rdx,0x2
    bf25:	48 01 d0             	add    rax,rdx
    bf28:	8b 00                	mov    eax,DWORD PTR [rax]
    bf2a:	01 45 e8             	add    DWORD PTR [rbp-0x18],eax
    bf2d:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
    bf31:	74 24                	je     bf57 <sc_default_f5_reduce+0x8c>
    bf33:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
    bf36:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    bf3e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    bf42:	48 01 d0             	add    rax,rdx
    bf45:	48 8b 00             	mov    rax,QWORD PTR [rax]
    bf48:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
    bf4b:	48 c1 e2 02          	shl    rdx,0x2
    bf4f:	48 01 d0             	add    rax,rdx
    bf52:	8b 00                	mov    eax,DWORD PTR [rax]
    bf54:	01 45 e8             	add    DWORD PTR [rbp-0x18],eax
    bf57:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
    bf5a:	5d                   	pop    rbp
    bf5b:	c3                   	ret    

000000000000bf5c <sc_default_f3_reduce>:
    bf5c:	f3 0f 1e fa          	endbr64 
    bf60:	55                   	push   rbp
    bf61:	48 89 e5             	mov    rbp,rsp
    bf64:	89 7d dc             	mov    DWORD PTR [rbp-0x24],edi
    bf67:	89 75 d8             	mov    DWORD PTR [rbp-0x28],esi
    bf6a:	89 55 d4             	mov    DWORD PTR [rbp-0x2c],edx
    bf6d:	48 89 4d c8          	mov    QWORD PTR [rbp-0x38],rcx
    bf71:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    bf75:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    bf79:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    bf7d:	c7 45 e8 00 00 00 00 	mov    DWORD PTR [rbp-0x18],0x0
    bf84:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    bf87:	2b 45 dc             	sub    eax,DWORD PTR [rbp-0x24]
    bf8a:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    bf8d:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    bf90:	83 c0 01             	add    eax,0x1
    bf93:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    bf96:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    bf9a:	8b 10                	mov    edx,DWORD PTR [rax]
    bf9c:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    bf9f:	29 c2                	sub    edx,eax
    bfa1:	89 d0                	mov    eax,edx
    bfa3:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    bfa6:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
    bfaa:	74 26                	je     bfd2 <sc_default_f3_reduce+0x76>
    bfac:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    bfaf:	48 98                	cdqe   
    bfb1:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    bfb9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    bfbd:	48 01 d0             	add    rax,rdx
    bfc0:	48 8b 00             	mov    rax,QWORD PTR [rax]
    bfc3:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
    bfc6:	48 c1 e2 02          	shl    rdx,0x2
    bfca:	48 01 d0             	add    rax,rdx
    bfcd:	8b 00                	mov    eax,DWORD PTR [rax]
    bfcf:	01 45 e8             	add    DWORD PTR [rbp-0x18],eax
    bfd2:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
    bfd6:	74 24                	je     bffc <sc_default_f3_reduce+0xa0>
    bfd8:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
    bfdb:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    bfe3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    bfe7:	48 01 d0             	add    rax,rdx
    bfea:	48 8b 00             	mov    rax,QWORD PTR [rax]
    bfed:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
    bff0:	48 c1 e2 02          	shl    rdx,0x2
    bff4:	48 01 d0             	add    rax,rdx
    bff7:	8b 00                	mov    eax,DWORD PTR [rax]
    bff9:	01 45 e8             	add    DWORD PTR [rbp-0x18],eax
    bffc:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
    bfff:	5d                   	pop    rbp
    c000:	c3                   	ret    

000000000000c001 <sc_default_f5_reduce_comparative>:
    c001:	f3 0f 1e fa          	endbr64 
    c005:	55                   	push   rbp
    c006:	48 89 e5             	mov    rbp,rsp
    c009:	89 7d cc             	mov    DWORD PTR [rbp-0x34],edi
    c00c:	89 75 c8             	mov    DWORD PTR [rbp-0x38],esi
    c00f:	89 55 c4             	mov    DWORD PTR [rbp-0x3c],edx
    c012:	48 89 4d b8          	mov    QWORD PTR [rbp-0x48],rcx
    c016:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    c01a:	48 8b 40 48          	mov    rax,QWORD PTR [rax+0x48]
    c01e:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    c022:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    c026:	48 8b 40 40          	mov    rax,QWORD PTR [rax+0x40]
    c02a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    c02e:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [rbp-0x20],0x0
    c035:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [rbp-0x24],0x0
    c03c:	e9 2e 01 00 00       	jmp    c16f <sc_default_f5_reduce_comparative+0x16e>
    c041:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    c044:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    c04c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c050:	48 01 d0             	add    rax,rdx
    c053:	48 8b 00             	mov    rax,QWORD PTR [rax]
    c056:	48 85 c0             	test   rax,rax
    c059:	0f 84 0c 01 00 00    	je     c16b <sc_default_f5_reduce_comparative+0x16a>
    c05f:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    c062:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    c06a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c06e:	48 01 d0             	add    rax,rdx
    c071:	48 8b 00             	mov    rax,QWORD PTR [rax]
    c074:	8b 55 c8             	mov    edx,DWORD PTR [rbp-0x38]
    c077:	48 63 d2             	movsxd rdx,edx
    c07a:	48 c1 e2 02          	shl    rdx,0x2
    c07e:	48 83 ea 04          	sub    rdx,0x4
    c082:	48 01 d0             	add    rax,rdx
    c085:	8b 00                	mov    eax,DWORD PTR [rax]
    c087:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    c08a:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    c08d:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    c095:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c099:	48 01 d0             	add    rax,rdx
    c09c:	48 8b 00             	mov    rax,QWORD PTR [rax]
    c09f:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    c0a2:	48 63 d2             	movsxd rdx,edx
    c0a5:	48 c1 e2 02          	shl    rdx,0x2
    c0a9:	48 01 d0             	add    rax,rdx
    c0ac:	8b 00                	mov    eax,DWORD PTR [rax]
    c0ae:	83 c0 01             	add    eax,0x1
    c0b1:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
    c0b4:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    c0b7:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    c0bf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c0c3:	48 01 d0             	add    rax,rdx
    c0c6:	48 8b 00             	mov    rax,QWORD PTR [rax]
    c0c9:	8b 55 cc             	mov    edx,DWORD PTR [rbp-0x34]
    c0cc:	48 63 d2             	movsxd rdx,edx
    c0cf:	48 c1 e2 02          	shl    rdx,0x2
    c0d3:	48 01 d0             	add    rax,rdx
    c0d6:	8b 10                	mov    edx,DWORD PTR [rax]
    c0d8:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    c0db:	48 8d 0c c5 00 00 00 00 	lea    rcx,[rax*8+0x0]
    c0e3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c0e7:	48 01 c8             	add    rax,rcx
    c0ea:	48 8b 00             	mov    rax,QWORD PTR [rax]
    c0ed:	8b 4d c4             	mov    ecx,DWORD PTR [rbp-0x3c]
    c0f0:	48 63 c9             	movsxd rcx,ecx
    c0f3:	48 c1 e1 02          	shl    rcx,0x2
    c0f7:	48 01 c8             	add    rax,rcx
    c0fa:	8b 00                	mov    eax,DWORD PTR [rax]
    c0fc:	29 c2                	sub    edx,eax
    c0fe:	89 d0                	mov    eax,edx
    c100:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    c103:	83 7d e4 00          	cmp    DWORD PTR [rbp-0x1c],0x0
    c107:	74 2b                	je     c134 <sc_default_f5_reduce_comparative+0x133>
    c109:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    c10c:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    c114:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c118:	48 01 d0             	add    rax,rdx
    c11b:	48 8b 00             	mov    rax,QWORD PTR [rax]
    c11e:	48 83 c0 08          	add    rax,0x8
    c122:	48 8b 00             	mov    rax,QWORD PTR [rax]
    c125:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    c128:	48 c1 e2 02          	shl    rdx,0x2
    c12c:	48 01 d0             	add    rax,rdx
    c12f:	8b 00                	mov    eax,DWORD PTR [rax]
    c131:	01 45 e0             	add    DWORD PTR [rbp-0x20],eax
    c134:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
    c138:	74 31                	je     c16b <sc_default_f5_reduce_comparative+0x16a>
    c13a:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    c13d:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    c145:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c149:	48 01 d0             	add    rax,rdx
    c14c:	48 8b 00             	mov    rax,QWORD PTR [rax]
    c14f:	8b 55 e8             	mov    edx,DWORD PTR [rbp-0x18]
    c152:	48 c1 e2 03          	shl    rdx,0x3
    c156:	48 01 d0             	add    rax,rdx
    c159:	48 8b 00             	mov    rax,QWORD PTR [rax]
    c15c:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
    c15f:	48 c1 e2 02          	shl    rdx,0x2
    c163:	48 01 d0             	add    rax,rdx
    c166:	8b 00                	mov    eax,DWORD PTR [rax]
    c168:	01 45 e0             	add    DWORD PTR [rbp-0x20],eax
    c16b:	83 45 dc 01          	add    DWORD PTR [rbp-0x24],0x1
    c16f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    c173:	8b 40 38             	mov    eax,DWORD PTR [rax+0x38]
    c176:	39 45 dc             	cmp    DWORD PTR [rbp-0x24],eax
    c179:	0f 82 c2 fe ff ff    	jb     c041 <sc_default_f5_reduce_comparative+0x40>
    c17f:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    c182:	5d                   	pop    rbp
    c183:	c3                   	ret    

000000000000c184 <sc_default_f3_reduce_comparative>:
    c184:	f3 0f 1e fa          	endbr64 
    c188:	55                   	push   rbp
    c189:	48 89 e5             	mov    rbp,rsp
    c18c:	89 7d cc             	mov    DWORD PTR [rbp-0x34],edi
    c18f:	89 75 c8             	mov    DWORD PTR [rbp-0x38],esi
    c192:	89 55 c4             	mov    DWORD PTR [rbp-0x3c],edx
    c195:	48 89 4d b8          	mov    QWORD PTR [rbp-0x48],rcx
    c199:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    c19d:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    c1a1:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    c1a5:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    c1a9:	48 8b 40 48          	mov    rax,QWORD PTR [rax+0x48]
    c1ad:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    c1b1:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [rbp-0x20],0x0
    c1b8:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [rbp-0x24],0x0
    c1bf:	e9 7d 01 00 00       	jmp    c341 <sc_default_f3_reduce_comparative+0x1bd>
    c1c4:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    c1c7:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    c1cf:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c1d3:	48 01 d0             	add    rax,rdx
    c1d6:	48 8b 00             	mov    rax,QWORD PTR [rax]
    c1d9:	48 85 c0             	test   rax,rax
    c1dc:	0f 84 5b 01 00 00    	je     c33d <sc_default_f3_reduce_comparative+0x1b9>
    c1e2:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    c1e5:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    c1ed:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c1f1:	48 01 d0             	add    rax,rdx
    c1f4:	48 8b 00             	mov    rax,QWORD PTR [rax]
    c1f7:	8b 55 c8             	mov    edx,DWORD PTR [rbp-0x38]
    c1fa:	48 63 d2             	movsxd rdx,edx
    c1fd:	48 c1 e2 02          	shl    rdx,0x2
    c201:	48 01 d0             	add    rax,rdx
    c204:	8b 10                	mov    edx,DWORD PTR [rax]
    c206:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    c209:	48 8d 0c c5 00 00 00 00 	lea    rcx,[rax*8+0x0]
    c211:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c215:	48 01 c8             	add    rax,rcx
    c218:	48 8b 00             	mov    rax,QWORD PTR [rax]
    c21b:	8b 4d cc             	mov    ecx,DWORD PTR [rbp-0x34]
    c21e:	48 63 c9             	movsxd rcx,ecx
    c221:	48 c1 e1 02          	shl    rcx,0x2
    c225:	48 01 c8             	add    rax,rcx
    c228:	8b 00                	mov    eax,DWORD PTR [rax]
    c22a:	29 c2                	sub    edx,eax
    c22c:	89 d0                	mov    eax,edx
    c22e:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    c231:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    c234:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    c23c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c240:	48 01 d0             	add    rax,rdx
    c243:	48 8b 00             	mov    rax,QWORD PTR [rax]
    c246:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    c249:	48 63 d2             	movsxd rdx,edx
    c24c:	48 c1 e2 02          	shl    rdx,0x2
    c250:	48 01 d0             	add    rax,rdx
    c253:	8b 00                	mov    eax,DWORD PTR [rax]
    c255:	83 c0 01             	add    eax,0x1
    c258:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
    c25b:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    c25e:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    c266:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c26a:	48 01 d0             	add    rax,rdx
    c26d:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    c270:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    c274:	8b 00                	mov    eax,DWORD PTR [rax]
    c276:	89 c0                	mov    eax,eax
    c278:	48 c1 e0 02          	shl    rax,0x2
    c27c:	48 01 d0             	add    rax,rdx
    c27f:	8b 10                	mov    edx,DWORD PTR [rax]
    c281:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    c284:	48 8d 0c c5 00 00 00 00 	lea    rcx,[rax*8+0x0]
    c28c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c290:	48 01 c8             	add    rax,rcx
    c293:	48 8b 00             	mov    rax,QWORD PTR [rax]
    c296:	8b 4d c4             	mov    ecx,DWORD PTR [rbp-0x3c]
    c299:	48 63 c9             	movsxd rcx,ecx
    c29c:	48 c1 e1 02          	shl    rcx,0x2
    c2a0:	48 01 c8             	add    rax,rcx
    c2a3:	8b 00                	mov    eax,DWORD PTR [rax]
    c2a5:	29 c2                	sub    edx,eax
    c2a7:	89 d0                	mov    eax,edx
    c2a9:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    c2ac:	83 7d e4 00          	cmp    DWORD PTR [rbp-0x1c],0x0
    c2b0:	74 54                	je     c306 <sc_default_f3_reduce_comparative+0x182>
    c2b2:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    c2b5:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    c2bd:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c2c1:	48 01 d0             	add    rax,rdx
    c2c4:	48 8b 00             	mov    rax,QWORD PTR [rax]
    c2c7:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
    c2ca:	48 8d 0c d5 00 00 00 00 	lea    rcx,[rdx*8+0x0]
    c2d2:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    c2d6:	48 01 ca             	add    rdx,rcx
    c2d9:	48 8b 12             	mov    rdx,QWORD PTR [rdx]
    c2dc:	8b 4d cc             	mov    ecx,DWORD PTR [rbp-0x34]
    c2df:	48 63 c9             	movsxd rcx,ecx
    c2e2:	48 c1 e1 02          	shl    rcx,0x2
    c2e6:	48 01 ca             	add    rdx,rcx
    c2e9:	8b 12                	mov    edx,DWORD PTR [rdx]
    c2eb:	89 d2                	mov    edx,edx
    c2ed:	48 c1 e2 03          	shl    rdx,0x3
    c2f1:	48 01 d0             	add    rax,rdx
    c2f4:	48 8b 00             	mov    rax,QWORD PTR [rax]
    c2f7:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    c2fa:	48 c1 e2 02          	shl    rdx,0x2
    c2fe:	48 01 d0             	add    rax,rdx
    c301:	8b 00                	mov    eax,DWORD PTR [rax]
    c303:	01 45 e0             	add    DWORD PTR [rbp-0x20],eax
    c306:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
    c30a:	74 31                	je     c33d <sc_default_f3_reduce_comparative+0x1b9>
    c30c:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    c30f:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    c317:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c31b:	48 01 d0             	add    rax,rdx
    c31e:	48 8b 00             	mov    rax,QWORD PTR [rax]
    c321:	8b 55 e8             	mov    edx,DWORD PTR [rbp-0x18]
    c324:	48 c1 e2 03          	shl    rdx,0x3
    c328:	48 01 d0             	add    rax,rdx
    c32b:	48 8b 00             	mov    rax,QWORD PTR [rax]
    c32e:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
    c331:	48 c1 e2 02          	shl    rdx,0x2
    c335:	48 01 d0             	add    rax,rdx
    c338:	8b 00                	mov    eax,DWORD PTR [rax]
    c33a:	01 45 e0             	add    DWORD PTR [rbp-0x20],eax
    c33d:	83 45 dc 01          	add    DWORD PTR [rbp-0x24],0x1
    c341:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    c345:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    c348:	39 45 dc             	cmp    DWORD PTR [rbp-0x24],eax
    c34b:	0f 82 73 fe ff ff    	jb     c1c4 <sc_default_f3_reduce_comparative+0x40>
    c351:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    c354:	5d                   	pop    rbp
    c355:	c3                   	ret    

000000000000c356 <sc_user_f5_reduce_to_ext>:
    c356:	f3 0f 1e fa          	endbr64 
    c35a:	55                   	push   rbp
    c35b:	48 89 e5             	mov    rbp,rsp
    c35e:	48 83 ec 20          	sub    rsp,0x20
    c362:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
    c365:	89 75 f8             	mov    DWORD PTR [rbp-0x8],esi
    c368:	89 55 f4             	mov    DWORD PTR [rbp-0xc],edx
    c36b:	48 89 4d e8          	mov    QWORD PTR [rbp-0x18],rcx
    c36f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    c373:	4c 8b 50 28          	mov    r10,QWORD PTR [rax+0x28]
    c377:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    c37b:	48 8b 70 30          	mov    rsi,QWORD PTR [rax+0x30]
    c37f:	8b 4d f4             	mov    ecx,DWORD PTR [rbp-0xc]
    c382:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
    c385:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    c388:	49 89 f1             	mov    r9,rsi
    c38b:	41 b8 0c 00 00 00    	mov    r8d,0xc
    c391:	89 c6                	mov    esi,eax
    c393:	bf 01 00 00 00       	mov    edi,0x1
    c398:	41 ff d2             	call   r10
    c39b:	c9                   	leave  
    c39c:	c3                   	ret    

000000000000c39d <sc_user_f3_reduce_to_ext>:
    c39d:	f3 0f 1e fa          	endbr64 
    c3a1:	55                   	push   rbp
    c3a2:	48 89 e5             	mov    rbp,rsp
    c3a5:	48 83 ec 20          	sub    rsp,0x20
    c3a9:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
    c3ac:	89 75 f8             	mov    DWORD PTR [rbp-0x8],esi
    c3af:	89 55 f4             	mov    DWORD PTR [rbp-0xc],edx
    c3b2:	48 89 4d e8          	mov    QWORD PTR [rbp-0x18],rcx
    c3b6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    c3ba:	4c 8b 50 30          	mov    r10,QWORD PTR [rax+0x30]
    c3be:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    c3c2:	48 8b 70 38          	mov    rsi,QWORD PTR [rax+0x38]
    c3c6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    c3ca:	8b 00                	mov    eax,DWORD PTR [rax]
    c3cc:	89 c7                	mov    edi,eax
    c3ce:	8b 4d f4             	mov    ecx,DWORD PTR [rbp-0xc]
    c3d1:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
    c3d4:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    c3d7:	49 89 f1             	mov    r9,rsi
    c3da:	41 b8 0c 00 00 00    	mov    r8d,0xc
    c3e0:	89 fe                	mov    esi,edi
    c3e2:	89 c7                	mov    edi,eax
    c3e4:	41 ff d2             	call   r10
    c3e7:	c9                   	leave  
    c3e8:	c3                   	ret    

000000000000c3e9 <sc_user_f5_reduce_to_ext_comparative>:
    c3e9:	f3 0f 1e fa          	endbr64 
    c3ed:	55                   	push   rbp
    c3ee:	48 89 e5             	mov    rbp,rsp
    c3f1:	48 83 ec 30          	sub    rsp,0x30
    c3f5:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    c3f8:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
    c3fb:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
    c3fe:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    c402:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    c409:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [rbp-0x8],0x0
    c410:	eb 67                	jmp    c479 <sc_user_f5_reduce_to_ext_comparative+0x90>
    c412:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    c416:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    c41a:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
    c41d:	48 c1 e2 03          	shl    rdx,0x3
    c421:	48 01 d0             	add    rax,rdx
    c424:	48 8b 00             	mov    rax,QWORD PTR [rax]
    c427:	48 85 c0             	test   rax,rax
    c42a:	74 49                	je     c475 <sc_user_f5_reduce_to_ext_comparative+0x8c>
    c42c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    c430:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    c434:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
    c437:	48 c1 e2 03          	shl    rdx,0x3
    c43b:	48 01 d0             	add    rax,rdx
    c43e:	4c 8b 10             	mov    r10,QWORD PTR [rax]
    c441:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    c445:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    c449:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
    c44c:	48 c1 e2 03          	shl    rdx,0x3
    c450:	48 01 d0             	add    rax,rdx
    c453:	48 8b 30             	mov    rsi,QWORD PTR [rax]
    c456:	8b 4d e4             	mov    ecx,DWORD PTR [rbp-0x1c]
    c459:	8b 55 e8             	mov    edx,DWORD PTR [rbp-0x18]
    c45c:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    c45f:	49 89 f1             	mov    r9,rsi
    c462:	41 b8 0c 00 00 00    	mov    r8d,0xc
    c468:	89 c6                	mov    esi,eax
    c46a:	bf 01 00 00 00       	mov    edi,0x1
    c46f:	41 ff d2             	call   r10
    c472:	01 45 fc             	add    DWORD PTR [rbp-0x4],eax
    c475:	83 45 f8 01          	add    DWORD PTR [rbp-0x8],0x1
    c479:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    c47d:	8b 40 38             	mov    eax,DWORD PTR [rax+0x38]
    c480:	39 45 f8             	cmp    DWORD PTR [rbp-0x8],eax
    c483:	72 8d                	jb     c412 <sc_user_f5_reduce_to_ext_comparative+0x29>
    c485:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    c488:	c9                   	leave  
    c489:	c3                   	ret    

000000000000c48a <sc_user_f3_reduce_to_ext_comparative>:
    c48a:	f3 0f 1e fa          	endbr64 
    c48e:	55                   	push   rbp
    c48f:	48 89 e5             	mov    rbp,rsp
    c492:	48 83 ec 30          	sub    rsp,0x30
    c496:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    c499:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
    c49c:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
    c49f:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    c4a3:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    c4aa:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [rbp-0x8],0x0
    c4b1:	eb 6c                	jmp    c51f <sc_user_f3_reduce_to_ext_comparative+0x95>
    c4b3:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    c4b7:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    c4bb:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
    c4be:	48 c1 e2 03          	shl    rdx,0x3
    c4c2:	48 01 d0             	add    rax,rdx
    c4c5:	48 8b 00             	mov    rax,QWORD PTR [rax]
    c4c8:	48 85 c0             	test   rax,rax
    c4cb:	74 4e                	je     c51b <sc_user_f3_reduce_to_ext_comparative+0x91>
    c4cd:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    c4d1:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    c4d5:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
    c4d8:	48 c1 e2 03          	shl    rdx,0x3
    c4dc:	48 01 d0             	add    rax,rdx
    c4df:	4c 8b 10             	mov    r10,QWORD PTR [rax]
    c4e2:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    c4e6:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    c4ea:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
    c4ed:	48 c1 e2 03          	shl    rdx,0x3
    c4f1:	48 01 d0             	add    rax,rdx
    c4f4:	48 8b 30             	mov    rsi,QWORD PTR [rax]
    c4f7:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    c4fb:	8b 00                	mov    eax,DWORD PTR [rax]
    c4fd:	89 c7                	mov    edi,eax
    c4ff:	8b 4d e4             	mov    ecx,DWORD PTR [rbp-0x1c]
    c502:	8b 55 e8             	mov    edx,DWORD PTR [rbp-0x18]
    c505:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    c508:	49 89 f1             	mov    r9,rsi
    c50b:	41 b8 0c 00 00 00    	mov    r8d,0xc
    c511:	89 fe                	mov    esi,edi
    c513:	89 c7                	mov    edi,eax
    c515:	41 ff d2             	call   r10
    c518:	01 45 fc             	add    DWORD PTR [rbp-0x4],eax
    c51b:	83 45 f8 01          	add    DWORD PTR [rbp-0x8],0x1
    c51f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    c523:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    c526:	39 45 f8             	cmp    DWORD PTR [rbp-0x8],eax
    c529:	72 88                	jb     c4b3 <sc_user_f3_reduce_to_ext_comparative+0x29>
    c52b:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    c52e:	c9                   	leave  
    c52f:	c3                   	ret    

000000000000c530 <sc_user_def_f5_reduce_to_ext>:
    c530:	f3 0f 1e fa          	endbr64 
    c534:	55                   	push   rbp
    c535:	48 89 e5             	mov    rbp,rsp
    c538:	53                   	push   rbx
    c539:	48 83 ec 28          	sub    rsp,0x28
    c53d:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    c540:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
    c543:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
    c546:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    c54a:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    c54e:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    c551:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    c554:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    c557:	89 c7                	mov    edi,eax
    c559:	e8 6d f9 ff ff       	call   becb <sc_default_f5_reduce>
    c55e:	89 c3                	mov    ebx,eax
    c560:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    c564:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    c567:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    c56a:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    c56d:	89 c7                	mov    edi,eax
    c56f:	e8 e2 fd ff ff       	call   c356 <sc_user_f5_reduce_to_ext>
    c574:	01 d8                	add    eax,ebx
    c576:	48 83 c4 28          	add    rsp,0x28
    c57a:	5b                   	pop    rbx
    c57b:	5d                   	pop    rbp
    c57c:	c3                   	ret    

000000000000c57d <sc_user_def_f3_reduce_to_ext>:
    c57d:	f3 0f 1e fa          	endbr64 
    c581:	55                   	push   rbp
    c582:	48 89 e5             	mov    rbp,rsp
    c585:	53                   	push   rbx
    c586:	48 83 ec 28          	sub    rsp,0x28
    c58a:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    c58d:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
    c590:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
    c593:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    c597:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    c59b:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    c59e:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    c5a1:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    c5a4:	89 c7                	mov    edi,eax
    c5a6:	e8 b1 f9 ff ff       	call   bf5c <sc_default_f3_reduce>
    c5ab:	89 c3                	mov    ebx,eax
    c5ad:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    c5b1:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    c5b4:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    c5b7:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    c5ba:	89 c7                	mov    edi,eax
    c5bc:	e8 dc fd ff ff       	call   c39d <sc_user_f3_reduce_to_ext>
    c5c1:	01 d8                	add    eax,ebx
    c5c3:	48 83 c4 28          	add    rsp,0x28
    c5c7:	5b                   	pop    rbx
    c5c8:	5d                   	pop    rbp
    c5c9:	c3                   	ret    

000000000000c5ca <sc_user_def_f5_reduce_to_ext_comparative>:
    c5ca:	f3 0f 1e fa          	endbr64 
    c5ce:	55                   	push   rbp
    c5cf:	48 89 e5             	mov    rbp,rsp
    c5d2:	53                   	push   rbx
    c5d3:	48 83 ec 28          	sub    rsp,0x28
    c5d7:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    c5da:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
    c5dd:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
    c5e0:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    c5e4:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    c5e8:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    c5eb:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    c5ee:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    c5f1:	89 c7                	mov    edi,eax
    c5f3:	e8 09 fa ff ff       	call   c001 <sc_default_f5_reduce_comparative>
    c5f8:	89 c3                	mov    ebx,eax
    c5fa:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    c5fe:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    c601:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    c604:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    c607:	89 c7                	mov    edi,eax
    c609:	e8 db fd ff ff       	call   c3e9 <sc_user_f5_reduce_to_ext_comparative>
    c60e:	01 d8                	add    eax,ebx
    c610:	48 83 c4 28          	add    rsp,0x28
    c614:	5b                   	pop    rbx
    c615:	5d                   	pop    rbp
    c616:	c3                   	ret    

000000000000c617 <sc_user_def_f3_reduce_to_ext_comparative>:
    c617:	f3 0f 1e fa          	endbr64 
    c61b:	55                   	push   rbp
    c61c:	48 89 e5             	mov    rbp,rsp
    c61f:	53                   	push   rbx
    c620:	48 83 ec 28          	sub    rsp,0x28
    c624:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    c627:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
    c62a:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
    c62d:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    c631:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    c635:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    c638:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    c63b:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    c63e:	89 c7                	mov    edi,eax
    c640:	e8 3f fb ff ff       	call   c184 <sc_default_f3_reduce_comparative>
    c645:	89 c3                	mov    ebx,eax
    c647:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    c64b:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    c64e:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    c651:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    c654:	89 c7                	mov    edi,eax
    c656:	e8 2f fe ff ff       	call   c48a <sc_user_f3_reduce_to_ext_comparative>
    c65b:	01 d8                	add    eax,ebx
    c65d:	48 83 c4 28          	add    rsp,0x28
    c661:	5b                   	pop    rbx
    c662:	5d                   	pop    rbp
    c663:	c3                   	ret    

000000000000c664 <sc_user_f5_reduce_to_stem>:
    c664:	f3 0f 1e fa          	endbr64 
    c668:	55                   	push   rbp
    c669:	48 89 e5             	mov    rbp,rsp
    c66c:	48 83 ec 20          	sub    rsp,0x20
    c670:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
    c673:	89 75 f8             	mov    DWORD PTR [rbp-0x8],esi
    c676:	89 55 f4             	mov    DWORD PTR [rbp-0xc],edx
    c679:	48 89 4d e8          	mov    QWORD PTR [rbp-0x18],rcx
    c67d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    c681:	4c 8b 50 28          	mov    r10,QWORD PTR [rax+0x28]
    c685:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    c689:	48 8b 70 30          	mov    rsi,QWORD PTR [rax+0x30]
    c68d:	8b 4d f4             	mov    ecx,DWORD PTR [rbp-0xc]
    c690:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
    c693:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    c696:	49 89 f1             	mov    r9,rsi
    c699:	41 b8 0e 00 00 00    	mov    r8d,0xe
    c69f:	89 c6                	mov    esi,eax
    c6a1:	bf 01 00 00 00       	mov    edi,0x1
    c6a6:	41 ff d2             	call   r10
    c6a9:	c9                   	leave  
    c6aa:	c3                   	ret    

000000000000c6ab <sc_user_f3_reduce_to_stem>:
    c6ab:	f3 0f 1e fa          	endbr64 
    c6af:	55                   	push   rbp
    c6b0:	48 89 e5             	mov    rbp,rsp
    c6b3:	48 83 ec 20          	sub    rsp,0x20
    c6b7:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
    c6ba:	89 75 f8             	mov    DWORD PTR [rbp-0x8],esi
    c6bd:	89 55 f4             	mov    DWORD PTR [rbp-0xc],edx
    c6c0:	48 89 4d e8          	mov    QWORD PTR [rbp-0x18],rcx
    c6c4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    c6c8:	4c 8b 50 30          	mov    r10,QWORD PTR [rax+0x30]
    c6cc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    c6d0:	48 8b 70 38          	mov    rsi,QWORD PTR [rax+0x38]
    c6d4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    c6d8:	8b 00                	mov    eax,DWORD PTR [rax]
    c6da:	89 c7                	mov    edi,eax
    c6dc:	8b 4d f4             	mov    ecx,DWORD PTR [rbp-0xc]
    c6df:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
    c6e2:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    c6e5:	49 89 f1             	mov    r9,rsi
    c6e8:	41 b8 0e 00 00 00    	mov    r8d,0xe
    c6ee:	89 fe                	mov    esi,edi
    c6f0:	89 c7                	mov    edi,eax
    c6f2:	41 ff d2             	call   r10
    c6f5:	c9                   	leave  
    c6f6:	c3                   	ret    

000000000000c6f7 <sc_user_f5_reduce_to_stem_comparative>:
    c6f7:	f3 0f 1e fa          	endbr64 
    c6fb:	55                   	push   rbp
    c6fc:	48 89 e5             	mov    rbp,rsp
    c6ff:	48 83 ec 30          	sub    rsp,0x30
    c703:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    c706:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
    c709:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
    c70c:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    c710:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    c717:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [rbp-0x8],0x0
    c71e:	eb 67                	jmp    c787 <sc_user_f5_reduce_to_stem_comparative+0x90>
    c720:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    c724:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    c728:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
    c72b:	48 c1 e2 03          	shl    rdx,0x3
    c72f:	48 01 d0             	add    rax,rdx
    c732:	48 8b 00             	mov    rax,QWORD PTR [rax]
    c735:	48 85 c0             	test   rax,rax
    c738:	74 49                	je     c783 <sc_user_f5_reduce_to_stem_comparative+0x8c>
    c73a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    c73e:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    c742:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
    c745:	48 c1 e2 03          	shl    rdx,0x3
    c749:	48 01 d0             	add    rax,rdx
    c74c:	4c 8b 10             	mov    r10,QWORD PTR [rax]
    c74f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    c753:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    c757:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
    c75a:	48 c1 e2 03          	shl    rdx,0x3
    c75e:	48 01 d0             	add    rax,rdx
    c761:	48 8b 30             	mov    rsi,QWORD PTR [rax]
    c764:	8b 4d e4             	mov    ecx,DWORD PTR [rbp-0x1c]
    c767:	8b 55 e8             	mov    edx,DWORD PTR [rbp-0x18]
    c76a:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    c76d:	49 89 f1             	mov    r9,rsi
    c770:	41 b8 0e 00 00 00    	mov    r8d,0xe
    c776:	89 c6                	mov    esi,eax
    c778:	bf 01 00 00 00       	mov    edi,0x1
    c77d:	41 ff d2             	call   r10
    c780:	01 45 fc             	add    DWORD PTR [rbp-0x4],eax
    c783:	83 45 f8 01          	add    DWORD PTR [rbp-0x8],0x1
    c787:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    c78b:	8b 40 38             	mov    eax,DWORD PTR [rax+0x38]
    c78e:	39 45 f8             	cmp    DWORD PTR [rbp-0x8],eax
    c791:	72 8d                	jb     c720 <sc_user_f5_reduce_to_stem_comparative+0x29>
    c793:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    c796:	c9                   	leave  
    c797:	c3                   	ret    

000000000000c798 <sc_user_f3_reduce_to_stem_comparative>:
    c798:	f3 0f 1e fa          	endbr64 
    c79c:	55                   	push   rbp
    c79d:	48 89 e5             	mov    rbp,rsp
    c7a0:	48 83 ec 30          	sub    rsp,0x30
    c7a4:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    c7a7:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
    c7aa:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
    c7ad:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    c7b1:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    c7b8:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [rbp-0x8],0x0
    c7bf:	eb 6c                	jmp    c82d <sc_user_f3_reduce_to_stem_comparative+0x95>
    c7c1:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    c7c5:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    c7c9:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
    c7cc:	48 c1 e2 03          	shl    rdx,0x3
    c7d0:	48 01 d0             	add    rax,rdx
    c7d3:	48 8b 00             	mov    rax,QWORD PTR [rax]
    c7d6:	48 85 c0             	test   rax,rax
    c7d9:	74 4e                	je     c829 <sc_user_f3_reduce_to_stem_comparative+0x91>
    c7db:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    c7df:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    c7e3:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
    c7e6:	48 c1 e2 03          	shl    rdx,0x3
    c7ea:	48 01 d0             	add    rax,rdx
    c7ed:	4c 8b 10             	mov    r10,QWORD PTR [rax]
    c7f0:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    c7f4:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    c7f8:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
    c7fb:	48 c1 e2 03          	shl    rdx,0x3
    c7ff:	48 01 d0             	add    rax,rdx
    c802:	48 8b 30             	mov    rsi,QWORD PTR [rax]
    c805:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    c809:	8b 00                	mov    eax,DWORD PTR [rax]
    c80b:	89 c7                	mov    edi,eax
    c80d:	8b 4d e4             	mov    ecx,DWORD PTR [rbp-0x1c]
    c810:	8b 55 e8             	mov    edx,DWORD PTR [rbp-0x18]
    c813:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    c816:	49 89 f1             	mov    r9,rsi
    c819:	41 b8 0e 00 00 00    	mov    r8d,0xe
    c81f:	89 fe                	mov    esi,edi
    c821:	89 c7                	mov    edi,eax
    c823:	41 ff d2             	call   r10
    c826:	01 45 fc             	add    DWORD PTR [rbp-0x4],eax
    c829:	83 45 f8 01          	add    DWORD PTR [rbp-0x8],0x1
    c82d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    c831:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    c834:	39 45 f8             	cmp    DWORD PTR [rbp-0x8],eax
    c837:	72 88                	jb     c7c1 <sc_user_f3_reduce_to_stem_comparative+0x29>
    c839:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    c83c:	c9                   	leave  
    c83d:	c3                   	ret    

000000000000c83e <sc_user_def_f5_reduce_to_stem>:
    c83e:	f3 0f 1e fa          	endbr64 
    c842:	55                   	push   rbp
    c843:	48 89 e5             	mov    rbp,rsp
    c846:	53                   	push   rbx
    c847:	48 83 ec 28          	sub    rsp,0x28
    c84b:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    c84e:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
    c851:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
    c854:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    c858:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    c85c:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    c85f:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    c862:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    c865:	89 c7                	mov    edi,eax
    c867:	e8 5f f6 ff ff       	call   becb <sc_default_f5_reduce>
    c86c:	89 c3                	mov    ebx,eax
    c86e:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    c872:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    c875:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    c878:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    c87b:	89 c7                	mov    edi,eax
    c87d:	e8 e2 fd ff ff       	call   c664 <sc_user_f5_reduce_to_stem>
    c882:	01 d8                	add    eax,ebx
    c884:	48 83 c4 28          	add    rsp,0x28
    c888:	5b                   	pop    rbx
    c889:	5d                   	pop    rbp
    c88a:	c3                   	ret    

000000000000c88b <sc_user_def_f3_reduce_to_stem>:
    c88b:	f3 0f 1e fa          	endbr64 
    c88f:	55                   	push   rbp
    c890:	48 89 e5             	mov    rbp,rsp
    c893:	53                   	push   rbx
    c894:	48 83 ec 28          	sub    rsp,0x28
    c898:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    c89b:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
    c89e:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
    c8a1:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    c8a5:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    c8a9:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    c8ac:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    c8af:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    c8b2:	89 c7                	mov    edi,eax
    c8b4:	e8 a3 f6 ff ff       	call   bf5c <sc_default_f3_reduce>
    c8b9:	89 c3                	mov    ebx,eax
    c8bb:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    c8bf:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    c8c2:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    c8c5:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    c8c8:	89 c7                	mov    edi,eax
    c8ca:	e8 dc fd ff ff       	call   c6ab <sc_user_f3_reduce_to_stem>
    c8cf:	01 d8                	add    eax,ebx
    c8d1:	48 83 c4 28          	add    rsp,0x28
    c8d5:	5b                   	pop    rbx
    c8d6:	5d                   	pop    rbp
    c8d7:	c3                   	ret    

000000000000c8d8 <sc_user_def_f5_reduce_to_stem_comparative>:
    c8d8:	f3 0f 1e fa          	endbr64 
    c8dc:	55                   	push   rbp
    c8dd:	48 89 e5             	mov    rbp,rsp
    c8e0:	53                   	push   rbx
    c8e1:	48 83 ec 28          	sub    rsp,0x28
    c8e5:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    c8e8:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
    c8eb:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
    c8ee:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    c8f2:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    c8f6:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    c8f9:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    c8fc:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    c8ff:	89 c7                	mov    edi,eax
    c901:	e8 fb f6 ff ff       	call   c001 <sc_default_f5_reduce_comparative>
    c906:	89 c3                	mov    ebx,eax
    c908:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    c90c:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    c90f:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    c912:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    c915:	89 c7                	mov    edi,eax
    c917:	e8 db fd ff ff       	call   c6f7 <sc_user_f5_reduce_to_stem_comparative>
    c91c:	01 d8                	add    eax,ebx
    c91e:	48 83 c4 28          	add    rsp,0x28
    c922:	5b                   	pop    rbx
    c923:	5d                   	pop    rbp
    c924:	c3                   	ret    

000000000000c925 <sc_user_def_f3_reduce_to_stem_comparative>:
    c925:	f3 0f 1e fa          	endbr64 
    c929:	55                   	push   rbp
    c92a:	48 89 e5             	mov    rbp,rsp
    c92d:	53                   	push   rbx
    c92e:	48 83 ec 28          	sub    rsp,0x28
    c932:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    c935:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
    c938:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
    c93b:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    c93f:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    c943:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    c946:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    c949:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    c94c:	89 c7                	mov    edi,eax
    c94e:	e8 31 f8 ff ff       	call   c184 <sc_default_f3_reduce_comparative>
    c953:	89 c3                	mov    ebx,eax
    c955:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    c959:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    c95c:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    c95f:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    c962:	89 c7                	mov    edi,eax
    c964:	e8 2f fe ff ff       	call   c798 <sc_user_f3_reduce_to_stem_comparative>
    c969:	01 d8                	add    eax,ebx
    c96b:	48 83 c4 28          	add    rsp,0x28
    c96f:	5b                   	pop    rbx
    c970:	5d                   	pop    rbp
    c971:	c3                   	ret    

000000000000c972 <sc_default_f5_split_in_ext_stem>:
    c972:	f3 0f 1e fa          	endbr64 
    c976:	55                   	push   rbp
    c977:	48 89 e5             	mov    rbp,rsp
    c97a:	89 7d dc             	mov    DWORD PTR [rbp-0x24],edi
    c97d:	89 75 d8             	mov    DWORD PTR [rbp-0x28],esi
    c980:	89 55 d4             	mov    DWORD PTR [rbp-0x2c],edx
    c983:	48 89 4d c8          	mov    QWORD PTR [rbp-0x38],rcx
    c987:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    c98b:	48 8b 00             	mov    rax,QWORD PTR [rax]
    c98e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    c992:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    c999:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    c99c:	83 c0 01             	add    eax,0x1
    c99f:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    c9a2:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    c9a5:	2b 45 d8             	sub    eax,DWORD PTR [rbp-0x28]
    c9a8:	83 e8 01             	sub    eax,0x1
    c9ab:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    c9ae:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
    c9b2:	74 24                	je     c9d8 <sc_default_f5_split_in_ext_stem+0x66>
    c9b4:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
    c9b7:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    c9bf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c9c3:	48 01 d0             	add    rax,rdx
    c9c6:	48 8b 00             	mov    rax,QWORD PTR [rax]
    c9c9:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
    c9cc:	48 c1 e2 02          	shl    rdx,0x2
    c9d0:	48 01 d0             	add    rax,rdx
    c9d3:	8b 00                	mov    eax,DWORD PTR [rax]
    c9d5:	01 45 ec             	add    DWORD PTR [rbp-0x14],eax
    c9d8:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    c9db:	5d                   	pop    rbp
    c9dc:	c3                   	ret    

000000000000c9dd <sc_default_f3_split_in_stem_ext>:
    c9dd:	f3 0f 1e fa          	endbr64 
    c9e1:	55                   	push   rbp
    c9e2:	48 89 e5             	mov    rbp,rsp
    c9e5:	89 7d dc             	mov    DWORD PTR [rbp-0x24],edi
    c9e8:	89 75 d8             	mov    DWORD PTR [rbp-0x28],esi
    c9eb:	89 55 d4             	mov    DWORD PTR [rbp-0x2c],edx
    c9ee:	48 89 4d c8          	mov    QWORD PTR [rbp-0x38],rcx
    c9f2:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    c9f6:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    c9fa:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    c9fe:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    ca05:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    ca08:	83 c0 01             	add    eax,0x1
    ca0b:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    ca0e:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    ca11:	2b 45 d8             	sub    eax,DWORD PTR [rbp-0x28]
    ca14:	83 e8 01             	sub    eax,0x1
    ca17:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    ca1a:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
    ca1e:	74 24                	je     ca44 <sc_default_f3_split_in_stem_ext+0x67>
    ca20:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
    ca23:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    ca2b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ca2f:	48 01 d0             	add    rax,rdx
    ca32:	48 8b 00             	mov    rax,QWORD PTR [rax]
    ca35:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
    ca38:	48 c1 e2 02          	shl    rdx,0x2
    ca3c:	48 01 d0             	add    rax,rdx
    ca3f:	8b 00                	mov    eax,DWORD PTR [rax]
    ca41:	01 45 ec             	add    DWORD PTR [rbp-0x14],eax
    ca44:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ca47:	5d                   	pop    rbp
    ca48:	c3                   	ret    

000000000000ca49 <sc_default_f5_split_in_ext_stem_comparative>:
    ca49:	f3 0f 1e fa          	endbr64 
    ca4d:	55                   	push   rbp
    ca4e:	48 89 e5             	mov    rbp,rsp
    ca51:	89 7d dc             	mov    DWORD PTR [rbp-0x24],edi
    ca54:	89 75 d8             	mov    DWORD PTR [rbp-0x28],esi
    ca57:	89 55 d4             	mov    DWORD PTR [rbp-0x2c],edx
    ca5a:	48 89 4d c8          	mov    QWORD PTR [rbp-0x38],rcx
    ca5e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    ca62:	48 8b 40 48          	mov    rax,QWORD PTR [rax+0x48]
    ca66:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    ca6a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    ca6e:	48 8b 40 40          	mov    rax,QWORD PTR [rax+0x40]
    ca72:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ca76:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
    ca7d:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [rbp-0x20],0x0
    ca84:	e9 be 00 00 00       	jmp    cb47 <sc_default_f5_split_in_ext_stem_comparative+0xfe>
    ca89:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    ca8c:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    ca94:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ca98:	48 01 d0             	add    rax,rdx
    ca9b:	48 8b 00             	mov    rax,QWORD PTR [rax]
    ca9e:	48 85 c0             	test   rax,rax
    caa1:	0f 84 9c 00 00 00    	je     cb43 <sc_default_f5_split_in_ext_stem_comparative+0xfa>
    caa7:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    caaa:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    cab2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    cab6:	48 01 d0             	add    rax,rdx
    cab9:	48 8b 00             	mov    rax,QWORD PTR [rax]
    cabc:	8b 55 d8             	mov    edx,DWORD PTR [rbp-0x28]
    cabf:	48 63 d2             	movsxd rdx,edx
    cac2:	48 c1 e2 02          	shl    rdx,0x2
    cac6:	48 01 d0             	add    rax,rdx
    cac9:	8b 00                	mov    eax,DWORD PTR [rax]
    cacb:	83 c0 01             	add    eax,0x1
    cace:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
    cad1:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    cad4:	48 98                	cdqe   
    cad6:	48 c1 e0 03          	shl    rax,0x3
    cada:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    cade:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    cae2:	48 01 d0             	add    rax,rdx
    cae5:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    cae8:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    caeb:	48 98                	cdqe   
    caed:	48 8d 0c c5 00 00 00 00 	lea    rcx,[rax*8+0x0]
    caf5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    caf9:	48 01 c8             	add    rax,rcx
    cafc:	48 8b 00             	mov    rax,QWORD PTR [rax]
    caff:	48 29 c2             	sub    rdx,rax
    cb02:	48 89 d0             	mov    rax,rdx
    cb05:	48 c1 f8 02          	sar    rax,0x2
    cb09:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    cb0c:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
    cb10:	74 31                	je     cb43 <sc_default_f5_split_in_ext_stem_comparative+0xfa>
    cb12:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    cb15:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    cb1d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    cb21:	48 01 d0             	add    rax,rdx
    cb24:	48 8b 00             	mov    rax,QWORD PTR [rax]
    cb27:	8b 55 e8             	mov    edx,DWORD PTR [rbp-0x18]
    cb2a:	48 c1 e2 03          	shl    rdx,0x3
    cb2e:	48 01 d0             	add    rax,rdx
    cb31:	48 8b 00             	mov    rax,QWORD PTR [rax]
    cb34:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
    cb37:	48 c1 e2 02          	shl    rdx,0x2
    cb3b:	48 01 d0             	add    rax,rdx
    cb3e:	8b 00                	mov    eax,DWORD PTR [rax]
    cb40:	01 45 e4             	add    DWORD PTR [rbp-0x1c],eax
    cb43:	83 45 e0 01          	add    DWORD PTR [rbp-0x20],0x1
    cb47:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    cb4b:	8b 40 38             	mov    eax,DWORD PTR [rax+0x38]
    cb4e:	39 45 e0             	cmp    DWORD PTR [rbp-0x20],eax
    cb51:	0f 82 32 ff ff ff    	jb     ca89 <sc_default_f5_split_in_ext_stem_comparative+0x40>
    cb57:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    cb5a:	5d                   	pop    rbp
    cb5b:	c3                   	ret    

000000000000cb5c <sc_default_f3_split_in_stem_ext_comparative>:
    cb5c:	f3 0f 1e fa          	endbr64 
    cb60:	55                   	push   rbp
    cb61:	48 89 e5             	mov    rbp,rsp
    cb64:	89 7d dc             	mov    DWORD PTR [rbp-0x24],edi
    cb67:	89 75 d8             	mov    DWORD PTR [rbp-0x28],esi
    cb6a:	89 55 d4             	mov    DWORD PTR [rbp-0x2c],edx
    cb6d:	48 89 4d c8          	mov    QWORD PTR [rbp-0x38],rcx
    cb71:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    cb75:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    cb79:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    cb7d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    cb81:	48 8b 40 48          	mov    rax,QWORD PTR [rax+0x48]
    cb85:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    cb89:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
    cb90:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [rbp-0x20],0x0
    cb97:	e9 be 00 00 00       	jmp    cc5a <sc_default_f3_split_in_stem_ext_comparative+0xfe>
    cb9c:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    cb9f:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    cba7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    cbab:	48 01 d0             	add    rax,rdx
    cbae:	48 8b 00             	mov    rax,QWORD PTR [rax]
    cbb1:	48 85 c0             	test   rax,rax
    cbb4:	0f 84 9c 00 00 00    	je     cc56 <sc_default_f3_split_in_stem_ext_comparative+0xfa>
    cbba:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    cbbd:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    cbc5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    cbc9:	48 01 d0             	add    rax,rdx
    cbcc:	48 8b 00             	mov    rax,QWORD PTR [rax]
    cbcf:	8b 55 d8             	mov    edx,DWORD PTR [rbp-0x28]
    cbd2:	48 63 d2             	movsxd rdx,edx
    cbd5:	48 c1 e2 02          	shl    rdx,0x2
    cbd9:	48 01 d0             	add    rax,rdx
    cbdc:	8b 00                	mov    eax,DWORD PTR [rax]
    cbde:	83 c0 01             	add    eax,0x1
    cbe1:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
    cbe4:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    cbe7:	48 98                	cdqe   
    cbe9:	48 c1 e0 03          	shl    rax,0x3
    cbed:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    cbf1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    cbf5:	48 01 d0             	add    rax,rdx
    cbf8:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    cbfb:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    cbfe:	48 98                	cdqe   
    cc00:	48 8d 0c c5 00 00 00 00 	lea    rcx,[rax*8+0x0]
    cc08:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    cc0c:	48 01 c8             	add    rax,rcx
    cc0f:	48 8b 00             	mov    rax,QWORD PTR [rax]
    cc12:	48 29 c2             	sub    rdx,rax
    cc15:	48 89 d0             	mov    rax,rdx
    cc18:	48 c1 f8 02          	sar    rax,0x2
    cc1c:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    cc1f:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
    cc23:	74 31                	je     cc56 <sc_default_f3_split_in_stem_ext_comparative+0xfa>
    cc25:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    cc28:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    cc30:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    cc34:	48 01 d0             	add    rax,rdx
    cc37:	48 8b 00             	mov    rax,QWORD PTR [rax]
    cc3a:	8b 55 e8             	mov    edx,DWORD PTR [rbp-0x18]
    cc3d:	48 c1 e2 03          	shl    rdx,0x3
    cc41:	48 01 d0             	add    rax,rdx
    cc44:	48 8b 00             	mov    rax,QWORD PTR [rax]
    cc47:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
    cc4a:	48 c1 e2 02          	shl    rdx,0x2
    cc4e:	48 01 d0             	add    rax,rdx
    cc51:	8b 00                	mov    eax,DWORD PTR [rax]
    cc53:	01 45 e4             	add    DWORD PTR [rbp-0x1c],eax
    cc56:	83 45 e0 01          	add    DWORD PTR [rbp-0x20],0x1
    cc5a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    cc5e:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    cc61:	39 45 e0             	cmp    DWORD PTR [rbp-0x20],eax
    cc64:	0f 82 32 ff ff ff    	jb     cb9c <sc_default_f3_split_in_stem_ext_comparative+0x40>
    cc6a:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    cc6d:	5d                   	pop    rbp
    cc6e:	c3                   	ret    

000000000000cc6f <sc_user_f5_split_in_ext_stem>:
    cc6f:	f3 0f 1e fa          	endbr64 
    cc73:	55                   	push   rbp
    cc74:	48 89 e5             	mov    rbp,rsp
    cc77:	48 83 ec 20          	sub    rsp,0x20
    cc7b:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
    cc7e:	89 75 f8             	mov    DWORD PTR [rbp-0x8],esi
    cc81:	89 55 f4             	mov    DWORD PTR [rbp-0xc],edx
    cc84:	48 89 4d e8          	mov    QWORD PTR [rbp-0x18],rcx
    cc88:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    cc8c:	4c 8b 50 28          	mov    r10,QWORD PTR [rax+0x28]
    cc90:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    cc94:	48 8b 70 30          	mov    rsi,QWORD PTR [rax+0x30]
    cc98:	8b 4d f4             	mov    ecx,DWORD PTR [rbp-0xc]
    cc9b:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
    cc9e:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    cca1:	49 89 f1             	mov    r9,rsi
    cca4:	41 b8 12 00 00 00    	mov    r8d,0x12
    ccaa:	89 c6                	mov    esi,eax
    ccac:	bf 01 00 00 00       	mov    edi,0x1
    ccb1:	41 ff d2             	call   r10
    ccb4:	c9                   	leave  
    ccb5:	c3                   	ret    

000000000000ccb6 <sc_user_f3_split_in_stem_ext>:
    ccb6:	f3 0f 1e fa          	endbr64 
    ccba:	55                   	push   rbp
    ccbb:	48 89 e5             	mov    rbp,rsp
    ccbe:	48 83 ec 20          	sub    rsp,0x20
    ccc2:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
    ccc5:	89 75 f8             	mov    DWORD PTR [rbp-0x8],esi
    ccc8:	89 55 f4             	mov    DWORD PTR [rbp-0xc],edx
    cccb:	48 89 4d e8          	mov    QWORD PTR [rbp-0x18],rcx
    cccf:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    ccd3:	4c 8b 50 30          	mov    r10,QWORD PTR [rax+0x30]
    ccd7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    ccdb:	48 8b 70 38          	mov    rsi,QWORD PTR [rax+0x38]
    ccdf:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    cce3:	8b 00                	mov    eax,DWORD PTR [rax]
    cce5:	89 c7                	mov    edi,eax
    cce7:	8b 4d f4             	mov    ecx,DWORD PTR [rbp-0xc]
    ccea:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
    cced:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    ccf0:	49 89 f1             	mov    r9,rsi
    ccf3:	41 b8 10 00 00 00    	mov    r8d,0x10
    ccf9:	89 fe                	mov    esi,edi
    ccfb:	89 c7                	mov    edi,eax
    ccfd:	41 ff d2             	call   r10
    cd00:	c9                   	leave  
    cd01:	c3                   	ret    

000000000000cd02 <sc_user_f5_split_in_ext_stem_comparative>:
    cd02:	f3 0f 1e fa          	endbr64 
    cd06:	55                   	push   rbp
    cd07:	48 89 e5             	mov    rbp,rsp
    cd0a:	48 83 ec 30          	sub    rsp,0x30
    cd0e:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    cd11:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
    cd14:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
    cd17:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    cd1b:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    cd22:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [rbp-0x8],0x0
    cd29:	eb 67                	jmp    cd92 <sc_user_f5_split_in_ext_stem_comparative+0x90>
    cd2b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    cd2f:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    cd33:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
    cd36:	48 c1 e2 03          	shl    rdx,0x3
    cd3a:	48 01 d0             	add    rax,rdx
    cd3d:	48 8b 00             	mov    rax,QWORD PTR [rax]
    cd40:	48 85 c0             	test   rax,rax
    cd43:	74 49                	je     cd8e <sc_user_f5_split_in_ext_stem_comparative+0x8c>
    cd45:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    cd49:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    cd4d:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
    cd50:	48 c1 e2 03          	shl    rdx,0x3
    cd54:	48 01 d0             	add    rax,rdx
    cd57:	4c 8b 10             	mov    r10,QWORD PTR [rax]
    cd5a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    cd5e:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    cd62:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
    cd65:	48 c1 e2 03          	shl    rdx,0x3
    cd69:	48 01 d0             	add    rax,rdx
    cd6c:	48 8b 30             	mov    rsi,QWORD PTR [rax]
    cd6f:	8b 4d e4             	mov    ecx,DWORD PTR [rbp-0x1c]
    cd72:	8b 55 e8             	mov    edx,DWORD PTR [rbp-0x18]
    cd75:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    cd78:	49 89 f1             	mov    r9,rsi
    cd7b:	41 b8 12 00 00 00    	mov    r8d,0x12
    cd81:	89 c6                	mov    esi,eax
    cd83:	bf 01 00 00 00       	mov    edi,0x1
    cd88:	41 ff d2             	call   r10
    cd8b:	01 45 fc             	add    DWORD PTR [rbp-0x4],eax
    cd8e:	83 45 f8 01          	add    DWORD PTR [rbp-0x8],0x1
    cd92:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    cd96:	8b 40 38             	mov    eax,DWORD PTR [rax+0x38]
    cd99:	39 45 f8             	cmp    DWORD PTR [rbp-0x8],eax
    cd9c:	72 8d                	jb     cd2b <sc_user_f5_split_in_ext_stem_comparative+0x29>
    cd9e:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    cda1:	c9                   	leave  
    cda2:	c3                   	ret    

000000000000cda3 <sc_user_f3_split_in_stem_ext_comparative>:
    cda3:	f3 0f 1e fa          	endbr64 
    cda7:	55                   	push   rbp
    cda8:	48 89 e5             	mov    rbp,rsp
    cdab:	48 83 ec 30          	sub    rsp,0x30
    cdaf:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    cdb2:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
    cdb5:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
    cdb8:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    cdbc:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    cdc3:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [rbp-0x8],0x0
    cdca:	eb 6c                	jmp    ce38 <sc_user_f3_split_in_stem_ext_comparative+0x95>
    cdcc:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    cdd0:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    cdd4:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
    cdd7:	48 c1 e2 03          	shl    rdx,0x3
    cddb:	48 01 d0             	add    rax,rdx
    cdde:	48 8b 00             	mov    rax,QWORD PTR [rax]
    cde1:	48 85 c0             	test   rax,rax
    cde4:	74 4e                	je     ce34 <sc_user_f3_split_in_stem_ext_comparative+0x91>
    cde6:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    cdea:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    cdee:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
    cdf1:	48 c1 e2 03          	shl    rdx,0x3
    cdf5:	48 01 d0             	add    rax,rdx
    cdf8:	4c 8b 10             	mov    r10,QWORD PTR [rax]
    cdfb:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    cdff:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    ce03:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
    ce06:	48 c1 e2 03          	shl    rdx,0x3
    ce0a:	48 01 d0             	add    rax,rdx
    ce0d:	48 8b 30             	mov    rsi,QWORD PTR [rax]
    ce10:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ce14:	8b 00                	mov    eax,DWORD PTR [rax]
    ce16:	89 c7                	mov    edi,eax
    ce18:	8b 4d e4             	mov    ecx,DWORD PTR [rbp-0x1c]
    ce1b:	8b 55 e8             	mov    edx,DWORD PTR [rbp-0x18]
    ce1e:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ce21:	49 89 f1             	mov    r9,rsi
    ce24:	41 b8 10 00 00 00    	mov    r8d,0x10
    ce2a:	89 fe                	mov    esi,edi
    ce2c:	89 c7                	mov    edi,eax
    ce2e:	41 ff d2             	call   r10
    ce31:	01 45 fc             	add    DWORD PTR [rbp-0x4],eax
    ce34:	83 45 f8 01          	add    DWORD PTR [rbp-0x8],0x1
    ce38:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ce3c:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    ce3f:	39 45 f8             	cmp    DWORD PTR [rbp-0x8],eax
    ce42:	72 88                	jb     cdcc <sc_user_f3_split_in_stem_ext_comparative+0x29>
    ce44:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    ce47:	c9                   	leave  
    ce48:	c3                   	ret    

000000000000ce49 <sc_user_def_f5_split_in_ext_stem>:
    ce49:	f3 0f 1e fa          	endbr64 
    ce4d:	55                   	push   rbp
    ce4e:	48 89 e5             	mov    rbp,rsp
    ce51:	53                   	push   rbx
    ce52:	48 83 ec 28          	sub    rsp,0x28
    ce56:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    ce59:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
    ce5c:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
    ce5f:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    ce63:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    ce67:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    ce6a:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    ce6d:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ce70:	89 c7                	mov    edi,eax
    ce72:	e8 fb fa ff ff       	call   c972 <sc_default_f5_split_in_ext_stem>
    ce77:	89 c3                	mov    ebx,eax
    ce79:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    ce7d:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    ce80:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    ce83:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ce86:	89 c7                	mov    edi,eax
    ce88:	e8 e2 fd ff ff       	call   cc6f <sc_user_f5_split_in_ext_stem>
    ce8d:	01 d8                	add    eax,ebx
    ce8f:	48 83 c4 28          	add    rsp,0x28
    ce93:	5b                   	pop    rbx
    ce94:	5d                   	pop    rbp
    ce95:	c3                   	ret    

000000000000ce96 <sc_user_def_f3_split_in_stem_ext>:
    ce96:	f3 0f 1e fa          	endbr64 
    ce9a:	55                   	push   rbp
    ce9b:	48 89 e5             	mov    rbp,rsp
    ce9e:	53                   	push   rbx
    ce9f:	48 83 ec 28          	sub    rsp,0x28
    cea3:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    cea6:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
    cea9:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
    ceac:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    ceb0:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    ceb4:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    ceb7:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    ceba:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    cebd:	89 c7                	mov    edi,eax
    cebf:	e8 19 fb ff ff       	call   c9dd <sc_default_f3_split_in_stem_ext>
    cec4:	89 c3                	mov    ebx,eax
    cec6:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    ceca:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    cecd:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    ced0:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ced3:	89 c7                	mov    edi,eax
    ced5:	e8 dc fd ff ff       	call   ccb6 <sc_user_f3_split_in_stem_ext>
    ceda:	01 d8                	add    eax,ebx
    cedc:	48 83 c4 28          	add    rsp,0x28
    cee0:	5b                   	pop    rbx
    cee1:	5d                   	pop    rbp
    cee2:	c3                   	ret    

000000000000cee3 <sc_user_def_f5_split_in_ext_stem_comparative>:
    cee3:	f3 0f 1e fa          	endbr64 
    cee7:	55                   	push   rbp
    cee8:	48 89 e5             	mov    rbp,rsp
    ceeb:	53                   	push   rbx
    ceec:	48 83 ec 28          	sub    rsp,0x28
    cef0:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    cef3:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
    cef6:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
    cef9:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    cefd:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    cf01:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    cf04:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    cf07:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    cf0a:	89 c7                	mov    edi,eax
    cf0c:	e8 38 fb ff ff       	call   ca49 <sc_default_f5_split_in_ext_stem_comparative>
    cf11:	89 c3                	mov    ebx,eax
    cf13:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    cf17:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    cf1a:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    cf1d:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    cf20:	89 c7                	mov    edi,eax
    cf22:	e8 db fd ff ff       	call   cd02 <sc_user_f5_split_in_ext_stem_comparative>
    cf27:	01 d8                	add    eax,ebx
    cf29:	48 83 c4 28          	add    rsp,0x28
    cf2d:	5b                   	pop    rbx
    cf2e:	5d                   	pop    rbp
    cf2f:	c3                   	ret    

000000000000cf30 <sc_user_def_f3_split_in_stem_ext_comparative>:
    cf30:	f3 0f 1e fa          	endbr64 
    cf34:	55                   	push   rbp
    cf35:	48 89 e5             	mov    rbp,rsp
    cf38:	53                   	push   rbx
    cf39:	48 83 ec 28          	sub    rsp,0x28
    cf3d:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    cf40:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
    cf43:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
    cf46:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    cf4a:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    cf4e:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    cf51:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    cf54:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    cf57:	89 c7                	mov    edi,eax
    cf59:	e8 fe fb ff ff       	call   cb5c <sc_default_f3_split_in_stem_ext_comparative>
    cf5e:	89 c3                	mov    ebx,eax
    cf60:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    cf64:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    cf67:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    cf6a:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    cf6d:	89 c7                	mov    edi,eax
    cf6f:	e8 2f fe ff ff       	call   cda3 <sc_user_f3_split_in_stem_ext_comparative>
    cf74:	01 d8                	add    eax,ebx
    cf76:	48 83 c4 28          	add    rsp,0x28
    cf7a:	5b                   	pop    rbx
    cf7b:	5d                   	pop    rbp
    cf7c:	c3                   	ret    

000000000000cf7d <sc_default_f5_split_in_ext_stem1>:
    cf7d:	f3 0f 1e fa          	endbr64 
    cf81:	55                   	push   rbp
    cf82:	48 89 e5             	mov    rbp,rsp
    cf85:	89 7d dc             	mov    DWORD PTR [rbp-0x24],edi
    cf88:	89 75 d8             	mov    DWORD PTR [rbp-0x28],esi
    cf8b:	89 55 d4             	mov    DWORD PTR [rbp-0x2c],edx
    cf8e:	48 89 4d c8          	mov    QWORD PTR [rbp-0x38],rcx
    cf92:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    cf96:	48 8b 00             	mov    rax,QWORD PTR [rax]
    cf99:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    cf9d:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
    cfa4:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    cfa7:	83 c0 01             	add    eax,0x1
    cfaa:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
    cfad:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    cfb0:	2b 45 d8             	sub    eax,DWORD PTR [rbp-0x28]
    cfb3:	83 e8 01             	sub    eax,0x1
    cfb6:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    cfb9:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    cfbc:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    cfbf:	c7 45 f4 01 00 00 00 	mov    DWORD PTR [rbp-0xc],0x1
    cfc6:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
    cfca:	74 24                	je     cff0 <sc_default_f5_split_in_ext_stem1+0x73>
    cfcc:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
    cfcf:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    cfd7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    cfdb:	48 01 d0             	add    rax,rdx
    cfde:	48 8b 00             	mov    rax,QWORD PTR [rax]
    cfe1:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
    cfe4:	48 c1 e2 02          	shl    rdx,0x2
    cfe8:	48 01 d0             	add    rax,rdx
    cfeb:	8b 00                	mov    eax,DWORD PTR [rax]
    cfed:	01 45 e4             	add    DWORD PTR [rbp-0x1c],eax
    cff0:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
    cff3:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    cffb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    cfff:	48 01 d0             	add    rax,rdx
    d002:	48 8b 00             	mov    rax,QWORD PTR [rax]
    d005:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
    d008:	48 c1 e2 02          	shl    rdx,0x2
    d00c:	48 01 d0             	add    rax,rdx
    d00f:	8b 00                	mov    eax,DWORD PTR [rax]
    d011:	01 45 e4             	add    DWORD PTR [rbp-0x1c],eax
    d014:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    d017:	5d                   	pop    rbp
    d018:	c3                   	ret    

000000000000d019 <sc_default_f3_split_in_stem_ext1>:
    d019:	f3 0f 1e fa          	endbr64 
    d01d:	55                   	push   rbp
    d01e:	48 89 e5             	mov    rbp,rsp
    d021:	89 7d dc             	mov    DWORD PTR [rbp-0x24],edi
    d024:	89 75 d8             	mov    DWORD PTR [rbp-0x28],esi
    d027:	89 55 d4             	mov    DWORD PTR [rbp-0x2c],edx
    d02a:	48 89 4d c8          	mov    QWORD PTR [rbp-0x38],rcx
    d02e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    d032:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    d036:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    d03a:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
    d041:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    d044:	83 c0 01             	add    eax,0x1
    d047:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
    d04a:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    d04d:	2b 45 d8             	sub    eax,DWORD PTR [rbp-0x28]
    d050:	83 e8 01             	sub    eax,0x1
    d053:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    d056:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    d059:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    d05c:	c7 45 f4 01 00 00 00 	mov    DWORD PTR [rbp-0xc],0x1
    d063:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
    d067:	74 24                	je     d08d <sc_default_f3_split_in_stem_ext1+0x74>
    d069:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
    d06c:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    d074:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    d078:	48 01 d0             	add    rax,rdx
    d07b:	48 8b 00             	mov    rax,QWORD PTR [rax]
    d07e:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
    d081:	48 c1 e2 02          	shl    rdx,0x2
    d085:	48 01 d0             	add    rax,rdx
    d088:	8b 00                	mov    eax,DWORD PTR [rax]
    d08a:	01 45 e4             	add    DWORD PTR [rbp-0x1c],eax
    d08d:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
    d090:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    d098:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    d09c:	48 01 d0             	add    rax,rdx
    d09f:	48 8b 00             	mov    rax,QWORD PTR [rax]
    d0a2:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
    d0a5:	48 c1 e2 02          	shl    rdx,0x2
    d0a9:	48 01 d0             	add    rax,rdx
    d0ac:	8b 00                	mov    eax,DWORD PTR [rax]
    d0ae:	01 45 e4             	add    DWORD PTR [rbp-0x1c],eax
    d0b1:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    d0b4:	5d                   	pop    rbp
    d0b5:	c3                   	ret    

000000000000d0b6 <sc_default_f5_split_in_ext_stem1_comparative>:
    d0b6:	f3 0f 1e fa          	endbr64 
    d0ba:	55                   	push   rbp
    d0bb:	48 89 e5             	mov    rbp,rsp
    d0be:	89 7d cc             	mov    DWORD PTR [rbp-0x34],edi
    d0c1:	89 75 c8             	mov    DWORD PTR [rbp-0x38],esi
    d0c4:	89 55 c4             	mov    DWORD PTR [rbp-0x3c],edx
    d0c7:	48 89 4d b8          	mov    QWORD PTR [rbp-0x48],rcx
    d0cb:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    d0cf:	48 8b 40 48          	mov    rax,QWORD PTR [rax+0x48]
    d0d3:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    d0d7:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [rbp-0x24],0x0
    d0de:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    d0e2:	48 8b 40 40          	mov    rax,QWORD PTR [rax+0x40]
    d0e6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    d0ea:	c7 45 d8 00 00 00 00 	mov    DWORD PTR [rbp-0x28],0x0
    d0f1:	e9 35 01 00 00       	jmp    d22b <sc_default_f5_split_in_ext_stem1_comparative+0x175>
    d0f6:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    d0f9:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    d101:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    d105:	48 01 d0             	add    rax,rdx
    d108:	48 8b 00             	mov    rax,QWORD PTR [rax]
    d10b:	48 85 c0             	test   rax,rax
    d10e:	0f 84 13 01 00 00    	je     d227 <sc_default_f5_split_in_ext_stem1_comparative+0x171>
    d114:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    d117:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    d11f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    d123:	48 01 d0             	add    rax,rdx
    d126:	48 8b 00             	mov    rax,QWORD PTR [rax]
    d129:	8b 55 c8             	mov    edx,DWORD PTR [rbp-0x38]
    d12c:	48 63 d2             	movsxd rdx,edx
    d12f:	48 c1 e2 02          	shl    rdx,0x2
    d133:	48 01 d0             	add    rax,rdx
    d136:	8b 00                	mov    eax,DWORD PTR [rax]
    d138:	83 c0 01             	add    eax,0x1
    d13b:	89 45 e0             	mov    DWORD PTR [rbp-0x20],eax
    d13e:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    d141:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    d149:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    d14d:	48 01 d0             	add    rax,rdx
    d150:	48 8b 00             	mov    rax,QWORD PTR [rax]
    d153:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    d156:	48 63 d2             	movsxd rdx,edx
    d159:	48 c1 e2 02          	shl    rdx,0x2
    d15d:	48 83 ea 04          	sub    rdx,0x4
    d161:	48 01 d0             	add    rax,rdx
    d164:	8b 10                	mov    edx,DWORD PTR [rax]
    d166:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    d169:	48 8d 0c c5 00 00 00 00 	lea    rcx,[rax*8+0x0]
    d171:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    d175:	48 01 c8             	add    rax,rcx
    d178:	48 8b 00             	mov    rax,QWORD PTR [rax]
    d17b:	8b 4d c8             	mov    ecx,DWORD PTR [rbp-0x38]
    d17e:	48 63 c9             	movsxd rcx,ecx
    d181:	48 c1 e1 02          	shl    rcx,0x2
    d185:	48 01 c8             	add    rax,rcx
    d188:	8b 00                	mov    eax,DWORD PTR [rax]
    d18a:	29 c2                	sub    edx,eax
    d18c:	89 d0                	mov    eax,edx
    d18e:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    d191:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    d194:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    d19c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    d1a0:	48 01 d0             	add    rax,rdx
    d1a3:	48 8b 00             	mov    rax,QWORD PTR [rax]
    d1a6:	8b 55 cc             	mov    edx,DWORD PTR [rbp-0x34]
    d1a9:	48 63 d2             	movsxd rdx,edx
    d1ac:	48 c1 e2 02          	shl    rdx,0x2
    d1b0:	48 01 d0             	add    rax,rdx
    d1b3:	8b 00                	mov    eax,DWORD PTR [rax]
    d1b5:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
    d1b8:	c7 45 ec 01 00 00 00 	mov    DWORD PTR [rbp-0x14],0x1
    d1bf:	83 7d e4 00          	cmp    DWORD PTR [rbp-0x1c],0x0
    d1c3:	74 31                	je     d1f6 <sc_default_f5_split_in_ext_stem1_comparative+0x140>
    d1c5:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    d1c8:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    d1d0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    d1d4:	48 01 d0             	add    rax,rdx
    d1d7:	48 8b 00             	mov    rax,QWORD PTR [rax]
    d1da:	8b 55 e0             	mov    edx,DWORD PTR [rbp-0x20]
    d1dd:	48 c1 e2 03          	shl    rdx,0x3
    d1e1:	48 01 d0             	add    rax,rdx
    d1e4:	48 8b 00             	mov    rax,QWORD PTR [rax]
    d1e7:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    d1ea:	48 c1 e2 02          	shl    rdx,0x2
    d1ee:	48 01 d0             	add    rax,rdx
    d1f1:	8b 00                	mov    eax,DWORD PTR [rax]
    d1f3:	01 45 dc             	add    DWORD PTR [rbp-0x24],eax
    d1f6:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    d1f9:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    d201:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    d205:	48 01 d0             	add    rax,rdx
    d208:	48 8b 00             	mov    rax,QWORD PTR [rax]
    d20b:	8b 55 e8             	mov    edx,DWORD PTR [rbp-0x18]
    d20e:	48 c1 e2 03          	shl    rdx,0x3
    d212:	48 01 d0             	add    rax,rdx
    d215:	48 8b 00             	mov    rax,QWORD PTR [rax]
    d218:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
    d21b:	48 c1 e2 02          	shl    rdx,0x2
    d21f:	48 01 d0             	add    rax,rdx
    d222:	8b 00                	mov    eax,DWORD PTR [rax]
    d224:	01 45 dc             	add    DWORD PTR [rbp-0x24],eax
    d227:	83 45 d8 01          	add    DWORD PTR [rbp-0x28],0x1
    d22b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    d22f:	8b 40 38             	mov    eax,DWORD PTR [rax+0x38]
    d232:	39 45 d8             	cmp    DWORD PTR [rbp-0x28],eax
    d235:	0f 82 bb fe ff ff    	jb     d0f6 <sc_default_f5_split_in_ext_stem1_comparative+0x40>
    d23b:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    d23e:	5d                   	pop    rbp
    d23f:	c3                   	ret    

000000000000d240 <sc_default_f3_split_in_stem_ext1_comparative>:
    d240:	f3 0f 1e fa          	endbr64 
    d244:	55                   	push   rbp
    d245:	48 89 e5             	mov    rbp,rsp
    d248:	89 7d cc             	mov    DWORD PTR [rbp-0x34],edi
    d24b:	89 75 c8             	mov    DWORD PTR [rbp-0x38],esi
    d24e:	89 55 c4             	mov    DWORD PTR [rbp-0x3c],edx
    d251:	48 89 4d b8          	mov    QWORD PTR [rbp-0x48],rcx
    d255:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    d259:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    d25d:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    d261:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [rbp-0x24],0x0
    d268:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    d26c:	48 8b 40 48          	mov    rax,QWORD PTR [rax+0x48]
    d270:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    d274:	c7 45 d8 00 00 00 00 	mov    DWORD PTR [rbp-0x28],0x0
    d27b:	e9 35 01 00 00       	jmp    d3b5 <sc_default_f3_split_in_stem_ext1_comparative+0x175>
    d280:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    d283:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    d28b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    d28f:	48 01 d0             	add    rax,rdx
    d292:	48 8b 00             	mov    rax,QWORD PTR [rax]
    d295:	48 85 c0             	test   rax,rax
    d298:	0f 84 13 01 00 00    	je     d3b1 <sc_default_f3_split_in_stem_ext1_comparative+0x171>
    d29e:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    d2a1:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    d2a9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    d2ad:	48 01 d0             	add    rax,rdx
    d2b0:	48 8b 00             	mov    rax,QWORD PTR [rax]
    d2b3:	8b 55 c8             	mov    edx,DWORD PTR [rbp-0x38]
    d2b6:	48 63 d2             	movsxd rdx,edx
    d2b9:	48 c1 e2 02          	shl    rdx,0x2
    d2bd:	48 01 d0             	add    rax,rdx
    d2c0:	8b 00                	mov    eax,DWORD PTR [rax]
    d2c2:	83 c0 01             	add    eax,0x1
    d2c5:	89 45 e0             	mov    DWORD PTR [rbp-0x20],eax
    d2c8:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    d2cb:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    d2d3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    d2d7:	48 01 d0             	add    rax,rdx
    d2da:	48 8b 00             	mov    rax,QWORD PTR [rax]
    d2dd:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    d2e0:	48 63 d2             	movsxd rdx,edx
    d2e3:	48 c1 e2 02          	shl    rdx,0x2
    d2e7:	48 83 ea 04          	sub    rdx,0x4
    d2eb:	48 01 d0             	add    rax,rdx
    d2ee:	8b 10                	mov    edx,DWORD PTR [rax]
    d2f0:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    d2f3:	48 8d 0c c5 00 00 00 00 	lea    rcx,[rax*8+0x0]
    d2fb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    d2ff:	48 01 c8             	add    rax,rcx
    d302:	48 8b 00             	mov    rax,QWORD PTR [rax]
    d305:	8b 4d c8             	mov    ecx,DWORD PTR [rbp-0x38]
    d308:	48 63 c9             	movsxd rcx,ecx
    d30b:	48 c1 e1 02          	shl    rcx,0x2
    d30f:	48 01 c8             	add    rax,rcx
    d312:	8b 00                	mov    eax,DWORD PTR [rax]
    d314:	29 c2                	sub    edx,eax
    d316:	89 d0                	mov    eax,edx
    d318:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    d31b:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    d31e:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    d326:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    d32a:	48 01 d0             	add    rax,rdx
    d32d:	48 8b 00             	mov    rax,QWORD PTR [rax]
    d330:	8b 55 cc             	mov    edx,DWORD PTR [rbp-0x34]
    d333:	48 63 d2             	movsxd rdx,edx
    d336:	48 c1 e2 02          	shl    rdx,0x2
    d33a:	48 01 d0             	add    rax,rdx
    d33d:	8b 00                	mov    eax,DWORD PTR [rax]
    d33f:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
    d342:	c7 45 ec 01 00 00 00 	mov    DWORD PTR [rbp-0x14],0x1
    d349:	83 7d e4 00          	cmp    DWORD PTR [rbp-0x1c],0x0
    d34d:	74 31                	je     d380 <sc_default_f3_split_in_stem_ext1_comparative+0x140>
    d34f:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    d352:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    d35a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    d35e:	48 01 d0             	add    rax,rdx
    d361:	48 8b 00             	mov    rax,QWORD PTR [rax]
    d364:	8b 55 e0             	mov    edx,DWORD PTR [rbp-0x20]
    d367:	48 c1 e2 03          	shl    rdx,0x3
    d36b:	48 01 d0             	add    rax,rdx
    d36e:	48 8b 00             	mov    rax,QWORD PTR [rax]
    d371:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    d374:	48 c1 e2 02          	shl    rdx,0x2
    d378:	48 01 d0             	add    rax,rdx
    d37b:	8b 00                	mov    eax,DWORD PTR [rax]
    d37d:	01 45 dc             	add    DWORD PTR [rbp-0x24],eax
    d380:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    d383:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    d38b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    d38f:	48 01 d0             	add    rax,rdx
    d392:	48 8b 00             	mov    rax,QWORD PTR [rax]
    d395:	8b 55 e8             	mov    edx,DWORD PTR [rbp-0x18]
    d398:	48 c1 e2 03          	shl    rdx,0x3
    d39c:	48 01 d0             	add    rax,rdx
    d39f:	48 8b 00             	mov    rax,QWORD PTR [rax]
    d3a2:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
    d3a5:	48 c1 e2 02          	shl    rdx,0x2
    d3a9:	48 01 d0             	add    rax,rdx
    d3ac:	8b 00                	mov    eax,DWORD PTR [rax]
    d3ae:	01 45 dc             	add    DWORD PTR [rbp-0x24],eax
    d3b1:	83 45 d8 01          	add    DWORD PTR [rbp-0x28],0x1
    d3b5:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    d3b9:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    d3bc:	39 45 d8             	cmp    DWORD PTR [rbp-0x28],eax
    d3bf:	0f 82 bb fe ff ff    	jb     d280 <sc_default_f3_split_in_stem_ext1_comparative+0x40>
    d3c5:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    d3c8:	5d                   	pop    rbp
    d3c9:	c3                   	ret    

000000000000d3ca <sc_user_f5_split_in_ext_stem1>:
    d3ca:	f3 0f 1e fa          	endbr64 
    d3ce:	55                   	push   rbp
    d3cf:	48 89 e5             	mov    rbp,rsp
    d3d2:	48 83 ec 20          	sub    rsp,0x20
    d3d6:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
    d3d9:	89 75 f8             	mov    DWORD PTR [rbp-0x8],esi
    d3dc:	89 55 f4             	mov    DWORD PTR [rbp-0xc],edx
    d3df:	48 89 4d e8          	mov    QWORD PTR [rbp-0x18],rcx
    d3e3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    d3e7:	4c 8b 50 28          	mov    r10,QWORD PTR [rax+0x28]
    d3eb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    d3ef:	48 8b 70 30          	mov    rsi,QWORD PTR [rax+0x30]
    d3f3:	8b 4d f4             	mov    ecx,DWORD PTR [rbp-0xc]
    d3f6:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
    d3f9:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    d3fc:	49 89 f1             	mov    r9,rsi
    d3ff:	41 b8 13 00 00 00    	mov    r8d,0x13
    d405:	89 c6                	mov    esi,eax
    d407:	bf 01 00 00 00       	mov    edi,0x1
    d40c:	41 ff d2             	call   r10
    d40f:	c9                   	leave  
    d410:	c3                   	ret    

000000000000d411 <sc_user_f3_split_in_stem_ext1>:
    d411:	f3 0f 1e fa          	endbr64 
    d415:	55                   	push   rbp
    d416:	48 89 e5             	mov    rbp,rsp
    d419:	48 83 ec 20          	sub    rsp,0x20
    d41d:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
    d420:	89 75 f8             	mov    DWORD PTR [rbp-0x8],esi
    d423:	89 55 f4             	mov    DWORD PTR [rbp-0xc],edx
    d426:	48 89 4d e8          	mov    QWORD PTR [rbp-0x18],rcx
    d42a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    d42e:	4c 8b 50 30          	mov    r10,QWORD PTR [rax+0x30]
    d432:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    d436:	48 8b 70 38          	mov    rsi,QWORD PTR [rax+0x38]
    d43a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    d43e:	8b 00                	mov    eax,DWORD PTR [rax]
    d440:	89 c7                	mov    edi,eax
    d442:	8b 4d f4             	mov    ecx,DWORD PTR [rbp-0xc]
    d445:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
    d448:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    d44b:	49 89 f1             	mov    r9,rsi
    d44e:	41 b8 14 00 00 00    	mov    r8d,0x14
    d454:	89 fe                	mov    esi,edi
    d456:	89 c7                	mov    edi,eax
    d458:	41 ff d2             	call   r10
    d45b:	c9                   	leave  
    d45c:	c3                   	ret    

000000000000d45d <sc_user_f5_split_in_ext_stem1_comparative>:
    d45d:	f3 0f 1e fa          	endbr64 
    d461:	55                   	push   rbp
    d462:	48 89 e5             	mov    rbp,rsp
    d465:	48 83 ec 30          	sub    rsp,0x30
    d469:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    d46c:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
    d46f:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
    d472:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    d476:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    d47d:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [rbp-0x8],0x0
    d484:	eb 67                	jmp    d4ed <sc_user_f5_split_in_ext_stem1_comparative+0x90>
    d486:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    d48a:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    d48e:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
    d491:	48 c1 e2 03          	shl    rdx,0x3
    d495:	48 01 d0             	add    rax,rdx
    d498:	48 8b 00             	mov    rax,QWORD PTR [rax]
    d49b:	48 85 c0             	test   rax,rax
    d49e:	74 49                	je     d4e9 <sc_user_f5_split_in_ext_stem1_comparative+0x8c>
    d4a0:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    d4a4:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    d4a8:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
    d4ab:	48 c1 e2 03          	shl    rdx,0x3
    d4af:	48 01 d0             	add    rax,rdx
    d4b2:	4c 8b 10             	mov    r10,QWORD PTR [rax]
    d4b5:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    d4b9:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    d4bd:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
    d4c0:	48 c1 e2 03          	shl    rdx,0x3
    d4c4:	48 01 d0             	add    rax,rdx
    d4c7:	48 8b 30             	mov    rsi,QWORD PTR [rax]
    d4ca:	8b 4d e4             	mov    ecx,DWORD PTR [rbp-0x1c]
    d4cd:	8b 55 e8             	mov    edx,DWORD PTR [rbp-0x18]
    d4d0:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    d4d3:	49 89 f1             	mov    r9,rsi
    d4d6:	41 b8 13 00 00 00    	mov    r8d,0x13
    d4dc:	89 c6                	mov    esi,eax
    d4de:	bf 01 00 00 00       	mov    edi,0x1
    d4e3:	41 ff d2             	call   r10
    d4e6:	01 45 fc             	add    DWORD PTR [rbp-0x4],eax
    d4e9:	83 45 f8 01          	add    DWORD PTR [rbp-0x8],0x1
    d4ed:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    d4f1:	8b 40 38             	mov    eax,DWORD PTR [rax+0x38]
    d4f4:	39 45 f8             	cmp    DWORD PTR [rbp-0x8],eax
    d4f7:	72 8d                	jb     d486 <sc_user_f5_split_in_ext_stem1_comparative+0x29>
    d4f9:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    d4fc:	c9                   	leave  
    d4fd:	c3                   	ret    

000000000000d4fe <sc_user_f3_split_in_stem_ext1_comparative>:
    d4fe:	f3 0f 1e fa          	endbr64 
    d502:	55                   	push   rbp
    d503:	48 89 e5             	mov    rbp,rsp
    d506:	48 83 ec 30          	sub    rsp,0x30
    d50a:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    d50d:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
    d510:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
    d513:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    d517:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    d51e:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [rbp-0x8],0x0
    d525:	eb 6c                	jmp    d593 <sc_user_f3_split_in_stem_ext1_comparative+0x95>
    d527:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    d52b:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    d52f:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
    d532:	48 c1 e2 03          	shl    rdx,0x3
    d536:	48 01 d0             	add    rax,rdx
    d539:	48 8b 00             	mov    rax,QWORD PTR [rax]
    d53c:	48 85 c0             	test   rax,rax
    d53f:	74 4e                	je     d58f <sc_user_f3_split_in_stem_ext1_comparative+0x91>
    d541:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    d545:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    d549:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
    d54c:	48 c1 e2 03          	shl    rdx,0x3
    d550:	48 01 d0             	add    rax,rdx
    d553:	4c 8b 10             	mov    r10,QWORD PTR [rax]
    d556:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    d55a:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    d55e:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
    d561:	48 c1 e2 03          	shl    rdx,0x3
    d565:	48 01 d0             	add    rax,rdx
    d568:	48 8b 30             	mov    rsi,QWORD PTR [rax]
    d56b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    d56f:	8b 00                	mov    eax,DWORD PTR [rax]
    d571:	89 c7                	mov    edi,eax
    d573:	8b 4d e4             	mov    ecx,DWORD PTR [rbp-0x1c]
    d576:	8b 55 e8             	mov    edx,DWORD PTR [rbp-0x18]
    d579:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    d57c:	49 89 f1             	mov    r9,rsi
    d57f:	41 b8 14 00 00 00    	mov    r8d,0x14
    d585:	89 fe                	mov    esi,edi
    d587:	89 c7                	mov    edi,eax
    d589:	41 ff d2             	call   r10
    d58c:	01 45 fc             	add    DWORD PTR [rbp-0x4],eax
    d58f:	83 45 f8 01          	add    DWORD PTR [rbp-0x8],0x1
    d593:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    d597:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    d59a:	39 45 f8             	cmp    DWORD PTR [rbp-0x8],eax
    d59d:	72 88                	jb     d527 <sc_user_f3_split_in_stem_ext1_comparative+0x29>
    d59f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    d5a2:	c9                   	leave  
    d5a3:	c3                   	ret    

000000000000d5a4 <sc_user_def_f5_split_in_ext_stem1>:
    d5a4:	f3 0f 1e fa          	endbr64 
    d5a8:	55                   	push   rbp
    d5a9:	48 89 e5             	mov    rbp,rsp
    d5ac:	53                   	push   rbx
    d5ad:	48 83 ec 28          	sub    rsp,0x28
    d5b1:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    d5b4:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
    d5b7:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
    d5ba:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    d5be:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    d5c2:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    d5c5:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    d5c8:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    d5cb:	89 c7                	mov    edi,eax
    d5cd:	e8 ab f9 ff ff       	call   cf7d <sc_default_f5_split_in_ext_stem1>
    d5d2:	89 c3                	mov    ebx,eax
    d5d4:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    d5d8:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    d5db:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    d5de:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    d5e1:	89 c7                	mov    edi,eax
    d5e3:	e8 e2 fd ff ff       	call   d3ca <sc_user_f5_split_in_ext_stem1>
    d5e8:	01 d8                	add    eax,ebx
    d5ea:	48 83 c4 28          	add    rsp,0x28
    d5ee:	5b                   	pop    rbx
    d5ef:	5d                   	pop    rbp
    d5f0:	c3                   	ret    

000000000000d5f1 <sc_user_def_f3_split_in_stem_ext1>:
    d5f1:	f3 0f 1e fa          	endbr64 
    d5f5:	55                   	push   rbp
    d5f6:	48 89 e5             	mov    rbp,rsp
    d5f9:	53                   	push   rbx
    d5fa:	48 83 ec 28          	sub    rsp,0x28
    d5fe:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    d601:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
    d604:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
    d607:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    d60b:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    d60f:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    d612:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    d615:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    d618:	89 c7                	mov    edi,eax
    d61a:	e8 fa f9 ff ff       	call   d019 <sc_default_f3_split_in_stem_ext1>
    d61f:	89 c3                	mov    ebx,eax
    d621:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    d625:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    d628:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    d62b:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    d62e:	89 c7                	mov    edi,eax
    d630:	e8 dc fd ff ff       	call   d411 <sc_user_f3_split_in_stem_ext1>
    d635:	01 d8                	add    eax,ebx
    d637:	48 83 c4 28          	add    rsp,0x28
    d63b:	5b                   	pop    rbx
    d63c:	5d                   	pop    rbp
    d63d:	c3                   	ret    

000000000000d63e <sc_user_def_f5_split_in_ext_stem1_comparative>:
    d63e:	f3 0f 1e fa          	endbr64 
    d642:	55                   	push   rbp
    d643:	48 89 e5             	mov    rbp,rsp
    d646:	53                   	push   rbx
    d647:	48 83 ec 28          	sub    rsp,0x28
    d64b:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    d64e:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
    d651:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
    d654:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    d658:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    d65c:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    d65f:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    d662:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    d665:	89 c7                	mov    edi,eax
    d667:	e8 4a fa ff ff       	call   d0b6 <sc_default_f5_split_in_ext_stem1_comparative>
    d66c:	89 c3                	mov    ebx,eax
    d66e:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    d672:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    d675:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    d678:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    d67b:	89 c7                	mov    edi,eax
    d67d:	e8 db fd ff ff       	call   d45d <sc_user_f5_split_in_ext_stem1_comparative>
    d682:	01 d8                	add    eax,ebx
    d684:	48 83 c4 28          	add    rsp,0x28
    d688:	5b                   	pop    rbx
    d689:	5d                   	pop    rbp
    d68a:	c3                   	ret    

000000000000d68b <sc_user_def_f3_split_in_stem_ext1_comparative>:
    d68b:	f3 0f 1e fa          	endbr64 
    d68f:	55                   	push   rbp
    d690:	48 89 e5             	mov    rbp,rsp
    d693:	53                   	push   rbx
    d694:	48 83 ec 28          	sub    rsp,0x28
    d698:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    d69b:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
    d69e:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
    d6a1:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    d6a5:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    d6a9:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    d6ac:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    d6af:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    d6b2:	89 c7                	mov    edi,eax
    d6b4:	e8 87 fb ff ff       	call   d240 <sc_default_f3_split_in_stem_ext1_comparative>
    d6b9:	89 c3                	mov    ebx,eax
    d6bb:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    d6bf:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    d6c2:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
    d6c5:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    d6c8:	89 c7                	mov    edi,eax
    d6ca:	e8 2f fe ff ff       	call   d4fe <sc_user_f3_split_in_stem_ext1_comparative>
    d6cf:	01 d8                	add    eax,ebx
    d6d1:	48 83 c4 28          	add    rsp,0x28
    d6d5:	5b                   	pop    rbx
    d6d6:	5d                   	pop    rbp
    d6d7:	c3                   	ret    

000000000000d6d8 <vrna_E_ext_loop_5>:
    d6d8:	f3 0f 1e fa          	endbr64 
    d6dc:	55                   	push   rbp
    d6dd:	48 89 e5             	mov    rbp,rsp
    d6e0:	53                   	push   rbx
    d6e1:	48 81 ec 08 01 00 00 	sub    rsp,0x108
    d6e8:	48 89 bd f8 fe ff ff 	mov    QWORD PTR [rbp-0x108],rdi
    d6ef:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
    d6f8:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    d6fc:	31 c0                	xor    eax,eax
    d6fe:	48 83 bd f8 fe ff ff 00 	cmp    QWORD PTR [rbp-0x108],0x0
    d706:	0f 84 4d 08 00 00    	je     df59 <vrna_E_ext_loop_5+0x881>
    d70c:	48 8b 85 f8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x108]
    d713:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    d716:	89 85 0c ff ff ff    	mov    DWORD PTR [rbp-0xf4],eax
    d71c:	48 8b 85 f8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x108]
    d723:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    d727:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    d72b:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    d732:	48 8b 85 f8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x108]
    d739:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    d73d:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    d744:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    d74b:	8b 80 ac 35 03 00    	mov    eax,DWORD PTR [rax+0x335ac]
    d751:	89 85 10 ff ff ff    	mov    DWORD PTR [rbp-0xf0],eax
    d757:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    d75e:	8b 80 c8 35 03 00    	mov    eax,DWORD PTR [rax+0x335c8]
    d764:	89 85 14 ff ff ff    	mov    DWORD PTR [rbp-0xec],eax
    d76a:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    d771:	8b 80 24 36 03 00    	mov    eax,DWORD PTR [rax+0x33624]
    d777:	89 85 18 ff ff ff    	mov    DWORD PTR [rbp-0xe8],eax
    d77d:	48 8b 85 f8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x108]
    d784:	48 8b 80 a8 00 00 00 	mov    rax,QWORD PTR [rax+0xa8]
    d78b:	48 89 85 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rax
    d792:	48 8d 95 40 ff ff ff 	lea    rdx,[rbp-0xc0]
    d799:	48 8b 85 f8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x108]
    d7a0:	48 89 d6             	mov    rsi,rdx
    d7a3:	48 89 c7             	mov    rdi,rax
    d7a6:	e8 4f dc ff ff       	call   b3fa <prepare_hc_default>
    d7ab:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    d7b2:	48 8d 55 80          	lea    rdx,[rbp-0x80]
    d7b6:	48 8b 85 f8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x108]
    d7bd:	48 89 d6             	mov    rsi,rdx
    d7c0:	48 89 c7             	mov    rdi,rax
    d7c3:	e8 87 dd ff ff       	call   b54f <init_sc_wrapper>
    d7c8:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    d7cf:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
    d7d5:	c7 85 08 ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0xf8],0x1
    d7df:	eb 4e                	jmp    d82f <vrna_E_ext_loop_5+0x157>
    d7e1:	8b 85 08 ff ff ff    	mov    eax,DWORD PTR [rbp-0xf8]
    d7e7:	48 98                	cdqe   
    d7e9:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    d7f1:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    d7f8:	48 8d 1c 02          	lea    rbx,[rdx+rax*1]
    d7fc:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
    d800:	48 8d 8d 40 ff ff ff 	lea    rcx,[rbp-0xc0]
    d807:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
    d80e:	8b b5 08 ff ff ff    	mov    esi,DWORD PTR [rbp-0xf8]
    d814:	48 8b 85 f8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x108]
    d81b:	49 89 f8             	mov    r8,rdi
    d81e:	48 89 c7             	mov    rdi,rax
    d821:	e8 4b 16 00 00       	call   ee71 <reduce_f5_up>
    d826:	89 03                	mov    DWORD PTR [rbx],eax
    d828:	83 85 08 ff ff ff 01 	add    DWORD PTR [rbp-0xf8],0x1
    d82f:	8b 85 18 ff ff ff    	mov    eax,DWORD PTR [rbp-0xe8]
    d835:	83 c0 01             	add    eax,0x1
    d838:	39 85 08 ff ff ff    	cmp    DWORD PTR [rbp-0xf8],eax
    d83e:	7e a1                	jle    d7e1 <vrna_E_ext_loop_5+0x109>
    d840:	48 83 bd 30 ff ff ff 00 	cmp    QWORD PTR [rbp-0xd0],0x0
    d848:	0f 84 b9 00 00 00    	je     d907 <vrna_E_ext_loop_5+0x22f>
    d84e:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    d855:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    d859:	48 85 c0             	test   rax,rax
    d85c:	0f 84 a5 00 00 00    	je     d907 <vrna_E_ext_loop_5+0x22f>
    d862:	c7 85 08 ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0xf8],0x1
    d86c:	e9 81 00 00 00       	jmp    d8f2 <vrna_E_ext_loop_5+0x21a>
    d871:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    d878:	4c 8b 40 08          	mov    r8,QWORD PTR [rax+0x8]
    d87c:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    d883:	48 8b 48 58          	mov    rcx,QWORD PTR [rax+0x58]
    d887:	8b 95 08 ff ff ff    	mov    edx,DWORD PTR [rbp-0xf8]
    d88d:	48 8b 85 f8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x108]
    d894:	be 01 00 00 00       	mov    esi,0x1
    d899:	48 89 c7             	mov    rdi,rax
    d89c:	41 ff d0             	call   r8
    d89f:	89 85 1c ff ff ff    	mov    DWORD PTR [rbp-0xe4],eax
    d8a5:	8b 85 08 ff ff ff    	mov    eax,DWORD PTR [rbp-0xf8]
    d8ab:	48 98                	cdqe   
    d8ad:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    d8b5:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    d8bc:	48 01 d0             	add    rax,rdx
    d8bf:	8b 00                	mov    eax,DWORD PTR [rax]
    d8c1:	8b 95 08 ff ff ff    	mov    edx,DWORD PTR [rbp-0xf8]
    d8c7:	48 63 d2             	movsxd rdx,edx
    d8ca:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
    d8d2:	48 8b 95 20 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe0]
    d8d9:	48 01 ca             	add    rdx,rcx
    d8dc:	39 85 1c ff ff ff    	cmp    DWORD PTR [rbp-0xe4],eax
    d8e2:	0f 4e 85 1c ff ff ff 	cmovle eax,DWORD PTR [rbp-0xe4]
    d8e9:	89 02                	mov    DWORD PTR [rdx],eax
    d8eb:	83 85 08 ff ff ff 01 	add    DWORD PTR [rbp-0xf8],0x1
    d8f2:	8b 85 18 ff ff ff    	mov    eax,DWORD PTR [rbp-0xe8]
    d8f8:	83 c0 01             	add    eax,0x1
    d8fb:	39 85 08 ff ff ff    	cmp    DWORD PTR [rbp-0xf8],eax
    d901:	0f 8e 6a ff ff ff    	jle    d871 <vrna_E_ext_loop_5+0x199>
    d907:	83 bd 10 ff ff ff 00 	cmp    DWORD PTR [rbp-0xf0],0x0
    d90e:	0f 84 13 02 00 00    	je     db27 <vrna_E_ext_loop_5+0x44f>
    d914:	83 bd 10 ff ff ff 02 	cmp    DWORD PTR [rbp-0xf0],0x2
    d91b:	0f 85 0c 04 00 00    	jne    dd2d <vrna_E_ext_loop_5+0x655>
    d921:	8b 85 18 ff ff ff    	mov    eax,DWORD PTR [rbp-0xe8]
    d927:	83 c0 02             	add    eax,0x2
    d92a:	89 85 08 ff ff ff    	mov    DWORD PTR [rbp-0xf8],eax
    d930:	e9 db 01 00 00       	jmp    db10 <vrna_E_ext_loop_5+0x438>
    d935:	8b 85 08 ff ff ff    	mov    eax,DWORD PTR [rbp-0xf8]
    d93b:	48 98                	cdqe   
    d93d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    d945:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    d94c:	48 8d 1c 02          	lea    rbx,[rdx+rax*1]
    d950:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
    d954:	48 8d 8d 40 ff ff ff 	lea    rcx,[rbp-0xc0]
    d95b:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
    d962:	8b b5 08 ff ff ff    	mov    esi,DWORD PTR [rbp-0xf8]
    d968:	48 8b 85 f8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x108]
    d96f:	49 89 f8             	mov    r8,rdi
    d972:	48 89 c7             	mov    rdi,rax
    d975:	e8 f7 14 00 00       	call   ee71 <reduce_f5_up>
    d97a:	89 03                	mov    DWORD PTR [rbx],eax
    d97c:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
    d980:	48 8d 8d 40 ff ff ff 	lea    rcx,[rbp-0xc0]
    d987:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
    d98e:	8b b5 08 ff ff ff    	mov    esi,DWORD PTR [rbp-0xf8]
    d994:	48 8b 85 f8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x108]
    d99b:	49 89 f8             	mov    r8,rdi
    d99e:	48 89 c7             	mov    rdi,rax
    d9a1:	e8 c2 0e 00 00       	call   e868 <decompose_f5_ext_stem_d2>
    d9a6:	89 85 1c ff ff ff    	mov    DWORD PTR [rbp-0xe4],eax
    d9ac:	8b 85 08 ff ff ff    	mov    eax,DWORD PTR [rbp-0xf8]
    d9b2:	48 98                	cdqe   
    d9b4:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    d9bc:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    d9c3:	48 01 d0             	add    rax,rdx
    d9c6:	8b 00                	mov    eax,DWORD PTR [rax]
    d9c8:	8b 95 08 ff ff ff    	mov    edx,DWORD PTR [rbp-0xf8]
    d9ce:	48 63 d2             	movsxd rdx,edx
    d9d1:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
    d9d9:	48 8b 95 20 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe0]
    d9e0:	48 01 ca             	add    rdx,rcx
    d9e3:	39 85 1c ff ff ff    	cmp    DWORD PTR [rbp-0xe4],eax
    d9e9:	0f 4e 85 1c ff ff ff 	cmovle eax,DWORD PTR [rbp-0xe4]
    d9f0:	89 02                	mov    DWORD PTR [rdx],eax
    d9f2:	83 bd 14 ff ff ff 00 	cmp    DWORD PTR [rbp-0xec],0x0
    d9f9:	74 76                	je     da71 <vrna_E_ext_loop_5+0x399>
    d9fb:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
    d9ff:	48 8d 8d 40 ff ff ff 	lea    rcx,[rbp-0xc0]
    da06:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
    da0d:	8b b5 08 ff ff ff    	mov    esi,DWORD PTR [rbp-0xf8]
    da13:	48 8b 85 f8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x108]
    da1a:	49 89 f8             	mov    r8,rdi
    da1d:	48 89 c7             	mov    rdi,rax
    da20:	e8 68 7e 00 00       	call   1588d <add_f5_gquad>
    da25:	89 85 1c ff ff ff    	mov    DWORD PTR [rbp-0xe4],eax
    da2b:	8b 85 08 ff ff ff    	mov    eax,DWORD PTR [rbp-0xf8]
    da31:	48 98                	cdqe   
    da33:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    da3b:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    da42:	48 01 d0             	add    rax,rdx
    da45:	8b 00                	mov    eax,DWORD PTR [rax]
    da47:	8b 95 08 ff ff ff    	mov    edx,DWORD PTR [rbp-0xf8]
    da4d:	48 63 d2             	movsxd rdx,edx
    da50:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
    da58:	48 8b 95 20 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe0]
    da5f:	48 01 ca             	add    rdx,rcx
    da62:	39 85 1c ff ff ff    	cmp    DWORD PTR [rbp-0xe4],eax
    da68:	0f 4e 85 1c ff ff ff 	cmovle eax,DWORD PTR [rbp-0xe4]
    da6f:	89 02                	mov    DWORD PTR [rdx],eax
    da71:	48 83 bd 30 ff ff ff 00 	cmp    QWORD PTR [rbp-0xd0],0x0
    da79:	0f 84 8a 00 00 00    	je     db09 <vrna_E_ext_loop_5+0x431>
    da7f:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    da86:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    da8a:	48 85 c0             	test   rax,rax
    da8d:	74 7a                	je     db09 <vrna_E_ext_loop_5+0x431>
    da8f:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    da96:	4c 8b 40 08          	mov    r8,QWORD PTR [rax+0x8]
    da9a:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    daa1:	48 8b 48 58          	mov    rcx,QWORD PTR [rax+0x58]
    daa5:	8b 95 08 ff ff ff    	mov    edx,DWORD PTR [rbp-0xf8]
    daab:	48 8b 85 f8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x108]
    dab2:	be 01 00 00 00       	mov    esi,0x1
    dab7:	48 89 c7             	mov    rdi,rax
    daba:	41 ff d0             	call   r8
    dabd:	89 85 1c ff ff ff    	mov    DWORD PTR [rbp-0xe4],eax
    dac3:	8b 85 08 ff ff ff    	mov    eax,DWORD PTR [rbp-0xf8]
    dac9:	48 98                	cdqe   
    dacb:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    dad3:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    dada:	48 01 d0             	add    rax,rdx
    dadd:	8b 00                	mov    eax,DWORD PTR [rax]
    dadf:	8b 95 08 ff ff ff    	mov    edx,DWORD PTR [rbp-0xf8]
    dae5:	48 63 d2             	movsxd rdx,edx
    dae8:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
    daf0:	48 8b 95 20 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe0]
    daf7:	48 01 ca             	add    rdx,rcx
    dafa:	39 85 1c ff ff ff    	cmp    DWORD PTR [rbp-0xe4],eax
    db00:	0f 4e 85 1c ff ff ff 	cmovle eax,DWORD PTR [rbp-0xe4]
    db07:	89 02                	mov    DWORD PTR [rdx],eax
    db09:	83 85 08 ff ff ff 01 	add    DWORD PTR [rbp-0xf8],0x1
    db10:	8b 85 08 ff ff ff    	mov    eax,DWORD PTR [rbp-0xf8]
    db16:	3b 85 0c ff ff ff    	cmp    eax,DWORD PTR [rbp-0xf4]
    db1c:	0f 8e 13 fe ff ff    	jle    d935 <vrna_E_ext_loop_5+0x25d>
    db22:	e9 08 04 00 00       	jmp    df2f <vrna_E_ext_loop_5+0x857>
    db27:	8b 85 18 ff ff ff    	mov    eax,DWORD PTR [rbp-0xe8]
    db2d:	83 c0 02             	add    eax,0x2
    db30:	89 85 08 ff ff ff    	mov    DWORD PTR [rbp-0xf8],eax
    db36:	e9 db 01 00 00       	jmp    dd16 <vrna_E_ext_loop_5+0x63e>
    db3b:	8b 85 08 ff ff ff    	mov    eax,DWORD PTR [rbp-0xf8]
    db41:	48 98                	cdqe   
    db43:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    db4b:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    db52:	48 8d 1c 02          	lea    rbx,[rdx+rax*1]
    db56:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
    db5a:	48 8d 8d 40 ff ff ff 	lea    rcx,[rbp-0xc0]
    db61:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
    db68:	8b b5 08 ff ff ff    	mov    esi,DWORD PTR [rbp-0xf8]
    db6e:	48 8b 85 f8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x108]
    db75:	49 89 f8             	mov    r8,rdi
    db78:	48 89 c7             	mov    rdi,rax
    db7b:	e8 f1 12 00 00       	call   ee71 <reduce_f5_up>
    db80:	89 03                	mov    DWORD PTR [rbx],eax
    db82:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
    db86:	48 8d 8d 40 ff ff ff 	lea    rcx,[rbp-0xc0]
    db8d:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
    db94:	8b b5 08 ff ff ff    	mov    esi,DWORD PTR [rbp-0xf8]
    db9a:	48 8b 85 f8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x108]
    dba1:	49 89 f8             	mov    r8,rdi
    dba4:	48 89 c7             	mov    rdi,rax
    dba7:	e8 6e 0b 00 00       	call   e71a <decompose_f5_ext_stem_d0>
    dbac:	89 85 1c ff ff ff    	mov    DWORD PTR [rbp-0xe4],eax
    dbb2:	8b 85 08 ff ff ff    	mov    eax,DWORD PTR [rbp-0xf8]
    dbb8:	48 98                	cdqe   
    dbba:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    dbc2:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    dbc9:	48 01 d0             	add    rax,rdx
    dbcc:	8b 00                	mov    eax,DWORD PTR [rax]
    dbce:	8b 95 08 ff ff ff    	mov    edx,DWORD PTR [rbp-0xf8]
    dbd4:	48 63 d2             	movsxd rdx,edx
    dbd7:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
    dbdf:	48 8b 95 20 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe0]
    dbe6:	48 01 ca             	add    rdx,rcx
    dbe9:	39 85 1c ff ff ff    	cmp    DWORD PTR [rbp-0xe4],eax
    dbef:	0f 4e 85 1c ff ff ff 	cmovle eax,DWORD PTR [rbp-0xe4]
    dbf6:	89 02                	mov    DWORD PTR [rdx],eax
    dbf8:	83 bd 14 ff ff ff 00 	cmp    DWORD PTR [rbp-0xec],0x0
    dbff:	74 76                	je     dc77 <vrna_E_ext_loop_5+0x59f>
    dc01:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
    dc05:	48 8d 8d 40 ff ff ff 	lea    rcx,[rbp-0xc0]
    dc0c:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
    dc13:	8b b5 08 ff ff ff    	mov    esi,DWORD PTR [rbp-0xf8]
    dc19:	48 8b 85 f8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x108]
    dc20:	49 89 f8             	mov    r8,rdi
    dc23:	48 89 c7             	mov    rdi,rax
    dc26:	e8 62 7c 00 00       	call   1588d <add_f5_gquad>
    dc2b:	89 85 1c ff ff ff    	mov    DWORD PTR [rbp-0xe4],eax
    dc31:	8b 85 08 ff ff ff    	mov    eax,DWORD PTR [rbp-0xf8]
    dc37:	48 98                	cdqe   
    dc39:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    dc41:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    dc48:	48 01 d0             	add    rax,rdx
    dc4b:	8b 00                	mov    eax,DWORD PTR [rax]
    dc4d:	8b 95 08 ff ff ff    	mov    edx,DWORD PTR [rbp-0xf8]
    dc53:	48 63 d2             	movsxd rdx,edx
    dc56:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
    dc5e:	48 8b 95 20 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe0]
    dc65:	48 01 ca             	add    rdx,rcx
    dc68:	39 85 1c ff ff ff    	cmp    DWORD PTR [rbp-0xe4],eax
    dc6e:	0f 4e 85 1c ff ff ff 	cmovle eax,DWORD PTR [rbp-0xe4]
    dc75:	89 02                	mov    DWORD PTR [rdx],eax
    dc77:	48 83 bd 30 ff ff ff 00 	cmp    QWORD PTR [rbp-0xd0],0x0
    dc7f:	0f 84 8a 00 00 00    	je     dd0f <vrna_E_ext_loop_5+0x637>
    dc85:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    dc8c:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    dc90:	48 85 c0             	test   rax,rax
    dc93:	74 7a                	je     dd0f <vrna_E_ext_loop_5+0x637>
    dc95:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    dc9c:	4c 8b 40 08          	mov    r8,QWORD PTR [rax+0x8]
    dca0:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    dca7:	48 8b 48 58          	mov    rcx,QWORD PTR [rax+0x58]
    dcab:	8b 95 08 ff ff ff    	mov    edx,DWORD PTR [rbp-0xf8]
    dcb1:	48 8b 85 f8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x108]
    dcb8:	be 01 00 00 00       	mov    esi,0x1
    dcbd:	48 89 c7             	mov    rdi,rax
    dcc0:	41 ff d0             	call   r8
    dcc3:	89 85 1c ff ff ff    	mov    DWORD PTR [rbp-0xe4],eax
    dcc9:	8b 85 08 ff ff ff    	mov    eax,DWORD PTR [rbp-0xf8]
    dccf:	48 98                	cdqe   
    dcd1:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    dcd9:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    dce0:	48 01 d0             	add    rax,rdx
    dce3:	8b 00                	mov    eax,DWORD PTR [rax]
    dce5:	8b 95 08 ff ff ff    	mov    edx,DWORD PTR [rbp-0xf8]
    dceb:	48 63 d2             	movsxd rdx,edx
    dcee:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
    dcf6:	48 8b 95 20 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe0]
    dcfd:	48 01 ca             	add    rdx,rcx
    dd00:	39 85 1c ff ff ff    	cmp    DWORD PTR [rbp-0xe4],eax
    dd06:	0f 4e 85 1c ff ff ff 	cmovle eax,DWORD PTR [rbp-0xe4]
    dd0d:	89 02                	mov    DWORD PTR [rdx],eax
    dd0f:	83 85 08 ff ff ff 01 	add    DWORD PTR [rbp-0xf8],0x1
    dd16:	8b 85 08 ff ff ff    	mov    eax,DWORD PTR [rbp-0xf8]
    dd1c:	3b 85 0c ff ff ff    	cmp    eax,DWORD PTR [rbp-0xf4]
    dd22:	0f 8e 13 fe ff ff    	jle    db3b <vrna_E_ext_loop_5+0x463>
    dd28:	e9 02 02 00 00       	jmp    df2f <vrna_E_ext_loop_5+0x857>
    dd2d:	8b 85 18 ff ff ff    	mov    eax,DWORD PTR [rbp-0xe8]
    dd33:	83 c0 02             	add    eax,0x2
    dd36:	89 85 08 ff ff ff    	mov    DWORD PTR [rbp-0xf8],eax
    dd3c:	e9 db 01 00 00       	jmp    df1c <vrna_E_ext_loop_5+0x844>
    dd41:	8b 85 08 ff ff ff    	mov    eax,DWORD PTR [rbp-0xf8]
    dd47:	48 98                	cdqe   
    dd49:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    dd51:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    dd58:	48 8d 1c 02          	lea    rbx,[rdx+rax*1]
    dd5c:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
    dd60:	48 8d 8d 40 ff ff ff 	lea    rcx,[rbp-0xc0]
    dd67:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
    dd6e:	8b b5 08 ff ff ff    	mov    esi,DWORD PTR [rbp-0xf8]
    dd74:	48 8b 85 f8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x108]
    dd7b:	49 89 f8             	mov    r8,rdi
    dd7e:	48 89 c7             	mov    rdi,rax
    dd81:	e8 eb 10 00 00       	call   ee71 <reduce_f5_up>
    dd86:	89 03                	mov    DWORD PTR [rbx],eax
    dd88:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
    dd8c:	48 8d 8d 40 ff ff ff 	lea    rcx,[rbp-0xc0]
    dd93:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
    dd9a:	8b b5 08 ff ff ff    	mov    esi,DWORD PTR [rbp-0xf8]
    dda0:	48 8b 85 f8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x108]
    dda7:	49 89 f8             	mov    r8,rdi
    ddaa:	48 89 c7             	mov    rdi,rax
    ddad:	e8 04 0c 00 00       	call   e9b6 <decompose_f5_ext_stem_d1>
    ddb2:	89 85 1c ff ff ff    	mov    DWORD PTR [rbp-0xe4],eax
    ddb8:	8b 85 08 ff ff ff    	mov    eax,DWORD PTR [rbp-0xf8]
    ddbe:	48 98                	cdqe   
    ddc0:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    ddc8:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    ddcf:	48 01 d0             	add    rax,rdx
    ddd2:	8b 00                	mov    eax,DWORD PTR [rax]
    ddd4:	8b 95 08 ff ff ff    	mov    edx,DWORD PTR [rbp-0xf8]
    ddda:	48 63 d2             	movsxd rdx,edx
    dddd:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
    dde5:	48 8b 95 20 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe0]
    ddec:	48 01 ca             	add    rdx,rcx
    ddef:	39 85 1c ff ff ff    	cmp    DWORD PTR [rbp-0xe4],eax
    ddf5:	0f 4e 85 1c ff ff ff 	cmovle eax,DWORD PTR [rbp-0xe4]
    ddfc:	89 02                	mov    DWORD PTR [rdx],eax
    ddfe:	83 bd 14 ff ff ff 00 	cmp    DWORD PTR [rbp-0xec],0x0
    de05:	74 76                	je     de7d <vrna_E_ext_loop_5+0x7a5>
    de07:	48 8d 7d 80          	lea    rdi,[rbp-0x80]
    de0b:	48 8d 8d 40 ff ff ff 	lea    rcx,[rbp-0xc0]
    de12:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
    de19:	8b b5 08 ff ff ff    	mov    esi,DWORD PTR [rbp-0xf8]
    de1f:	48 8b 85 f8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x108]
    de26:	49 89 f8             	mov    r8,rdi
    de29:	48 89 c7             	mov    rdi,rax
    de2c:	e8 5c 7a 00 00       	call   1588d <add_f5_gquad>
    de31:	89 85 1c ff ff ff    	mov    DWORD PTR [rbp-0xe4],eax
    de37:	8b 85 08 ff ff ff    	mov    eax,DWORD PTR [rbp-0xf8]
    de3d:	48 98                	cdqe   
    de3f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    de47:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    de4e:	48 01 d0             	add    rax,rdx
    de51:	8b 00                	mov    eax,DWORD PTR [rax]
    de53:	8b 95 08 ff ff ff    	mov    edx,DWORD PTR [rbp-0xf8]
    de59:	48 63 d2             	movsxd rdx,edx
    de5c:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
    de64:	48 8b 95 20 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe0]
    de6b:	48 01 ca             	add    rdx,rcx
    de6e:	39 85 1c ff ff ff    	cmp    DWORD PTR [rbp-0xe4],eax
    de74:	0f 4e 85 1c ff ff ff 	cmovle eax,DWORD PTR [rbp-0xe4]
    de7b:	89 02                	mov    DWORD PTR [rdx],eax
    de7d:	48 83 bd 30 ff ff ff 00 	cmp    QWORD PTR [rbp-0xd0],0x0
    de85:	0f 84 8a 00 00 00    	je     df15 <vrna_E_ext_loop_5+0x83d>
    de8b:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    de92:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    de96:	48 85 c0             	test   rax,rax
    de99:	74 7a                	je     df15 <vrna_E_ext_loop_5+0x83d>
    de9b:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    dea2:	4c 8b 40 08          	mov    r8,QWORD PTR [rax+0x8]
    dea6:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    dead:	48 8b 48 58          	mov    rcx,QWORD PTR [rax+0x58]
    deb1:	8b 95 08 ff ff ff    	mov    edx,DWORD PTR [rbp-0xf8]
    deb7:	48 8b 85 f8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x108]
    debe:	be 01 00 00 00       	mov    esi,0x1
    dec3:	48 89 c7             	mov    rdi,rax
    dec6:	41 ff d0             	call   r8
    dec9:	89 85 1c ff ff ff    	mov    DWORD PTR [rbp-0xe4],eax
    decf:	8b 85 08 ff ff ff    	mov    eax,DWORD PTR [rbp-0xf8]
    ded5:	48 98                	cdqe   
    ded7:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    dedf:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    dee6:	48 01 d0             	add    rax,rdx
    dee9:	8b 00                	mov    eax,DWORD PTR [rax]
    deeb:	8b 95 08 ff ff ff    	mov    edx,DWORD PTR [rbp-0xf8]
    def1:	48 63 d2             	movsxd rdx,edx
    def4:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
    defc:	48 8b 95 20 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe0]
    df03:	48 01 ca             	add    rdx,rcx
    df06:	39 85 1c ff ff ff    	cmp    DWORD PTR [rbp-0xe4],eax
    df0c:	0f 4e 85 1c ff ff ff 	cmovle eax,DWORD PTR [rbp-0xe4]
    df13:	89 02                	mov    DWORD PTR [rdx],eax
    df15:	83 85 08 ff ff ff 01 	add    DWORD PTR [rbp-0xf8],0x1
    df1c:	8b 85 08 ff ff ff    	mov    eax,DWORD PTR [rbp-0xf8]
    df22:	3b 85 0c ff ff ff    	cmp    eax,DWORD PTR [rbp-0xf4]
    df28:	0f 8e 13 fe ff ff    	jle    dd41 <vrna_E_ext_loop_5+0x669>
    df2e:	90                   	nop
    df2f:	48 8d 45 80          	lea    rax,[rbp-0x80]
    df33:	48 89 c7             	mov    rdi,rax
    df36:	e8 8a da ff ff       	call   b9c5 <free_sc_wrapper>
    df3b:	8b 85 0c ff ff ff    	mov    eax,DWORD PTR [rbp-0xf4]
    df41:	48 98                	cdqe   
    df43:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    df4b:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    df52:	48 01 d0             	add    rax,rdx
    df55:	8b 00                	mov    eax,DWORD PTR [rax]
    df57:	eb 05                	jmp    df5e <vrna_E_ext_loop_5+0x886>
    df59:	b8 80 96 98 00       	mov    eax,0x989680
    df5e:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    df62:	64 48 33 1c 25 28 00 00 00 	xor    rbx,QWORD PTR fs:0x28
    df6b:	74 05                	je     df72 <vrna_E_ext_loop_5+0x89a>
    df6d:	e8 ee 58 ff ff       	call   3860 <__stack_chk_fail@plt>
    df72:	48 81 c4 08 01 00 00 	add    rsp,0x108
    df79:	5b                   	pop    rbx
    df7a:	5d                   	pop    rbp
    df7b:	c3                   	ret    

000000000000df7c <vrna_E_ext_loop_3>:
    df7c:	f3 0f 1e fa          	endbr64 
    df80:	55                   	push   rbp
    df81:	48 89 e5             	mov    rbp,rsp
    df84:	48 81 ec f0 00 00 00 	sub    rsp,0xf0
    df8b:	48 89 bd 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rdi
    df92:	89 b5 14 ff ff ff    	mov    DWORD PTR [rbp-0xec],esi
    df98:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
    dfa1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    dfa5:	31 c0                	xor    eax,eax
    dfa7:	48 83 bd 18 ff ff ff 00 	cmp    QWORD PTR [rbp-0xe8],0x0
    dfaf:	0f 84 1b 02 00 00    	je     e1d0 <vrna_E_ext_loop_3+0x254>
    dfb5:	c7 85 28 ff ff ff 80 96 98 00 	mov    DWORD PTR [rbp-0xd8],0x989680
    dfbf:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    dfc6:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    dfca:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    dfd1:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
    dfd8:	48 05 98 35 03 00    	add    rax,0x33598
    dfde:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    dfe5:	48 8b 85 40 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc0]
    dfec:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    dfef:	89 85 2c ff ff ff    	mov    DWORD PTR [rbp-0xd4],eax
    dff5:	48 8b 85 40 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc0]
    dffc:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    dfff:	89 85 30 ff ff ff    	mov    DWORD PTR [rbp-0xd0],eax
    e005:	48 8d 95 50 ff ff ff 	lea    rdx,[rbp-0xb0]
    e00c:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    e013:	48 89 d6             	mov    rsi,rdx
    e016:	48 89 c7             	mov    rdi,rax
    e019:	e8 a2 d4 ff ff       	call   b4c0 <prepare_hc_default_window>
    e01e:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    e025:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    e029:	8b 8d 14 ff ff ff    	mov    ecx,DWORD PTR [rbp-0xec]
    e02f:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    e036:	89 ce                	mov    esi,ecx
    e038:	48 89 c7             	mov    rdi,rax
    e03b:	e8 c4 d9 ff ff       	call   ba04 <init_sc_wrapper_f3>
    e040:	48 8d 7d 90          	lea    rdi,[rbp-0x70]
    e044:	48 8d 8d 50 ff ff ff 	lea    rcx,[rbp-0xb0]
    e04b:	48 8b 95 48 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xb8]
    e052:	8b b5 14 ff ff ff    	mov    esi,DWORD PTR [rbp-0xec]
    e058:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    e05f:	49 89 f8             	mov    r8,rdi
    e062:	48 89 c7             	mov    rdi,rax
    e065:	e8 2a 10 00 00       	call   f094 <reduce_f3_up>
    e06a:	89 85 28 ff ff ff    	mov    DWORD PTR [rbp-0xd8],eax
    e070:	83 bd 2c ff ff ff 00 	cmp    DWORD PTR [rbp-0xd4],0x0
    e077:	74 0e                	je     e087 <vrna_E_ext_loop_3+0x10b>
    e079:	83 bd 2c ff ff ff 02 	cmp    DWORD PTR [rbp-0xd4],0x2
    e080:	74 53                	je     e0d5 <vrna_E_ext_loop_3+0x159>
    e082:	e9 99 00 00 00       	jmp    e120 <vrna_E_ext_loop_3+0x1a4>
    e087:	48 8d 7d 90          	lea    rdi,[rbp-0x70]
    e08b:	48 8d 8d 50 ff ff ff 	lea    rcx,[rbp-0xb0]
    e092:	48 8b 95 48 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xb8]
    e099:	8b b5 14 ff ff ff    	mov    esi,DWORD PTR [rbp-0xec]
    e09f:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    e0a6:	49 89 f8             	mov    r8,rdi
    e0a9:	48 89 c7             	mov    rdi,rax
    e0ac:	e8 e3 06 00 00       	call   e794 <decompose_f3_ext_stem_d0>
    e0b1:	89 85 34 ff ff ff    	mov    DWORD PTR [rbp-0xcc],eax
    e0b7:	8b 85 28 ff ff ff    	mov    eax,DWORD PTR [rbp-0xd8]
    e0bd:	39 85 34 ff ff ff    	cmp    DWORD PTR [rbp-0xcc],eax
    e0c3:	0f 4e 85 34 ff ff ff 	cmovle eax,DWORD PTR [rbp-0xcc]
    e0ca:	89 85 28 ff ff ff    	mov    DWORD PTR [rbp-0xd8],eax
    e0d0:	e9 95 00 00 00       	jmp    e16a <vrna_E_ext_loop_3+0x1ee>
    e0d5:	48 8d 7d 90          	lea    rdi,[rbp-0x70]
    e0d9:	48 8d 8d 50 ff ff ff 	lea    rcx,[rbp-0xb0]
    e0e0:	48 8b 95 48 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xb8]
    e0e7:	8b b5 14 ff ff ff    	mov    esi,DWORD PTR [rbp-0xec]
    e0ed:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    e0f4:	49 89 f8             	mov    r8,rdi
    e0f7:	48 89 c7             	mov    rdi,rax
    e0fa:	e8 e3 07 00 00       	call   e8e2 <decompose_f3_ext_stem_d2>
    e0ff:	89 85 34 ff ff ff    	mov    DWORD PTR [rbp-0xcc],eax
    e105:	8b 85 28 ff ff ff    	mov    eax,DWORD PTR [rbp-0xd8]
    e10b:	39 85 34 ff ff ff    	cmp    DWORD PTR [rbp-0xcc],eax
    e111:	0f 4e 85 34 ff ff ff 	cmovle eax,DWORD PTR [rbp-0xcc]
    e118:	89 85 28 ff ff ff    	mov    DWORD PTR [rbp-0xd8],eax
    e11e:	eb 4a                	jmp    e16a <vrna_E_ext_loop_3+0x1ee>
    e120:	48 8d 7d 90          	lea    rdi,[rbp-0x70]
    e124:	48 8d 8d 50 ff ff ff 	lea    rcx,[rbp-0xb0]
    e12b:	48 8b 95 48 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xb8]
    e132:	8b b5 14 ff ff ff    	mov    esi,DWORD PTR [rbp-0xec]
    e138:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    e13f:	49 89 f8             	mov    r8,rdi
    e142:	48 89 c7             	mov    rdi,rax
    e145:	e8 2f 0a 00 00       	call   eb79 <decompose_f3_ext_stem_d1>
    e14a:	89 85 34 ff ff ff    	mov    DWORD PTR [rbp-0xcc],eax
    e150:	8b 85 28 ff ff ff    	mov    eax,DWORD PTR [rbp-0xd8]
    e156:	39 85 34 ff ff ff    	cmp    DWORD PTR [rbp-0xcc],eax
    e15c:	0f 4e 85 34 ff ff ff 	cmovle eax,DWORD PTR [rbp-0xcc]
    e163:	89 85 28 ff ff ff    	mov    DWORD PTR [rbp-0xd8],eax
    e169:	90                   	nop
    e16a:	83 bd 30 ff ff ff 00 	cmp    DWORD PTR [rbp-0xd0],0x0
    e171:	74 49                	je     e1bc <vrna_E_ext_loop_3+0x240>
    e173:	48 8d 7d 90          	lea    rdi,[rbp-0x70]
    e177:	48 8d 8d 50 ff ff ff 	lea    rcx,[rbp-0xb0]
    e17e:	48 8b 95 48 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xb8]
    e185:	8b b5 14 ff ff ff    	mov    esi,DWORD PTR [rbp-0xec]
    e18b:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    e192:	49 89 f8             	mov    r8,rdi
    e195:	48 89 c7             	mov    rdi,rax
    e198:	e8 3e 78 00 00       	call   159db <add_f3_gquad>
    e19d:	89 85 34 ff ff ff    	mov    DWORD PTR [rbp-0xcc],eax
    e1a3:	8b 85 28 ff ff ff    	mov    eax,DWORD PTR [rbp-0xd8]
    e1a9:	39 85 34 ff ff ff    	cmp    DWORD PTR [rbp-0xcc],eax
    e1af:	0f 4e 85 34 ff ff ff 	cmovle eax,DWORD PTR [rbp-0xcc]
    e1b6:	89 85 28 ff ff ff    	mov    DWORD PTR [rbp-0xd8],eax
    e1bc:	48 8d 45 90          	lea    rax,[rbp-0x70]
    e1c0:	48 89 c7             	mov    rdi,rax
    e1c3:	e8 c4 dc ff ff       	call   be8c <free_sc_wrapper_f3>
    e1c8:	8b 85 28 ff ff ff    	mov    eax,DWORD PTR [rbp-0xd8]
    e1ce:	eb 05                	jmp    e1d5 <vrna_E_ext_loop_3+0x259>
    e1d0:	b8 80 96 98 00       	mov    eax,0x989680
    e1d5:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    e1d9:	64 48 33 0c 25 28 00 00 00 	xor    rcx,QWORD PTR fs:0x28
    e1e2:	74 05                	je     e1e9 <vrna_E_ext_loop_3+0x26d>
    e1e4:	e8 77 56 ff ff       	call   3860 <__stack_chk_fail@plt>
    e1e9:	c9                   	leave  
    e1ea:	c3                   	ret    

000000000000e1eb <vrna_E_ext_stem>:
    e1eb:	f3 0f 1e fa          	endbr64 
    e1ef:	55                   	push   rbp
    e1f0:	48 89 e5             	mov    rbp,rsp
    e1f3:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    e1f6:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
    e1f9:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
    e1fc:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
    e200:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    e207:	83 7d e8 00          	cmp    DWORD PTR [rbp-0x18],0x0
    e20b:	78 4d                	js     e25a <vrna_E_ext_stem+0x6f>
    e20d:	83 7d e4 00          	cmp    DWORD PTR [rbp-0x1c],0x0
    e211:	78 47                	js     e25a <vrna_E_ext_stem+0x6f>
    e213:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
    e217:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    e21a:	48 63 f8             	movsxd rdi,eax
    e21d:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
    e220:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
    e223:	48 63 c8             	movsxd rcx,eax
    e226:	48 89 d0             	mov    rax,rdx
    e229:	48 c1 e0 02          	shl    rax,0x2
    e22d:	48 01 d0             	add    rax,rdx
    e230:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    e238:	48 01 d0             	add    rax,rdx
    e23b:	48 89 ca             	mov    rdx,rcx
    e23e:	48 c1 e2 02          	shl    rdx,0x2
    e242:	48 01 ca             	add    rdx,rcx
    e245:	48 01 d0             	add    rax,rdx
    e248:	48 01 f8             	add    rax,rdi
    e24b:	48 05 9c 00 00 00    	add    rax,0x9c
    e251:	8b 44 86 08          	mov    eax,DWORD PTR [rsi+rax*4+0x8]
    e255:	01 45 fc             	add    DWORD PTR [rbp-0x4],eax
    e258:	eb 5c                	jmp    e2b6 <vrna_E_ext_stem+0xcb>
    e25a:	83 7d e8 00          	cmp    DWORD PTR [rbp-0x18],0x0
    e25e:	78 29                	js     e289 <vrna_E_ext_stem+0x9e>
    e260:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    e264:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
    e267:	48 63 f0             	movsxd rsi,eax
    e26a:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
    e26d:	48 89 d0             	mov    rax,rdx
    e270:	48 c1 e0 02          	shl    rax,0x2
    e274:	48 01 d0             	add    rax,rdx
    e277:	48 01 f0             	add    rax,rsi
    e27a:	48 05 4c 05 00 00    	add    rax,0x54c
    e280:	8b 44 81 08          	mov    eax,DWORD PTR [rcx+rax*4+0x8]
    e284:	01 45 fc             	add    DWORD PTR [rbp-0x4],eax
    e287:	eb 2d                	jmp    e2b6 <vrna_E_ext_stem+0xcb>
    e289:	83 7d e4 00          	cmp    DWORD PTR [rbp-0x1c],0x0
    e28d:	78 27                	js     e2b6 <vrna_E_ext_stem+0xcb>
    e28f:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    e293:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    e296:	48 63 f0             	movsxd rsi,eax
    e299:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
    e29c:	48 89 d0             	mov    rax,rdx
    e29f:	48 c1 e0 02          	shl    rax,0x2
    e2a3:	48 01 d0             	add    rax,rdx
    e2a6:	48 01 f0             	add    rax,rsi
    e2a9:	48 05 74 05 00 00    	add    rax,0x574
    e2af:	8b 44 81 08          	mov    eax,DWORD PTR [rcx+rax*4+0x8]
    e2b3:	01 45 fc             	add    DWORD PTR [rbp-0x4],eax
    e2b6:	83 7d ec 02          	cmp    DWORD PTR [rbp-0x14],0x2
    e2ba:	76 0d                	jbe    e2c9 <vrna_E_ext_stem+0xde>
    e2bc:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    e2c0:	8b 80 d4 1d 03 00    	mov    eax,DWORD PTR [rax+0x31dd4]
    e2c6:	01 45 fc             	add    DWORD PTR [rbp-0x4],eax
    e2c9:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    e2cc:	5d                   	pop    rbp
    e2cd:	c3                   	ret    

000000000000e2ce <vrna_E_ext_loop>:
    e2ce:	f3 0f 1e fa          	endbr64 
    e2d2:	55                   	push   rbp
    e2d3:	48 89 e5             	mov    rbp,rsp
    e2d6:	48 81 ec a0 00 00 00 	sub    rsp,0xa0
    e2dd:	48 89 bd 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rdi
    e2e4:	89 b5 64 ff ff ff    	mov    DWORD PTR [rbp-0x9c],esi
    e2ea:	89 95 60 ff ff ff    	mov    DWORD PTR [rbp-0xa0],edx
    e2f0:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
    e2f9:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    e2fd:	31 c0                	xor    eax,eax
    e2ff:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    e306:	48 8b 80 b8 00 00 00 	mov    rax,QWORD PTR [rax+0xb8]
    e30d:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    e311:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    e318:	48 8b 40 78          	mov    rax,QWORD PTR [rax+0x78]
    e31c:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
    e320:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    e327:	48 8b 80 c8 00 00 00 	mov    rax,QWORD PTR [rax+0xc8]
    e32e:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
    e332:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    e339:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    e33d:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    e341:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
    e345:	48 05 98 35 03 00    	add    rax,0x33598
    e34b:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    e34f:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    e356:	48 8b 80 d8 00 00 00 	mov    rax,QWORD PTR [rax+0xd8]
    e35d:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    e361:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    e365:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    e36c:	48 89 d6             	mov    rsi,rdx
    e36f:	48 89 c7             	mov    rdi,rax
    e372:	e8 83 d0 ff ff       	call   b3fa <prepare_hc_default>
    e377:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    e37b:	c7 85 7c ff ff ff 80 96 98 00 	mov    DWORD PTR [rbp-0x84],0x989680
    e385:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa0]
    e38b:	48 98                	cdqe   
    e38d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    e395:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    e399:	48 01 d0             	add    rax,rdx
    e39c:	8b 10                	mov    edx,DWORD PTR [rax]
    e39e:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
    e3a4:	01 d0                	add    eax,edx
    e3a6:	89 45 80             	mov    DWORD PTR [rbp-0x80],eax
    e3a9:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
    e3ad:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    e3b0:	48 89 d6             	mov    rsi,rdx
    e3b3:	89 c7                	mov    edi,eax
    e3b5:	e8 81 f7 01 00       	call   2db3b <vrna_get_ptype>
    e3ba:	89 45 84             	mov    DWORD PTR [rbp-0x7c],eax
    e3bd:	48 8d 7d c0          	lea    rdi,[rbp-0x40]
    e3c1:	8b 8d 60 ff ff ff    	mov    ecx,DWORD PTR [rbp-0xa0]
    e3c7:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
    e3cd:	8b b5 60 ff ff ff    	mov    esi,DWORD PTR [rbp-0xa0]
    e3d3:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
    e3d9:	4c 8b 55 b8          	mov    r10,QWORD PTR [rbp-0x48]
    e3dd:	49 89 f9             	mov    r9,rdi
    e3e0:	41 b8 0e 00 00 00    	mov    r8d,0xe
    e3e6:	89 c7                	mov    edi,eax
    e3e8:	41 ff d2             	call   r10
    e3eb:	84 c0                	test   al,al
    e3ed:	0f 84 cd 00 00 00    	je     e4c0 <vrna_E_ext_loop+0x1f2>
    e3f3:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    e3f7:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    e3fa:	83 f8 02             	cmp    eax,0x2
    e3fd:	75 4f                	jne    e44e <vrna_E_ext_loop+0x180>
    e3ff:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa0]
    e405:	48 98                	cdqe   
    e407:	48 83 c0 01          	add    rax,0x1
    e40b:	48 8d 14 00          	lea    rdx,[rax+rax*1]
    e40f:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    e413:	48 01 d0             	add    rax,rdx
    e416:	0f b7 00             	movzx  eax,WORD PTR [rax]
    e419:	0f bf d0             	movsx  edx,ax
    e41c:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
    e422:	48 98                	cdqe   
    e424:	48 01 c0             	add    rax,rax
    e427:	48 8d 48 fe          	lea    rcx,[rax-0x2]
    e42b:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    e42f:	48 01 c8             	add    rax,rcx
    e432:	0f b7 00             	movzx  eax,WORD PTR [rax]
    e435:	0f bf f0             	movsx  esi,ax
    e438:	48 8b 4d a0          	mov    rcx,QWORD PTR [rbp-0x60]
    e43c:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    e43f:	89 c7                	mov    edi,eax
    e441:	e8 a5 fd ff ff       	call   e1eb <vrna_E_ext_stem>
    e446:	89 85 7c ff ff ff    	mov    DWORD PTR [rbp-0x84],eax
    e44c:	eb 22                	jmp    e470 <vrna_E_ext_loop+0x1a2>
    e44e:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
    e452:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    e455:	48 89 d1             	mov    rcx,rdx
    e458:	ba ff ff ff ff       	mov    edx,0xffffffff
    e45d:	be ff ff ff ff       	mov    esi,0xffffffff
    e462:	89 c7                	mov    edi,eax
    e464:	e8 82 fd ff ff       	call   e1eb <vrna_E_ext_stem>
    e469:	89 85 7c ff ff ff    	mov    DWORD PTR [rbp-0x84],eax
    e46f:	90                   	nop
    e470:	48 83 7d b0 00       	cmp    QWORD PTR [rbp-0x50],0x0
    e475:	74 49                	je     e4c0 <vrna_E_ext_loop+0x1f2>
    e477:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    e47b:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    e47f:	48 85 c0             	test   rax,rax
    e482:	74 3c                	je     e4c0 <vrna_E_ext_loop+0x1f2>
    e484:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    e488:	4c 8b 50 50          	mov    r10,QWORD PTR [rax+0x50]
    e48c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    e490:	48 8b 78 68          	mov    rdi,QWORD PTR [rax+0x68]
    e494:	8b 8d 60 ff ff ff    	mov    ecx,DWORD PTR [rbp-0xa0]
    e49a:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
    e4a0:	8b b5 60 ff ff ff    	mov    esi,DWORD PTR [rbp-0xa0]
    e4a6:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
    e4ac:	49 89 f9             	mov    r9,rdi
    e4af:	41 b8 0e 00 00 00    	mov    r8d,0xe
    e4b5:	89 c7                	mov    edi,eax
    e4b7:	41 ff d2             	call   r10
    e4ba:	01 85 7c ff ff ff    	add    DWORD PTR [rbp-0x84],eax
    e4c0:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    e4c4:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    e4c7:	83 e0 01             	and    eax,0x1
    e4ca:	85 c0                	test   eax,eax
    e4cc:	0f 84 2c 02 00 00    	je     e6fe <vrna_E_ext_loop+0x430>
    e4d2:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa0]
    e4d8:	48 98                	cdqe   
    e4da:	48 c1 e0 02          	shl    rax,0x2
    e4de:	48 8d 50 fc          	lea    rdx,[rax-0x4]
    e4e2:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    e4e6:	48 01 d0             	add    rax,rdx
    e4e9:	8b 10                	mov    edx,DWORD PTR [rax]
    e4eb:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
    e4f1:	01 d0                	add    eax,edx
    e4f3:	89 45 80             	mov    DWORD PTR [rbp-0x80],eax
    e4f6:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa0]
    e4fc:	8d 48 ff             	lea    ecx,[rax-0x1]
    e4ff:	48 8d 7d c0          	lea    rdi,[rbp-0x40]
    e503:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
    e509:	8b b5 60 ff ff ff    	mov    esi,DWORD PTR [rbp-0xa0]
    e50f:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
    e515:	4c 8b 55 b8          	mov    r10,QWORD PTR [rbp-0x48]
    e519:	49 89 f9             	mov    r9,rdi
    e51c:	41 b8 0e 00 00 00    	mov    r8d,0xe
    e522:	89 c7                	mov    edi,eax
    e524:	41 ff d2             	call   r10
    e527:	84 c0                	test   al,al
    e529:	0f 84 b2 00 00 00    	je     e5e1 <vrna_E_ext_loop+0x313>
    e52f:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
    e533:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    e536:	48 89 d6             	mov    rsi,rdx
    e539:	89 c7                	mov    edi,eax
    e53b:	e8 fb f5 01 00       	call   2db3b <vrna_get_ptype>
    e540:	89 45 84             	mov    DWORD PTR [rbp-0x7c],eax
    e543:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa0]
    e549:	48 98                	cdqe   
    e54b:	48 8d 14 00          	lea    rdx,[rax+rax*1]
    e54f:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    e553:	48 01 d0             	add    rax,rdx
    e556:	0f b7 00             	movzx  eax,WORD PTR [rax]
    e559:	0f bf d0             	movsx  edx,ax
    e55c:	48 8b 4d a0          	mov    rcx,QWORD PTR [rbp-0x60]
    e560:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    e563:	be ff ff ff ff       	mov    esi,0xffffffff
    e568:	89 c7                	mov    edi,eax
    e56a:	e8 7c fc ff ff       	call   e1eb <vrna_E_ext_stem>
    e56f:	89 85 78 ff ff ff    	mov    DWORD PTR [rbp-0x88],eax
    e575:	48 83 7d b0 00       	cmp    QWORD PTR [rbp-0x50],0x0
    e57a:	74 4c                	je     e5c8 <vrna_E_ext_loop+0x2fa>
    e57c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    e580:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    e584:	48 85 c0             	test   rax,rax
    e587:	74 3f                	je     e5c8 <vrna_E_ext_loop+0x2fa>
    e589:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    e58d:	4c 8b 50 50          	mov    r10,QWORD PTR [rax+0x50]
    e591:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    e595:	48 8b 78 68          	mov    rdi,QWORD PTR [rax+0x68]
    e599:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa0]
    e59f:	8d 48 ff             	lea    ecx,[rax-0x1]
    e5a2:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
    e5a8:	8b b5 60 ff ff ff    	mov    esi,DWORD PTR [rbp-0xa0]
    e5ae:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
    e5b4:	49 89 f9             	mov    r9,rdi
    e5b7:	41 b8 0e 00 00 00    	mov    r8d,0xe
    e5bd:	89 c7                	mov    edi,eax
    e5bf:	41 ff d2             	call   r10
    e5c2:	01 85 78 ff ff ff    	add    DWORD PTR [rbp-0x88],eax
    e5c8:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
    e5ce:	39 85 78 ff ff ff    	cmp    DWORD PTR [rbp-0x88],eax
    e5d4:	0f 4e 85 78 ff ff ff 	cmovle eax,DWORD PTR [rbp-0x88]
    e5db:	89 85 7c ff ff ff    	mov    DWORD PTR [rbp-0x84],eax
    e5e1:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa0]
    e5e7:	48 98                	cdqe   
    e5e9:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    e5f1:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    e5f5:	48 01 d0             	add    rax,rdx
    e5f8:	8b 10                	mov    edx,DWORD PTR [rax]
    e5fa:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
    e600:	01 d0                	add    eax,edx
    e602:	83 c0 01             	add    eax,0x1
    e605:	89 45 80             	mov    DWORD PTR [rbp-0x80],eax
    e608:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
    e60e:	8d 78 01             	lea    edi,[rax+0x1]
    e611:	48 8d 4d c0          	lea    rcx,[rbp-0x40]
    e615:	8b 95 60 ff ff ff    	mov    edx,DWORD PTR [rbp-0xa0]
    e61b:	8b b5 60 ff ff ff    	mov    esi,DWORD PTR [rbp-0xa0]
    e621:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
    e627:	4c 8b 55 b8          	mov    r10,QWORD PTR [rbp-0x48]
    e62b:	49 89 c9             	mov    r9,rcx
    e62e:	41 b8 0e 00 00 00    	mov    r8d,0xe
    e634:	89 d1                	mov    ecx,edx
    e636:	89 fa                	mov    edx,edi
    e638:	89 c7                	mov    edi,eax
    e63a:	41 ff d2             	call   r10
    e63d:	84 c0                	test   al,al
    e63f:	0f 84 b9 00 00 00    	je     e6fe <vrna_E_ext_loop+0x430>
    e645:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
    e649:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    e64c:	48 89 d6             	mov    rsi,rdx
    e64f:	89 c7                	mov    edi,eax
    e651:	e8 e5 f4 01 00       	call   2db3b <vrna_get_ptype>
    e656:	89 45 84             	mov    DWORD PTR [rbp-0x7c],eax
    e659:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
    e65f:	48 98                	cdqe   
    e661:	48 8d 14 00          	lea    rdx,[rax+rax*1]
    e665:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    e669:	48 01 d0             	add    rax,rdx
    e66c:	0f b7 00             	movzx  eax,WORD PTR [rax]
    e66f:	0f bf f0             	movsx  esi,ax
    e672:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
    e676:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    e679:	48 89 d1             	mov    rcx,rdx
    e67c:	ba ff ff ff ff       	mov    edx,0xffffffff
    e681:	89 c7                	mov    edi,eax
    e683:	e8 63 fb ff ff       	call   e1eb <vrna_E_ext_stem>
    e688:	89 85 78 ff ff ff    	mov    DWORD PTR [rbp-0x88],eax
    e68e:	48 83 7d b0 00       	cmp    QWORD PTR [rbp-0x50],0x0
    e693:	74 50                	je     e6e5 <vrna_E_ext_loop+0x417>
    e695:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    e699:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    e69d:	48 85 c0             	test   rax,rax
    e6a0:	74 43                	je     e6e5 <vrna_E_ext_loop+0x417>
    e6a2:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    e6a6:	4c 8b 50 50          	mov    r10,QWORD PTR [rax+0x50]
    e6aa:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    e6ae:	48 8b 48 68          	mov    rcx,QWORD PTR [rax+0x68]
    e6b2:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
    e6b8:	8d 78 01             	lea    edi,[rax+0x1]
    e6bb:	8b 95 60 ff ff ff    	mov    edx,DWORD PTR [rbp-0xa0]
    e6c1:	8b b5 60 ff ff ff    	mov    esi,DWORD PTR [rbp-0xa0]
    e6c7:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
    e6cd:	49 89 c9             	mov    r9,rcx
    e6d0:	41 b8 0e 00 00 00    	mov    r8d,0xe
    e6d6:	89 d1                	mov    ecx,edx
    e6d8:	89 fa                	mov    edx,edi
    e6da:	89 c7                	mov    edi,eax
    e6dc:	41 ff d2             	call   r10
    e6df:	01 85 78 ff ff ff    	add    DWORD PTR [rbp-0x88],eax
    e6e5:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
    e6eb:	39 85 78 ff ff ff    	cmp    DWORD PTR [rbp-0x88],eax
    e6f1:	0f 4e 85 78 ff ff ff 	cmovle eax,DWORD PTR [rbp-0x88]
    e6f8:	89 85 7c ff ff ff    	mov    DWORD PTR [rbp-0x84],eax
    e6fe:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
    e704:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
    e708:	64 48 33 3c 25 28 00 00 00 	xor    rdi,QWORD PTR fs:0x28
    e711:	74 05                	je     e718 <vrna_E_ext_loop+0x44a>
    e713:	e8 48 51 ff ff       	call   3860 <__stack_chk_fail@plt>
    e718:	c9                   	leave  
    e719:	c3                   	ret    

000000000000e71a <decompose_f5_ext_stem_d0>:
    e71a:	55                   	push   rbp
    e71b:	48 89 e5             	mov    rbp,rsp
    e71e:	48 83 ec 40          	sub    rsp,0x40
    e722:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    e726:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    e729:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    e72d:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    e731:	4c 89 45 c8          	mov    QWORD PTR [rbp-0x38],r8
    e735:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    e739:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    e73d:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    e741:	8b 75 e4             	mov    esi,DWORD PTR [rbp-0x1c]
    e744:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    e748:	49 89 f8             	mov    r8,rdi
    e74b:	48 89 c7             	mov    rdi,rax
    e74e:	e8 79 0b 00 00       	call   f2cc <get_stem_contributions_d0>
    e753:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    e757:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    e75b:	8b 4d e4             	mov    ecx,DWORD PTR [rbp-0x1c]
    e75e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    e762:	89 ce                	mov    esi,ecx
    e764:	48 89 c7             	mov    rdi,rax
    e767:	e8 ca 73 00 00       	call   15b36 <decompose_f5_ext_stem>
    e76c:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    e76f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e773:	48 83 c0 04          	add    rax,0x4
    e777:	8b 00                	mov    eax,DWORD PTR [rax]
    e779:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    e77c:	0f 4e 45 f4          	cmovle eax,DWORD PTR [rbp-0xc]
    e780:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    e783:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e787:	48 89 c7             	mov    rdi,rax
    e78a:	e8 21 51 ff ff       	call   38b0 <free@plt>
    e78f:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    e792:	c9                   	leave  
    e793:	c3                   	ret    

000000000000e794 <decompose_f3_ext_stem_d0>:
    e794:	55                   	push   rbp
    e795:	48 89 e5             	mov    rbp,rsp
    e798:	48 83 ec 50          	sub    rsp,0x50
    e79c:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    e7a0:	89 75 d4             	mov    DWORD PTR [rbp-0x2c],esi
    e7a3:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    e7a7:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    e7ab:	4c 89 45 b8          	mov    QWORD PTR [rbp-0x48],r8
    e7af:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    e7b3:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    e7b6:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    e7b9:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    e7bd:	8b 80 60 01 00 00    	mov    eax,DWORD PTR [rax+0x160]
    e7c3:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    e7c6:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
    e7ca:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
    e7ce:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    e7d2:	8b 75 d4             	mov    esi,DWORD PTR [rbp-0x2c]
    e7d5:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    e7d9:	49 89 f8             	mov    r8,rdi
    e7dc:	48 89 c7             	mov    rdi,rax
    e7df:	e8 20 11 00 00       	call   f904 <f3_get_stem_contributions_d0>
    e7e4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    e7e8:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
    e7eb:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    e7ee:	01 d0                	add    eax,edx
    e7f0:	39 45 f0             	cmp    DWORD PTR [rbp-0x10],eax
    e7f3:	7f 08                	jg     e7fd <decompose_f3_ext_stem_d0+0x69>
    e7f5:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
    e7f8:	83 e8 01             	sub    eax,0x1
    e7fb:	eb 08                	jmp    e805 <decompose_f3_ext_stem_d0+0x71>
    e7fd:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
    e800:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    e803:	01 d0                	add    eax,edx
    e805:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    e809:	8b 75 d4             	mov    esi,DWORD PTR [rbp-0x2c]
    e80c:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    e810:	48 89 d1             	mov    rcx,rdx
    e813:	89 c2                	mov    edx,eax
    e815:	e8 89 73 00 00       	call   15ba3 <decompose_f3_ext_stem>
    e81a:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    e81d:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
    e820:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    e823:	01 d0                	add    eax,edx
    e825:	39 45 f0             	cmp    DWORD PTR [rbp-0x10],eax
    e828:	7f 20                	jg     e84a <decompose_f3_ext_stem_d0+0xb6>
    e82a:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
    e82d:	48 98                	cdqe   
    e82f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    e837:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e83b:	48 01 d0             	add    rax,rdx
    e83e:	8b 00                	mov    eax,DWORD PTR [rax]
    e840:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    e843:	0f 4e 45 ec          	cmovle eax,DWORD PTR [rbp-0x14]
    e847:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    e84a:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    e84d:	48 98                	cdqe   
    e84f:	48 c1 e0 02          	shl    rax,0x2
    e853:	48 01 45 f8          	add    QWORD PTR [rbp-0x8],rax
    e857:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e85b:	48 89 c7             	mov    rdi,rax
    e85e:	e8 4d 50 ff ff       	call   38b0 <free@plt>
    e863:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    e866:	c9                   	leave  
    e867:	c3                   	ret    

000000000000e868 <decompose_f5_ext_stem_d2>:
    e868:	55                   	push   rbp
    e869:	48 89 e5             	mov    rbp,rsp
    e86c:	48 83 ec 40          	sub    rsp,0x40
    e870:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    e874:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    e877:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    e87b:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    e87f:	4c 89 45 c8          	mov    QWORD PTR [rbp-0x38],r8
    e883:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    e887:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    e88b:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    e88f:	8b 75 e4             	mov    esi,DWORD PTR [rbp-0x1c]
    e892:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    e896:	49 89 f8             	mov    r8,rdi
    e899:	48 89 c7             	mov    rdi,rax
    e89c:	e8 34 17 00 00       	call   ffd5 <get_stem_contributions_d2>
    e8a1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    e8a5:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    e8a9:	8b 4d e4             	mov    ecx,DWORD PTR [rbp-0x1c]
    e8ac:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    e8b0:	89 ce                	mov    esi,ecx
    e8b2:	48 89 c7             	mov    rdi,rax
    e8b5:	e8 7c 72 00 00       	call   15b36 <decompose_f5_ext_stem>
    e8ba:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    e8bd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e8c1:	48 83 c0 04          	add    rax,0x4
    e8c5:	8b 00                	mov    eax,DWORD PTR [rax]
    e8c7:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    e8ca:	0f 4e 45 f4          	cmovle eax,DWORD PTR [rbp-0xc]
    e8ce:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    e8d1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e8d5:	48 89 c7             	mov    rdi,rax
    e8d8:	e8 d3 4f ff ff       	call   38b0 <free@plt>
    e8dd:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    e8e0:	c9                   	leave  
    e8e1:	c3                   	ret    

000000000000e8e2 <decompose_f3_ext_stem_d2>:
    e8e2:	55                   	push   rbp
    e8e3:	48 89 e5             	mov    rbp,rsp
    e8e6:	48 83 ec 50          	sub    rsp,0x50
    e8ea:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    e8ee:	89 75 d4             	mov    DWORD PTR [rbp-0x2c],esi
    e8f1:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    e8f5:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    e8f9:	4c 89 45 b8          	mov    QWORD PTR [rbp-0x48],r8
    e8fd:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    e901:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    e904:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    e907:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    e90b:	8b 80 60 01 00 00    	mov    eax,DWORD PTR [rax+0x160]
    e911:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    e914:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
    e918:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
    e91c:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    e920:	8b 75 d4             	mov    esi,DWORD PTR [rbp-0x2c]
    e923:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    e927:	49 89 f8             	mov    r8,rdi
    e92a:	48 89 c7             	mov    rdi,rax
    e92d:	e8 ce 21 00 00       	call   10b00 <f3_get_stem_contributions_d2>
    e932:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    e936:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
    e939:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    e93c:	01 d0                	add    eax,edx
    e93e:	39 45 f0             	cmp    DWORD PTR [rbp-0x10],eax
    e941:	7f 08                	jg     e94b <decompose_f3_ext_stem_d2+0x69>
    e943:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
    e946:	83 e8 01             	sub    eax,0x1
    e949:	eb 08                	jmp    e953 <decompose_f3_ext_stem_d2+0x71>
    e94b:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
    e94e:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    e951:	01 d0                	add    eax,edx
    e953:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    e957:	8b 75 d4             	mov    esi,DWORD PTR [rbp-0x2c]
    e95a:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    e95e:	48 89 d1             	mov    rcx,rdx
    e961:	89 c2                	mov    edx,eax
    e963:	e8 3b 72 00 00       	call   15ba3 <decompose_f3_ext_stem>
    e968:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    e96b:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
    e96e:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    e971:	01 d0                	add    eax,edx
    e973:	39 45 f0             	cmp    DWORD PTR [rbp-0x10],eax
    e976:	7f 20                	jg     e998 <decompose_f3_ext_stem_d2+0xb6>
    e978:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
    e97b:	48 98                	cdqe   
    e97d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    e985:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e989:	48 01 d0             	add    rax,rdx
    e98c:	8b 00                	mov    eax,DWORD PTR [rax]
    e98e:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    e991:	0f 4e 45 ec          	cmovle eax,DWORD PTR [rbp-0x14]
    e995:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    e998:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    e99b:	48 98                	cdqe   
    e99d:	48 c1 e0 02          	shl    rax,0x2
    e9a1:	48 01 45 f8          	add    QWORD PTR [rbp-0x8],rax
    e9a5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    e9a9:	48 89 c7             	mov    rdi,rax
    e9ac:	e8 ff 4e ff ff       	call   38b0 <free@plt>
    e9b1:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    e9b4:	c9                   	leave  
    e9b5:	c3                   	ret    

000000000000e9b6 <decompose_f5_ext_stem_d1>:
    e9b6:	55                   	push   rbp
    e9b7:	48 89 e5             	mov    rbp,rsp
    e9ba:	48 83 ec 40          	sub    rsp,0x40
    e9be:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    e9c2:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    e9c5:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    e9c9:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    e9cd:	4c 89 45 c8          	mov    QWORD PTR [rbp-0x38],r8
    e9d1:	c7 45 f0 80 96 98 00 	mov    DWORD PTR [rbp-0x10],0x989680
    e9d8:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    e9dc:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    e9e0:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    e9e4:	8b 75 e4             	mov    esi,DWORD PTR [rbp-0x1c]
    e9e7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    e9eb:	49 89 f8             	mov    r8,rdi
    e9ee:	48 89 c7             	mov    rdi,rax
    e9f1:	e8 d6 08 00 00       	call   f2cc <get_stem_contributions_d0>
    e9f6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    e9fa:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    e9fe:	8b 4d e4             	mov    ecx,DWORD PTR [rbp-0x1c]
    ea01:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    ea05:	89 ce                	mov    esi,ecx
    ea07:	48 89 c7             	mov    rdi,rax
    ea0a:	e8 27 71 00 00       	call   15b36 <decompose_f5_ext_stem>
    ea0f:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    ea12:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ea16:	48 83 c0 04          	add    rax,0x4
    ea1a:	8b 00                	mov    eax,DWORD PTR [rax]
    ea1c:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    ea1f:	0f 4e 45 f4          	cmovle eax,DWORD PTR [rbp-0xc]
    ea23:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    ea26:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ea2a:	48 89 c7             	mov    rdi,rax
    ea2d:	e8 7e 4e ff ff       	call   38b0 <free@plt>
    ea32:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
    ea35:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    ea38:	0f 4e 45 f4          	cmovle eax,DWORD PTR [rbp-0xc]
    ea3c:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    ea3f:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    ea43:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    ea47:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    ea4b:	8b 75 e4             	mov    esi,DWORD PTR [rbp-0x1c]
    ea4e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    ea52:	49 89 f8             	mov    r8,rdi
    ea55:	48 89 c7             	mov    rdi,rax
    ea58:	e8 42 2c 00 00       	call   1169f <f5_get_stem_contributions_d5>
    ea5d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ea61:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ea65:	8b 4d e4             	mov    ecx,DWORD PTR [rbp-0x1c]
    ea68:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    ea6c:	89 ce                	mov    esi,ecx
    ea6e:	48 89 c7             	mov    rdi,rax
    ea71:	e8 c0 70 00 00       	call   15b36 <decompose_f5_ext_stem>
    ea76:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    ea79:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ea7d:	48 83 c0 04          	add    rax,0x4
    ea81:	8b 00                	mov    eax,DWORD PTR [rax]
    ea83:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    ea86:	0f 4e 45 f4          	cmovle eax,DWORD PTR [rbp-0xc]
    ea8a:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    ea8d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ea91:	48 89 c7             	mov    rdi,rax
    ea94:	e8 17 4e ff ff       	call   38b0 <free@plt>
    ea99:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
    ea9c:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    ea9f:	0f 4e 45 f4          	cmovle eax,DWORD PTR [rbp-0xc]
    eaa3:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    eaa6:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    eaaa:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    eaae:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    eab2:	8b 75 e4             	mov    esi,DWORD PTR [rbp-0x1c]
    eab5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    eab9:	49 89 f8             	mov    r8,rdi
    eabc:	48 89 c7             	mov    rdi,rax
    eabf:	e8 cc 40 00 00       	call   12b90 <f5_get_stem_contributions_d3>
    eac4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    eac8:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    eacc:	8b 4d e4             	mov    ecx,DWORD PTR [rbp-0x1c]
    eacf:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    ead3:	89 ce                	mov    esi,ecx
    ead5:	48 89 c7             	mov    rdi,rax
    ead8:	e8 59 70 00 00       	call   15b36 <decompose_f5_ext_stem>
    eadd:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    eae0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    eae4:	48 83 c0 04          	add    rax,0x4
    eae8:	8b 00                	mov    eax,DWORD PTR [rax]
    eaea:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    eaed:	0f 4e 45 f4          	cmovle eax,DWORD PTR [rbp-0xc]
    eaf1:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    eaf4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    eaf8:	48 89 c7             	mov    rdi,rax
    eafb:	e8 b0 4d ff ff       	call   38b0 <free@plt>
    eb00:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
    eb03:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    eb06:	0f 4e 45 f4          	cmovle eax,DWORD PTR [rbp-0xc]
    eb0a:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    eb0d:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
    eb11:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    eb15:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    eb19:	8b 75 e4             	mov    esi,DWORD PTR [rbp-0x1c]
    eb1c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    eb20:	49 89 f8             	mov    r8,rdi
    eb23:	48 89 c7             	mov    rdi,rax
    eb26:	e8 74 55 00 00       	call   1409f <f5_get_stem_contributions_d53>
    eb2b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    eb2f:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    eb33:	8b 4d e4             	mov    ecx,DWORD PTR [rbp-0x1c]
    eb36:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    eb3a:	89 ce                	mov    esi,ecx
    eb3c:	48 89 c7             	mov    rdi,rax
    eb3f:	e8 f2 6f 00 00       	call   15b36 <decompose_f5_ext_stem>
    eb44:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    eb47:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    eb4b:	48 83 c0 04          	add    rax,0x4
    eb4f:	8b 00                	mov    eax,DWORD PTR [rax]
    eb51:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    eb54:	0f 4e 45 f4          	cmovle eax,DWORD PTR [rbp-0xc]
    eb58:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    eb5b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    eb5f:	48 89 c7             	mov    rdi,rax
    eb62:	e8 49 4d ff ff       	call   38b0 <free@plt>
    eb67:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
    eb6a:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    eb6d:	0f 4e 45 f4          	cmovle eax,DWORD PTR [rbp-0xc]
    eb71:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    eb74:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
    eb77:	c9                   	leave  
    eb78:	c3                   	ret    

000000000000eb79 <decompose_f3_ext_stem_d1>:
    eb79:	55                   	push   rbp
    eb7a:	48 89 e5             	mov    rbp,rsp
    eb7d:	48 83 ec 50          	sub    rsp,0x50
    eb81:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    eb85:	89 75 d4             	mov    DWORD PTR [rbp-0x2c],esi
    eb88:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    eb8c:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    eb90:	4c 89 45 b8          	mov    QWORD PTR [rbp-0x48],r8
    eb94:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    eb98:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    eb9b:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    eb9e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    eba2:	8b 80 60 01 00 00    	mov    eax,DWORD PTR [rax+0x160]
    eba8:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    ebab:	c7 45 f4 80 96 98 00 	mov    DWORD PTR [rbp-0xc],0x989680
    ebb2:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
    ebb6:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
    ebba:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    ebbe:	8b 75 d4             	mov    esi,DWORD PTR [rbp-0x2c]
    ebc1:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ebc5:	49 89 f8             	mov    r8,rdi
    ebc8:	48 89 c7             	mov    rdi,rax
    ebcb:	e8 34 0d 00 00       	call   f904 <f3_get_stem_contributions_d0>
    ebd0:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ebd4:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
    ebd7:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
    ebda:	01 d0                	add    eax,edx
    ebdc:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    ebdf:	7f 08                	jg     ebe9 <decompose_f3_ext_stem_d1+0x70>
    ebe1:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ebe4:	83 e8 01             	sub    eax,0x1
    ebe7:	eb 08                	jmp    ebf1 <decompose_f3_ext_stem_d1+0x78>
    ebe9:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
    ebec:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
    ebef:	01 d0                	add    eax,edx
    ebf1:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ebf5:	8b 75 d4             	mov    esi,DWORD PTR [rbp-0x2c]
    ebf8:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    ebfc:	48 89 d1             	mov    rcx,rdx
    ebff:	89 c2                	mov    edx,eax
    ec01:	e8 9d 6f 00 00       	call   15ba3 <decompose_f3_ext_stem>
    ec06:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
    ec09:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
    ec0c:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
    ec0f:	01 d0                	add    eax,edx
    ec11:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    ec14:	7f 20                	jg     ec36 <decompose_f3_ext_stem_d1+0xbd>
    ec16:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ec19:	48 98                	cdqe   
    ec1b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    ec23:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ec27:	48 01 d0             	add    rax,rdx
    ec2a:	8b 00                	mov    eax,DWORD PTR [rax]
    ec2c:	39 45 e8             	cmp    DWORD PTR [rbp-0x18],eax
    ec2f:	0f 4e 45 e8          	cmovle eax,DWORD PTR [rbp-0x18]
    ec33:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
    ec36:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    ec39:	48 98                	cdqe   
    ec3b:	48 c1 e0 02          	shl    rax,0x2
    ec3f:	48 01 45 f8          	add    QWORD PTR [rbp-0x8],rax
    ec43:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ec47:	48 89 c7             	mov    rdi,rax
    ec4a:	e8 61 4c ff ff       	call   38b0 <free@plt>
    ec4f:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    ec52:	39 45 e8             	cmp    DWORD PTR [rbp-0x18],eax
    ec55:	0f 4e 45 e8          	cmovle eax,DWORD PTR [rbp-0x18]
    ec59:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    ec5c:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
    ec60:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
    ec64:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    ec68:	8b 75 d4             	mov    esi,DWORD PTR [rbp-0x2c]
    ec6b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ec6f:	49 89 f8             	mov    r8,rdi
    ec72:	48 89 c7             	mov    rdi,rax
    ec75:	e8 21 34 00 00       	call   1209b <f3_get_stem_contributions_d3>
    ec7a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ec7e:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
    ec81:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
    ec84:	01 d0                	add    eax,edx
    ec86:	83 c0 01             	add    eax,0x1
    ec89:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    ec8c:	7f 08                	jg     ec96 <decompose_f3_ext_stem_d1+0x11d>
    ec8e:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ec91:	83 e8 01             	sub    eax,0x1
    ec94:	eb 0b                	jmp    eca1 <decompose_f3_ext_stem_d1+0x128>
    ec96:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
    ec99:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
    ec9c:	01 d0                	add    eax,edx
    ec9e:	83 c0 01             	add    eax,0x1
    eca1:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    eca5:	8b 75 d4             	mov    esi,DWORD PTR [rbp-0x2c]
    eca8:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    ecac:	48 89 d1             	mov    rcx,rdx
    ecaf:	89 c2                	mov    edx,eax
    ecb1:	e8 ed 6e 00 00       	call   15ba3 <decompose_f3_ext_stem>
    ecb6:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
    ecb9:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
    ecbc:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
    ecbf:	01 d0                	add    eax,edx
    ecc1:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    ecc4:	7f 20                	jg     ece6 <decompose_f3_ext_stem_d1+0x16d>
    ecc6:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ecc9:	48 98                	cdqe   
    eccb:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    ecd3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ecd7:	48 01 d0             	add    rax,rdx
    ecda:	8b 00                	mov    eax,DWORD PTR [rax]
    ecdc:	39 45 e8             	cmp    DWORD PTR [rbp-0x18],eax
    ecdf:	0f 4e 45 e8          	cmovle eax,DWORD PTR [rbp-0x18]
    ece3:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
    ece6:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    ece9:	48 98                	cdqe   
    eceb:	48 c1 e0 02          	shl    rax,0x2
    ecef:	48 01 45 f8          	add    QWORD PTR [rbp-0x8],rax
    ecf3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ecf7:	48 89 c7             	mov    rdi,rax
    ecfa:	e8 b1 4b ff ff       	call   38b0 <free@plt>
    ecff:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    ed02:	39 45 e8             	cmp    DWORD PTR [rbp-0x18],eax
    ed05:	0f 4e 45 e8          	cmovle eax,DWORD PTR [rbp-0x18]
    ed09:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    ed0c:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
    ed10:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
    ed14:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    ed18:	8b 75 d4             	mov    esi,DWORD PTR [rbp-0x2c]
    ed1b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ed1f:	49 89 f8             	mov    r8,rdi
    ed22:	48 89 c7             	mov    rdi,rax
    ed25:	e8 99 48 00 00       	call   135c3 <f3_get_stem_contributions_d5>
    ed2a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ed2e:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
    ed31:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
    ed34:	01 d0                	add    eax,edx
    ed36:	83 c0 01             	add    eax,0x1
    ed39:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    ed3c:	7f 08                	jg     ed46 <decompose_f3_ext_stem_d1+0x1cd>
    ed3e:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ed41:	83 e8 01             	sub    eax,0x1
    ed44:	eb 0b                	jmp    ed51 <decompose_f3_ext_stem_d1+0x1d8>
    ed46:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
    ed49:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
    ed4c:	01 d0                	add    eax,edx
    ed4e:	83 c0 01             	add    eax,0x1
    ed51:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ed55:	8b 75 d4             	mov    esi,DWORD PTR [rbp-0x2c]
    ed58:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    ed5c:	48 89 d1             	mov    rcx,rdx
    ed5f:	89 c2                	mov    edx,eax
    ed61:	e8 3d 6e 00 00       	call   15ba3 <decompose_f3_ext_stem>
    ed66:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
    ed69:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
    ed6c:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
    ed6f:	01 d0                	add    eax,edx
    ed71:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    ed74:	7f 20                	jg     ed96 <decompose_f3_ext_stem_d1+0x21d>
    ed76:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ed79:	48 98                	cdqe   
    ed7b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    ed83:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ed87:	48 01 d0             	add    rax,rdx
    ed8a:	8b 00                	mov    eax,DWORD PTR [rax]
    ed8c:	39 45 e8             	cmp    DWORD PTR [rbp-0x18],eax
    ed8f:	0f 4e 45 e8          	cmovle eax,DWORD PTR [rbp-0x18]
    ed93:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
    ed96:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    ed99:	48 98                	cdqe   
    ed9b:	48 c1 e0 02          	shl    rax,0x2
    ed9f:	48 01 45 f8          	add    QWORD PTR [rbp-0x8],rax
    eda3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    eda7:	48 89 c7             	mov    rdi,rax
    edaa:	e8 01 4b ff ff       	call   38b0 <free@plt>
    edaf:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    edb2:	39 45 e8             	cmp    DWORD PTR [rbp-0x18],eax
    edb5:	0f 4e 45 e8          	cmovle eax,DWORD PTR [rbp-0x18]
    edb9:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    edbc:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
    edc0:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
    edc4:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    edc8:	8b 75 d4             	mov    esi,DWORD PTR [rbp-0x2c]
    edcb:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    edcf:	49 89 f8             	mov    r8,rdi
    edd2:	48 89 c7             	mov    rdi,rax
    edd5:	e8 57 5e 00 00       	call   14c31 <f3_get_stem_contributions_d53>
    edda:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    edde:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
    ede1:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
    ede4:	01 d0                	add    eax,edx
    ede6:	83 c0 01             	add    eax,0x1
    ede9:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    edec:	7f 08                	jg     edf6 <decompose_f3_ext_stem_d1+0x27d>
    edee:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    edf1:	83 e8 01             	sub    eax,0x1
    edf4:	eb 0b                	jmp    ee01 <decompose_f3_ext_stem_d1+0x288>
    edf6:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
    edf9:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
    edfc:	01 d0                	add    eax,edx
    edfe:	83 c0 01             	add    eax,0x1
    ee01:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ee05:	8b 75 d4             	mov    esi,DWORD PTR [rbp-0x2c]
    ee08:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
    ee0c:	48 89 d1             	mov    rcx,rdx
    ee0f:	89 c2                	mov    edx,eax
    ee11:	e8 8d 6d 00 00       	call   15ba3 <decompose_f3_ext_stem>
    ee16:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
    ee19:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
    ee1c:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
    ee1f:	01 d0                	add    eax,edx
    ee21:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    ee24:	7f 20                	jg     ee46 <decompose_f3_ext_stem_d1+0x2cd>
    ee26:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ee29:	48 98                	cdqe   
    ee2b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    ee33:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ee37:	48 01 d0             	add    rax,rdx
    ee3a:	8b 00                	mov    eax,DWORD PTR [rax]
    ee3c:	39 45 e8             	cmp    DWORD PTR [rbp-0x18],eax
    ee3f:	0f 4e 45 e8          	cmovle eax,DWORD PTR [rbp-0x18]
    ee43:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
    ee46:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    ee49:	48 98                	cdqe   
    ee4b:	48 c1 e0 02          	shl    rax,0x2
    ee4f:	48 01 45 f8          	add    QWORD PTR [rbp-0x8],rax
    ee53:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ee57:	48 89 c7             	mov    rdi,rax
    ee5a:	e8 51 4a ff ff       	call   38b0 <free@plt>
    ee5f:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    ee62:	39 45 e8             	cmp    DWORD PTR [rbp-0x18],eax
    ee65:	0f 4e 45 e8          	cmovle eax,DWORD PTR [rbp-0x18]
    ee69:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    ee6c:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    ee6f:	c9                   	leave  
    ee70:	c3                   	ret    

000000000000ee71 <reduce_f5_up>:
    ee71:	55                   	push   rbp
    ee72:	48 89 e5             	mov    rbp,rsp
    ee75:	53                   	push   rbx
    ee76:	48 83 ec 68          	sub    rsp,0x68
    ee7a:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    ee7e:	89 75 b4             	mov    DWORD PTR [rbp-0x4c],esi
    ee81:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
    ee85:	48 89 4d a0          	mov    QWORD PTR [rbp-0x60],rcx
    ee89:	4c 89 45 98          	mov    QWORD PTR [rbp-0x68],r8
    ee8d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ee91:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    ee95:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    ee99:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    ee9d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    eea1:	48 8b 80 a0 00 00 00 	mov    rax,QWORD PTR [rax+0xa0]
    eea8:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    eeac:	c7 45 cc 80 96 98 00 	mov    DWORD PTR [rbp-0x34],0x989680
    eeb3:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    eeb7:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    eebb:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    eebf:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    eec2:	48 98                	cdqe   
    eec4:	48 c1 e0 02          	shl    rax,0x2
    eec8:	48 8d 50 fc          	lea    rdx,[rax-0x4]
    eecc:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    eed0:	48 01 d0             	add    rax,rdx
    eed3:	8b 00                	mov    eax,DWORD PTR [rax]
    eed5:	3d 80 96 98 00       	cmp    eax,0x989680
    eeda:	74 72                	je     ef4e <reduce_f5_up+0xdd>
    eedc:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    eedf:	8d 50 ff             	lea    edx,[rax-0x1]
    eee2:	48 8b 4d a0          	mov    rcx,QWORD PTR [rbp-0x60]
    eee6:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    eee9:	4c 8b 55 a8          	mov    r10,QWORD PTR [rbp-0x58]
    eeed:	49 89 c9             	mov    r9,rcx
    eef0:	41 b8 0c 00 00 00    	mov    r8d,0xc
    eef6:	89 d1                	mov    ecx,edx
    eef8:	ba 01 00 00 00       	mov    edx,0x1
    eefd:	89 c6                	mov    esi,eax
    eeff:	bf 01 00 00 00       	mov    edi,0x1
    ef04:	41 ff d2             	call   r10
    ef07:	84 c0                	test   al,al
    ef09:	74 43                	je     ef4e <reduce_f5_up+0xdd>
    ef0b:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    ef0e:	48 98                	cdqe   
    ef10:	48 c1 e0 02          	shl    rax,0x2
    ef14:	48 8d 50 fc          	lea    rdx,[rax-0x4]
    ef18:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ef1c:	48 01 d0             	add    rax,rdx
    ef1f:	8b 00                	mov    eax,DWORD PTR [rax]
    ef21:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
    ef24:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
    ef29:	74 23                	je     ef4e <reduce_f5_up+0xdd>
    ef2b:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    ef2e:	8d 70 ff             	lea    esi,[rax-0x1]
    ef31:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
    ef35:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    ef38:	4c 8b 45 e8          	mov    r8,QWORD PTR [rbp-0x18]
    ef3c:	48 89 d1             	mov    rcx,rdx
    ef3f:	89 f2                	mov    edx,esi
    ef41:	be 01 00 00 00       	mov    esi,0x1
    ef46:	89 c7                	mov    edi,eax
    ef48:	41 ff d0             	call   r8
    ef4b:	01 45 cc             	add    DWORD PTR [rbp-0x34],eax
    ef4e:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
    ef53:	0f 84 31 01 00 00    	je     f08a <reduce_f5_up+0x219>
    ef59:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    ef5d:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    ef61:	48 85 c0             	test   rax,rax
    ef64:	0f 84 20 01 00 00    	je     f08a <reduce_f5_up+0x219>
    ef6a:	c7 45 c8 00 00 00 00 	mov    DWORD PTR [rbp-0x38],0x0
    ef71:	e9 05 01 00 00       	jmp    f07b <reduce_f5_up+0x20a>
    ef76:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    ef7a:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    ef7e:	8b 55 c8             	mov    edx,DWORD PTR [rbp-0x38]
    ef81:	48 63 d2             	movsxd rdx,edx
    ef84:	48 c1 e2 02          	shl    rdx,0x2
    ef88:	48 01 d0             	add    rax,rdx
    ef8b:	8b 00                	mov    eax,DWORD PTR [rax]
    ef8d:	89 45 d4             	mov    DWORD PTR [rbp-0x2c],eax
    ef90:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    ef93:	2b 45 d4             	sub    eax,DWORD PTR [rbp-0x2c]
    ef96:	85 c0                	test   eax,eax
    ef98:	0f 88 d9 00 00 00    	js     f077 <reduce_f5_up+0x206>
    ef9e:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    efa1:	2b 45 d4             	sub    eax,DWORD PTR [rbp-0x2c]
    efa4:	48 98                	cdqe   
    efa6:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    efae:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    efb2:	48 01 d0             	add    rax,rdx
    efb5:	8b 00                	mov    eax,DWORD PTR [rax]
    efb7:	3d 80 96 98 00       	cmp    eax,0x989680
    efbc:	0f 84 b5 00 00 00    	je     f077 <reduce_f5_up+0x206>
    efc2:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    efc5:	2b 45 d4             	sub    eax,DWORD PTR [rbp-0x2c]
    efc8:	89 c2                	mov    edx,eax
    efca:	48 8b 4d a0          	mov    rcx,QWORD PTR [rbp-0x60]
    efce:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    efd1:	4c 8b 55 a8          	mov    r10,QWORD PTR [rbp-0x58]
    efd5:	49 89 c9             	mov    r9,rcx
    efd8:	41 b8 0c 00 00 00    	mov    r8d,0xc
    efde:	89 d1                	mov    ecx,edx
    efe0:	ba 01 00 00 00       	mov    edx,0x1
    efe5:	89 c6                	mov    esi,eax
    efe7:	bf 01 00 00 00       	mov    edi,0x1
    efec:	41 ff d2             	call   r10
    efef:	84 c0                	test   al,al
    eff1:	0f 84 80 00 00 00    	je     f077 <reduce_f5_up+0x206>
    eff7:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    effa:	2b 45 d4             	sub    eax,DWORD PTR [rbp-0x2c]
    effd:	48 98                	cdqe   
    efff:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    f007:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    f00b:	48 01 d0             	add    rax,rdx
    f00e:	8b 18                	mov    ebx,DWORD PTR [rax]
    f010:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    f014:	4c 8b 48 50          	mov    r9,QWORD PTR [rax+0x50]
    f018:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    f01c:	48 8b 48 60          	mov    rcx,QWORD PTR [rax+0x60]
    f020:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    f023:	2b 45 d4             	sub    eax,DWORD PTR [rbp-0x2c]
    f026:	8d 70 01             	lea    esi,[rax+0x1]
    f029:	8b 55 b4             	mov    edx,DWORD PTR [rbp-0x4c]
    f02c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    f030:	49 89 c8             	mov    r8,rcx
    f033:	b9 11 00 00 00       	mov    ecx,0x11
    f038:	48 89 c7             	mov    rdi,rax
    f03b:	41 ff d1             	call   r9
    f03e:	01 d8                	add    eax,ebx
    f040:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    f043:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
    f048:	74 20                	je     f06a <reduce_f5_up+0x1f9>
    f04a:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    f04d:	2b 45 d4             	sub    eax,DWORD PTR [rbp-0x2c]
    f050:	89 c2                	mov    edx,eax
    f052:	48 8b 4d 98          	mov    rcx,QWORD PTR [rbp-0x68]
    f056:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    f059:	4c 8b 45 e8          	mov    r8,QWORD PTR [rbp-0x18]
    f05d:	be 01 00 00 00       	mov    esi,0x1
    f062:	89 c7                	mov    edi,eax
    f064:	41 ff d0             	call   r8
    f067:	01 45 d0             	add    DWORD PTR [rbp-0x30],eax
    f06a:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
    f06d:	39 45 d0             	cmp    DWORD PTR [rbp-0x30],eax
    f070:	0f 4e 45 d0          	cmovle eax,DWORD PTR [rbp-0x30]
    f074:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
    f077:	83 45 c8 01          	add    DWORD PTR [rbp-0x38],0x1
    f07b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    f07f:	8b 00                	mov    eax,DWORD PTR [rax]
    f081:	39 45 c8             	cmp    DWORD PTR [rbp-0x38],eax
    f084:	0f 8c ec fe ff ff    	jl     ef76 <reduce_f5_up+0x105>
    f08a:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
    f08d:	48 83 c4 68          	add    rsp,0x68
    f091:	5b                   	pop    rbx
    f092:	5d                   	pop    rbp
    f093:	c3                   	ret    

000000000000f094 <reduce_f3_up>:
    f094:	55                   	push   rbp
    f095:	48 89 e5             	mov    rbp,rsp
    f098:	53                   	push   rbx
    f099:	48 83 ec 68          	sub    rsp,0x68
    f09d:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    f0a1:	89 75 b4             	mov    DWORD PTR [rbp-0x4c],esi
    f0a4:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
    f0a8:	48 89 4d a0          	mov    QWORD PTR [rbp-0x60],rcx
    f0ac:	4c 89 45 98          	mov    QWORD PTR [rbp-0x68],r8
    f0b0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    f0b4:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    f0b7:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    f0ba:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    f0be:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    f0c2:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    f0c6:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    f0ca:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    f0ce:	48 8b 80 a0 00 00 00 	mov    rax,QWORD PTR [rax+0xa0]
    f0d5:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    f0d9:	c7 45 c8 80 96 98 00 	mov    DWORD PTR [rbp-0x38],0x989680
    f0e0:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    f0e4:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    f0e8:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    f0ec:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    f0ef:	48 98                	cdqe   
    f0f1:	48 83 c0 01          	add    rax,0x1
    f0f5:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    f0fd:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    f101:	48 01 d0             	add    rax,rdx
    f104:	8b 00                	mov    eax,DWORD PTR [rax]
    f106:	3d 80 96 98 00       	cmp    eax,0x989680
    f10b:	74 6d                	je     f17a <reduce_f3_up+0xe6>
    f10d:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    f110:	8d 78 01             	lea    edi,[rax+0x1]
    f113:	48 8b 4d a0          	mov    rcx,QWORD PTR [rbp-0x60]
    f117:	8b 55 d0             	mov    edx,DWORD PTR [rbp-0x30]
    f11a:	8b 75 d0             	mov    esi,DWORD PTR [rbp-0x30]
    f11d:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    f120:	4c 8b 55 a8          	mov    r10,QWORD PTR [rbp-0x58]
    f124:	49 89 c9             	mov    r9,rcx
    f127:	41 b8 0c 00 00 00    	mov    r8d,0xc
    f12d:	89 d1                	mov    ecx,edx
    f12f:	89 fa                	mov    edx,edi
    f131:	89 c7                	mov    edi,eax
    f133:	41 ff d2             	call   r10
    f136:	84 c0                	test   al,al
    f138:	74 40                	je     f17a <reduce_f3_up+0xe6>
    f13a:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    f13d:	48 98                	cdqe   
    f13f:	48 83 c0 01          	add    rax,0x1
    f143:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    f14b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    f14f:	48 01 d0             	add    rax,rdx
    f152:	8b 00                	mov    eax,DWORD PTR [rax]
    f154:	89 45 c8             	mov    DWORD PTR [rbp-0x38],eax
    f157:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
    f15c:	74 1c                	je     f17a <reduce_f3_up+0xe6>
    f15e:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    f161:	8d 70 01             	lea    esi,[rax+0x1]
    f164:	48 8b 4d 98          	mov    rcx,QWORD PTR [rbp-0x68]
    f168:	8b 55 d0             	mov    edx,DWORD PTR [rbp-0x30]
    f16b:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    f16e:	4c 8b 45 e8          	mov    r8,QWORD PTR [rbp-0x18]
    f172:	89 c7                	mov    edi,eax
    f174:	41 ff d0             	call   r8
    f177:	01 45 c8             	add    DWORD PTR [rbp-0x38],eax
    f17a:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
    f17f:	0f 84 3d 01 00 00    	je     f2c2 <reduce_f3_up+0x22e>
    f185:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    f189:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    f18d:	48 85 c0             	test   rax,rax
    f190:	0f 84 2c 01 00 00    	je     f2c2 <reduce_f3_up+0x22e>
    f196:	c7 45 c4 00 00 00 00 	mov    DWORD PTR [rbp-0x3c],0x0
    f19d:	e9 11 01 00 00       	jmp    f2b3 <reduce_f3_up+0x21f>
    f1a2:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    f1a6:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    f1aa:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    f1ad:	48 63 d2             	movsxd rdx,edx
    f1b0:	48 c1 e2 02          	shl    rdx,0x2
    f1b4:	48 01 d0             	add    rax,rdx
    f1b7:	8b 00                	mov    eax,DWORD PTR [rax]
    f1b9:	89 45 d4             	mov    DWORD PTR [rbp-0x2c],eax
    f1bc:	8b 55 b4             	mov    edx,DWORD PTR [rbp-0x4c]
    f1bf:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    f1c2:	01 d0                	add    eax,edx
    f1c4:	83 e8 01             	sub    eax,0x1
    f1c7:	39 45 d0             	cmp    DWORD PTR [rbp-0x30],eax
    f1ca:	0f 8c df 00 00 00    	jl     f2af <reduce_f3_up+0x21b>
    f1d0:	8b 55 b4             	mov    edx,DWORD PTR [rbp-0x4c]
    f1d3:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    f1d6:	01 d0                	add    eax,edx
    f1d8:	48 98                	cdqe   
    f1da:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    f1e2:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    f1e6:	48 01 d0             	add    rax,rdx
    f1e9:	8b 00                	mov    eax,DWORD PTR [rax]
    f1eb:	3d 80 96 98 00       	cmp    eax,0x989680
    f1f0:	0f 84 b9 00 00 00    	je     f2af <reduce_f3_up+0x21b>
    f1f6:	8b 55 b4             	mov    edx,DWORD PTR [rbp-0x4c]
    f1f9:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    f1fc:	01 d0                	add    eax,edx
    f1fe:	8d 78 ff             	lea    edi,[rax-0x1]
    f201:	48 8b 4d a0          	mov    rcx,QWORD PTR [rbp-0x60]
    f205:	8b 55 d0             	mov    edx,DWORD PTR [rbp-0x30]
    f208:	8b 75 d0             	mov    esi,DWORD PTR [rbp-0x30]
    f20b:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    f20e:	4c 8b 55 a8          	mov    r10,QWORD PTR [rbp-0x58]
    f212:	49 89 c9             	mov    r9,rcx
    f215:	41 b8 0c 00 00 00    	mov    r8d,0xc
    f21b:	89 d1                	mov    ecx,edx
    f21d:	89 fa                	mov    edx,edi
    f21f:	89 c7                	mov    edi,eax
    f221:	41 ff d2             	call   r10
    f224:	84 c0                	test   al,al
    f226:	0f 84 83 00 00 00    	je     f2af <reduce_f3_up+0x21b>
    f22c:	8b 55 b4             	mov    edx,DWORD PTR [rbp-0x4c]
    f22f:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    f232:	01 d0                	add    eax,edx
    f234:	48 98                	cdqe   
    f236:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    f23e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    f242:	48 01 d0             	add    rax,rdx
    f245:	8b 18                	mov    ebx,DWORD PTR [rax]
    f247:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    f24b:	4c 8b 48 50          	mov    r9,QWORD PTR [rax+0x50]
    f24f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    f253:	48 8b 48 60          	mov    rcx,QWORD PTR [rax+0x60]
    f257:	8b 55 b4             	mov    edx,DWORD PTR [rbp-0x4c]
    f25a:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    f25d:	01 d0                	add    eax,edx
    f25f:	8d 50 ff             	lea    edx,[rax-0x1]
    f262:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    f265:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    f269:	49 89 c8             	mov    r8,rcx
    f26c:	b9 11 00 00 00       	mov    ecx,0x11
    f271:	48 89 c7             	mov    rdi,rax
    f274:	41 ff d1             	call   r9
    f277:	01 d8                	add    eax,ebx
    f279:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
    f27c:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
    f281:	74 1f                	je     f2a2 <reduce_f3_up+0x20e>
    f283:	8b 55 b4             	mov    edx,DWORD PTR [rbp-0x4c]
    f286:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    f289:	8d 34 02             	lea    esi,[rdx+rax*1]
    f28c:	48 8b 4d 98          	mov    rcx,QWORD PTR [rbp-0x68]
    f290:	8b 55 d0             	mov    edx,DWORD PTR [rbp-0x30]
    f293:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    f296:	4c 8b 45 e8          	mov    r8,QWORD PTR [rbp-0x18]
    f29a:	89 c7                	mov    edi,eax
    f29c:	41 ff d0             	call   r8
    f29f:	01 45 cc             	add    DWORD PTR [rbp-0x34],eax
    f2a2:	8b 45 c8             	mov    eax,DWORD PTR [rbp-0x38]
    f2a5:	39 45 cc             	cmp    DWORD PTR [rbp-0x34],eax
    f2a8:	0f 4e 45 cc          	cmovle eax,DWORD PTR [rbp-0x34]
    f2ac:	89 45 c8             	mov    DWORD PTR [rbp-0x38],eax
    f2af:	83 45 c4 01          	add    DWORD PTR [rbp-0x3c],0x1
    f2b3:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    f2b7:	8b 00                	mov    eax,DWORD PTR [rax]
    f2b9:	39 45 c4             	cmp    DWORD PTR [rbp-0x3c],eax
    f2bc:	0f 8c e0 fe ff ff    	jl     f1a2 <reduce_f3_up+0x10e>
    f2c2:	8b 45 c8             	mov    eax,DWORD PTR [rbp-0x38]
    f2c5:	48 83 c4 68          	add    rsp,0x68
    f2c9:	5b                   	pop    rbx
    f2ca:	5d                   	pop    rbp
    f2cb:	c3                   	ret    

000000000000f2cc <get_stem_contributions_d0>:
    f2cc:	55                   	push   rbp
    f2cd:	48 89 e5             	mov    rbp,rsp
    f2d0:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    f2d7:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    f2db:	89 75 94             	mov    DWORD PTR [rbp-0x6c],esi
    f2de:	48 89 55 88          	mov    QWORD PTR [rbp-0x78],rdx
    f2e2:	48 89 4d 80          	mov    QWORD PTR [rbp-0x80],rcx
    f2e6:	4c 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r8
    f2ed:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    f2f0:	48 98                	cdqe   
    f2f2:	c1 e0 02             	shl    eax,0x2
    f2f5:	89 c7                	mov    edi,eax
    f2f7:	e8 c5 cb 01 00       	call   2bec1 <vrna_alloc>
    f2fc:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    f300:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    f304:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    f308:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    f30c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    f310:	48 05 98 35 03 00    	add    rax,0x33598
    f316:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    f31a:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    f31e:	48 8b 40 78          	mov    rax,QWORD PTR [rax+0x78]
    f322:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    f326:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    f32a:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    f32e:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    f332:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    f336:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    f33a:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    f340:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
    f343:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    f346:	48 98                	cdqe   
    f348:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    f350:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    f354:	48 01 d0             	add    rax,rdx
    f357:	8b 10                	mov    edx,DWORD PTR [rax]
    f359:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    f35c:	01 d0                	add    eax,edx
    f35e:	2b 45 ac             	sub    eax,DWORD PTR [rbp-0x54]
    f361:	83 e8 01             	sub    eax,0x1
    f364:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    f367:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    f36b:	8b 00                	mov    eax,DWORD PTR [rax]
    f36d:	85 c0                	test   eax,eax
    f36f:	75 0d                	jne    f37e <get_stem_contributions_d0+0xb2>
    f371:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    f375:	48 8b 80 c8 00 00 00 	mov    rax,QWORD PTR [rax+0xc8]
    f37c:	eb 05                	jmp    f383 <get_stem_contributions_d0+0xb7>
    f37e:	b8 00 00 00 00       	mov    eax,0x0
    f383:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    f387:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    f38b:	8b 00                	mov    eax,DWORD PTR [rax]
    f38d:	85 c0                	test   eax,eax
    f38f:	74 0c                	je     f39d <get_stem_contributions_d0+0xd1>
    f391:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    f395:	8b 80 b8 00 00 00    	mov    eax,DWORD PTR [rax+0xb8]
    f39b:	eb 05                	jmp    f3a2 <get_stem_contributions_d0+0xd6>
    f39d:	b8 01 00 00 00       	mov    eax,0x1
    f3a2:	89 45 b0             	mov    DWORD PTR [rbp-0x50],eax
    f3a5:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    f3a9:	8b 00                	mov    eax,DWORD PTR [rax]
    f3ab:	85 c0                	test   eax,eax
    f3ad:	74 0d                	je     f3bc <get_stem_contributions_d0+0xf0>
    f3af:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    f3b3:	48 8b 80 d0 00 00 00 	mov    rax,QWORD PTR [rax+0xd0]
    f3ba:	eb 05                	jmp    f3c1 <get_stem_contributions_d0+0xf5>
    f3bc:	b8 00 00 00 00       	mov    eax,0x0
    f3c1:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    f3c5:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    f3cc:	48 8b 40 18          	mov    rax,QWORD PTR [rax+0x18]
    f3d0:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    f3d4:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    f3db:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    f3df:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    f3e3:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    f3e7:	8b 00                	mov    eax,DWORD PTR [rax]
    f3e9:	85 c0                	test   eax,eax
    f3eb:	74 0e                	je     f3fb <get_stem_contributions_d0+0x12f>
    f3ed:	83 f8 01             	cmp    eax,0x1
    f3f0:	0f 84 27 01 00 00    	je     f51d <get_stem_contributions_d0+0x251>
    f3f6:	e9 a4 02 00 00       	jmp    f69f <get_stem_contributions_d0+0x3d3>
    f3fb:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    f3fe:	2b 45 ac             	sub    eax,DWORD PTR [rbp-0x54]
    f401:	83 e8 01             	sub    eax,0x1
    f404:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
    f407:	e9 02 01 00 00       	jmp    f50e <get_stem_contributions_d0+0x242>
    f40c:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
    f40f:	48 98                	cdqe   
    f411:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    f419:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    f41d:	48 01 d0             	add    rax,rdx
    f420:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
    f426:	8b 45 a8             	mov    eax,DWORD PTR [rbp-0x58]
    f429:	48 98                	cdqe   
    f42b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    f433:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    f437:	48 01 d0             	add    rax,rdx
    f43a:	8b 00                	mov    eax,DWORD PTR [rax]
    f43c:	3d 80 96 98 00       	cmp    eax,0x989680
    f441:	0f 84 bf 00 00 00    	je     f506 <get_stem_contributions_d0+0x23a>
    f447:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
    f44a:	8d 70 ff             	lea    esi,[rax-0x1]
    f44d:	48 8b 4d 80          	mov    rcx,QWORD PTR [rbp-0x80]
    f451:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
    f454:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    f457:	4c 8b 55 88          	mov    r10,QWORD PTR [rbp-0x78]
    f45b:	49 89 c9             	mov    r9,rcx
    f45e:	41 b8 12 00 00 00    	mov    r8d,0x12
    f464:	89 d1                	mov    ecx,edx
    f466:	89 f2                	mov    edx,esi
    f468:	89 c6                	mov    esi,eax
    f46a:	bf 01 00 00 00       	mov    edi,0x1
    f46f:	41 ff d2             	call   r10
    f472:	84 c0                	test   al,al
    f474:	0f 84 8c 00 00 00    	je     f506 <get_stem_contributions_d0+0x23a>
    f47a:	8b 45 a8             	mov    eax,DWORD PTR [rbp-0x58]
    f47d:	48 98                	cdqe   
    f47f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    f487:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    f48b:	48 01 d0             	add    rax,rdx
    f48e:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
    f491:	48 63 d2             	movsxd rdx,edx
    f494:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
    f49c:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    f4a0:	48 01 ca             	add    rdx,rcx
    f4a3:	8b 00                	mov    eax,DWORD PTR [rax]
    f4a5:	89 02                	mov    DWORD PTR [rdx],eax
    f4a7:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    f4ab:	8b 45 a8             	mov    eax,DWORD PTR [rbp-0x58]
    f4ae:	48 89 d6             	mov    rsi,rdx
    f4b1:	89 c7                	mov    edi,eax
    f4b3:	e8 83 e6 01 00       	call   2db3b <vrna_get_ptype>
    f4b8:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    f4bb:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
    f4bf:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    f4c2:	48 89 d1             	mov    rcx,rdx
    f4c5:	ba ff ff ff ff       	mov    edx,0xffffffff
    f4ca:	be ff ff ff ff       	mov    esi,0xffffffff
    f4cf:	89 c7                	mov    edi,eax
    f4d1:	e8 15 ed ff ff       	call   e1eb <vrna_E_ext_stem>
    f4d6:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
    f4d9:	48 63 d2             	movsxd rdx,edx
    f4dc:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
    f4e4:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    f4e8:	48 01 ca             	add    rdx,rcx
    f4eb:	8b 0a                	mov    ecx,DWORD PTR [rdx]
    f4ed:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
    f4f0:	48 63 d2             	movsxd rdx,edx
    f4f3:	48 8d 34 95 00 00 00 00 	lea    rsi,[rdx*4+0x0]
    f4fb:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    f4ff:	48 01 f2             	add    rdx,rsi
    f502:	01 c8                	add    eax,ecx
    f504:	89 02                	mov    DWORD PTR [rdx],eax
    f506:	83 6d a4 01          	sub    DWORD PTR [rbp-0x5c],0x1
    f50a:	83 6d a8 01          	sub    DWORD PTR [rbp-0x58],0x1
    f50e:	83 7d a4 01          	cmp    DWORD PTR [rbp-0x5c],0x1
    f512:	0f 8f f4 fe ff ff    	jg     f40c <get_stem_contributions_d0+0x140>
    f518:	e9 82 01 00 00       	jmp    f69f <get_stem_contributions_d0+0x3d3>
    f51d:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    f520:	2b 45 ac             	sub    eax,DWORD PTR [rbp-0x54]
    f523:	83 e8 01             	sub    eax,0x1
    f526:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
    f529:	e9 66 01 00 00       	jmp    f694 <get_stem_contributions_d0+0x3c8>
    f52e:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
    f531:	48 98                	cdqe   
    f533:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    f53b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    f53f:	48 01 d0             	add    rax,rdx
    f542:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
    f548:	8b 45 a8             	mov    eax,DWORD PTR [rbp-0x58]
    f54b:	48 98                	cdqe   
    f54d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    f555:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    f559:	48 01 d0             	add    rax,rdx
    f55c:	8b 00                	mov    eax,DWORD PTR [rax]
    f55e:	3d 80 96 98 00       	cmp    eax,0x989680
    f563:	0f 84 23 01 00 00    	je     f68c <get_stem_contributions_d0+0x3c0>
    f569:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
    f56c:	8d 70 ff             	lea    esi,[rax-0x1]
    f56f:	48 8b 4d 80          	mov    rcx,QWORD PTR [rbp-0x80]
    f573:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
    f576:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    f579:	4c 8b 55 88          	mov    r10,QWORD PTR [rbp-0x78]
    f57d:	49 89 c9             	mov    r9,rcx
    f580:	41 b8 12 00 00 00    	mov    r8d,0x12
    f586:	89 d1                	mov    ecx,edx
    f588:	89 f2                	mov    edx,esi
    f58a:	89 c6                	mov    esi,eax
    f58c:	bf 01 00 00 00       	mov    edi,0x1
    f591:	41 ff d2             	call   r10
    f594:	84 c0                	test   al,al
    f596:	0f 84 f0 00 00 00    	je     f68c <get_stem_contributions_d0+0x3c0>
    f59c:	8b 45 a8             	mov    eax,DWORD PTR [rbp-0x58]
    f59f:	48 98                	cdqe   
    f5a1:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    f5a9:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    f5ad:	48 01 d0             	add    rax,rdx
    f5b0:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
    f5b3:	48 63 d2             	movsxd rdx,edx
    f5b6:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
    f5be:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    f5c2:	48 01 ca             	add    rdx,rcx
    f5c5:	8b 00                	mov    eax,DWORD PTR [rax]
    f5c7:	89 02                	mov    DWORD PTR [rdx],eax
    f5c9:	c7 45 a0 00 00 00 00 	mov    DWORD PTR [rbp-0x60],0x0
    f5d0:	e9 ab 00 00 00       	jmp    f680 <get_stem_contributions_d0+0x3b4>
    f5d5:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    f5d8:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    f5e0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    f5e4:	48 01 d0             	add    rax,rdx
    f5e7:	48 8b 00             	mov    rax,QWORD PTR [rax]
    f5ea:	8b 55 94             	mov    edx,DWORD PTR [rbp-0x6c]
    f5ed:	48 63 d2             	movsxd rdx,edx
    f5f0:	48 01 d2             	add    rdx,rdx
    f5f3:	48 01 d0             	add    rax,rdx
    f5f6:	0f b7 00             	movzx  eax,WORD PTR [rax]
    f5f9:	0f bf c8             	movsx  ecx,ax
    f5fc:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    f5ff:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    f607:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    f60b:	48 01 d0             	add    rax,rdx
    f60e:	48 8b 00             	mov    rax,QWORD PTR [rax]
    f611:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
    f614:	48 63 d2             	movsxd rdx,edx
    f617:	48 01 d2             	add    rdx,rdx
    f61a:	48 01 d0             	add    rax,rdx
    f61d:	0f b7 00             	movzx  eax,WORD PTR [rax]
    f620:	98                   	cwde   
    f621:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    f625:	89 ce                	mov    esi,ecx
    f627:	89 c7                	mov    edi,eax
    f629:	e8 ba e4 01 00       	call   2dae8 <vrna_get_ptype_md>
    f62e:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    f631:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
    f635:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    f638:	48 89 d1             	mov    rcx,rdx
    f63b:	ba ff ff ff ff       	mov    edx,0xffffffff
    f640:	be ff ff ff ff       	mov    esi,0xffffffff
    f645:	89 c7                	mov    edi,eax
    f647:	e8 9f eb ff ff       	call   e1eb <vrna_E_ext_stem>
    f64c:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
    f64f:	48 63 d2             	movsxd rdx,edx
    f652:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
    f65a:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    f65e:	48 01 ca             	add    rdx,rcx
    f661:	8b 0a                	mov    ecx,DWORD PTR [rdx]
    f663:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
    f666:	48 63 d2             	movsxd rdx,edx
    f669:	48 8d 34 95 00 00 00 00 	lea    rsi,[rdx*4+0x0]
    f671:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    f675:	48 01 f2             	add    rdx,rsi
    f678:	01 c8                	add    eax,ecx
    f67a:	89 02                	mov    DWORD PTR [rdx],eax
    f67c:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
    f680:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    f683:	3b 45 b0             	cmp    eax,DWORD PTR [rbp-0x50]
    f686:	0f 82 49 ff ff ff    	jb     f5d5 <get_stem_contributions_d0+0x309>
    f68c:	83 6d a4 01          	sub    DWORD PTR [rbp-0x5c],0x1
    f690:	83 6d a8 01          	sub    DWORD PTR [rbp-0x58],0x1
    f694:	83 7d a4 01          	cmp    DWORD PTR [rbp-0x5c],0x1
    f698:	0f 8f 90 fe ff ff    	jg     f52e <get_stem_contributions_d0+0x262>
    f69e:	90                   	nop
    f69f:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
    f6a4:	0f 84 81 00 00 00    	je     f72b <get_stem_contributions_d0+0x45f>
    f6aa:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    f6ad:	2b 45 ac             	sub    eax,DWORD PTR [rbp-0x54]
    f6b0:	83 e8 01             	sub    eax,0x1
    f6b3:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
    f6b6:	eb 6d                	jmp    f725 <get_stem_contributions_d0+0x459>
    f6b8:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
    f6bb:	48 98                	cdqe   
    f6bd:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    f6c5:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    f6c9:	48 01 d0             	add    rax,rdx
    f6cc:	8b 00                	mov    eax,DWORD PTR [rax]
    f6ce:	3d 80 96 98 00       	cmp    eax,0x989680
    f6d3:	74 4c                	je     f721 <get_stem_contributions_d0+0x455>
    f6d5:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
    f6d8:	8d 70 ff             	lea    esi,[rax-0x1]
    f6db:	48 8b 8d 78 ff ff ff 	mov    rcx,QWORD PTR [rbp-0x88]
    f6e2:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
    f6e5:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    f6e8:	4c 8b 45 f0          	mov    r8,QWORD PTR [rbp-0x10]
    f6ec:	89 c7                	mov    edi,eax
    f6ee:	41 ff d0             	call   r8
    f6f1:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
    f6f4:	48 63 d2             	movsxd rdx,edx
    f6f7:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
    f6ff:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    f703:	48 01 ca             	add    rdx,rcx
    f706:	8b 0a                	mov    ecx,DWORD PTR [rdx]
    f708:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
    f70b:	48 63 d2             	movsxd rdx,edx
    f70e:	48 8d 34 95 00 00 00 00 	lea    rsi,[rdx*4+0x0]
    f716:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    f71a:	48 01 f2             	add    rdx,rsi
    f71d:	01 c8                	add    eax,ecx
    f71f:	89 02                	mov    DWORD PTR [rdx],eax
    f721:	83 6d a4 01          	sub    DWORD PTR [rbp-0x5c],0x1
    f725:	83 7d a4 01          	cmp    DWORD PTR [rbp-0x5c],0x1
    f729:	7f 8d                	jg     f6b8 <get_stem_contributions_d0+0x3ec>
    f72b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    f72f:	48 83 c0 04          	add    rax,0x4
    f733:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
    f739:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    f73c:	48 98                	cdqe   
    f73e:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    f746:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    f74a:	48 01 d0             	add    rax,rdx
    f74d:	8b 00                	mov    eax,DWORD PTR [rax]
    f74f:	83 c0 01             	add    eax,0x1
    f752:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    f755:	8b 45 a8             	mov    eax,DWORD PTR [rbp-0x58]
    f758:	48 98                	cdqe   
    f75a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    f762:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    f766:	48 01 d0             	add    rax,rdx
    f769:	8b 00                	mov    eax,DWORD PTR [rax]
    f76b:	3d 80 96 98 00       	cmp    eax,0x989680
    f770:	0f 84 88 01 00 00    	je     f8fe <get_stem_contributions_d0+0x632>
    f776:	48 8b 4d 80          	mov    rcx,QWORD PTR [rbp-0x80]
    f77a:	8b 55 94             	mov    edx,DWORD PTR [rbp-0x6c]
    f77d:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    f780:	4c 8b 55 88          	mov    r10,QWORD PTR [rbp-0x78]
    f784:	49 89 c9             	mov    r9,rcx
    f787:	41 b8 0e 00 00 00    	mov    r8d,0xe
    f78d:	89 d1                	mov    ecx,edx
    f78f:	ba 01 00 00 00       	mov    edx,0x1
    f794:	89 c6                	mov    esi,eax
    f796:	bf 01 00 00 00       	mov    edi,0x1
    f79b:	41 ff d2             	call   r10
    f79e:	84 c0                	test   al,al
    f7a0:	0f 84 58 01 00 00    	je     f8fe <get_stem_contributions_d0+0x632>
    f7a6:	8b 45 a8             	mov    eax,DWORD PTR [rbp-0x58]
    f7a9:	48 98                	cdqe   
    f7ab:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    f7b3:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    f7b7:	48 01 d0             	add    rax,rdx
    f7ba:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    f7be:	48 83 c2 04          	add    rdx,0x4
    f7c2:	8b 00                	mov    eax,DWORD PTR [rax]
    f7c4:	89 02                	mov    DWORD PTR [rdx],eax
    f7c6:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    f7ca:	8b 00                	mov    eax,DWORD PTR [rax]
    f7cc:	85 c0                	test   eax,eax
    f7ce:	74 0a                	je     f7da <get_stem_contributions_d0+0x50e>
    f7d0:	83 f8 01             	cmp    eax,0x1
    f7d3:	74 4f                	je     f824 <get_stem_contributions_d0+0x558>
    f7d5:	e9 ec 00 00 00       	jmp    f8c6 <get_stem_contributions_d0+0x5fa>
    f7da:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    f7de:	8b 45 a8             	mov    eax,DWORD PTR [rbp-0x58]
    f7e1:	48 89 d6             	mov    rsi,rdx
    f7e4:	89 c7                	mov    edi,eax
    f7e6:	e8 50 e3 01 00       	call   2db3b <vrna_get_ptype>
    f7eb:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    f7ee:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
    f7f2:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    f7f5:	48 89 d1             	mov    rcx,rdx
    f7f8:	ba ff ff ff ff       	mov    edx,0xffffffff
    f7fd:	be ff ff ff ff       	mov    esi,0xffffffff
    f802:	89 c7                	mov    edi,eax
    f804:	e8 e2 e9 ff ff       	call   e1eb <vrna_E_ext_stem>
    f809:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    f80d:	48 83 c2 04          	add    rdx,0x4
    f811:	8b 0a                	mov    ecx,DWORD PTR [rdx]
    f813:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    f817:	48 83 c2 04          	add    rdx,0x4
    f81b:	01 c8                	add    eax,ecx
    f81d:	89 02                	mov    DWORD PTR [rdx],eax
    f81f:	e9 a2 00 00 00       	jmp    f8c6 <get_stem_contributions_d0+0x5fa>
    f824:	c7 45 a0 00 00 00 00 	mov    DWORD PTR [rbp-0x60],0x0
    f82b:	e9 89 00 00 00       	jmp    f8b9 <get_stem_contributions_d0+0x5ed>
    f830:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    f833:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    f83b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    f83f:	48 01 d0             	add    rax,rdx
    f842:	48 8b 00             	mov    rax,QWORD PTR [rax]
    f845:	8b 55 94             	mov    edx,DWORD PTR [rbp-0x6c]
    f848:	48 63 d2             	movsxd rdx,edx
    f84b:	48 01 d2             	add    rdx,rdx
    f84e:	48 01 d0             	add    rax,rdx
    f851:	0f b7 00             	movzx  eax,WORD PTR [rax]
    f854:	0f bf c8             	movsx  ecx,ax
    f857:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    f85a:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    f862:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    f866:	48 01 d0             	add    rax,rdx
    f869:	48 8b 00             	mov    rax,QWORD PTR [rax]
    f86c:	48 83 c0 02          	add    rax,0x2
    f870:	0f b7 00             	movzx  eax,WORD PTR [rax]
    f873:	98                   	cwde   
    f874:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    f878:	89 ce                	mov    esi,ecx
    f87a:	89 c7                	mov    edi,eax
    f87c:	e8 67 e2 01 00       	call   2dae8 <vrna_get_ptype_md>
    f881:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    f884:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
    f888:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    f88b:	48 89 d1             	mov    rcx,rdx
    f88e:	ba ff ff ff ff       	mov    edx,0xffffffff
    f893:	be ff ff ff ff       	mov    esi,0xffffffff
    f898:	89 c7                	mov    edi,eax
    f89a:	e8 4c e9 ff ff       	call   e1eb <vrna_E_ext_stem>
    f89f:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    f8a3:	48 83 c2 04          	add    rdx,0x4
    f8a7:	8b 0a                	mov    ecx,DWORD PTR [rdx]
    f8a9:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    f8ad:	48 83 c2 04          	add    rdx,0x4
    f8b1:	01 c8                	add    eax,ecx
    f8b3:	89 02                	mov    DWORD PTR [rdx],eax
    f8b5:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
    f8b9:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    f8bc:	3b 45 b0             	cmp    eax,DWORD PTR [rbp-0x50]
    f8bf:	0f 82 6b ff ff ff    	jb     f830 <get_stem_contributions_d0+0x564>
    f8c5:	90                   	nop
    f8c6:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    f8cb:	74 31                	je     f8fe <get_stem_contributions_d0+0x632>
    f8cd:	48 8b 8d 78 ff ff ff 	mov    rcx,QWORD PTR [rbp-0x88]
    f8d4:	8b 55 94             	mov    edx,DWORD PTR [rbp-0x6c]
    f8d7:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    f8da:	4c 8b 45 f8          	mov    r8,QWORD PTR [rbp-0x8]
    f8de:	be 01 00 00 00       	mov    esi,0x1
    f8e3:	89 c7                	mov    edi,eax
    f8e5:	41 ff d0             	call   r8
    f8e8:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    f8ec:	48 83 c2 04          	add    rdx,0x4
    f8f0:	8b 0a                	mov    ecx,DWORD PTR [rdx]
    f8f2:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    f8f6:	48 83 c2 04          	add    rdx,0x4
    f8fa:	01 c8                	add    eax,ecx
    f8fc:	89 02                	mov    DWORD PTR [rdx],eax
    f8fe:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    f902:	c9                   	leave  
    f903:	c3                   	ret    

000000000000f904 <f3_get_stem_contributions_d0>:
    f904:	55                   	push   rbp
    f905:	48 89 e5             	mov    rbp,rsp
    f908:	53                   	push   rbx
    f909:	48 81 ec a8 00 00 00 	sub    rsp,0xa8
    f910:	48 89 bd 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdi
    f917:	89 b5 74 ff ff ff    	mov    DWORD PTR [rbp-0x8c],esi
    f91d:	48 89 95 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rdx
    f924:	48 89 8d 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rcx
    f92b:	4c 89 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],r8
    f932:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    f939:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    f93c:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    f93f:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    f946:	8b 80 60 01 00 00    	mov    eax,DWORD PTR [rax+0x160]
    f94c:	89 45 94             	mov    DWORD PTR [rbp-0x6c],eax
    f94f:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    f956:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    f95a:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    f95e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    f962:	48 05 98 35 03 00    	add    rax,0x33598
    f968:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    f96c:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    f973:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    f977:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    f97b:	8b 95 74 ff ff ff    	mov    edx,DWORD PTR [rbp-0x8c]
    f981:	48 63 d2             	movsxd rdx,edx
    f984:	48 c1 e2 03          	shl    rdx,0x3
    f988:	48 01 d0             	add    rax,rdx
    f98b:	48 8b 00             	mov    rax,QWORD PTR [rax]
    f98e:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    f992:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    f998:	48 98                	cdqe   
    f99a:	48 c1 e0 02          	shl    rax,0x2
    f99e:	48 f7 d8             	neg    rax
    f9a1:	48 01 45 c0          	add    QWORD PTR [rbp-0x40],rax
    f9a5:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    f9a9:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    f9af:	89 45 98             	mov    DWORD PTR [rbp-0x68],eax
    f9b2:	48 c7 45 a8 00 00 00 00 	mov    QWORD PTR [rbp-0x58],0x0
    f9ba:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    f9c1:	8b 00                	mov    eax,DWORD PTR [rax]
    f9c3:	85 c0                	test   eax,eax
    f9c5:	75 10                	jne    f9d7 <f3_get_stem_contributions_d0+0xd3>
    f9c7:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    f9ce:	48 8b 80 68 01 00 00 	mov    rax,QWORD PTR [rax+0x168]
    f9d5:	eb 05                	jmp    f9dc <f3_get_stem_contributions_d0+0xd8>
    f9d7:	b8 00 00 00 00       	mov    eax,0x0
    f9dc:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    f9e0:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    f9e7:	8b 00                	mov    eax,DWORD PTR [rax]
    f9e9:	85 c0                	test   eax,eax
    f9eb:	74 0f                	je     f9fc <f3_get_stem_contributions_d0+0xf8>
    f9ed:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    f9f4:	8b 80 b8 00 00 00    	mov    eax,DWORD PTR [rax+0xb8]
    f9fa:	eb 05                	jmp    fa01 <f3_get_stem_contributions_d0+0xfd>
    f9fc:	b8 01 00 00 00       	mov    eax,0x1
    fa01:	89 45 9c             	mov    DWORD PTR [rbp-0x64],eax
    fa04:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    fa0b:	8b 00                	mov    eax,DWORD PTR [rax]
    fa0d:	85 c0                	test   eax,eax
    fa0f:	74 10                	je     fa21 <f3_get_stem_contributions_d0+0x11d>
    fa11:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    fa18:	48 8b 80 d0 00 00 00 	mov    rax,QWORD PTR [rax+0xd0]
    fa1f:	eb 05                	jmp    fa26 <f3_get_stem_contributions_d0+0x122>
    fa21:	b8 00 00 00 00       	mov    eax,0x0
    fa26:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    fa2a:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    fa2d:	83 c0 06             	add    eax,0x6
    fa30:	48 98                	cdqe   
    fa32:	c1 e0 02             	shl    eax,0x2
    fa35:	89 c7                	mov    edi,eax
    fa37:	e8 85 c4 01 00       	call   2bec1 <vrna_alloc>
    fa3c:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    fa40:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    fa46:	48 98                	cdqe   
    fa48:	48 c1 e0 02          	shl    rax,0x2
    fa4c:	48 f7 d8             	neg    rax
    fa4f:	48 01 45 d8          	add    QWORD PTR [rbp-0x28],rax
    fa53:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
    fa5a:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
    fa5e:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    fa62:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
    fa69:	48 8b 40 18          	mov    rax,QWORD PTR [rax+0x18]
    fa6d:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    fa71:	8b 95 74 ff ff ff    	mov    edx,DWORD PTR [rbp-0x8c]
    fa77:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    fa7a:	01 d0                	add    eax,edx
    fa7c:	89 c2                	mov    edx,eax
    fa7e:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
    fa81:	83 e8 01             	sub    eax,0x1
    fa84:	39 c2                	cmp    edx,eax
    fa86:	0f 46 c2             	cmovbe eax,edx
    fa89:	89 45 a0             	mov    DWORD PTR [rbp-0x60],eax
    fa8c:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    fa93:	8b 00                	mov    eax,DWORD PTR [rax]
    fa95:	85 c0                	test   eax,eax
    fa97:	74 0e                	je     faa7 <f3_get_stem_contributions_d0+0x1a3>
    fa99:	83 f8 01             	cmp    eax,0x1
    fa9c:	0f 84 00 01 00 00    	je     fba2 <f3_get_stem_contributions_d0+0x29e>
    faa2:	e9 9e 02 00 00       	jmp    fd45 <f3_get_stem_contributions_d0+0x441>
    faa7:	8b 95 74 ff ff ff    	mov    edx,DWORD PTR [rbp-0x8c]
    faad:	8b 45 98             	mov    eax,DWORD PTR [rbp-0x68]
    fab0:	01 d0                	add    eax,edx
    fab2:	83 c0 01             	add    eax,0x1
    fab5:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    fab8:	e9 d4 00 00 00       	jmp    fb91 <f3_get_stem_contributions_d0+0x28d>
    fabd:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    fac0:	48 98                	cdqe   
    fac2:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    faca:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    face:	48 01 d0             	add    rax,rdx
    fad1:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
    fad7:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    fada:	48 98                	cdqe   
    fadc:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    fae4:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    fae8:	48 01 d0             	add    rax,rdx
    faeb:	8b 00                	mov    eax,DWORD PTR [rax]
    faed:	3d 80 96 98 00       	cmp    eax,0x989680
    faf2:	0f 84 95 00 00 00    	je     fb8d <f3_get_stem_contributions_d0+0x289>
    faf8:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    fafb:	8d 48 01             	lea    ecx,[rax+0x1]
    fafe:	8b 75 90             	mov    esi,DWORD PTR [rbp-0x70]
    fb01:	48 8b bd 60 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa0]
    fb08:	8b 55 8c             	mov    edx,DWORD PTR [rbp-0x74]
    fb0b:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    fb11:	4c 8b 95 68 ff ff ff 	mov    r10,QWORD PTR [rbp-0x98]
    fb18:	49 89 f9             	mov    r9,rdi
    fb1b:	41 b8 10 00 00 00    	mov    r8d,0x10
    fb21:	89 c7                	mov    edi,eax
    fb23:	41 ff d2             	call   r10
    fb26:	84 c0                	test   al,al
    fb28:	74 63                	je     fb8d <f3_get_stem_contributions_d0+0x289>
    fb2a:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    fb2e:	8b 4d 8c             	mov    ecx,DWORD PTR [rbp-0x74]
    fb31:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    fb37:	89 ce                	mov    esi,ecx
    fb39:	89 c7                	mov    edi,eax
    fb3b:	e8 32 e0 01 00       	call   2db72 <vrna_get_ptype_window>
    fb40:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
    fb43:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    fb46:	48 98                	cdqe   
    fb48:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    fb50:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    fb54:	48 01 d0             	add    rax,rdx
    fb57:	8b 18                	mov    ebx,DWORD PTR [rax]
    fb59:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    fb5d:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
    fb60:	48 89 d1             	mov    rcx,rdx
    fb63:	ba ff ff ff ff       	mov    edx,0xffffffff
    fb68:	be ff ff ff ff       	mov    esi,0xffffffff
    fb6d:	89 c7                	mov    edi,eax
    fb6f:	e8 77 e6 ff ff       	call   e1eb <vrna_E_ext_stem>
    fb74:	8b 55 8c             	mov    edx,DWORD PTR [rbp-0x74]
    fb77:	48 63 d2             	movsxd rdx,edx
    fb7a:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
    fb82:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    fb86:	48 01 ca             	add    rdx,rcx
    fb89:	01 d8                	add    eax,ebx
    fb8b:	89 02                	mov    DWORD PTR [rdx],eax
    fb8d:	83 45 8c 01          	add    DWORD PTR [rbp-0x74],0x1
    fb91:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    fb94:	3b 45 a0             	cmp    eax,DWORD PTR [rbp-0x60]
    fb97:	0f 8e 20 ff ff ff    	jle    fabd <f3_get_stem_contributions_d0+0x1b9>
    fb9d:	e9 a3 01 00 00       	jmp    fd45 <f3_get_stem_contributions_d0+0x441>
    fba2:	8b 45 9c             	mov    eax,DWORD PTR [rbp-0x64]
    fba5:	01 c0                	add    eax,eax
    fba7:	89 c7                	mov    edi,eax
    fba9:	e8 13 c3 01 00       	call   2bec1 <vrna_alloc>
    fbae:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    fbb2:	c7 45 84 00 00 00 00 	mov    DWORD PTR [rbp-0x7c],0x0
    fbb9:	eb 3c                	jmp    fbf7 <f3_get_stem_contributions_d0+0x2f3>
    fbbb:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    fbbe:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    fbc6:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    fbca:	48 01 d0             	add    rax,rdx
    fbcd:	48 8b 00             	mov    rax,QWORD PTR [rax]
    fbd0:	8b 95 74 ff ff ff    	mov    edx,DWORD PTR [rbp-0x8c]
    fbd6:	48 63 d2             	movsxd rdx,edx
    fbd9:	48 01 d2             	add    rdx,rdx
    fbdc:	48 01 d0             	add    rax,rdx
    fbdf:	8b 55 84             	mov    edx,DWORD PTR [rbp-0x7c]
    fbe2:	48 8d 0c 12          	lea    rcx,[rdx+rdx*1]
    fbe6:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    fbea:	48 01 ca             	add    rdx,rcx
    fbed:	0f b7 00             	movzx  eax,WORD PTR [rax]
    fbf0:	66 89 02             	mov    WORD PTR [rdx],ax
    fbf3:	83 45 84 01          	add    DWORD PTR [rbp-0x7c],0x1
    fbf7:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    fbfa:	3b 45 9c             	cmp    eax,DWORD PTR [rbp-0x64]
    fbfd:	72 bc                	jb     fbbb <f3_get_stem_contributions_d0+0x2b7>
    fbff:	8b 95 74 ff ff ff    	mov    edx,DWORD PTR [rbp-0x8c]
    fc05:	8b 45 98             	mov    eax,DWORD PTR [rbp-0x68]
    fc08:	01 d0                	add    eax,edx
    fc0a:	83 c0 01             	add    eax,0x1
    fc0d:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    fc10:	e9 23 01 00 00       	jmp    fd38 <f3_get_stem_contributions_d0+0x434>
    fc15:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    fc18:	48 98                	cdqe   
    fc1a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    fc22:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    fc26:	48 01 d0             	add    rax,rdx
    fc29:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
    fc2f:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    fc32:	48 98                	cdqe   
    fc34:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    fc3c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    fc40:	48 01 d0             	add    rax,rdx
    fc43:	8b 00                	mov    eax,DWORD PTR [rax]
    fc45:	3d 80 96 98 00       	cmp    eax,0x989680
    fc4a:	0f 84 e4 00 00 00    	je     fd34 <f3_get_stem_contributions_d0+0x430>
    fc50:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    fc53:	8d 48 01             	lea    ecx,[rax+0x1]
    fc56:	8b 75 90             	mov    esi,DWORD PTR [rbp-0x70]
    fc59:	48 8b bd 60 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa0]
    fc60:	8b 55 8c             	mov    edx,DWORD PTR [rbp-0x74]
    fc63:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    fc69:	4c 8b 95 68 ff ff ff 	mov    r10,QWORD PTR [rbp-0x98]
    fc70:	49 89 f9             	mov    r9,rdi
    fc73:	41 b8 10 00 00 00    	mov    r8d,0x10
    fc79:	89 c7                	mov    edi,eax
    fc7b:	41 ff d2             	call   r10
    fc7e:	84 c0                	test   al,al
    fc80:	0f 84 ae 00 00 00    	je     fd34 <f3_get_stem_contributions_d0+0x430>
    fc86:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    fc89:	48 98                	cdqe   
    fc8b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    fc93:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    fc97:	48 01 d0             	add    rax,rdx
    fc9a:	8b 00                	mov    eax,DWORD PTR [rax]
    fc9c:	89 45 88             	mov    DWORD PTR [rbp-0x78],eax
    fc9f:	c7 45 84 00 00 00 00 	mov    DWORD PTR [rbp-0x7c],0x0
    fca6:	eb 6b                	jmp    fd13 <f3_get_stem_contributions_d0+0x40f>
    fca8:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    fcab:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    fcb3:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    fcb7:	48 01 d0             	add    rax,rdx
    fcba:	48 8b 00             	mov    rax,QWORD PTR [rax]
    fcbd:	8b 55 8c             	mov    edx,DWORD PTR [rbp-0x74]
    fcc0:	48 63 d2             	movsxd rdx,edx
    fcc3:	48 01 d2             	add    rdx,rdx
    fcc6:	48 01 d0             	add    rax,rdx
    fcc9:	0f b7 00             	movzx  eax,WORD PTR [rax]
    fccc:	0f bf c8             	movsx  ecx,ax
    fccf:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    fcd2:	48 8d 14 00          	lea    rdx,[rax+rax*1]
    fcd6:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    fcda:	48 01 d0             	add    rax,rdx
    fcdd:	0f b7 00             	movzx  eax,WORD PTR [rax]
    fce0:	98                   	cwde   
    fce1:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    fce5:	89 ce                	mov    esi,ecx
    fce7:	89 c7                	mov    edi,eax
    fce9:	e8 fa dd 01 00       	call   2dae8 <vrna_get_ptype_md>
    fcee:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
    fcf1:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    fcf5:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
    fcf8:	48 89 d1             	mov    rcx,rdx
    fcfb:	ba ff ff ff ff       	mov    edx,0xffffffff
    fd00:	be ff ff ff ff       	mov    esi,0xffffffff
    fd05:	89 c7                	mov    edi,eax
    fd07:	e8 df e4 ff ff       	call   e1eb <vrna_E_ext_stem>
    fd0c:	01 45 88             	add    DWORD PTR [rbp-0x78],eax
    fd0f:	83 45 84 01          	add    DWORD PTR [rbp-0x7c],0x1
    fd13:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    fd16:	3b 45 9c             	cmp    eax,DWORD PTR [rbp-0x64]
    fd19:	72 8d                	jb     fca8 <f3_get_stem_contributions_d0+0x3a4>
    fd1b:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    fd1e:	48 98                	cdqe   
    fd20:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    fd28:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    fd2c:	48 01 c2             	add    rdx,rax
    fd2f:	8b 45 88             	mov    eax,DWORD PTR [rbp-0x78]
    fd32:	89 02                	mov    DWORD PTR [rdx],eax
    fd34:	83 45 8c 01          	add    DWORD PTR [rbp-0x74],0x1
    fd38:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    fd3b:	3b 45 a0             	cmp    eax,DWORD PTR [rbp-0x60]
    fd3e:	0f 8e d1 fe ff ff    	jle    fc15 <f3_get_stem_contributions_d0+0x311>
    fd44:	90                   	nop
    fd45:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
    fd4a:	0f 84 90 00 00 00    	je     fde0 <f3_get_stem_contributions_d0+0x4dc>
    fd50:	8b 95 74 ff ff ff    	mov    edx,DWORD PTR [rbp-0x8c]
    fd56:	8b 45 98             	mov    eax,DWORD PTR [rbp-0x68]
    fd59:	01 d0                	add    eax,edx
    fd5b:	83 c0 01             	add    eax,0x1
    fd5e:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    fd61:	eb 75                	jmp    fdd8 <f3_get_stem_contributions_d0+0x4d4>
    fd63:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    fd66:	48 98                	cdqe   
    fd68:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    fd70:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    fd74:	48 01 d0             	add    rax,rdx
    fd77:	8b 00                	mov    eax,DWORD PTR [rax]
    fd79:	3d 80 96 98 00       	cmp    eax,0x989680
    fd7e:	74 54                	je     fdd4 <f3_get_stem_contributions_d0+0x4d0>
    fd80:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    fd83:	8d 78 01             	lea    edi,[rax+0x1]
    fd86:	48 8b 95 58 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xa8]
    fd8d:	8b 75 8c             	mov    esi,DWORD PTR [rbp-0x74]
    fd90:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    fd96:	4c 8b 45 e0          	mov    r8,QWORD PTR [rbp-0x20]
    fd9a:	48 89 d1             	mov    rcx,rdx
    fd9d:	89 fa                	mov    edx,edi
    fd9f:	89 c7                	mov    edi,eax
    fda1:	41 ff d0             	call   r8
    fda4:	8b 55 8c             	mov    edx,DWORD PTR [rbp-0x74]
    fda7:	48 63 d2             	movsxd rdx,edx
    fdaa:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
    fdb2:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    fdb6:	48 01 ca             	add    rdx,rcx
    fdb9:	8b 0a                	mov    ecx,DWORD PTR [rdx]
    fdbb:	8b 55 8c             	mov    edx,DWORD PTR [rbp-0x74]
    fdbe:	48 63 d2             	movsxd rdx,edx
    fdc1:	48 8d 34 95 00 00 00 00 	lea    rsi,[rdx*4+0x0]
    fdc9:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    fdcd:	48 01 f2             	add    rdx,rsi
    fdd0:	01 c8                	add    eax,ecx
    fdd2:	89 02                	mov    DWORD PTR [rdx],eax
    fdd4:	83 45 8c 01          	add    DWORD PTR [rbp-0x74],0x1
    fdd8:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    fddb:	3b 45 a0             	cmp    eax,DWORD PTR [rbp-0x60]
    fdde:	7e 83                	jle    fd63 <f3_get_stem_contributions_d0+0x45f>
    fde0:	8b 95 74 ff ff ff    	mov    edx,DWORD PTR [rbp-0x8c]
    fde6:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    fde9:	01 d0                	add    eax,edx
    fdeb:	39 45 90             	cmp    DWORD PTR [rbp-0x70],eax
    fdee:	0f 87 a1 01 00 00    	ja     ff95 <f3_get_stem_contributions_d0+0x691>
    fdf4:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
    fdf7:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    fdfa:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    fdfd:	48 98                	cdqe   
    fdff:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    fe07:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    fe0b:	48 01 d0             	add    rax,rdx
    fe0e:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
    fe14:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    fe17:	48 98                	cdqe   
    fe19:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    fe21:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    fe25:	48 01 d0             	add    rax,rdx
    fe28:	8b 00                	mov    eax,DWORD PTR [rax]
    fe2a:	3d 80 96 98 00       	cmp    eax,0x989680
    fe2f:	0f 84 86 01 00 00    	je     ffbb <f3_get_stem_contributions_d0+0x6b7>
    fe35:	48 8b bd 60 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa0]
    fe3c:	8b 4d 8c             	mov    ecx,DWORD PTR [rbp-0x74]
    fe3f:	8b 95 74 ff ff ff    	mov    edx,DWORD PTR [rbp-0x8c]
    fe45:	8b 75 8c             	mov    esi,DWORD PTR [rbp-0x74]
    fe48:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    fe4e:	4c 8b 95 68 ff ff ff 	mov    r10,QWORD PTR [rbp-0x98]
    fe55:	49 89 f9             	mov    r9,rdi
    fe58:	41 b8 0e 00 00 00    	mov    r8d,0xe
    fe5e:	89 c7                	mov    edi,eax
    fe60:	41 ff d2             	call   r10
    fe63:	84 c0                	test   al,al
    fe65:	0f 84 50 01 00 00    	je     ffbb <f3_get_stem_contributions_d0+0x6b7>
    fe6b:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    fe6e:	48 98                	cdqe   
    fe70:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    fe78:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    fe7c:	48 01 d0             	add    rax,rdx
    fe7f:	8b 00                	mov    eax,DWORD PTR [rax]
    fe81:	89 45 88             	mov    DWORD PTR [rbp-0x78],eax
    fe84:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    fe8b:	8b 00                	mov    eax,DWORD PTR [rax]
    fe8d:	85 c0                	test   eax,eax
    fe8f:	74 0a                	je     fe9b <f3_get_stem_contributions_d0+0x597>
    fe91:	83 f8 01             	cmp    eax,0x1
    fe94:	74 3e                	je     fed4 <f3_get_stem_contributions_d0+0x5d0>
    fe96:	e9 b6 00 00 00       	jmp    ff51 <f3_get_stem_contributions_d0+0x64d>
    fe9b:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    fe9f:	8b 4d 8c             	mov    ecx,DWORD PTR [rbp-0x74]
    fea2:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    fea8:	89 ce                	mov    esi,ecx
    feaa:	89 c7                	mov    edi,eax
    feac:	e8 c1 dc 01 00       	call   2db72 <vrna_get_ptype_window>
    feb1:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
    feb4:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    feb8:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
    febb:	48 89 d1             	mov    rcx,rdx
    febe:	ba ff ff ff ff       	mov    edx,0xffffffff
    fec3:	be ff ff ff ff       	mov    esi,0xffffffff
    fec8:	89 c7                	mov    edi,eax
    feca:	e8 1c e3 ff ff       	call   e1eb <vrna_E_ext_stem>
    fecf:	01 45 88             	add    DWORD PTR [rbp-0x78],eax
    fed2:	eb 7d                	jmp    ff51 <f3_get_stem_contributions_d0+0x64d>
    fed4:	c7 45 84 00 00 00 00 	mov    DWORD PTR [rbp-0x7c],0x0
    fedb:	eb 6b                	jmp    ff48 <f3_get_stem_contributions_d0+0x644>
    fedd:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    fee0:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
    fee8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    feec:	48 01 d0             	add    rax,rdx
    feef:	48 8b 00             	mov    rax,QWORD PTR [rax]
    fef2:	8b 55 8c             	mov    edx,DWORD PTR [rbp-0x74]
    fef5:	48 63 d2             	movsxd rdx,edx
    fef8:	48 01 d2             	add    rdx,rdx
    fefb:	48 01 d0             	add    rax,rdx
    fefe:	0f b7 00             	movzx  eax,WORD PTR [rax]
    ff01:	0f bf c8             	movsx  ecx,ax
    ff04:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    ff07:	48 8d 14 00          	lea    rdx,[rax+rax*1]
    ff0b:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    ff0f:	48 01 d0             	add    rax,rdx
    ff12:	0f b7 00             	movzx  eax,WORD PTR [rax]
    ff15:	98                   	cwde   
    ff16:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    ff1a:	89 ce                	mov    esi,ecx
    ff1c:	89 c7                	mov    edi,eax
    ff1e:	e8 c5 db 01 00       	call   2dae8 <vrna_get_ptype_md>
    ff23:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
    ff26:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    ff2a:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
    ff2d:	48 89 d1             	mov    rcx,rdx
    ff30:	ba ff ff ff ff       	mov    edx,0xffffffff
    ff35:	be ff ff ff ff       	mov    esi,0xffffffff
    ff3a:	89 c7                	mov    edi,eax
    ff3c:	e8 aa e2 ff ff       	call   e1eb <vrna_E_ext_stem>
    ff41:	01 45 88             	add    DWORD PTR [rbp-0x78],eax
    ff44:	83 45 84 01          	add    DWORD PTR [rbp-0x7c],0x1
    ff48:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    ff4b:	3b 45 9c             	cmp    eax,DWORD PTR [rbp-0x64]
    ff4e:	72 8d                	jb     fedd <f3_get_stem_contributions_d0+0x5d9>
    ff50:	90                   	nop
    ff51:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
    ff56:	74 22                	je     ff7a <f3_get_stem_contributions_d0+0x676>
    ff58:	48 8b 8d 58 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xa8]
    ff5f:	8b 55 8c             	mov    edx,DWORD PTR [rbp-0x74]
    ff62:	8b b5 74 ff ff ff    	mov    esi,DWORD PTR [rbp-0x8c]
    ff68:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    ff6e:	4c 8b 45 e8          	mov    r8,QWORD PTR [rbp-0x18]
    ff72:	89 c7                	mov    edi,eax
    ff74:	41 ff d0             	call   r8
    ff77:	01 45 88             	add    DWORD PTR [rbp-0x78],eax
    ff7a:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    ff7d:	48 98                	cdqe   
    ff7f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    ff87:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ff8b:	48 01 c2             	add    rdx,rax
    ff8e:	8b 45 88             	mov    eax,DWORD PTR [rbp-0x78]
    ff91:	89 02                	mov    DWORD PTR [rdx],eax
    ff93:	eb 26                	jmp    ffbb <f3_get_stem_contributions_d0+0x6b7>
    ff95:	8b 95 74 ff ff ff    	mov    edx,DWORD PTR [rbp-0x8c]
    ff9b:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    ff9e:	01 d0                	add    eax,edx
    ffa0:	48 98                	cdqe   
    ffa2:	48 83 c0 01          	add    rax,0x1
    ffa6:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
    ffae:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ffb2:	48 01 d0             	add    rax,rdx
    ffb5:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
    ffbb:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    ffbf:	48 89 c7             	mov    rdi,rax
    ffc2:	e8 e9 38 ff ff       	call   38b0 <free@plt>
    ffc7:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ffcb:	48 81 c4 a8 00 00 00 	add    rsp,0xa8
    ffd2:	5b                   	pop    rbx
    ffd3:	5d                   	pop    rbp
    ffd4:	c3                   	ret    

000000000000ffd5 <get_stem_contributions_d2>:
    ffd5:	55                   	push   rbp
    ffd6:	48 89 e5             	mov    rbp,rsp
    ffd9:	53                   	push   rbx
    ffda:	48 81 ec e8 00 00 00 	sub    rsp,0xe8
    ffe1:	48 89 bd 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rdi
    ffe8:	89 b5 34 ff ff ff    	mov    DWORD PTR [rbp-0xcc],esi
    ffee:	48 89 95 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdx
    fff5:	48 89 8d 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rcx
    fffc:	4c 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],r8
   10003:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [rbp-0xcc]
   10009:	48 98                	cdqe   
   1000b:	c1 e0 02             	shl    eax,0x2
   1000e:	89 c7                	mov    edi,eax
   10010:	e8 ac be 01 00       	call   2bec1 <vrna_alloc>
   10015:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
   1001c:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
   10023:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
   10026:	89 85 5c ff ff ff    	mov    DWORD PTR [rbp-0xa4],eax
   1002c:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
   10033:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
   10037:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
   1003b:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
   1003f:	48 05 98 35 03 00    	add    rax,0x33598
   10045:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
   10049:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
   10050:	48 8b 40 78          	mov    rax,QWORD PTR [rax+0x78]
   10054:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
   10058:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
   1005f:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
   10063:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
   10067:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
   1006b:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
   1006f:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
   10075:	89 85 60 ff ff ff    	mov    DWORD PTR [rbp-0xa0],eax
   1007b:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [rbp-0xcc]
   10081:	48 98                	cdqe   
   10083:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1008b:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
   1008f:	48 01 d0             	add    rax,rdx
   10092:	8b 10                	mov    edx,DWORD PTR [rax]
   10094:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [rbp-0xcc]
   1009a:	01 d0                	add    eax,edx
   1009c:	2b 85 60 ff ff ff    	sub    eax,DWORD PTR [rbp-0xa0]
   100a2:	83 e8 01             	sub    eax,0x1
   100a5:	89 85 58 ff ff ff    	mov    DWORD PTR [rbp-0xa8],eax
   100ab:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
   100b2:	48 8b 40 18          	mov    rax,QWORD PTR [rax+0x18]
   100b6:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
   100ba:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
   100c1:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
   100c5:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
   100c9:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
   100d0:	8b 00                	mov    eax,DWORD PTR [rax]
   100d2:	85 c0                	test   eax,eax
   100d4:	74 0e                	je     100e4 <get_stem_contributions_d2+0x10f>
   100d6:	83 f8 01             	cmp    eax,0x1
   100d9:	0f 84 bd 03 00 00    	je     1049c <get_stem_contributions_d2+0x4c7>
   100df:	e9 0b 0a 00 00       	jmp    10aef <get_stem_contributions_d2+0xb1a>
   100e4:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
   100eb:	48 8b 80 b8 00 00 00 	mov    rax,QWORD PTR [rax+0xb8]
   100f2:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
   100f6:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
   100fd:	48 8b 80 c8 00 00 00 	mov    rax,QWORD PTR [rax+0xc8]
   10104:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
   10108:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [rbp-0xcc]
   1010e:	48 63 d0             	movsxd rdx,eax
   10111:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa0]
   10117:	48 98                	cdqe   
   10119:	48 29 c2             	sub    rdx,rax
   1011c:	48 89 d0             	mov    rax,rdx
   1011f:	48 01 c0             	add    rax,rax
   10122:	48 8d 50 fc          	lea    rdx,[rax-0x4]
   10126:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   1012a:	48 01 d0             	add    rax,rdx
   1012d:	48 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rax
   10134:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [rbp-0xcc]
   1013a:	3b 85 5c ff ff ff    	cmp    eax,DWORD PTR [rbp-0xa4]
   10140:	7d 1c                	jge    1015e <get_stem_contributions_d2+0x189>
   10142:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [rbp-0xcc]
   10148:	48 98                	cdqe   
   1014a:	48 83 c0 01          	add    rax,0x1
   1014e:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   10152:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   10156:	48 01 d0             	add    rax,rdx
   10159:	0f b7 00             	movzx  eax,WORD PTR [rax]
   1015c:	eb 05                	jmp    10163 <get_stem_contributions_d2+0x18e>
   1015e:	b8 ff ff ff ff       	mov    eax,0xffffffff
   10163:	66 89 85 4e ff ff ff 	mov    WORD PTR [rbp-0xb2],ax
   1016a:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [rbp-0xcc]
   10170:	2b 85 60 ff ff ff    	sub    eax,DWORD PTR [rbp-0xa0]
   10176:	83 e8 01             	sub    eax,0x1
   10179:	89 85 54 ff ff ff    	mov    DWORD PTR [rbp-0xac],eax
   1017f:	e9 0f 01 00 00       	jmp    10293 <get_stem_contributions_d2+0x2be>
   10184:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   1018a:	48 98                	cdqe   
   1018c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   10194:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
   1019b:	48 01 d0             	add    rax,rdx
   1019e:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
   101a4:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
   101aa:	48 98                	cdqe   
   101ac:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   101b4:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   101b8:	48 01 d0             	add    rax,rdx
   101bb:	8b 00                	mov    eax,DWORD PTR [rax]
   101bd:	3d 80 96 98 00       	cmp    eax,0x989680
   101c2:	0f 84 b5 00 00 00    	je     1027d <get_stem_contributions_d2+0x2a8>
   101c8:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   101ce:	8d 70 ff             	lea    esi,[rax-0x1]
   101d1:	48 8b 8d 20 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xe0]
   101d8:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   101de:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [rbp-0xcc]
   101e4:	4c 8b 95 28 ff ff ff 	mov    r10,QWORD PTR [rbp-0xd8]
   101eb:	49 89 c9             	mov    r9,rcx
   101ee:	41 b8 12 00 00 00    	mov    r8d,0x12
   101f4:	89 d1                	mov    ecx,edx
   101f6:	89 f2                	mov    edx,esi
   101f8:	89 c6                	mov    esi,eax
   101fa:	bf 01 00 00 00       	mov    edi,0x1
   101ff:	41 ff d2             	call   r10
   10202:	84 c0                	test   al,al
   10204:	74 77                	je     1027d <get_stem_contributions_d2+0x2a8>
   10206:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
   1020a:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
   10210:	48 89 d6             	mov    rsi,rdx
   10213:	89 c7                	mov    edi,eax
   10215:	e8 21 d9 01 00       	call   2db3b <vrna_get_ptype>
   1021a:	89 85 68 ff ff ff    	mov    DWORD PTR [rbp-0x98],eax
   10220:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
   10226:	48 98                	cdqe   
   10228:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   10230:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   10234:	48 01 d0             	add    rax,rdx
   10237:	8b 18                	mov    ebx,DWORD PTR [rax]
   10239:	0f bf 95 4e ff ff ff 	movsx  edx,WORD PTR [rbp-0xb2]
   10240:	48 8b 85 70 ff ff ff 	mov    rax,QWORD PTR [rbp-0x90]
   10247:	0f b7 00             	movzx  eax,WORD PTR [rax]
   1024a:	0f bf f0             	movsx  esi,ax
   1024d:	48 8b 4d 80          	mov    rcx,QWORD PTR [rbp-0x80]
   10251:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   10257:	89 c7                	mov    edi,eax
   10259:	e8 8d df ff ff       	call   e1eb <vrna_E_ext_stem>
   1025e:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   10264:	48 63 d2             	movsxd rdx,edx
   10267:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   1026f:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
   10276:	48 01 ca             	add    rdx,rcx
   10279:	01 d8                	add    eax,ebx
   1027b:	89 02                	mov    DWORD PTR [rdx],eax
   1027d:	83 ad 54 ff ff ff 01 	sub    DWORD PTR [rbp-0xac],0x1
   10284:	83 ad 58 ff ff ff 01 	sub    DWORD PTR [rbp-0xa8],0x1
   1028b:	48 83 ad 70 ff ff ff 02 	sub    QWORD PTR [rbp-0x90],0x2
   10293:	83 bd 54 ff ff ff 01 	cmp    DWORD PTR [rbp-0xac],0x1
   1029a:	0f 8f e4 fe ff ff    	jg     10184 <get_stem_contributions_d2+0x1af>
   102a0:	48 83 7d a0 00       	cmp    QWORD PTR [rbp-0x60],0x0
   102a5:	0f 84 b2 00 00 00    	je     1035d <get_stem_contributions_d2+0x388>
   102ab:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [rbp-0xcc]
   102b1:	2b 85 60 ff ff ff    	sub    eax,DWORD PTR [rbp-0xa0]
   102b7:	83 e8 01             	sub    eax,0x1
   102ba:	89 85 54 ff ff ff    	mov    DWORD PTR [rbp-0xac],eax
   102c0:	e9 8b 00 00 00       	jmp    10350 <get_stem_contributions_d2+0x37b>
   102c5:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   102cb:	48 98                	cdqe   
   102cd:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   102d5:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
   102dc:	48 01 d0             	add    rax,rdx
   102df:	8b 00                	mov    eax,DWORD PTR [rax]
   102e1:	3d 80 96 98 00       	cmp    eax,0x989680
   102e6:	74 61                	je     10349 <get_stem_contributions_d2+0x374>
   102e8:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   102ee:	8d 70 ff             	lea    esi,[rax-0x1]
   102f1:	48 8b 8d 18 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xe8]
   102f8:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   102fe:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [rbp-0xcc]
   10304:	4c 8b 45 a0          	mov    r8,QWORD PTR [rbp-0x60]
   10308:	89 c7                	mov    edi,eax
   1030a:	41 ff d0             	call   r8
   1030d:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   10313:	48 63 d2             	movsxd rdx,edx
   10316:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   1031e:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
   10325:	48 01 ca             	add    rdx,rcx
   10328:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   1032a:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   10330:	48 63 d2             	movsxd rdx,edx
   10333:	48 8d 34 95 00 00 00 00 	lea    rsi,[rdx*4+0x0]
   1033b:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
   10342:	48 01 f2             	add    rdx,rsi
   10345:	01 c8                	add    eax,ecx
   10347:	89 02                	mov    DWORD PTR [rdx],eax
   10349:	83 ad 54 ff ff ff 01 	sub    DWORD PTR [rbp-0xac],0x1
   10350:	83 bd 54 ff ff ff 01 	cmp    DWORD PTR [rbp-0xac],0x1
   10357:	0f 8f 68 ff ff ff    	jg     102c5 <get_stem_contributions_d2+0x2f0>
   1035d:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
   10364:	48 83 c0 04          	add    rax,0x4
   10368:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
   1036e:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [rbp-0xcc]
   10374:	48 98                	cdqe   
   10376:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1037e:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
   10382:	48 01 d0             	add    rax,rdx
   10385:	8b 00                	mov    eax,DWORD PTR [rax]
   10387:	83 c0 01             	add    eax,0x1
   1038a:	89 85 58 ff ff ff    	mov    DWORD PTR [rbp-0xa8],eax
   10390:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
   10396:	48 98                	cdqe   
   10398:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   103a0:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   103a4:	48 01 d0             	add    rax,rdx
   103a7:	8b 00                	mov    eax,DWORD PTR [rax]
   103a9:	3d 80 96 98 00       	cmp    eax,0x989680
   103ae:	0f 84 3a 07 00 00    	je     10aee <get_stem_contributions_d2+0xb19>
   103b4:	48 8b 8d 20 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xe0]
   103bb:	8b 95 34 ff ff ff    	mov    edx,DWORD PTR [rbp-0xcc]
   103c1:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [rbp-0xcc]
   103c7:	4c 8b 95 28 ff ff ff 	mov    r10,QWORD PTR [rbp-0xd8]
   103ce:	49 89 c9             	mov    r9,rcx
   103d1:	41 b8 0e 00 00 00    	mov    r8d,0xe
   103d7:	89 d1                	mov    ecx,edx
   103d9:	ba 01 00 00 00       	mov    edx,0x1
   103de:	89 c6                	mov    esi,eax
   103e0:	bf 01 00 00 00       	mov    edi,0x1
   103e5:	41 ff d2             	call   r10
   103e8:	84 c0                	test   al,al
   103ea:	0f 84 fe 06 00 00    	je     10aee <get_stem_contributions_d2+0xb19>
   103f0:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
   103f4:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
   103fa:	48 89 d6             	mov    rsi,rdx
   103fd:	89 c7                	mov    edi,eax
   103ff:	e8 37 d7 01 00       	call   2db3b <vrna_get_ptype>
   10404:	89 85 68 ff ff ff    	mov    DWORD PTR [rbp-0x98],eax
   1040a:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
   10410:	48 98                	cdqe   
   10412:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1041a:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   1041e:	48 01 d0             	add    rax,rdx
   10421:	8b 18                	mov    ebx,DWORD PTR [rax]
   10423:	0f bf 95 4e ff ff ff 	movsx  edx,WORD PTR [rbp-0xb2]
   1042a:	48 8b 4d 80          	mov    rcx,QWORD PTR [rbp-0x80]
   1042e:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   10434:	be ff ff ff ff       	mov    esi,0xffffffff
   10439:	89 c7                	mov    edi,eax
   1043b:	e8 ab dd ff ff       	call   e1eb <vrna_E_ext_stem>
   10440:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
   10447:	48 83 c2 04          	add    rdx,0x4
   1044b:	01 d8                	add    eax,ebx
   1044d:	89 02                	mov    DWORD PTR [rdx],eax
   1044f:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
   10454:	0f 84 94 06 00 00    	je     10aee <get_stem_contributions_d2+0xb19>
   1045a:	48 8b 8d 18 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xe8]
   10461:	8b 95 34 ff ff ff    	mov    edx,DWORD PTR [rbp-0xcc]
   10467:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [rbp-0xcc]
   1046d:	4c 8b 45 a8          	mov    r8,QWORD PTR [rbp-0x58]
   10471:	be 01 00 00 00       	mov    esi,0x1
   10476:	89 c7                	mov    edi,eax
   10478:	41 ff d0             	call   r8
   1047b:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
   10482:	48 83 c2 04          	add    rdx,0x4
   10486:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   10488:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
   1048f:	48 83 c2 04          	add    rdx,0x4
   10493:	01 c8                	add    eax,ecx
   10495:	89 02                	mov    DWORD PTR [rdx],eax
   10497:	e9 52 06 00 00       	jmp    10aee <get_stem_contributions_d2+0xb19>
   1049c:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
   104a3:	8b 80 b8 00 00 00    	mov    eax,DWORD PTR [rax+0xb8]
   104a9:	89 85 64 ff ff ff    	mov    DWORD PTR [rbp-0x9c],eax
   104af:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
   104b6:	48 8b 80 d0 00 00 00 	mov    rax,QWORD PTR [rax+0xd0]
   104bd:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
   104c1:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
   104c8:	48 8b 80 d8 00 00 00 	mov    rax,QWORD PTR [rax+0xd8]
   104cf:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
   104d3:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
   104da:	48 8b 80 e0 00 00 00 	mov    rax,QWORD PTR [rax+0xe0]
   104e1:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
   104e5:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
   104ec:	48 8b 80 f0 00 00 00 	mov    rax,QWORD PTR [rax+0xf0]
   104f3:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
   104f7:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   104fd:	01 c0                	add    eax,eax
   104ff:	89 c7                	mov    edi,eax
   10501:	e8 bb b9 01 00       	call   2bec1 <vrna_alloc>
   10506:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
   1050a:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   10510:	01 c0                	add    eax,eax
   10512:	89 c7                	mov    edi,eax
   10514:	e8 a8 b9 01 00       	call   2bec1 <vrna_alloc>
   10519:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
   1051d:	c7 85 50 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xb0],0x0
   10527:	e9 e2 00 00 00       	jmp    1060e <get_stem_contributions_d2+0x639>
   1052c:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [rbp-0xb0]
   10532:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   1053a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   1053e:	48 01 d0             	add    rax,rdx
   10541:	48 8b 00             	mov    rax,QWORD PTR [rax]
   10544:	8b 95 34 ff ff ff    	mov    edx,DWORD PTR [rbp-0xcc]
   1054a:	48 63 d2             	movsxd rdx,edx
   1054d:	48 c1 e2 02          	shl    rdx,0x2
   10551:	48 01 d0             	add    rax,rdx
   10554:	8b 10                	mov    edx,DWORD PTR [rax]
   10556:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [rbp-0xb0]
   1055c:	48 8d 0c c5 00 00 00 00 	lea    rcx,[rax*8+0x0]
   10564:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   10568:	48 01 c8             	add    rax,rcx
   1056b:	48 8b 00             	mov    rax,QWORD PTR [rax]
   1056e:	8b 8d 5c ff ff ff    	mov    ecx,DWORD PTR [rbp-0xa4]
   10574:	48 63 c9             	movsxd rcx,ecx
   10577:	48 c1 e1 02          	shl    rcx,0x2
   1057b:	48 01 c8             	add    rax,rcx
   1057e:	8b 00                	mov    eax,DWORD PTR [rax]
   10580:	39 c2                	cmp    edx,eax
   10582:	73 2c                	jae    105b0 <get_stem_contributions_d2+0x5db>
   10584:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [rbp-0xb0]
   1058a:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   10592:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   10596:	48 01 d0             	add    rax,rdx
   10599:	48 8b 00             	mov    rax,QWORD PTR [rax]
   1059c:	8b 95 34 ff ff ff    	mov    edx,DWORD PTR [rbp-0xcc]
   105a2:	48 63 d2             	movsxd rdx,edx
   105a5:	48 01 d2             	add    rdx,rdx
   105a8:	48 01 d0             	add    rax,rdx
   105ab:	0f b7 00             	movzx  eax,WORD PTR [rax]
   105ae:	eb 05                	jmp    105b5 <get_stem_contributions_d2+0x5e0>
   105b0:	b8 ff ff ff ff       	mov    eax,0xffffffff
   105b5:	8b 95 50 ff ff ff    	mov    edx,DWORD PTR [rbp-0xb0]
   105bb:	48 8d 0c 12          	lea    rcx,[rdx+rdx*1]
   105bf:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
   105c3:	48 01 ca             	add    rdx,rcx
   105c6:	66 89 02             	mov    WORD PTR [rdx],ax
   105c9:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [rbp-0xb0]
   105cf:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   105d7:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
   105db:	48 01 d0             	add    rax,rdx
   105de:	48 8b 00             	mov    rax,QWORD PTR [rax]
   105e1:	8b 95 34 ff ff ff    	mov    edx,DWORD PTR [rbp-0xcc]
   105e7:	48 63 d2             	movsxd rdx,edx
   105ea:	48 01 d2             	add    rdx,rdx
   105ed:	48 01 d0             	add    rax,rdx
   105f0:	8b 95 50 ff ff ff    	mov    edx,DWORD PTR [rbp-0xb0]
   105f6:	48 8d 0c 12          	lea    rcx,[rdx+rdx*1]
   105fa:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
   105fe:	48 01 ca             	add    rdx,rcx
   10601:	0f b7 00             	movzx  eax,WORD PTR [rax]
   10604:	66 89 02             	mov    WORD PTR [rdx],ax
   10607:	83 85 50 ff ff ff 01 	add    DWORD PTR [rbp-0xb0],0x1
   1060e:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [rbp-0xb0]
   10614:	3b 85 64 ff ff ff    	cmp    eax,DWORD PTR [rbp-0x9c]
   1061a:	0f 82 0c ff ff ff    	jb     1052c <get_stem_contributions_d2+0x557>
   10620:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [rbp-0xcc]
   10626:	2b 85 60 ff ff ff    	sub    eax,DWORD PTR [rbp-0xa0]
   1062c:	83 e8 01             	sub    eax,0x1
   1062f:	89 85 54 ff ff ff    	mov    DWORD PTR [rbp-0xac],eax
   10635:	e9 18 02 00 00       	jmp    10852 <get_stem_contributions_d2+0x87d>
   1063a:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   10640:	48 98                	cdqe   
   10642:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1064a:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
   10651:	48 01 d0             	add    rax,rdx
   10654:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
   1065a:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
   10660:	48 98                	cdqe   
   10662:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1066a:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   1066e:	48 01 d0             	add    rax,rdx
   10671:	8b 00                	mov    eax,DWORD PTR [rax]
   10673:	3d 80 96 98 00       	cmp    eax,0x989680
   10678:	0f 84 c6 01 00 00    	je     10844 <get_stem_contributions_d2+0x86f>
   1067e:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   10684:	8d 70 ff             	lea    esi,[rax-0x1]
   10687:	48 8b 8d 20 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xe0]
   1068e:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   10694:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [rbp-0xcc]
   1069a:	4c 8b 95 28 ff ff ff 	mov    r10,QWORD PTR [rbp-0xd8]
   106a1:	49 89 c9             	mov    r9,rcx
   106a4:	41 b8 12 00 00 00    	mov    r8d,0x12
   106aa:	89 d1                	mov    ecx,edx
   106ac:	89 f2                	mov    edx,esi
   106ae:	89 c6                	mov    esi,eax
   106b0:	bf 01 00 00 00       	mov    edi,0x1
   106b5:	41 ff d2             	call   r10
   106b8:	84 c0                	test   al,al
   106ba:	0f 84 84 01 00 00    	je     10844 <get_stem_contributions_d2+0x86f>
   106c0:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
   106c6:	48 98                	cdqe   
   106c8:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   106d0:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   106d4:	48 01 d0             	add    rax,rdx
   106d7:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   106dd:	48 63 d2             	movsxd rdx,edx
   106e0:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   106e8:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
   106ef:	48 01 ca             	add    rdx,rcx
   106f2:	8b 00                	mov    eax,DWORD PTR [rax]
   106f4:	89 02                	mov    DWORD PTR [rdx],eax
   106f6:	c7 85 50 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xb0],0x0
   10700:	e9 2d 01 00 00       	jmp    10832 <get_stem_contributions_d2+0x85d>
   10705:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [rbp-0xb0]
   1070b:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   1070f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   10713:	48 01 d0             	add    rax,rdx
   10716:	0f b7 00             	movzx  eax,WORD PTR [rax]
   10719:	0f bf c8             	movsx  ecx,ax
   1071c:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [rbp-0xb0]
   10722:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   1072a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
   1072e:	48 01 d0             	add    rax,rdx
   10731:	48 8b 00             	mov    rax,QWORD PTR [rax]
   10734:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   1073a:	48 63 d2             	movsxd rdx,edx
   1073d:	48 01 d2             	add    rdx,rdx
   10740:	48 01 d0             	add    rax,rdx
   10743:	0f b7 00             	movzx  eax,WORD PTR [rax]
   10746:	98                   	cwde   
   10747:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
   1074b:	89 ce                	mov    esi,ecx
   1074d:	89 c7                	mov    edi,eax
   1074f:	e8 94 d3 01 00       	call   2dae8 <vrna_get_ptype_md>
   10754:	89 85 68 ff ff ff    	mov    DWORD PTR [rbp-0x98],eax
   1075a:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [rbp-0xb0]
   10760:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   10768:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   1076c:	48 01 d0             	add    rax,rdx
   1076f:	48 8b 00             	mov    rax,QWORD PTR [rax]
   10772:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   10778:	48 63 d2             	movsxd rdx,edx
   1077b:	48 c1 e2 02          	shl    rdx,0x2
   1077f:	48 01 d0             	add    rax,rdx
   10782:	8b 00                	mov    eax,DWORD PTR [rax]
   10784:	83 f8 01             	cmp    eax,0x1
   10787:	76 2d                	jbe    107b6 <get_stem_contributions_d2+0x7e1>
   10789:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [rbp-0xb0]
   1078f:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   10797:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
   1079b:	48 01 d0             	add    rax,rdx
   1079e:	48 8b 00             	mov    rax,QWORD PTR [rax]
   107a1:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   107a7:	48 63 d2             	movsxd rdx,edx
   107aa:	48 01 d2             	add    rdx,rdx
   107ad:	48 01 d0             	add    rax,rdx
   107b0:	0f b7 00             	movzx  eax,WORD PTR [rax]
   107b3:	98                   	cwde   
   107b4:	eb 05                	jmp    107bb <get_stem_contributions_d2+0x7e6>
   107b6:	b8 ff ff ff ff       	mov    eax,0xffffffff
   107bb:	89 85 6c ff ff ff    	mov    DWORD PTR [rbp-0x94],eax
   107c1:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [rbp-0xb0]
   107c7:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   107cb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   107cf:	48 01 d0             	add    rax,rdx
   107d2:	0f b7 00             	movzx  eax,WORD PTR [rax]
   107d5:	0f bf d0             	movsx  edx,ax
   107d8:	48 8b 4d 80          	mov    rcx,QWORD PTR [rbp-0x80]
   107dc:	8b b5 6c ff ff ff    	mov    esi,DWORD PTR [rbp-0x94]
   107e2:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   107e8:	89 c7                	mov    edi,eax
   107ea:	e8 fc d9 ff ff       	call   e1eb <vrna_E_ext_stem>
   107ef:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   107f5:	48 63 d2             	movsxd rdx,edx
   107f8:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   10800:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
   10807:	48 01 ca             	add    rdx,rcx
   1080a:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   1080c:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   10812:	48 63 d2             	movsxd rdx,edx
   10815:	48 8d 34 95 00 00 00 00 	lea    rsi,[rdx*4+0x0]
   1081d:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
   10824:	48 01 f2             	add    rdx,rsi
   10827:	01 c8                	add    eax,ecx
   10829:	89 02                	mov    DWORD PTR [rdx],eax
   1082b:	83 85 50 ff ff ff 01 	add    DWORD PTR [rbp-0xb0],0x1
   10832:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [rbp-0xb0]
   10838:	3b 85 64 ff ff ff    	cmp    eax,DWORD PTR [rbp-0x9c]
   1083e:	0f 82 c1 fe ff ff    	jb     10705 <get_stem_contributions_d2+0x730>
   10844:	83 ad 54 ff ff ff 01 	sub    DWORD PTR [rbp-0xac],0x1
   1084b:	83 ad 58 ff ff ff 01 	sub    DWORD PTR [rbp-0xa8],0x1
   10852:	83 bd 54 ff ff ff 01 	cmp    DWORD PTR [rbp-0xac],0x1
   10859:	0f 8f db fd ff ff    	jg     1063a <get_stem_contributions_d2+0x665>
   1085f:	48 83 7d a0 00       	cmp    QWORD PTR [rbp-0x60],0x0
   10864:	0f 84 b2 00 00 00    	je     1091c <get_stem_contributions_d2+0x947>
   1086a:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [rbp-0xcc]
   10870:	2b 85 60 ff ff ff    	sub    eax,DWORD PTR [rbp-0xa0]
   10876:	83 e8 01             	sub    eax,0x1
   10879:	89 85 54 ff ff ff    	mov    DWORD PTR [rbp-0xac],eax
   1087f:	e9 8b 00 00 00       	jmp    1090f <get_stem_contributions_d2+0x93a>
   10884:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   1088a:	48 98                	cdqe   
   1088c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   10894:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
   1089b:	48 01 d0             	add    rax,rdx
   1089e:	8b 00                	mov    eax,DWORD PTR [rax]
   108a0:	3d 80 96 98 00       	cmp    eax,0x989680
   108a5:	74 61                	je     10908 <get_stem_contributions_d2+0x933>
   108a7:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   108ad:	8d 70 ff             	lea    esi,[rax-0x1]
   108b0:	48 8b 8d 18 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xe8]
   108b7:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   108bd:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [rbp-0xcc]
   108c3:	4c 8b 45 a0          	mov    r8,QWORD PTR [rbp-0x60]
   108c7:	89 c7                	mov    edi,eax
   108c9:	41 ff d0             	call   r8
   108cc:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   108d2:	48 63 d2             	movsxd rdx,edx
   108d5:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   108dd:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
   108e4:	48 01 ca             	add    rdx,rcx
   108e7:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   108e9:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   108ef:	48 63 d2             	movsxd rdx,edx
   108f2:	48 8d 34 95 00 00 00 00 	lea    rsi,[rdx*4+0x0]
   108fa:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
   10901:	48 01 f2             	add    rdx,rsi
   10904:	01 c8                	add    eax,ecx
   10906:	89 02                	mov    DWORD PTR [rdx],eax
   10908:	83 ad 54 ff ff ff 01 	sub    DWORD PTR [rbp-0xac],0x1
   1090f:	83 bd 54 ff ff ff 01 	cmp    DWORD PTR [rbp-0xac],0x1
   10916:	0f 8f 68 ff ff ff    	jg     10884 <get_stem_contributions_d2+0x8af>
   1091c:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
   10923:	48 83 c0 04          	add    rax,0x4
   10927:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
   1092d:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [rbp-0xcc]
   10933:	48 98                	cdqe   
   10935:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1093d:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
   10941:	48 01 d0             	add    rax,rdx
   10944:	8b 00                	mov    eax,DWORD PTR [rax]
   10946:	83 c0 01             	add    eax,0x1
   10949:	89 85 58 ff ff ff    	mov    DWORD PTR [rbp-0xa8],eax
   1094f:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
   10955:	48 98                	cdqe   
   10957:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1095f:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   10963:	48 01 d0             	add    rax,rdx
   10966:	8b 00                	mov    eax,DWORD PTR [rax]
   10968:	3d 80 96 98 00       	cmp    eax,0x989680
   1096d:	0f 84 61 01 00 00    	je     10ad4 <get_stem_contributions_d2+0xaff>
   10973:	48 8b 8d 20 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xe0]
   1097a:	8b 95 34 ff ff ff    	mov    edx,DWORD PTR [rbp-0xcc]
   10980:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [rbp-0xcc]
   10986:	4c 8b 95 28 ff ff ff 	mov    r10,QWORD PTR [rbp-0xd8]
   1098d:	49 89 c9             	mov    r9,rcx
   10990:	41 b8 0e 00 00 00    	mov    r8d,0xe
   10996:	89 d1                	mov    ecx,edx
   10998:	ba 01 00 00 00       	mov    edx,0x1
   1099d:	89 c6                	mov    esi,eax
   1099f:	bf 01 00 00 00       	mov    edi,0x1
   109a4:	41 ff d2             	call   r10
   109a7:	84 c0                	test   al,al
   109a9:	0f 84 25 01 00 00    	je     10ad4 <get_stem_contributions_d2+0xaff>
   109af:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
   109b5:	48 98                	cdqe   
   109b7:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   109bf:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   109c3:	48 01 d0             	add    rax,rdx
   109c6:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
   109cd:	48 83 c2 04          	add    rdx,0x4
   109d1:	8b 00                	mov    eax,DWORD PTR [rax]
   109d3:	89 02                	mov    DWORD PTR [rdx],eax
   109d5:	c7 85 50 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xb0],0x0
   109df:	e9 9a 00 00 00       	jmp    10a7e <get_stem_contributions_d2+0xaa9>
   109e4:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [rbp-0xb0]
   109ea:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   109ee:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   109f2:	48 01 d0             	add    rax,rdx
   109f5:	0f b7 00             	movzx  eax,WORD PTR [rax]
   109f8:	0f bf c8             	movsx  ecx,ax
   109fb:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [rbp-0xb0]
   10a01:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   10a09:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
   10a0d:	48 01 d0             	add    rax,rdx
   10a10:	48 8b 00             	mov    rax,QWORD PTR [rax]
   10a13:	48 83 c0 02          	add    rax,0x2
   10a17:	0f b7 00             	movzx  eax,WORD PTR [rax]
   10a1a:	98                   	cwde   
   10a1b:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
   10a1f:	89 ce                	mov    esi,ecx
   10a21:	89 c7                	mov    edi,eax
   10a23:	e8 c0 d0 01 00       	call   2dae8 <vrna_get_ptype_md>
   10a28:	89 85 68 ff ff ff    	mov    DWORD PTR [rbp-0x98],eax
   10a2e:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [rbp-0xb0]
   10a34:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   10a38:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   10a3c:	48 01 d0             	add    rax,rdx
   10a3f:	0f b7 00             	movzx  eax,WORD PTR [rax]
   10a42:	0f bf d0             	movsx  edx,ax
   10a45:	48 8b 4d 80          	mov    rcx,QWORD PTR [rbp-0x80]
   10a49:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   10a4f:	be ff ff ff ff       	mov    esi,0xffffffff
   10a54:	89 c7                	mov    edi,eax
   10a56:	e8 90 d7 ff ff       	call   e1eb <vrna_E_ext_stem>
   10a5b:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
   10a62:	48 83 c2 04          	add    rdx,0x4
   10a66:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   10a68:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
   10a6f:	48 83 c2 04          	add    rdx,0x4
   10a73:	01 c8                	add    eax,ecx
   10a75:	89 02                	mov    DWORD PTR [rdx],eax
   10a77:	83 85 50 ff ff ff 01 	add    DWORD PTR [rbp-0xb0],0x1
   10a7e:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [rbp-0xb0]
   10a84:	3b 85 64 ff ff ff    	cmp    eax,DWORD PTR [rbp-0x9c]
   10a8a:	0f 82 54 ff ff ff    	jb     109e4 <get_stem_contributions_d2+0xa0f>
   10a90:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
   10a95:	74 3d                	je     10ad4 <get_stem_contributions_d2+0xaff>
   10a97:	48 8b 8d 18 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xe8]
   10a9e:	8b 95 34 ff ff ff    	mov    edx,DWORD PTR [rbp-0xcc]
   10aa4:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [rbp-0xcc]
   10aaa:	4c 8b 45 a8          	mov    r8,QWORD PTR [rbp-0x58]
   10aae:	be 01 00 00 00       	mov    esi,0x1
   10ab3:	89 c7                	mov    edi,eax
   10ab5:	41 ff d0             	call   r8
   10ab8:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
   10abf:	48 83 c2 04          	add    rdx,0x4
   10ac3:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   10ac5:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
   10acc:	48 83 c2 04          	add    rdx,0x4
   10ad0:	01 c8                	add    eax,ecx
   10ad2:	89 02                	mov    DWORD PTR [rdx],eax
   10ad4:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   10ad8:	48 89 c7             	mov    rdi,rax
   10adb:	e8 d0 2d ff ff       	call   38b0 <free@plt>
   10ae0:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   10ae4:	48 89 c7             	mov    rdi,rax
   10ae7:	e8 c4 2d ff ff       	call   38b0 <free@plt>
   10aec:	eb 01                	jmp    10aef <get_stem_contributions_d2+0xb1a>
   10aee:	90                   	nop
   10aef:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
   10af6:	48 81 c4 e8 00 00 00 	add    rsp,0xe8
   10afd:	5b                   	pop    rbx
   10afe:	5d                   	pop    rbp
   10aff:	c3                   	ret    

0000000000010b00 <f3_get_stem_contributions_d2>:
   10b00:	55                   	push   rbp
   10b01:	48 89 e5             	mov    rbp,rsp
   10b04:	53                   	push   rbx
   10b05:	48 81 ec d8 00 00 00 	sub    rsp,0xd8
   10b0c:	48 89 bd 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rdi
   10b13:	89 b5 44 ff ff ff    	mov    DWORD PTR [rbp-0xbc],esi
   10b19:	48 89 95 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rdx
   10b20:	48 89 8d 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rcx
   10b27:	4c 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],r8
   10b2e:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   10b35:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
   10b38:	89 85 68 ff ff ff    	mov    DWORD PTR [rbp-0x98],eax
   10b3e:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   10b45:	8b 80 60 01 00 00    	mov    eax,DWORD PTR [rax+0x160]
   10b4b:	89 85 6c ff ff ff    	mov    DWORD PTR [rbp-0x94],eax
   10b51:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   10b58:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
   10b5c:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
   10b60:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
   10b64:	48 05 98 35 03 00    	add    rax,0x33598
   10b6a:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
   10b6e:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   10b75:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
   10b79:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
   10b7d:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   10b83:	48 63 d2             	movsxd rdx,edx
   10b86:	48 c1 e2 03          	shl    rdx,0x3
   10b8a:	48 01 d0             	add    rax,rdx
   10b8d:	48 8b 00             	mov    rax,QWORD PTR [rax]
   10b90:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
   10b94:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   10b9a:	48 98                	cdqe   
   10b9c:	48 c1 e0 02          	shl    rax,0x2
   10ba0:	48 f7 d8             	neg    rax
   10ba3:	48 01 45 90          	add    QWORD PTR [rbp-0x70],rax
   10ba7:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
   10bab:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
   10bb1:	89 85 70 ff ff ff    	mov    DWORD PTR [rbp-0x90],eax
   10bb7:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   10bbd:	83 c0 06             	add    eax,0x6
   10bc0:	48 98                	cdqe   
   10bc2:	c1 e0 02             	shl    eax,0x2
   10bc5:	89 c7                	mov    edi,eax
   10bc7:	e8 f5 b2 01 00       	call   2bec1 <vrna_alloc>
   10bcc:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
   10bd0:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   10bd6:	48 98                	cdqe   
   10bd8:	48 c1 e0 02          	shl    rax,0x2
   10bdc:	48 f7 d8             	neg    rax
   10bdf:	48 01 45 98          	add    QWORD PTR [rbp-0x68],rax
   10be3:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
   10bea:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
   10bee:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
   10bf2:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
   10bf9:	48 8b 40 18          	mov    rax,QWORD PTR [rax+0x18]
   10bfd:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
   10c01:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   10c08:	8b 00                	mov    eax,DWORD PTR [rax]
   10c0a:	85 c0                	test   eax,eax
   10c0c:	74 0e                	je     10c1c <f3_get_stem_contributions_d2+0x11c>
   10c0e:	83 f8 01             	cmp    eax,0x1
   10c11:	0f 84 18 04 00 00    	je     1102f <f3_get_stem_contributions_d2+0x52f>
   10c17:	e9 75 0a 00 00       	jmp    11691 <f3_get_stem_contributions_d2+0xb91>
   10c1c:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   10c23:	48 8b 80 68 01 00 00 	mov    rax,QWORD PTR [rax+0x168]
   10c2a:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
   10c2e:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   10c35:	48 8b 80 b8 00 00 00 	mov    rax,QWORD PTR [rax+0xb8]
   10c3c:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
   10c40:	83 bd 44 ff ff ff 01 	cmp    DWORD PTR [rbp-0xbc],0x1
   10c47:	7e 1b                	jle    10c64 <f3_get_stem_contributions_d2+0x164>
   10c49:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   10c4f:	48 98                	cdqe   
   10c51:	48 01 c0             	add    rax,rax
   10c54:	48 8d 50 fe          	lea    rdx,[rax-0x2]
   10c58:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   10c5c:	48 01 d0             	add    rax,rdx
   10c5f:	0f b7 00             	movzx  eax,WORD PTR [rax]
   10c62:	eb 05                	jmp    10c69 <f3_get_stem_contributions_d2+0x169>
   10c64:	b8 ff ff ff ff       	mov    eax,0xffffffff
   10c69:	66 89 85 5a ff ff ff 	mov    WORD PTR [rbp-0xa6],ax
   10c70:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   10c76:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   10c7c:	01 c2                	add    edx,eax
   10c7e:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   10c84:	39 c2                	cmp    edx,eax
   10c86:	7c 0b                	jl     10c93 <f3_get_stem_contributions_d2+0x193>
   10c88:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   10c8e:	83 e8 01             	sub    eax,0x1
   10c91:	eb 0e                	jmp    10ca1 <f3_get_stem_contributions_d2+0x1a1>
   10c93:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   10c99:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   10c9f:	01 d0                	add    eax,edx
   10ca1:	89 85 78 ff ff ff    	mov    DWORD PTR [rbp-0x88],eax
   10ca7:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   10cad:	8b 85 70 ff ff ff    	mov    eax,DWORD PTR [rbp-0x90]
   10cb3:	01 d0                	add    eax,edx
   10cb5:	83 c0 01             	add    eax,0x1
   10cb8:	89 85 64 ff ff ff    	mov    DWORD PTR [rbp-0x9c],eax
   10cbe:	e9 1b 01 00 00       	jmp    10dde <f3_get_stem_contributions_d2+0x2de>
   10cc3:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   10cc9:	48 98                	cdqe   
   10ccb:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   10cd3:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   10cd7:	48 01 d0             	add    rax,rdx
   10cda:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
   10ce0:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   10ce6:	48 98                	cdqe   
   10ce8:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   10cf0:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
   10cf4:	48 01 d0             	add    rax,rdx
   10cf7:	8b 00                	mov    eax,DWORD PTR [rax]
   10cf9:	3d 80 96 98 00       	cmp    eax,0x989680
   10cfe:	0f 84 d3 00 00 00    	je     10dd7 <f3_get_stem_contributions_d2+0x2d7>
   10d04:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   10d0a:	8d 48 01             	lea    ecx,[rax+0x1]
   10d0d:	8b b5 68 ff ff ff    	mov    esi,DWORD PTR [rbp-0x98]
   10d13:	48 8b bd 30 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xd0]
   10d1a:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   10d20:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   10d26:	4c 8b 95 38 ff ff ff 	mov    r10,QWORD PTR [rbp-0xc8]
   10d2d:	49 89 f9             	mov    r9,rdi
   10d30:	41 b8 10 00 00 00    	mov    r8d,0x10
   10d36:	89 c7                	mov    edi,eax
   10d38:	41 ff d2             	call   r10
   10d3b:	84 c0                	test   al,al
   10d3d:	0f 84 94 00 00 00    	je     10dd7 <f3_get_stem_contributions_d2+0x2d7>
   10d43:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
   10d47:	8b 8d 64 ff ff ff    	mov    ecx,DWORD PTR [rbp-0x9c]
   10d4d:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   10d53:	89 ce                	mov    esi,ecx
   10d55:	89 c7                	mov    edi,eax
   10d57:	e8 16 ce 01 00       	call   2db72 <vrna_get_ptype_window>
   10d5c:	89 85 7c ff ff ff    	mov    DWORD PTR [rbp-0x84],eax
   10d62:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   10d68:	48 98                	cdqe   
   10d6a:	48 83 c0 01          	add    rax,0x1
   10d6e:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   10d72:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   10d76:	48 01 d0             	add    rax,rdx
   10d79:	0f b7 00             	movzx  eax,WORD PTR [rax]
   10d7c:	66 89 85 58 ff ff ff 	mov    WORD PTR [rbp-0xa8],ax
   10d83:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   10d89:	48 98                	cdqe   
   10d8b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   10d93:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
   10d97:	48 01 d0             	add    rax,rdx
   10d9a:	8b 18                	mov    ebx,DWORD PTR [rax]
   10d9c:	0f bf 95 58 ff ff ff 	movsx  edx,WORD PTR [rbp-0xa8]
   10da3:	0f bf b5 5a ff ff ff 	movsx  esi,WORD PTR [rbp-0xa6]
   10daa:	48 8b 4d 80          	mov    rcx,QWORD PTR [rbp-0x80]
   10dae:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
   10db4:	89 c7                	mov    edi,eax
   10db6:	e8 30 d4 ff ff       	call   e1eb <vrna_E_ext_stem>
   10dbb:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   10dc1:	48 63 d2             	movsxd rdx,edx
   10dc4:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   10dcc:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
   10dd0:	48 01 ca             	add    rdx,rcx
   10dd3:	01 d8                	add    eax,ebx
   10dd5:	89 02                	mov    DWORD PTR [rdx],eax
   10dd7:	83 85 64 ff ff ff 01 	add    DWORD PTR [rbp-0x9c],0x1
   10dde:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   10de4:	3b 85 78 ff ff ff    	cmp    eax,DWORD PTR [rbp-0x88]
   10dea:	0f 8e d3 fe ff ff    	jle    10cc3 <f3_get_stem_contributions_d2+0x1c3>
   10df0:	48 83 7d a0 00       	cmp    QWORD PTR [rbp-0x60],0x0
   10df5:	0f 84 b5 00 00 00    	je     10eb0 <f3_get_stem_contributions_d2+0x3b0>
   10dfb:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   10e01:	8b 85 70 ff ff ff    	mov    eax,DWORD PTR [rbp-0x90]
   10e07:	01 d0                	add    eax,edx
   10e09:	83 c0 01             	add    eax,0x1
   10e0c:	89 85 64 ff ff ff    	mov    DWORD PTR [rbp-0x9c],eax
   10e12:	e9 87 00 00 00       	jmp    10e9e <f3_get_stem_contributions_d2+0x39e>
   10e17:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   10e1d:	48 98                	cdqe   
   10e1f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   10e27:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   10e2b:	48 01 d0             	add    rax,rdx
   10e2e:	8b 00                	mov    eax,DWORD PTR [rax]
   10e30:	3d 80 96 98 00       	cmp    eax,0x989680
   10e35:	74 60                	je     10e97 <f3_get_stem_contributions_d2+0x397>
   10e37:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   10e3d:	8d 78 01             	lea    edi,[rax+0x1]
   10e40:	48 8b 95 28 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xd8]
   10e47:	8b b5 64 ff ff ff    	mov    esi,DWORD PTR [rbp-0x9c]
   10e4d:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   10e53:	4c 8b 45 a0          	mov    r8,QWORD PTR [rbp-0x60]
   10e57:	48 89 d1             	mov    rcx,rdx
   10e5a:	89 fa                	mov    edx,edi
   10e5c:	89 c7                	mov    edi,eax
   10e5e:	41 ff d0             	call   r8
   10e61:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   10e67:	48 63 d2             	movsxd rdx,edx
   10e6a:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   10e72:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
   10e76:	48 01 ca             	add    rdx,rcx
   10e79:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   10e7b:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   10e81:	48 63 d2             	movsxd rdx,edx
   10e84:	48 8d 34 95 00 00 00 00 	lea    rsi,[rdx*4+0x0]
   10e8c:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
   10e90:	48 01 f2             	add    rdx,rsi
   10e93:	01 c8                	add    eax,ecx
   10e95:	89 02                	mov    DWORD PTR [rdx],eax
   10e97:	83 85 64 ff ff ff 01 	add    DWORD PTR [rbp-0x9c],0x1
   10e9e:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   10ea4:	3b 85 78 ff ff ff    	cmp    eax,DWORD PTR [rbp-0x88]
   10eaa:	0f 8e 67 ff ff ff    	jle    10e17 <f3_get_stem_contributions_d2+0x317>
   10eb0:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   10eb6:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   10ebc:	01 d0                	add    eax,edx
   10ebe:	39 85 68 ff ff ff    	cmp    DWORD PTR [rbp-0x98],eax
   10ec4:	0f 87 c6 07 00 00    	ja     11690 <f3_get_stem_contributions_d2+0xb90>
   10eca:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   10ed0:	89 85 64 ff ff ff    	mov    DWORD PTR [rbp-0x9c],eax
   10ed6:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   10edc:	48 98                	cdqe   
   10ede:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   10ee6:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   10eea:	48 01 d0             	add    rax,rdx
   10eed:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
   10ef3:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   10ef9:	48 98                	cdqe   
   10efb:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   10f03:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
   10f07:	48 01 d0             	add    rax,rdx
   10f0a:	8b 00                	mov    eax,DWORD PTR [rax]
   10f0c:	3d 80 96 98 00       	cmp    eax,0x989680
   10f11:	0f 84 79 07 00 00    	je     11690 <f3_get_stem_contributions_d2+0xb90>
   10f17:	48 8b bd 30 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xd0]
   10f1e:	8b 8d 64 ff ff ff    	mov    ecx,DWORD PTR [rbp-0x9c]
   10f24:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   10f2a:	8b b5 64 ff ff ff    	mov    esi,DWORD PTR [rbp-0x9c]
   10f30:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   10f36:	4c 8b 95 38 ff ff ff 	mov    r10,QWORD PTR [rbp-0xc8]
   10f3d:	49 89 f9             	mov    r9,rdi
   10f40:	41 b8 0e 00 00 00    	mov    r8d,0xe
   10f46:	89 c7                	mov    edi,eax
   10f48:	41 ff d2             	call   r10
   10f4b:	84 c0                	test   al,al
   10f4d:	0f 84 3d 07 00 00    	je     11690 <f3_get_stem_contributions_d2+0xb90>
   10f53:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
   10f57:	8b 8d 64 ff ff ff    	mov    ecx,DWORD PTR [rbp-0x9c]
   10f5d:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   10f63:	89 ce                	mov    esi,ecx
   10f65:	89 c7                	mov    edi,eax
   10f67:	e8 06 cc 01 00       	call   2db72 <vrna_get_ptype_window>
   10f6c:	89 85 7c ff ff ff    	mov    DWORD PTR [rbp-0x84],eax
   10f72:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   10f78:	48 98                	cdqe   
   10f7a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   10f82:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
   10f86:	48 01 d0             	add    rax,rdx
   10f89:	8b 18                	mov    ebx,DWORD PTR [rax]
   10f8b:	0f bf b5 5a ff ff ff 	movsx  esi,WORD PTR [rbp-0xa6]
   10f92:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
   10f96:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
   10f9c:	48 89 d1             	mov    rcx,rdx
   10f9f:	ba ff ff ff ff       	mov    edx,0xffffffff
   10fa4:	89 c7                	mov    edi,eax
   10fa6:	e8 40 d2 ff ff       	call   e1eb <vrna_E_ext_stem>
   10fab:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   10fb1:	48 63 d2             	movsxd rdx,edx
   10fb4:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   10fbc:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
   10fc0:	48 01 ca             	add    rdx,rcx
   10fc3:	01 d8                	add    eax,ebx
   10fc5:	89 02                	mov    DWORD PTR [rdx],eax
   10fc7:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
   10fcc:	0f 84 be 06 00 00    	je     11690 <f3_get_stem_contributions_d2+0xb90>
   10fd2:	48 8b 8d 28 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xd8]
   10fd9:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   10fdf:	8b b5 44 ff ff ff    	mov    esi,DWORD PTR [rbp-0xbc]
   10fe5:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   10feb:	4c 8b 45 a8          	mov    r8,QWORD PTR [rbp-0x58]
   10fef:	89 c7                	mov    edi,eax
   10ff1:	41 ff d0             	call   r8
   10ff4:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   10ffa:	48 63 d2             	movsxd rdx,edx
   10ffd:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   11005:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
   11009:	48 01 ca             	add    rdx,rcx
   1100c:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   1100e:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   11014:	48 63 d2             	movsxd rdx,edx
   11017:	48 8d 34 95 00 00 00 00 	lea    rsi,[rdx*4+0x0]
   1101f:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
   11023:	48 01 f2             	add    rdx,rsi
   11026:	01 c8                	add    eax,ecx
   11028:	89 02                	mov    DWORD PTR [rdx],eax
   1102a:	e9 61 06 00 00       	jmp    11690 <f3_get_stem_contributions_d2+0xb90>
   1102f:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   11036:	8b 80 b8 00 00 00    	mov    eax,DWORD PTR [rax+0xb8]
   1103c:	89 85 74 ff ff ff    	mov    DWORD PTR [rbp-0x8c],eax
   11042:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   11049:	48 8b 80 d0 00 00 00 	mov    rax,QWORD PTR [rax+0xd0]
   11050:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
   11054:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   1105b:	48 8b 80 d8 00 00 00 	mov    rax,QWORD PTR [rax+0xd8]
   11062:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
   11066:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   1106d:	48 8b 80 e0 00 00 00 	mov    rax,QWORD PTR [rax+0xe0]
   11074:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
   11078:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   1107f:	48 8b 80 f0 00 00 00 	mov    rax,QWORD PTR [rax+0xf0]
   11086:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
   1108a:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   11090:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   11096:	01 c2                	add    edx,eax
   11098:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   1109e:	39 c2                	cmp    edx,eax
   110a0:	7c 0b                	jl     110ad <f3_get_stem_contributions_d2+0x5ad>
   110a2:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   110a8:	83 e8 01             	sub    eax,0x1
   110ab:	eb 0e                	jmp    110bb <f3_get_stem_contributions_d2+0x5bb>
   110ad:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   110b3:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   110b9:	01 d0                	add    eax,edx
   110bb:	89 85 78 ff ff ff    	mov    DWORD PTR [rbp-0x88],eax
   110c1:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   110c7:	01 c0                	add    eax,eax
   110c9:	89 c7                	mov    edi,eax
   110cb:	e8 f1 ad 01 00       	call   2bec1 <vrna_alloc>
   110d0:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
   110d4:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   110da:	01 c0                	add    eax,eax
   110dc:	89 c7                	mov    edi,eax
   110de:	e8 de ad 01 00       	call   2bec1 <vrna_alloc>
   110e3:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
   110e7:	c7 85 5c ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xa4],0x0
   110f1:	e9 b9 00 00 00       	jmp    111af <f3_get_stem_contributions_d2+0x6af>
   110f6:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   110fc:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   11104:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   11108:	48 01 d0             	add    rax,rdx
   1110b:	48 8b 00             	mov    rax,QWORD PTR [rax]
   1110e:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   11114:	48 63 d2             	movsxd rdx,edx
   11117:	48 c1 e2 02          	shl    rdx,0x2
   1111b:	48 01 d0             	add    rax,rdx
   1111e:	8b 00                	mov    eax,DWORD PTR [rax]
   11120:	83 f8 01             	cmp    eax,0x1
   11123:	76 2c                	jbe    11151 <f3_get_stem_contributions_d2+0x651>
   11125:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   1112b:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   11133:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
   11137:	48 01 d0             	add    rax,rdx
   1113a:	48 8b 00             	mov    rax,QWORD PTR [rax]
   1113d:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   11143:	48 63 d2             	movsxd rdx,edx
   11146:	48 01 d2             	add    rdx,rdx
   11149:	48 01 d0             	add    rax,rdx
   1114c:	0f b7 00             	movzx  eax,WORD PTR [rax]
   1114f:	eb 05                	jmp    11156 <f3_get_stem_contributions_d2+0x656>
   11151:	b8 ff ff ff ff       	mov    eax,0xffffffff
   11156:	8b 95 5c ff ff ff    	mov    edx,DWORD PTR [rbp-0xa4]
   1115c:	48 8d 0c 12          	lea    rcx,[rdx+rdx*1]
   11160:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
   11164:	48 01 ca             	add    rdx,rcx
   11167:	66 89 02             	mov    WORD PTR [rdx],ax
   1116a:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   11170:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   11178:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
   1117c:	48 01 d0             	add    rax,rdx
   1117f:	48 8b 00             	mov    rax,QWORD PTR [rax]
   11182:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   11188:	48 63 d2             	movsxd rdx,edx
   1118b:	48 01 d2             	add    rdx,rdx
   1118e:	48 01 d0             	add    rax,rdx
   11191:	8b 95 5c ff ff ff    	mov    edx,DWORD PTR [rbp-0xa4]
   11197:	48 8d 0c 12          	lea    rcx,[rdx+rdx*1]
   1119b:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
   1119f:	48 01 ca             	add    rdx,rcx
   111a2:	0f b7 00             	movzx  eax,WORD PTR [rax]
   111a5:	66 89 02             	mov    WORD PTR [rdx],ax
   111a8:	83 85 5c ff ff ff 01 	add    DWORD PTR [rbp-0xa4],0x1
   111af:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   111b5:	3b 85 74 ff ff ff    	cmp    eax,DWORD PTR [rbp-0x8c]
   111bb:	0f 82 35 ff ff ff    	jb     110f6 <f3_get_stem_contributions_d2+0x5f6>
   111c1:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   111c7:	8b 85 70 ff ff ff    	mov    eax,DWORD PTR [rbp-0x90]
   111cd:	01 d0                	add    eax,edx
   111cf:	83 c0 01             	add    eax,0x1
   111d2:	89 85 64 ff ff ff    	mov    DWORD PTR [rbp-0x9c],eax
   111d8:	e9 04 02 00 00       	jmp    113e1 <f3_get_stem_contributions_d2+0x8e1>
   111dd:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   111e3:	48 98                	cdqe   
   111e5:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   111ed:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   111f1:	48 01 d0             	add    rax,rdx
   111f4:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
   111fa:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   11200:	48 98                	cdqe   
   11202:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1120a:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
   1120e:	48 01 d0             	add    rax,rdx
   11211:	8b 00                	mov    eax,DWORD PTR [rax]
   11213:	3d 80 96 98 00       	cmp    eax,0x989680
   11218:	0f 84 bc 01 00 00    	je     113da <f3_get_stem_contributions_d2+0x8da>
   1121e:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   11224:	8d 48 01             	lea    ecx,[rax+0x1]
   11227:	8b b5 68 ff ff ff    	mov    esi,DWORD PTR [rbp-0x98]
   1122d:	48 8b bd 30 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xd0]
   11234:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   1123a:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   11240:	4c 8b 95 38 ff ff ff 	mov    r10,QWORD PTR [rbp-0xc8]
   11247:	49 89 f9             	mov    r9,rdi
   1124a:	41 b8 10 00 00 00    	mov    r8d,0x10
   11250:	89 c7                	mov    edi,eax
   11252:	41 ff d2             	call   r10
   11255:	84 c0                	test   al,al
   11257:	0f 84 7d 01 00 00    	je     113da <f3_get_stem_contributions_d2+0x8da>
   1125d:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   11263:	48 98                	cdqe   
   11265:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1126d:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
   11271:	48 01 d0             	add    rax,rdx
   11274:	8b 00                	mov    eax,DWORD PTR [rax]
   11276:	89 85 60 ff ff ff    	mov    DWORD PTR [rbp-0xa0],eax
   1127c:	c7 85 5c ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xa4],0x0
   11286:	e9 1e 01 00 00       	jmp    113a9 <f3_get_stem_contributions_d2+0x8a9>
   1128b:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   11291:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   11299:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
   1129d:	48 01 d0             	add    rax,rdx
   112a0:	48 8b 00             	mov    rax,QWORD PTR [rax]
   112a3:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   112a9:	48 63 d2             	movsxd rdx,edx
   112ac:	48 01 d2             	add    rdx,rdx
   112af:	48 01 d0             	add    rax,rdx
   112b2:	0f b7 00             	movzx  eax,WORD PTR [rax]
   112b5:	0f bf c8             	movsx  ecx,ax
   112b8:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   112be:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   112c2:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   112c6:	48 01 d0             	add    rax,rdx
   112c9:	0f b7 00             	movzx  eax,WORD PTR [rax]
   112cc:	98                   	cwde   
   112cd:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
   112d1:	89 ce                	mov    esi,ecx
   112d3:	89 c7                	mov    edi,eax
   112d5:	e8 0e c8 01 00       	call   2dae8 <vrna_get_ptype_md>
   112da:	89 85 7c ff ff ff    	mov    DWORD PTR [rbp-0x84],eax
   112e0:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   112e6:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   112ee:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   112f2:	48 01 d0             	add    rax,rdx
   112f5:	48 8b 00             	mov    rax,QWORD PTR [rax]
   112f8:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   112fe:	48 63 d2             	movsxd rdx,edx
   11301:	48 c1 e2 02          	shl    rdx,0x2
   11305:	48 01 d0             	add    rax,rdx
   11308:	8b 10                	mov    edx,DWORD PTR [rax]
   1130a:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   11310:	48 8d 0c c5 00 00 00 00 	lea    rcx,[rax*8+0x0]
   11318:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   1131c:	48 01 c8             	add    rax,rcx
   1131f:	48 8b 00             	mov    rax,QWORD PTR [rax]
   11322:	8b 8d 68 ff ff ff    	mov    ecx,DWORD PTR [rbp-0x98]
   11328:	48 c1 e1 02          	shl    rcx,0x2
   1132c:	48 01 c8             	add    rax,rcx
   1132f:	8b 00                	mov    eax,DWORD PTR [rax]
   11331:	39 c2                	cmp    edx,eax
   11333:	73 2c                	jae    11361 <f3_get_stem_contributions_d2+0x861>
   11335:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   1133b:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   11343:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   11347:	48 01 d0             	add    rax,rdx
   1134a:	48 8b 00             	mov    rax,QWORD PTR [rax]
   1134d:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   11353:	48 63 d2             	movsxd rdx,edx
   11356:	48 01 d2             	add    rdx,rdx
   11359:	48 01 d0             	add    rax,rdx
   1135c:	0f b7 00             	movzx  eax,WORD PTR [rax]
   1135f:	eb 05                	jmp    11366 <f3_get_stem_contributions_d2+0x866>
   11361:	b8 ff ff ff ff       	mov    eax,0xffffffff
   11366:	66 89 85 58 ff ff ff 	mov    WORD PTR [rbp-0xa8],ax
   1136d:	0f bf 95 58 ff ff ff 	movsx  edx,WORD PTR [rbp-0xa8]
   11374:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   1137a:	48 8d 0c 00          	lea    rcx,[rax+rax*1]
   1137e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   11382:	48 01 c8             	add    rax,rcx
   11385:	0f b7 00             	movzx  eax,WORD PTR [rax]
   11388:	0f bf f0             	movsx  esi,ax
   1138b:	48 8b 4d 80          	mov    rcx,QWORD PTR [rbp-0x80]
   1138f:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
   11395:	89 c7                	mov    edi,eax
   11397:	e8 4f ce ff ff       	call   e1eb <vrna_E_ext_stem>
   1139c:	01 85 60 ff ff ff    	add    DWORD PTR [rbp-0xa0],eax
   113a2:	83 85 5c ff ff ff 01 	add    DWORD PTR [rbp-0xa4],0x1
   113a9:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   113af:	3b 85 74 ff ff ff    	cmp    eax,DWORD PTR [rbp-0x8c]
   113b5:	0f 82 d0 fe ff ff    	jb     1128b <f3_get_stem_contributions_d2+0x78b>
   113bb:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   113c1:	48 98                	cdqe   
   113c3:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   113cb:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   113cf:	48 01 c2             	add    rdx,rax
   113d2:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa0]
   113d8:	89 02                	mov    DWORD PTR [rdx],eax
   113da:	83 85 64 ff ff ff 01 	add    DWORD PTR [rbp-0x9c],0x1
   113e1:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   113e7:	3b 85 78 ff ff ff    	cmp    eax,DWORD PTR [rbp-0x88]
   113ed:	0f 8e ea fd ff ff    	jle    111dd <f3_get_stem_contributions_d2+0x6dd>
   113f3:	48 83 7d a0 00       	cmp    QWORD PTR [rbp-0x60],0x0
   113f8:	0f 84 b5 00 00 00    	je     114b3 <f3_get_stem_contributions_d2+0x9b3>
   113fe:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   11404:	8b 85 70 ff ff ff    	mov    eax,DWORD PTR [rbp-0x90]
   1140a:	01 d0                	add    eax,edx
   1140c:	83 c0 01             	add    eax,0x1
   1140f:	89 85 64 ff ff ff    	mov    DWORD PTR [rbp-0x9c],eax
   11415:	e9 87 00 00 00       	jmp    114a1 <f3_get_stem_contributions_d2+0x9a1>
   1141a:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   11420:	48 98                	cdqe   
   11422:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1142a:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   1142e:	48 01 d0             	add    rax,rdx
   11431:	8b 00                	mov    eax,DWORD PTR [rax]
   11433:	3d 80 96 98 00       	cmp    eax,0x989680
   11438:	74 60                	je     1149a <f3_get_stem_contributions_d2+0x99a>
   1143a:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   11440:	8d 78 01             	lea    edi,[rax+0x1]
   11443:	48 8b 95 28 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xd8]
   1144a:	8b b5 64 ff ff ff    	mov    esi,DWORD PTR [rbp-0x9c]
   11450:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   11456:	4c 8b 45 a0          	mov    r8,QWORD PTR [rbp-0x60]
   1145a:	48 89 d1             	mov    rcx,rdx
   1145d:	89 fa                	mov    edx,edi
   1145f:	89 c7                	mov    edi,eax
   11461:	41 ff d0             	call   r8
   11464:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   1146a:	48 63 d2             	movsxd rdx,edx
   1146d:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   11475:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
   11479:	48 01 ca             	add    rdx,rcx
   1147c:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   1147e:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   11484:	48 63 d2             	movsxd rdx,edx
   11487:	48 8d 34 95 00 00 00 00 	lea    rsi,[rdx*4+0x0]
   1148f:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
   11493:	48 01 f2             	add    rdx,rsi
   11496:	01 c8                	add    eax,ecx
   11498:	89 02                	mov    DWORD PTR [rdx],eax
   1149a:	83 85 64 ff ff ff 01 	add    DWORD PTR [rbp-0x9c],0x1
   114a1:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   114a7:	3b 85 78 ff ff ff    	cmp    eax,DWORD PTR [rbp-0x88]
   114ad:	0f 8e 67 ff ff ff    	jle    1141a <f3_get_stem_contributions_d2+0x91a>
   114b3:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   114b9:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   114bf:	01 d0                	add    eax,edx
   114c1:	39 85 68 ff ff ff    	cmp    DWORD PTR [rbp-0x98],eax
   114c7:	0f 87 a9 01 00 00    	ja     11676 <f3_get_stem_contributions_d2+0xb76>
   114cd:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   114d3:	89 85 64 ff ff ff    	mov    DWORD PTR [rbp-0x9c],eax
   114d9:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   114df:	48 98                	cdqe   
   114e1:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   114e9:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   114ed:	48 01 d0             	add    rax,rdx
   114f0:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
   114f6:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   114fc:	48 98                	cdqe   
   114fe:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   11506:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
   1150a:	48 01 d0             	add    rax,rdx
   1150d:	8b 00                	mov    eax,DWORD PTR [rax]
   1150f:	3d 80 96 98 00       	cmp    eax,0x989680
   11514:	0f 84 5c 01 00 00    	je     11676 <f3_get_stem_contributions_d2+0xb76>
   1151a:	48 8b bd 30 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xd0]
   11521:	8b 8d 64 ff ff ff    	mov    ecx,DWORD PTR [rbp-0x9c]
   11527:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   1152d:	8b b5 64 ff ff ff    	mov    esi,DWORD PTR [rbp-0x9c]
   11533:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   11539:	4c 8b 95 38 ff ff ff 	mov    r10,QWORD PTR [rbp-0xc8]
   11540:	49 89 f9             	mov    r9,rdi
   11543:	41 b8 0e 00 00 00    	mov    r8d,0xe
   11549:	89 c7                	mov    edi,eax
   1154b:	41 ff d2             	call   r10
   1154e:	84 c0                	test   al,al
   11550:	0f 84 20 01 00 00    	je     11676 <f3_get_stem_contributions_d2+0xb76>
   11556:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   1155c:	48 98                	cdqe   
   1155e:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   11566:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
   1156a:	48 01 d0             	add    rax,rdx
   1156d:	8b 00                	mov    eax,DWORD PTR [rax]
   1156f:	89 85 60 ff ff ff    	mov    DWORD PTR [rbp-0xa0],eax
   11575:	c7 85 5c ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xa4],0x0
   1157f:	e9 92 00 00 00       	jmp    11616 <f3_get_stem_contributions_d2+0xb16>
   11584:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   1158a:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   11592:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
   11596:	48 01 d0             	add    rax,rdx
   11599:	48 8b 00             	mov    rax,QWORD PTR [rax]
   1159c:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   115a2:	48 63 d2             	movsxd rdx,edx
   115a5:	48 01 d2             	add    rdx,rdx
   115a8:	48 01 d0             	add    rax,rdx
   115ab:	0f b7 00             	movzx  eax,WORD PTR [rax]
   115ae:	0f bf c8             	movsx  ecx,ax
   115b1:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   115b7:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   115bb:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   115bf:	48 01 d0             	add    rax,rdx
   115c2:	0f b7 00             	movzx  eax,WORD PTR [rax]
   115c5:	98                   	cwde   
   115c6:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
   115ca:	89 ce                	mov    esi,ecx
   115cc:	89 c7                	mov    edi,eax
   115ce:	e8 15 c5 01 00       	call   2dae8 <vrna_get_ptype_md>
   115d3:	89 85 7c ff ff ff    	mov    DWORD PTR [rbp-0x84],eax
   115d9:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   115df:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   115e3:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   115e7:	48 01 d0             	add    rax,rdx
   115ea:	0f b7 00             	movzx  eax,WORD PTR [rax]
   115ed:	0f bf f0             	movsx  esi,ax
   115f0:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
   115f4:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
   115fa:	48 89 d1             	mov    rcx,rdx
   115fd:	ba ff ff ff ff       	mov    edx,0xffffffff
   11602:	89 c7                	mov    edi,eax
   11604:	e8 e2 cb ff ff       	call   e1eb <vrna_E_ext_stem>
   11609:	01 85 60 ff ff ff    	add    DWORD PTR [rbp-0xa0],eax
   1160f:	83 85 5c ff ff ff 01 	add    DWORD PTR [rbp-0xa4],0x1
   11616:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   1161c:	3b 85 74 ff ff ff    	cmp    eax,DWORD PTR [rbp-0x8c]
   11622:	0f 82 5c ff ff ff    	jb     11584 <f3_get_stem_contributions_d2+0xa84>
   11628:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
   1162d:	74 28                	je     11657 <f3_get_stem_contributions_d2+0xb57>
   1162f:	48 8b 8d 28 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xd8]
   11636:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   1163c:	8b b5 44 ff ff ff    	mov    esi,DWORD PTR [rbp-0xbc]
   11642:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   11648:	4c 8b 45 a8          	mov    r8,QWORD PTR [rbp-0x58]
   1164c:	89 c7                	mov    edi,eax
   1164e:	41 ff d0             	call   r8
   11651:	01 85 60 ff ff ff    	add    DWORD PTR [rbp-0xa0],eax
   11657:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   1165d:	48 98                	cdqe   
   1165f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   11667:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   1166b:	48 01 c2             	add    rdx,rax
   1166e:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa0]
   11674:	89 02                	mov    DWORD PTR [rdx],eax
   11676:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   1167a:	48 89 c7             	mov    rdi,rax
   1167d:	e8 2e 22 ff ff       	call   38b0 <free@plt>
   11682:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   11686:	48 89 c7             	mov    rdi,rax
   11689:	e8 22 22 ff ff       	call   38b0 <free@plt>
   1168e:	eb 01                	jmp    11691 <f3_get_stem_contributions_d2+0xb91>
   11690:	90                   	nop
   11691:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   11695:	48 81 c4 d8 00 00 00 	add    rsp,0xd8
   1169c:	5b                   	pop    rbx
   1169d:	5d                   	pop    rbp
   1169e:	c3                   	ret    

000000000001169f <f5_get_stem_contributions_d5>:
   1169f:	55                   	push   rbp
   116a0:	48 89 e5             	mov    rbp,rsp
   116a3:	53                   	push   rbx
   116a4:	48 81 ec c8 00 00 00 	sub    rsp,0xc8
   116ab:	48 89 bd 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rdi
   116b2:	89 b5 54 ff ff ff    	mov    DWORD PTR [rbp-0xac],esi
   116b8:	48 89 95 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rdx
   116bf:	48 89 8d 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rcx
   116c6:	4c 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],r8
   116cd:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   116d3:	48 98                	cdqe   
   116d5:	c1 e0 02             	shl    eax,0x2
   116d8:	89 c7                	mov    edi,eax
   116da:	e8 e2 a7 01 00       	call   2bec1 <vrna_alloc>
   116df:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
   116e3:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   116ea:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
   116ee:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
   116f2:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
   116f6:	48 05 98 35 03 00    	add    rax,0x33598
   116fc:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
   11700:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   11707:	48 8b 40 78          	mov    rax,QWORD PTR [rax+0x78]
   1170b:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
   1170f:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   11716:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
   1171a:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
   1171e:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
   11722:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   11726:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
   1172c:	89 85 70 ff ff ff    	mov    DWORD PTR [rbp-0x90],eax
   11732:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   11738:	48 98                	cdqe   
   1173a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   11742:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   11746:	48 01 d0             	add    rax,rdx
   11749:	8b 10                	mov    edx,DWORD PTR [rax]
   1174b:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   11751:	01 d0                	add    eax,edx
   11753:	2b 85 70 ff ff ff    	sub    eax,DWORD PTR [rbp-0x90]
   11759:	89 85 6c ff ff ff    	mov    DWORD PTR [rbp-0x94],eax
   1175f:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
   11766:	48 8b 40 18          	mov    rax,QWORD PTR [rax+0x18]
   1176a:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
   1176e:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
   11775:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
   11779:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
   1177d:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   11784:	8b 00                	mov    eax,DWORD PTR [rax]
   11786:	85 c0                	test   eax,eax
   11788:	74 0e                	je     11798 <f5_get_stem_contributions_d5+0xf9>
   1178a:	83 f8 01             	cmp    eax,0x1
   1178d:	0f 84 75 03 00 00    	je     11b08 <f5_get_stem_contributions_d5+0x469>
   11793:	e9 f5 08 00 00       	jmp    1208d <f5_get_stem_contributions_d5+0x9ee>
   11798:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   1179f:	48 8b 80 b8 00 00 00 	mov    rax,QWORD PTR [rax+0xb8]
   117a6:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
   117aa:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   117b1:	48 8b 80 c8 00 00 00 	mov    rax,QWORD PTR [rax+0xc8]
   117b8:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
   117bc:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   117c2:	48 63 d0             	movsxd rdx,eax
   117c5:	8b 85 70 ff ff ff    	mov    eax,DWORD PTR [rbp-0x90]
   117cb:	48 98                	cdqe   
   117cd:	48 29 c2             	sub    rdx,rax
   117d0:	48 89 d0             	mov    rax,rdx
   117d3:	48 01 c0             	add    rax,rax
   117d6:	48 8d 50 fe          	lea    rdx,[rax-0x2]
   117da:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   117de:	48 01 d0             	add    rax,rdx
   117e1:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
   117e5:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   117eb:	2b 85 70 ff ff ff    	sub    eax,DWORD PTR [rbp-0x90]
   117f1:	83 e8 01             	sub    eax,0x1
   117f4:	89 85 68 ff ff ff    	mov    DWORD PTR [rbp-0x98],eax
   117fa:	e9 03 01 00 00       	jmp    11902 <f5_get_stem_contributions_d5+0x263>
   117ff:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   11805:	48 98                	cdqe   
   11807:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1180f:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
   11813:	48 01 d0             	add    rax,rdx
   11816:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
   1181c:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   11822:	48 98                	cdqe   
   11824:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1182c:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
   11830:	48 01 d0             	add    rax,rdx
   11833:	8b 00                	mov    eax,DWORD PTR [rax]
   11835:	3d 80 96 98 00       	cmp    eax,0x989680
   1183a:	0f 84 af 00 00 00    	je     118ef <f5_get_stem_contributions_d5+0x250>
   11840:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   11846:	8d 48 01             	lea    ecx,[rax+0x1]
   11849:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   1184f:	8d 50 ff             	lea    edx,[rax-0x1]
   11852:	48 8b b5 40 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xc0]
   11859:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   1185f:	4c 8b 95 48 ff ff ff 	mov    r10,QWORD PTR [rbp-0xb8]
   11866:	49 89 f1             	mov    r9,rsi
   11869:	41 b8 12 00 00 00    	mov    r8d,0x12
   1186f:	89 c6                	mov    esi,eax
   11871:	bf 01 00 00 00       	mov    edi,0x1
   11876:	41 ff d2             	call   r10
   11879:	84 c0                	test   al,al
   1187b:	74 72                	je     118ef <f5_get_stem_contributions_d5+0x250>
   1187d:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
   11881:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   11887:	48 89 d6             	mov    rsi,rdx
   1188a:	89 c7                	mov    edi,eax
   1188c:	e8 aa c2 01 00       	call   2db3b <vrna_get_ptype>
   11891:	89 85 78 ff ff ff    	mov    DWORD PTR [rbp-0x88],eax
   11897:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   1189d:	48 98                	cdqe   
   1189f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   118a7:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
   118ab:	48 01 d0             	add    rax,rdx
   118ae:	8b 18                	mov    ebx,DWORD PTR [rax]
   118b0:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
   118b4:	0f b7 00             	movzx  eax,WORD PTR [rax]
   118b7:	0f bf f0             	movsx  esi,ax
   118ba:	48 8b 55 90          	mov    rdx,QWORD PTR [rbp-0x70]
   118be:	8b 85 78 ff ff ff    	mov    eax,DWORD PTR [rbp-0x88]
   118c4:	48 89 d1             	mov    rcx,rdx
   118c7:	ba ff ff ff ff       	mov    edx,0xffffffff
   118cc:	89 c7                	mov    edi,eax
   118ce:	e8 18 c9 ff ff       	call   e1eb <vrna_E_ext_stem>
   118d3:	8b 95 68 ff ff ff    	mov    edx,DWORD PTR [rbp-0x98]
   118d9:	48 63 d2             	movsxd rdx,edx
   118dc:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   118e4:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
   118e8:	48 01 ca             	add    rdx,rcx
   118eb:	01 d8                	add    eax,ebx
   118ed:	89 02                	mov    DWORD PTR [rdx],eax
   118ef:	83 ad 68 ff ff ff 01 	sub    DWORD PTR [rbp-0x98],0x1
   118f6:	83 ad 6c ff ff ff 01 	sub    DWORD PTR [rbp-0x94],0x1
   118fd:	48 83 6d 80 02       	sub    QWORD PTR [rbp-0x80],0x2
   11902:	83 bd 68 ff ff ff 01 	cmp    DWORD PTR [rbp-0x98],0x1
   11909:	0f 8f f0 fe ff ff    	jg     117ff <f5_get_stem_contributions_d5+0x160>
   1190f:	48 83 7d b0 00       	cmp    QWORD PTR [rbp-0x50],0x0
   11914:	0f 84 b1 00 00 00    	je     119cb <f5_get_stem_contributions_d5+0x32c>
   1191a:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   11920:	2b 85 70 ff ff ff    	sub    eax,DWORD PTR [rbp-0x90]
   11926:	83 e8 01             	sub    eax,0x1
   11929:	89 85 68 ff ff ff    	mov    DWORD PTR [rbp-0x98],eax
   1192f:	e9 8a 00 00 00       	jmp    119be <f5_get_stem_contributions_d5+0x31f>
   11934:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   1193a:	48 98                	cdqe   
   1193c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   11944:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
   11948:	48 01 d0             	add    rax,rdx
   1194b:	8b 00                	mov    eax,DWORD PTR [rax]
   1194d:	3d 80 96 98 00       	cmp    eax,0x989680
   11952:	74 63                	je     119b7 <f5_get_stem_contributions_d5+0x318>
   11954:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   1195a:	8d 78 01             	lea    edi,[rax+0x1]
   1195d:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   11963:	8d 70 ff             	lea    esi,[rax-0x1]
   11966:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
   1196d:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   11973:	4c 8b 45 b0          	mov    r8,QWORD PTR [rbp-0x50]
   11977:	48 89 d1             	mov    rcx,rdx
   1197a:	89 fa                	mov    edx,edi
   1197c:	89 c7                	mov    edi,eax
   1197e:	41 ff d0             	call   r8
   11981:	8b 95 68 ff ff ff    	mov    edx,DWORD PTR [rbp-0x98]
   11987:	48 63 d2             	movsxd rdx,edx
   1198a:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   11992:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
   11996:	48 01 ca             	add    rdx,rcx
   11999:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   1199b:	8b 95 68 ff ff ff    	mov    edx,DWORD PTR [rbp-0x98]
   119a1:	48 63 d2             	movsxd rdx,edx
   119a4:	48 8d 34 95 00 00 00 00 	lea    rsi,[rdx*4+0x0]
   119ac:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
   119b0:	48 01 f2             	add    rdx,rsi
   119b3:	01 c8                	add    eax,ecx
   119b5:	89 02                	mov    DWORD PTR [rdx],eax
   119b7:	83 ad 68 ff ff ff 01 	sub    DWORD PTR [rbp-0x98],0x1
   119be:	83 bd 68 ff ff ff 01 	cmp    DWORD PTR [rbp-0x98],0x1
   119c5:	0f 8f 69 ff ff ff    	jg     11934 <f5_get_stem_contributions_d5+0x295>
   119cb:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
   119cf:	48 83 c0 04          	add    rax,0x4
   119d3:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
   119d9:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   119df:	48 98                	cdqe   
   119e1:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   119e9:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   119ed:	48 01 d0             	add    rax,rdx
   119f0:	8b 00                	mov    eax,DWORD PTR [rax]
   119f2:	83 c0 02             	add    eax,0x2
   119f5:	89 85 6c ff ff ff    	mov    DWORD PTR [rbp-0x94],eax
   119fb:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   11a01:	48 98                	cdqe   
   11a03:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   11a0b:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
   11a0f:	48 01 d0             	add    rax,rdx
   11a12:	8b 00                	mov    eax,DWORD PTR [rax]
   11a14:	3d 80 96 98 00       	cmp    eax,0x989680
   11a19:	0f 84 6d 06 00 00    	je     1208c <f5_get_stem_contributions_d5+0x9ed>
   11a1f:	48 8b 8d 40 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xc0]
   11a26:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   11a2c:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   11a32:	4c 8b 95 48 ff ff ff 	mov    r10,QWORD PTR [rbp-0xb8]
   11a39:	49 89 c9             	mov    r9,rcx
   11a3c:	41 b8 0e 00 00 00    	mov    r8d,0xe
   11a42:	89 d1                	mov    ecx,edx
   11a44:	ba 02 00 00 00       	mov    edx,0x2
   11a49:	89 c6                	mov    esi,eax
   11a4b:	bf 01 00 00 00       	mov    edi,0x1
   11a50:	41 ff d2             	call   r10
   11a53:	84 c0                	test   al,al
   11a55:	0f 84 31 06 00 00    	je     1208c <f5_get_stem_contributions_d5+0x9ed>
   11a5b:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
   11a5f:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   11a65:	48 89 d6             	mov    rsi,rdx
   11a68:	89 c7                	mov    edi,eax
   11a6a:	e8 cc c0 01 00       	call   2db3b <vrna_get_ptype>
   11a6f:	89 85 78 ff ff ff    	mov    DWORD PTR [rbp-0x88],eax
   11a75:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   11a7b:	48 98                	cdqe   
   11a7d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   11a85:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
   11a89:	48 01 d0             	add    rax,rdx
   11a8c:	8b 18                	mov    ebx,DWORD PTR [rax]
   11a8e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   11a92:	48 83 c0 02          	add    rax,0x2
   11a96:	0f b7 00             	movzx  eax,WORD PTR [rax]
   11a99:	0f bf f0             	movsx  esi,ax
   11a9c:	48 8b 55 90          	mov    rdx,QWORD PTR [rbp-0x70]
   11aa0:	8b 85 78 ff ff ff    	mov    eax,DWORD PTR [rbp-0x88]
   11aa6:	48 89 d1             	mov    rcx,rdx
   11aa9:	ba ff ff ff ff       	mov    edx,0xffffffff
   11aae:	89 c7                	mov    edi,eax
   11ab0:	e8 36 c7 ff ff       	call   e1eb <vrna_E_ext_stem>
   11ab5:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
   11ab9:	48 83 c2 04          	add    rdx,0x4
   11abd:	01 d8                	add    eax,ebx
   11abf:	89 02                	mov    DWORD PTR [rdx],eax
   11ac1:	48 83 7d b8 00       	cmp    QWORD PTR [rbp-0x48],0x0
   11ac6:	0f 84 c0 05 00 00    	je     1208c <f5_get_stem_contributions_d5+0x9ed>
   11acc:	48 8b 8d 38 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xc8]
   11ad3:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   11ad9:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   11adf:	4c 8b 45 b8          	mov    r8,QWORD PTR [rbp-0x48]
   11ae3:	be 02 00 00 00       	mov    esi,0x2
   11ae8:	89 c7                	mov    edi,eax
   11aea:	41 ff d0             	call   r8
   11aed:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
   11af1:	48 83 c2 04          	add    rdx,0x4
   11af5:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   11af7:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
   11afb:	48 83 c2 04          	add    rdx,0x4
   11aff:	01 c8                	add    eax,ecx
   11b01:	89 02                	mov    DWORD PTR [rdx],eax
   11b03:	e9 84 05 00 00       	jmp    1208c <f5_get_stem_contributions_d5+0x9ed>
   11b08:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   11b0f:	8b 80 b8 00 00 00    	mov    eax,DWORD PTR [rax+0xb8]
   11b15:	89 85 74 ff ff ff    	mov    DWORD PTR [rbp-0x8c],eax
   11b1b:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   11b22:	48 8b 80 d0 00 00 00 	mov    rax,QWORD PTR [rax+0xd0]
   11b29:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
   11b2d:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   11b34:	48 8b 80 d8 00 00 00 	mov    rax,QWORD PTR [rax+0xd8]
   11b3b:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
   11b3f:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   11b46:	48 8b 80 f0 00 00 00 	mov    rax,QWORD PTR [rax+0xf0]
   11b4d:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
   11b51:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   11b57:	01 c0                	add    eax,eax
   11b59:	89 c7                	mov    edi,eax
   11b5b:	e8 61 a3 01 00       	call   2bec1 <vrna_alloc>
   11b60:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
   11b64:	c7 85 64 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x9c],0x0
   11b6e:	eb 45                	jmp    11bb5 <f5_get_stem_contributions_d5+0x516>
   11b70:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   11b76:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   11b7e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   11b82:	48 01 d0             	add    rax,rdx
   11b85:	48 8b 00             	mov    rax,QWORD PTR [rax]
   11b88:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   11b8e:	48 63 d2             	movsxd rdx,edx
   11b91:	48 01 d2             	add    rdx,rdx
   11b94:	48 01 d0             	add    rax,rdx
   11b97:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   11b9d:	48 8d 0c 12          	lea    rcx,[rdx+rdx*1]
   11ba1:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
   11ba5:	48 01 ca             	add    rdx,rcx
   11ba8:	0f b7 00             	movzx  eax,WORD PTR [rax]
   11bab:	66 89 02             	mov    WORD PTR [rdx],ax
   11bae:	83 85 64 ff ff ff 01 	add    DWORD PTR [rbp-0x9c],0x1
   11bb5:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   11bbb:	3b 85 74 ff ff ff    	cmp    eax,DWORD PTR [rbp-0x8c]
   11bc1:	72 ad                	jb     11b70 <f5_get_stem_contributions_d5+0x4d1>
   11bc3:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   11bc9:	2b 85 70 ff ff ff    	sub    eax,DWORD PTR [rbp-0x90]
   11bcf:	83 e8 01             	sub    eax,0x1
   11bd2:	89 85 68 ff ff ff    	mov    DWORD PTR [rbp-0x98],eax
   11bd8:	e9 ec 01 00 00       	jmp    11dc9 <f5_get_stem_contributions_d5+0x72a>
   11bdd:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   11be3:	48 98                	cdqe   
   11be5:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   11bed:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
   11bf1:	48 01 d0             	add    rax,rdx
   11bf4:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
   11bfa:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   11c00:	48 98                	cdqe   
   11c02:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   11c0a:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
   11c0e:	48 01 d0             	add    rax,rdx
   11c11:	8b 00                	mov    eax,DWORD PTR [rax]
   11c13:	3d 80 96 98 00       	cmp    eax,0x989680
   11c18:	0f 84 9d 01 00 00    	je     11dbb <f5_get_stem_contributions_d5+0x71c>
   11c1e:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   11c24:	8d 48 01             	lea    ecx,[rax+0x1]
   11c27:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   11c2d:	8d 50 ff             	lea    edx,[rax-0x1]
   11c30:	48 8b b5 40 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xc0]
   11c37:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   11c3d:	4c 8b 95 48 ff ff ff 	mov    r10,QWORD PTR [rbp-0xb8]
   11c44:	49 89 f1             	mov    r9,rsi
   11c47:	41 b8 12 00 00 00    	mov    r8d,0x12
   11c4d:	89 c6                	mov    esi,eax
   11c4f:	bf 01 00 00 00       	mov    edi,0x1
   11c54:	41 ff d2             	call   r10
   11c57:	84 c0                	test   al,al
   11c59:	0f 84 5c 01 00 00    	je     11dbb <f5_get_stem_contributions_d5+0x71c>
   11c5f:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   11c65:	48 98                	cdqe   
   11c67:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   11c6f:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
   11c73:	48 01 d0             	add    rax,rdx
   11c76:	8b 95 68 ff ff ff    	mov    edx,DWORD PTR [rbp-0x98]
   11c7c:	48 63 d2             	movsxd rdx,edx
   11c7f:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   11c87:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
   11c8b:	48 01 ca             	add    rdx,rcx
   11c8e:	8b 00                	mov    eax,DWORD PTR [rax]
   11c90:	89 02                	mov    DWORD PTR [rdx],eax
   11c92:	c7 85 64 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x9c],0x0
   11c9c:	e9 08 01 00 00       	jmp    11da9 <f5_get_stem_contributions_d5+0x70a>
   11ca1:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   11ca7:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   11cab:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   11caf:	48 01 d0             	add    rax,rdx
   11cb2:	0f b7 00             	movzx  eax,WORD PTR [rax]
   11cb5:	0f bf c8             	movsx  ecx,ax
   11cb8:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   11cbe:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   11cc6:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   11cca:	48 01 d0             	add    rax,rdx
   11ccd:	48 8b 00             	mov    rax,QWORD PTR [rax]
   11cd0:	8b 95 68 ff ff ff    	mov    edx,DWORD PTR [rbp-0x98]
   11cd6:	48 63 d2             	movsxd rdx,edx
   11cd9:	48 83 c2 01          	add    rdx,0x1
   11cdd:	48 01 d2             	add    rdx,rdx
   11ce0:	48 01 d0             	add    rax,rdx
   11ce3:	0f b7 00             	movzx  eax,WORD PTR [rax]
   11ce6:	98                   	cwde   
   11ce7:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
   11ceb:	89 ce                	mov    esi,ecx
   11ced:	89 c7                	mov    edi,eax
   11cef:	e8 f4 bd 01 00       	call   2dae8 <vrna_get_ptype_md>
   11cf4:	89 85 78 ff ff ff    	mov    DWORD PTR [rbp-0x88],eax
   11cfa:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   11d00:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   11d08:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   11d0c:	48 01 d0             	add    rax,rdx
   11d0f:	48 8b 00             	mov    rax,QWORD PTR [rax]
   11d12:	8b 95 68 ff ff ff    	mov    edx,DWORD PTR [rbp-0x98]
   11d18:	48 63 d2             	movsxd rdx,edx
   11d1b:	48 83 c2 01          	add    rdx,0x1
   11d1f:	48 c1 e2 02          	shl    rdx,0x2
   11d23:	48 01 d0             	add    rax,rdx
   11d26:	8b 00                	mov    eax,DWORD PTR [rax]
   11d28:	83 f8 01             	cmp    eax,0x1
   11d2b:	76 31                	jbe    11d5e <f5_get_stem_contributions_d5+0x6bf>
   11d2d:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   11d33:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   11d3b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   11d3f:	48 01 d0             	add    rax,rdx
   11d42:	48 8b 00             	mov    rax,QWORD PTR [rax]
   11d45:	8b 95 68 ff ff ff    	mov    edx,DWORD PTR [rbp-0x98]
   11d4b:	48 63 d2             	movsxd rdx,edx
   11d4e:	48 83 c2 01          	add    rdx,0x1
   11d52:	48 01 d2             	add    rdx,rdx
   11d55:	48 01 d0             	add    rax,rdx
   11d58:	0f b7 00             	movzx  eax,WORD PTR [rax]
   11d5b:	98                   	cwde   
   11d5c:	eb 05                	jmp    11d63 <f5_get_stem_contributions_d5+0x6c4>
   11d5e:	b8 ff ff ff ff       	mov    eax,0xffffffff
   11d63:	89 85 7c ff ff ff    	mov    DWORD PTR [rbp-0x84],eax
   11d69:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   11d6f:	48 98                	cdqe   
   11d71:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   11d79:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
   11d7d:	48 8d 1c 02          	lea    rbx,[rdx+rax*1]
   11d81:	48 8b 55 90          	mov    rdx,QWORD PTR [rbp-0x70]
   11d85:	8b b5 7c ff ff ff    	mov    esi,DWORD PTR [rbp-0x84]
   11d8b:	8b 85 78 ff ff ff    	mov    eax,DWORD PTR [rbp-0x88]
   11d91:	48 89 d1             	mov    rcx,rdx
   11d94:	ba ff ff ff ff       	mov    edx,0xffffffff
   11d99:	89 c7                	mov    edi,eax
   11d9b:	e8 4b c4 ff ff       	call   e1eb <vrna_E_ext_stem>
   11da0:	89 03                	mov    DWORD PTR [rbx],eax
   11da2:	83 85 64 ff ff ff 01 	add    DWORD PTR [rbp-0x9c],0x1
   11da9:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   11daf:	3b 85 74 ff ff ff    	cmp    eax,DWORD PTR [rbp-0x8c]
   11db5:	0f 82 e6 fe ff ff    	jb     11ca1 <f5_get_stem_contributions_d5+0x602>
   11dbb:	83 ad 68 ff ff ff 01 	sub    DWORD PTR [rbp-0x98],0x1
   11dc2:	83 ad 6c ff ff ff 01 	sub    DWORD PTR [rbp-0x94],0x1
   11dc9:	83 bd 68 ff ff ff 01 	cmp    DWORD PTR [rbp-0x98],0x1
   11dd0:	0f 8f 07 fe ff ff    	jg     11bdd <f5_get_stem_contributions_d5+0x53e>
   11dd6:	48 83 7d b0 00       	cmp    QWORD PTR [rbp-0x50],0x0
   11ddb:	0f 84 b1 00 00 00    	je     11e92 <f5_get_stem_contributions_d5+0x7f3>
   11de1:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   11de7:	2b 85 70 ff ff ff    	sub    eax,DWORD PTR [rbp-0x90]
   11ded:	83 e8 01             	sub    eax,0x1
   11df0:	89 85 68 ff ff ff    	mov    DWORD PTR [rbp-0x98],eax
   11df6:	e9 8a 00 00 00       	jmp    11e85 <f5_get_stem_contributions_d5+0x7e6>
   11dfb:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   11e01:	48 98                	cdqe   
   11e03:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   11e0b:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
   11e0f:	48 01 d0             	add    rax,rdx
   11e12:	8b 00                	mov    eax,DWORD PTR [rax]
   11e14:	3d 80 96 98 00       	cmp    eax,0x989680
   11e19:	74 63                	je     11e7e <f5_get_stem_contributions_d5+0x7df>
   11e1b:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   11e21:	8d 78 01             	lea    edi,[rax+0x1]
   11e24:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   11e2a:	8d 70 ff             	lea    esi,[rax-0x1]
   11e2d:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
   11e34:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   11e3a:	4c 8b 45 b0          	mov    r8,QWORD PTR [rbp-0x50]
   11e3e:	48 89 d1             	mov    rcx,rdx
   11e41:	89 fa                	mov    edx,edi
   11e43:	89 c7                	mov    edi,eax
   11e45:	41 ff d0             	call   r8
   11e48:	8b 95 68 ff ff ff    	mov    edx,DWORD PTR [rbp-0x98]
   11e4e:	48 63 d2             	movsxd rdx,edx
   11e51:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   11e59:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
   11e5d:	48 01 ca             	add    rdx,rcx
   11e60:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   11e62:	8b 95 68 ff ff ff    	mov    edx,DWORD PTR [rbp-0x98]
   11e68:	48 63 d2             	movsxd rdx,edx
   11e6b:	48 8d 34 95 00 00 00 00 	lea    rsi,[rdx*4+0x0]
   11e73:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
   11e77:	48 01 f2             	add    rdx,rsi
   11e7a:	01 c8                	add    eax,ecx
   11e7c:	89 02                	mov    DWORD PTR [rdx],eax
   11e7e:	83 ad 68 ff ff ff 01 	sub    DWORD PTR [rbp-0x98],0x1
   11e85:	83 bd 68 ff ff ff 01 	cmp    DWORD PTR [rbp-0x98],0x1
   11e8c:	0f 8f 69 ff ff ff    	jg     11dfb <f5_get_stem_contributions_d5+0x75c>
   11e92:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
   11e96:	48 83 c0 04          	add    rax,0x4
   11e9a:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
   11ea0:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   11ea6:	48 98                	cdqe   
   11ea8:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   11eb0:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   11eb4:	48 01 d0             	add    rax,rdx
   11eb7:	8b 00                	mov    eax,DWORD PTR [rax]
   11eb9:	83 c0 02             	add    eax,0x2
   11ebc:	89 85 6c ff ff ff    	mov    DWORD PTR [rbp-0x94],eax
   11ec2:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   11ec8:	48 98                	cdqe   
   11eca:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   11ed2:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
   11ed6:	48 01 d0             	add    rax,rdx
   11ed9:	8b 00                	mov    eax,DWORD PTR [rax]
   11edb:	3d 80 96 98 00       	cmp    eax,0x989680
   11ee0:	0f 84 98 01 00 00    	je     1207e <f5_get_stem_contributions_d5+0x9df>
   11ee6:	48 8b 8d 40 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xc0]
   11eed:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   11ef3:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   11ef9:	4c 8b 95 48 ff ff ff 	mov    r10,QWORD PTR [rbp-0xb8]
   11f00:	49 89 c9             	mov    r9,rcx
   11f03:	41 b8 0e 00 00 00    	mov    r8d,0xe
   11f09:	89 d1                	mov    ecx,edx
   11f0b:	ba 02 00 00 00       	mov    edx,0x2
   11f10:	89 c6                	mov    esi,eax
   11f12:	bf 01 00 00 00       	mov    edi,0x1
   11f17:	41 ff d2             	call   r10
   11f1a:	84 c0                	test   al,al
   11f1c:	0f 84 5c 01 00 00    	je     1207e <f5_get_stem_contributions_d5+0x9df>
   11f22:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   11f28:	48 98                	cdqe   
   11f2a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   11f32:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
   11f36:	48 01 d0             	add    rax,rdx
   11f39:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
   11f3d:	48 83 c2 04          	add    rdx,0x4
   11f41:	8b 00                	mov    eax,DWORD PTR [rax]
   11f43:	89 02                	mov    DWORD PTR [rdx],eax
   11f45:	c7 85 64 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x9c],0x0
   11f4f:	e9 da 00 00 00       	jmp    1202e <f5_get_stem_contributions_d5+0x98f>
   11f54:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   11f5a:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   11f5e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   11f62:	48 01 d0             	add    rax,rdx
   11f65:	0f b7 00             	movzx  eax,WORD PTR [rax]
   11f68:	0f bf c8             	movsx  ecx,ax
   11f6b:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   11f71:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   11f79:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   11f7d:	48 01 d0             	add    rax,rdx
   11f80:	48 8b 00             	mov    rax,QWORD PTR [rax]
   11f83:	48 83 c0 04          	add    rax,0x4
   11f87:	0f b7 00             	movzx  eax,WORD PTR [rax]
   11f8a:	98                   	cwde   
   11f8b:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
   11f8f:	89 ce                	mov    esi,ecx
   11f91:	89 c7                	mov    edi,eax
   11f93:	e8 50 bb 01 00       	call   2dae8 <vrna_get_ptype_md>
   11f98:	89 85 78 ff ff ff    	mov    DWORD PTR [rbp-0x88],eax
   11f9e:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   11fa4:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   11fac:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   11fb0:	48 01 d0             	add    rax,rdx
   11fb3:	48 8b 00             	mov    rax,QWORD PTR [rax]
   11fb6:	48 83 c0 08          	add    rax,0x8
   11fba:	8b 00                	mov    eax,DWORD PTR [rax]
   11fbc:	83 f8 01             	cmp    eax,0x1
   11fbf:	76 22                	jbe    11fe3 <f5_get_stem_contributions_d5+0x944>
   11fc1:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   11fc7:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   11fcf:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   11fd3:	48 01 d0             	add    rax,rdx
   11fd6:	48 8b 00             	mov    rax,QWORD PTR [rax]
   11fd9:	48 83 c0 04          	add    rax,0x4
   11fdd:	0f b7 00             	movzx  eax,WORD PTR [rax]
   11fe0:	98                   	cwde   
   11fe1:	eb 05                	jmp    11fe8 <f5_get_stem_contributions_d5+0x949>
   11fe3:	b8 ff ff ff ff       	mov    eax,0xffffffff
   11fe8:	89 85 7c ff ff ff    	mov    DWORD PTR [rbp-0x84],eax
   11fee:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   11ff4:	48 98                	cdqe   
   11ff6:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   11ffe:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
   12002:	48 8d 1c 02          	lea    rbx,[rdx+rax*1]
   12006:	48 8b 55 90          	mov    rdx,QWORD PTR [rbp-0x70]
   1200a:	8b b5 7c ff ff ff    	mov    esi,DWORD PTR [rbp-0x84]
   12010:	8b 85 78 ff ff ff    	mov    eax,DWORD PTR [rbp-0x88]
   12016:	48 89 d1             	mov    rcx,rdx
   12019:	ba ff ff ff ff       	mov    edx,0xffffffff
   1201e:	89 c7                	mov    edi,eax
   12020:	e8 c6 c1 ff ff       	call   e1eb <vrna_E_ext_stem>
   12025:	89 03                	mov    DWORD PTR [rbx],eax
   12027:	83 85 64 ff ff ff 01 	add    DWORD PTR [rbp-0x9c],0x1
   1202e:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   12034:	3b 85 74 ff ff ff    	cmp    eax,DWORD PTR [rbp-0x8c]
   1203a:	0f 82 14 ff ff ff    	jb     11f54 <f5_get_stem_contributions_d5+0x8b5>
   12040:	48 83 7d b8 00       	cmp    QWORD PTR [rbp-0x48],0x0
   12045:	74 37                	je     1207e <f5_get_stem_contributions_d5+0x9df>
   12047:	48 8b 8d 38 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xc8]
   1204e:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   12054:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   1205a:	4c 8b 45 b8          	mov    r8,QWORD PTR [rbp-0x48]
   1205e:	be 02 00 00 00       	mov    esi,0x2
   12063:	89 c7                	mov    edi,eax
   12065:	41 ff d0             	call   r8
   12068:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
   1206c:	48 83 c2 04          	add    rdx,0x4
   12070:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   12072:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
   12076:	48 83 c2 04          	add    rdx,0x4
   1207a:	01 c8                	add    eax,ecx
   1207c:	89 02                	mov    DWORD PTR [rdx],eax
   1207e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   12082:	48 89 c7             	mov    rdi,rax
   12085:	e8 26 18 ff ff       	call   38b0 <free@plt>
   1208a:	eb 01                	jmp    1208d <f5_get_stem_contributions_d5+0x9ee>
   1208c:	90                   	nop
   1208d:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
   12091:	48 81 c4 c8 00 00 00 	add    rsp,0xc8
   12098:	5b                   	pop    rbx
   12099:	5d                   	pop    rbp
   1209a:	c3                   	ret    

000000000001209b <f3_get_stem_contributions_d3>:
   1209b:	55                   	push   rbp
   1209c:	48 89 e5             	mov    rbp,rsp
   1209f:	53                   	push   rbx
   120a0:	48 81 ec c8 00 00 00 	sub    rsp,0xc8
   120a7:	48 89 bd 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rdi
   120ae:	89 b5 54 ff ff ff    	mov    DWORD PTR [rbp-0xac],esi
   120b4:	48 89 95 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rdx
   120bb:	48 89 8d 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rcx
   120c2:	4c 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],r8
   120c9:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   120d0:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
   120d3:	89 85 78 ff ff ff    	mov    DWORD PTR [rbp-0x88],eax
   120d9:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   120e0:	8b 80 60 01 00 00    	mov    eax,DWORD PTR [rax+0x160]
   120e6:	89 85 7c ff ff ff    	mov    DWORD PTR [rbp-0x84],eax
   120ec:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   120f3:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
   120f7:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
   120fb:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
   120ff:	48 05 98 35 03 00    	add    rax,0x33598
   12105:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
   12109:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   12110:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
   12114:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
   12118:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   1211e:	48 63 d2             	movsxd rdx,edx
   12121:	48 c1 e2 03          	shl    rdx,0x3
   12125:	48 01 d0             	add    rax,rdx
   12128:	48 8b 00             	mov    rax,QWORD PTR [rax]
   1212b:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
   1212f:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   12135:	48 98                	cdqe   
   12137:	48 c1 e0 02          	shl    rax,0x2
   1213b:	48 f7 d8             	neg    rax
   1213e:	48 01 45 a0          	add    QWORD PTR [rbp-0x60],rax
   12142:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   12146:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
   1214c:	89 45 80             	mov    DWORD PTR [rbp-0x80],eax
   1214f:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
   12155:	83 c0 06             	add    eax,0x6
   12158:	48 98                	cdqe   
   1215a:	c1 e0 02             	shl    eax,0x2
   1215d:	89 c7                	mov    edi,eax
   1215f:	e8 5d 9d 01 00       	call   2bec1 <vrna_alloc>
   12164:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
   12168:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   1216e:	48 98                	cdqe   
   12170:	48 c1 e0 02          	shl    rax,0x2
   12174:	48 f7 d8             	neg    rax
   12177:	48 01 45 a8          	add    QWORD PTR [rbp-0x58],rax
   1217b:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
   12182:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
   12186:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
   1218a:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
   12191:	48 8b 40 18          	mov    rax,QWORD PTR [rax+0x18]
   12195:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
   12199:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   121a0:	8b 00                	mov    eax,DWORD PTR [rax]
   121a2:	85 c0                	test   eax,eax
   121a4:	74 0e                	je     121b4 <f3_get_stem_contributions_d3+0x119>
   121a6:	83 f8 01             	cmp    eax,0x1
   121a9:	0f 84 c9 03 00 00    	je     12578 <f3_get_stem_contributions_d3+0x4dd>
   121af:	e9 ce 09 00 00       	jmp    12b82 <f3_get_stem_contributions_d3+0xae7>
   121b4:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   121bb:	48 8b 80 b8 00 00 00 	mov    rax,QWORD PTR [rax+0xb8]
   121c2:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
   121c6:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   121cd:	48 8b 80 68 01 00 00 	mov    rax,QWORD PTR [rax+0x168]
   121d4:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
   121d8:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   121de:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
   121e4:	01 d0                	add    eax,edx
   121e6:	83 c0 01             	add    eax,0x1
   121e9:	39 85 78 ff ff ff    	cmp    DWORD PTR [rbp-0x88],eax
   121ef:	7f 0b                	jg     121fc <f3_get_stem_contributions_d3+0x161>
   121f1:	8b 85 78 ff ff ff    	mov    eax,DWORD PTR [rbp-0x88]
   121f7:	83 e8 01             	sub    eax,0x1
   121fa:	eb 11                	jmp    1220d <f3_get_stem_contributions_d3+0x172>
   121fc:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   12202:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
   12208:	01 d0                	add    eax,edx
   1220a:	83 c0 01             	add    eax,0x1
   1220d:	89 45 88             	mov    DWORD PTR [rbp-0x78],eax
   12210:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   12216:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
   12219:	01 d0                	add    eax,edx
   1221b:	83 c0 01             	add    eax,0x1
   1221e:	89 85 74 ff ff ff    	mov    DWORD PTR [rbp-0x8c],eax
   12224:	e9 0a 01 00 00       	jmp    12333 <f3_get_stem_contributions_d3+0x298>
   12229:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   1222f:	48 98                	cdqe   
   12231:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   12239:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
   1223d:	48 01 d0             	add    rax,rdx
   12240:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
   12246:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   1224c:	48 98                	cdqe   
   1224e:	48 c1 e0 02          	shl    rax,0x2
   12252:	48 8d 50 fc          	lea    rdx,[rax-0x4]
   12256:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   1225a:	48 01 d0             	add    rax,rdx
   1225d:	8b 00                	mov    eax,DWORD PTR [rax]
   1225f:	3d 80 96 98 00       	cmp    eax,0x989680
   12264:	0f 84 c2 00 00 00    	je     1232c <f3_get_stem_contributions_d3+0x291>
   1226a:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   12270:	8d 48 01             	lea    ecx,[rax+0x1]
   12273:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   12279:	8d 50 ff             	lea    edx,[rax-0x1]
   1227c:	48 8b bd 40 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xc0]
   12283:	8b b5 78 ff ff ff    	mov    esi,DWORD PTR [rbp-0x88]
   12289:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   1228f:	4c 8b 95 48 ff ff ff 	mov    r10,QWORD PTR [rbp-0xb8]
   12296:	49 89 f9             	mov    r9,rdi
   12299:	41 b8 10 00 00 00    	mov    r8d,0x10
   1229f:	89 c7                	mov    edi,eax
   122a1:	41 ff d2             	call   r10
   122a4:	84 c0                	test   al,al
   122a6:	0f 84 80 00 00 00    	je     1232c <f3_get_stem_contributions_d3+0x291>
   122ac:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   122b2:	8d 48 ff             	lea    ecx,[rax-0x1]
   122b5:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
   122b9:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   122bf:	89 ce                	mov    esi,ecx
   122c1:	89 c7                	mov    edi,eax
   122c3:	e8 aa b8 01 00       	call   2db72 <vrna_get_ptype_window>
   122c8:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
   122cb:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   122d1:	48 98                	cdqe   
   122d3:	48 c1 e0 02          	shl    rax,0x2
   122d7:	48 8d 50 fc          	lea    rdx,[rax-0x4]
   122db:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   122df:	48 01 d0             	add    rax,rdx
   122e2:	8b 18                	mov    ebx,DWORD PTR [rax]
   122e4:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   122ea:	48 98                	cdqe   
   122ec:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   122f0:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   122f4:	48 01 d0             	add    rax,rdx
   122f7:	0f b7 00             	movzx  eax,WORD PTR [rax]
   122fa:	0f bf d0             	movsx  edx,ax
   122fd:	48 8b 4d 90          	mov    rcx,QWORD PTR [rbp-0x70]
   12301:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
   12304:	be ff ff ff ff       	mov    esi,0xffffffff
   12309:	89 c7                	mov    edi,eax
   1230b:	e8 db be ff ff       	call   e1eb <vrna_E_ext_stem>
   12310:	8b 95 74 ff ff ff    	mov    edx,DWORD PTR [rbp-0x8c]
   12316:	48 63 d2             	movsxd rdx,edx
   12319:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   12321:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
   12325:	48 01 ca             	add    rdx,rcx
   12328:	01 d8                	add    eax,ebx
   1232a:	89 02                	mov    DWORD PTR [rdx],eax
   1232c:	83 85 74 ff ff ff 01 	add    DWORD PTR [rbp-0x8c],0x1
   12333:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   12339:	3b 45 88             	cmp    eax,DWORD PTR [rbp-0x78]
   1233c:	0f 8e e7 fe ff ff    	jle    12229 <f3_get_stem_contributions_d3+0x18e>
   12342:	48 83 7d b0 00       	cmp    QWORD PTR [rbp-0x50],0x0
   12347:	0f 84 b2 00 00 00    	je     123ff <f3_get_stem_contributions_d3+0x364>
   1234d:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   12353:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
   12356:	01 d0                	add    eax,edx
   12358:	83 c0 01             	add    eax,0x1
   1235b:	89 85 74 ff ff ff    	mov    DWORD PTR [rbp-0x8c],eax
   12361:	e9 8a 00 00 00       	jmp    123f0 <f3_get_stem_contributions_d3+0x355>
   12366:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   1236c:	48 98                	cdqe   
   1236e:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   12376:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
   1237a:	48 01 d0             	add    rax,rdx
   1237d:	8b 00                	mov    eax,DWORD PTR [rax]
   1237f:	3d 80 96 98 00       	cmp    eax,0x989680
   12384:	74 63                	je     123e9 <f3_get_stem_contributions_d3+0x34e>
   12386:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   1238c:	8d 78 01             	lea    edi,[rax+0x1]
   1238f:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   12395:	8d 70 ff             	lea    esi,[rax-0x1]
   12398:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
   1239f:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   123a5:	4c 8b 45 b0          	mov    r8,QWORD PTR [rbp-0x50]
   123a9:	48 89 d1             	mov    rcx,rdx
   123ac:	89 fa                	mov    edx,edi
   123ae:	89 c7                	mov    edi,eax
   123b0:	41 ff d0             	call   r8
   123b3:	8b 95 74 ff ff ff    	mov    edx,DWORD PTR [rbp-0x8c]
   123b9:	48 63 d2             	movsxd rdx,edx
   123bc:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   123c4:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
   123c8:	48 01 ca             	add    rdx,rcx
   123cb:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   123cd:	8b 95 74 ff ff ff    	mov    edx,DWORD PTR [rbp-0x8c]
   123d3:	48 63 d2             	movsxd rdx,edx
   123d6:	48 8d 34 95 00 00 00 00 	lea    rsi,[rdx*4+0x0]
   123de:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
   123e2:	48 01 f2             	add    rdx,rsi
   123e5:	01 c8                	add    eax,ecx
   123e7:	89 02                	mov    DWORD PTR [rdx],eax
   123e9:	83 85 74 ff ff ff 01 	add    DWORD PTR [rbp-0x8c],0x1
   123f0:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   123f6:	3b 45 88             	cmp    eax,DWORD PTR [rbp-0x78]
   123f9:	0f 8e 67 ff ff ff    	jle    12366 <f3_get_stem_contributions_d3+0x2cb>
   123ff:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   12405:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
   1240b:	01 d0                	add    eax,edx
   1240d:	39 85 78 ff ff ff    	cmp    DWORD PTR [rbp-0x88],eax
   12413:	0f 8f 68 07 00 00    	jg     12b81 <f3_get_stem_contributions_d3+0xae6>
   12419:	8b 85 78 ff ff ff    	mov    eax,DWORD PTR [rbp-0x88]
   1241f:	89 85 74 ff ff ff    	mov    DWORD PTR [rbp-0x8c],eax
   12425:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   1242b:	48 98                	cdqe   
   1242d:	48 c1 e0 02          	shl    rax,0x2
   12431:	48 8d 50 fc          	lea    rdx,[rax-0x4]
   12435:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   12439:	48 01 d0             	add    rax,rdx
   1243c:	8b 00                	mov    eax,DWORD PTR [rax]
   1243e:	3d 80 96 98 00       	cmp    eax,0x989680
   12443:	0f 84 38 07 00 00    	je     12b81 <f3_get_stem_contributions_d3+0xae6>
   12449:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   1244f:	8d 48 ff             	lea    ecx,[rax-0x1]
   12452:	48 8b bd 40 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xc0]
   12459:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   1245f:	8b b5 74 ff ff ff    	mov    esi,DWORD PTR [rbp-0x8c]
   12465:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   1246b:	4c 8b 95 48 ff ff ff 	mov    r10,QWORD PTR [rbp-0xb8]
   12472:	49 89 f9             	mov    r9,rdi
   12475:	41 b8 0e 00 00 00    	mov    r8d,0xe
   1247b:	89 c7                	mov    edi,eax
   1247d:	41 ff d2             	call   r10
   12480:	84 c0                	test   al,al
   12482:	0f 84 f9 06 00 00    	je     12b81 <f3_get_stem_contributions_d3+0xae6>
   12488:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   1248e:	8d 48 ff             	lea    ecx,[rax-0x1]
   12491:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
   12495:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   1249b:	89 ce                	mov    esi,ecx
   1249d:	89 c7                	mov    edi,eax
   1249f:	e8 ce b6 01 00       	call   2db72 <vrna_get_ptype_window>
   124a4:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
   124a7:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   124ad:	48 98                	cdqe   
   124af:	48 c1 e0 02          	shl    rax,0x2
   124b3:	48 8d 50 fc          	lea    rdx,[rax-0x4]
   124b7:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   124bb:	48 01 d0             	add    rax,rdx
   124be:	8b 18                	mov    ebx,DWORD PTR [rax]
   124c0:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   124c6:	48 98                	cdqe   
   124c8:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   124cc:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   124d0:	48 01 d0             	add    rax,rdx
   124d3:	0f b7 00             	movzx  eax,WORD PTR [rax]
   124d6:	0f bf d0             	movsx  edx,ax
   124d9:	48 8b 4d 90          	mov    rcx,QWORD PTR [rbp-0x70]
   124dd:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
   124e0:	be ff ff ff ff       	mov    esi,0xffffffff
   124e5:	89 c7                	mov    edi,eax
   124e7:	e8 ff bc ff ff       	call   e1eb <vrna_E_ext_stem>
   124ec:	8b 95 74 ff ff ff    	mov    edx,DWORD PTR [rbp-0x8c]
   124f2:	48 63 d2             	movsxd rdx,edx
   124f5:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   124fd:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
   12501:	48 01 ca             	add    rdx,rcx
   12504:	01 d8                	add    eax,ebx
   12506:	89 02                	mov    DWORD PTR [rdx],eax
   12508:	48 83 7d b8 00       	cmp    QWORD PTR [rbp-0x48],0x0
   1250d:	0f 84 6e 06 00 00    	je     12b81 <f3_get_stem_contributions_d3+0xae6>
   12513:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   12519:	8d 78 ff             	lea    edi,[rax-0x1]
   1251c:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
   12523:	8b b5 54 ff ff ff    	mov    esi,DWORD PTR [rbp-0xac]
   12529:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   1252f:	4c 8b 45 b8          	mov    r8,QWORD PTR [rbp-0x48]
   12533:	48 89 d1             	mov    rcx,rdx
   12536:	89 fa                	mov    edx,edi
   12538:	89 c7                	mov    edi,eax
   1253a:	41 ff d0             	call   r8
   1253d:	8b 95 74 ff ff ff    	mov    edx,DWORD PTR [rbp-0x8c]
   12543:	48 63 d2             	movsxd rdx,edx
   12546:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   1254e:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
   12552:	48 01 ca             	add    rdx,rcx
   12555:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   12557:	8b 95 74 ff ff ff    	mov    edx,DWORD PTR [rbp-0x8c]
   1255d:	48 63 d2             	movsxd rdx,edx
   12560:	48 8d 34 95 00 00 00 00 	lea    rsi,[rdx*4+0x0]
   12568:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
   1256c:	48 01 f2             	add    rdx,rsi
   1256f:	01 c8                	add    eax,ecx
   12571:	89 02                	mov    DWORD PTR [rdx],eax
   12573:	e9 09 06 00 00       	jmp    12b81 <f3_get_stem_contributions_d3+0xae6>
   12578:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   1257f:	8b 80 b8 00 00 00    	mov    eax,DWORD PTR [rax+0xb8]
   12585:	89 45 84             	mov    DWORD PTR [rbp-0x7c],eax
   12588:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   1258f:	48 8b 80 d0 00 00 00 	mov    rax,QWORD PTR [rax+0xd0]
   12596:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
   1259a:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   125a1:	48 8b 80 e0 00 00 00 	mov    rax,QWORD PTR [rax+0xe0]
   125a8:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
   125ac:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   125b3:	48 8b 80 f0 00 00 00 	mov    rax,QWORD PTR [rax+0xf0]
   125ba:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
   125be:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   125c4:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
   125ca:	01 d0                	add    eax,edx
   125cc:	83 c0 01             	add    eax,0x1
   125cf:	39 85 78 ff ff ff    	cmp    DWORD PTR [rbp-0x88],eax
   125d5:	7f 0b                	jg     125e2 <f3_get_stem_contributions_d3+0x547>
   125d7:	8b 85 78 ff ff ff    	mov    eax,DWORD PTR [rbp-0x88]
   125dd:	83 e8 01             	sub    eax,0x1
   125e0:	eb 11                	jmp    125f3 <f3_get_stem_contributions_d3+0x558>
   125e2:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   125e8:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
   125ee:	01 d0                	add    eax,edx
   125f0:	83 c0 01             	add    eax,0x1
   125f3:	89 45 88             	mov    DWORD PTR [rbp-0x78],eax
   125f6:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
   125f9:	01 c0                	add    eax,eax
   125fb:	89 c7                	mov    edi,eax
   125fd:	e8 bf 98 01 00       	call   2bec1 <vrna_alloc>
   12602:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
   12606:	c7 85 6c ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x94],0x0
   12610:	eb 45                	jmp    12657 <f3_get_stem_contributions_d3+0x5bc>
   12612:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   12618:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   12620:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   12624:	48 01 d0             	add    rax,rdx
   12627:	48 8b 00             	mov    rax,QWORD PTR [rax]
   1262a:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   12630:	48 63 d2             	movsxd rdx,edx
   12633:	48 01 d2             	add    rdx,rdx
   12636:	48 01 d0             	add    rax,rdx
   12639:	8b 95 6c ff ff ff    	mov    edx,DWORD PTR [rbp-0x94]
   1263f:	48 8d 0c 12          	lea    rcx,[rdx+rdx*1]
   12643:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
   12647:	48 01 ca             	add    rdx,rcx
   1264a:	0f b7 00             	movzx  eax,WORD PTR [rax]
   1264d:	66 89 02             	mov    WORD PTR [rdx],ax
   12650:	83 85 6c ff ff ff 01 	add    DWORD PTR [rbp-0x94],0x1
   12657:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   1265d:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
   12660:	72 b0                	jb     12612 <f3_get_stem_contributions_d3+0x577>
   12662:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   12668:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
   1266b:	01 d0                	add    eax,edx
   1266d:	83 c0 01             	add    eax,0x1
   12670:	89 85 74 ff ff ff    	mov    DWORD PTR [rbp-0x8c],eax
   12676:	e9 fb 01 00 00       	jmp    12876 <f3_get_stem_contributions_d3+0x7db>
   1267b:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   12681:	48 98                	cdqe   
   12683:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1268b:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
   1268f:	48 01 d0             	add    rax,rdx
   12692:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
   12698:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   1269e:	48 98                	cdqe   
   126a0:	48 c1 e0 02          	shl    rax,0x2
   126a4:	48 8d 50 fc          	lea    rdx,[rax-0x4]
   126a8:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   126ac:	48 01 d0             	add    rax,rdx
   126af:	8b 00                	mov    eax,DWORD PTR [rax]
   126b1:	3d 80 96 98 00       	cmp    eax,0x989680
   126b6:	0f 84 b3 01 00 00    	je     1286f <f3_get_stem_contributions_d3+0x7d4>
   126bc:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   126c2:	8d 48 01             	lea    ecx,[rax+0x1]
   126c5:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   126cb:	8d 50 ff             	lea    edx,[rax-0x1]
   126ce:	48 8b bd 40 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xc0]
   126d5:	8b b5 78 ff ff ff    	mov    esi,DWORD PTR [rbp-0x88]
   126db:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   126e1:	4c 8b 95 48 ff ff ff 	mov    r10,QWORD PTR [rbp-0xb8]
   126e8:	49 89 f9             	mov    r9,rdi
   126eb:	41 b8 10 00 00 00    	mov    r8d,0x10
   126f1:	89 c7                	mov    edi,eax
   126f3:	41 ff d2             	call   r10
   126f6:	84 c0                	test   al,al
   126f8:	0f 84 71 01 00 00    	je     1286f <f3_get_stem_contributions_d3+0x7d4>
   126fe:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   12704:	48 98                	cdqe   
   12706:	48 c1 e0 02          	shl    rax,0x2
   1270a:	48 8d 50 fc          	lea    rdx,[rax-0x4]
   1270e:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   12712:	48 01 d0             	add    rax,rdx
   12715:	8b 00                	mov    eax,DWORD PTR [rax]
   12717:	89 85 70 ff ff ff    	mov    DWORD PTR [rbp-0x90],eax
   1271d:	c7 85 6c ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x94],0x0
   12727:	e9 15 01 00 00       	jmp    12841 <f3_get_stem_contributions_d3+0x7a6>
   1272c:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   12732:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   1273a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   1273e:	48 01 d0             	add    rax,rdx
   12741:	48 8b 00             	mov    rax,QWORD PTR [rax]
   12744:	8b 95 74 ff ff ff    	mov    edx,DWORD PTR [rbp-0x8c]
   1274a:	48 63 d2             	movsxd rdx,edx
   1274d:	48 01 d2             	add    rdx,rdx
   12750:	48 83 ea 02          	sub    rdx,0x2
   12754:	48 01 d0             	add    rax,rdx
   12757:	0f b7 00             	movzx  eax,WORD PTR [rax]
   1275a:	0f bf c8             	movsx  ecx,ax
   1275d:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   12763:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   12767:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   1276b:	48 01 d0             	add    rax,rdx
   1276e:	0f b7 00             	movzx  eax,WORD PTR [rax]
   12771:	98                   	cwde   
   12772:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
   12776:	89 ce                	mov    esi,ecx
   12778:	89 c7                	mov    edi,eax
   1277a:	e8 69 b3 01 00       	call   2dae8 <vrna_get_ptype_md>
   1277f:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
   12782:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   12788:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   12790:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   12794:	48 01 d0             	add    rax,rdx
   12797:	48 8b 00             	mov    rax,QWORD PTR [rax]
   1279a:	8b 95 74 ff ff ff    	mov    edx,DWORD PTR [rbp-0x8c]
   127a0:	48 63 d2             	movsxd rdx,edx
   127a3:	48 c1 e2 02          	shl    rdx,0x2
   127a7:	48 83 ea 04          	sub    rdx,0x4
   127ab:	48 01 d0             	add    rax,rdx
   127ae:	8b 10                	mov    edx,DWORD PTR [rax]
   127b0:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   127b6:	48 8d 0c c5 00 00 00 00 	lea    rcx,[rax*8+0x0]
   127be:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   127c2:	48 01 c8             	add    rax,rcx
   127c5:	48 8b 00             	mov    rax,QWORD PTR [rax]
   127c8:	8b 8d 78 ff ff ff    	mov    ecx,DWORD PTR [rbp-0x88]
   127ce:	48 63 c9             	movsxd rcx,ecx
   127d1:	48 c1 e1 02          	shl    rcx,0x2
   127d5:	48 01 c8             	add    rax,rcx
   127d8:	8b 00                	mov    eax,DWORD PTR [rax]
   127da:	39 c2                	cmp    edx,eax
   127dc:	73 30                	jae    1280e <f3_get_stem_contributions_d3+0x773>
   127de:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   127e4:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   127ec:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   127f0:	48 01 d0             	add    rax,rdx
   127f3:	48 8b 00             	mov    rax,QWORD PTR [rax]
   127f6:	8b 95 74 ff ff ff    	mov    edx,DWORD PTR [rbp-0x8c]
   127fc:	48 63 d2             	movsxd rdx,edx
   127ff:	48 01 d2             	add    rdx,rdx
   12802:	48 83 ea 02          	sub    rdx,0x2
   12806:	48 01 d0             	add    rax,rdx
   12809:	0f b7 00             	movzx  eax,WORD PTR [rax]
   1280c:	eb 05                	jmp    12813 <f3_get_stem_contributions_d3+0x778>
   1280e:	b8 ff ff ff ff       	mov    eax,0xffffffff
   12813:	66 89 85 6a ff ff ff 	mov    WORD PTR [rbp-0x96],ax
   1281a:	0f bf 95 6a ff ff ff 	movsx  edx,WORD PTR [rbp-0x96]
   12821:	48 8b 4d 90          	mov    rcx,QWORD PTR [rbp-0x70]
   12825:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
   12828:	be ff ff ff ff       	mov    esi,0xffffffff
   1282d:	89 c7                	mov    edi,eax
   1282f:	e8 b7 b9 ff ff       	call   e1eb <vrna_E_ext_stem>
   12834:	01 85 70 ff ff ff    	add    DWORD PTR [rbp-0x90],eax
   1283a:	83 85 6c ff ff ff 01 	add    DWORD PTR [rbp-0x94],0x1
   12841:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   12847:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
   1284a:	0f 82 dc fe ff ff    	jb     1272c <f3_get_stem_contributions_d3+0x691>
   12850:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   12856:	48 98                	cdqe   
   12858:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   12860:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
   12864:	48 01 c2             	add    rdx,rax
   12867:	8b 85 70 ff ff ff    	mov    eax,DWORD PTR [rbp-0x90]
   1286d:	89 02                	mov    DWORD PTR [rdx],eax
   1286f:	83 85 74 ff ff ff 01 	add    DWORD PTR [rbp-0x8c],0x1
   12876:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   1287c:	3b 45 88             	cmp    eax,DWORD PTR [rbp-0x78]
   1287f:	0f 8e f6 fd ff ff    	jle    1267b <f3_get_stem_contributions_d3+0x5e0>
   12885:	48 83 7d b0 00       	cmp    QWORD PTR [rbp-0x50],0x0
   1288a:	0f 84 b2 00 00 00    	je     12942 <f3_get_stem_contributions_d3+0x8a7>
   12890:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   12896:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
   12899:	01 d0                	add    eax,edx
   1289b:	83 c0 01             	add    eax,0x1
   1289e:	89 85 74 ff ff ff    	mov    DWORD PTR [rbp-0x8c],eax
   128a4:	e9 8a 00 00 00       	jmp    12933 <f3_get_stem_contributions_d3+0x898>
   128a9:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   128af:	48 98                	cdqe   
   128b1:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   128b9:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
   128bd:	48 01 d0             	add    rax,rdx
   128c0:	8b 00                	mov    eax,DWORD PTR [rax]
   128c2:	3d 80 96 98 00       	cmp    eax,0x989680
   128c7:	74 63                	je     1292c <f3_get_stem_contributions_d3+0x891>
   128c9:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   128cf:	8d 78 01             	lea    edi,[rax+0x1]
   128d2:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   128d8:	8d 70 ff             	lea    esi,[rax-0x1]
   128db:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
   128e2:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   128e8:	4c 8b 45 b0          	mov    r8,QWORD PTR [rbp-0x50]
   128ec:	48 89 d1             	mov    rcx,rdx
   128ef:	89 fa                	mov    edx,edi
   128f1:	89 c7                	mov    edi,eax
   128f3:	41 ff d0             	call   r8
   128f6:	8b 95 74 ff ff ff    	mov    edx,DWORD PTR [rbp-0x8c]
   128fc:	48 63 d2             	movsxd rdx,edx
   128ff:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   12907:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
   1290b:	48 01 ca             	add    rdx,rcx
   1290e:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   12910:	8b 95 74 ff ff ff    	mov    edx,DWORD PTR [rbp-0x8c]
   12916:	48 63 d2             	movsxd rdx,edx
   12919:	48 8d 34 95 00 00 00 00 	lea    rsi,[rdx*4+0x0]
   12921:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
   12925:	48 01 f2             	add    rdx,rsi
   12928:	01 c8                	add    eax,ecx
   1292a:	89 02                	mov    DWORD PTR [rdx],eax
   1292c:	83 85 74 ff ff ff 01 	add    DWORD PTR [rbp-0x8c],0x1
   12933:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   12939:	3b 45 88             	cmp    eax,DWORD PTR [rbp-0x78]
   1293c:	0f 8e 67 ff ff ff    	jle    128a9 <f3_get_stem_contributions_d3+0x80e>
   12942:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   12948:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
   1294e:	01 d0                	add    eax,edx
   12950:	39 85 78 ff ff ff    	cmp    DWORD PTR [rbp-0x88],eax
   12956:	0f 8f 17 02 00 00    	jg     12b73 <f3_get_stem_contributions_d3+0xad8>
   1295c:	8b 85 78 ff ff ff    	mov    eax,DWORD PTR [rbp-0x88]
   12962:	89 85 74 ff ff ff    	mov    DWORD PTR [rbp-0x8c],eax
   12968:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   1296e:	48 98                	cdqe   
   12970:	48 c1 e0 02          	shl    rax,0x2
   12974:	48 8d 50 fc          	lea    rdx,[rax-0x4]
   12978:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   1297c:	48 01 d0             	add    rax,rdx
   1297f:	8b 00                	mov    eax,DWORD PTR [rax]
   12981:	3d 80 96 98 00       	cmp    eax,0x989680
   12986:	0f 84 e7 01 00 00    	je     12b73 <f3_get_stem_contributions_d3+0xad8>
   1298c:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   12992:	8d 48 ff             	lea    ecx,[rax-0x1]
   12995:	48 8b bd 40 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xc0]
   1299c:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   129a2:	8b b5 74 ff ff ff    	mov    esi,DWORD PTR [rbp-0x8c]
   129a8:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   129ae:	4c 8b 95 48 ff ff ff 	mov    r10,QWORD PTR [rbp-0xb8]
   129b5:	49 89 f9             	mov    r9,rdi
   129b8:	41 b8 0e 00 00 00    	mov    r8d,0xe
   129be:	89 c7                	mov    edi,eax
   129c0:	41 ff d2             	call   r10
   129c3:	84 c0                	test   al,al
   129c5:	0f 84 a8 01 00 00    	je     12b73 <f3_get_stem_contributions_d3+0xad8>
   129cb:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   129d1:	48 98                	cdqe   
   129d3:	48 c1 e0 02          	shl    rax,0x2
   129d7:	48 8d 50 fc          	lea    rdx,[rax-0x4]
   129db:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   129df:	48 01 d0             	add    rax,rdx
   129e2:	8b 00                	mov    eax,DWORD PTR [rax]
   129e4:	89 85 70 ff ff ff    	mov    DWORD PTR [rbp-0x90],eax
   129ea:	c7 85 6c ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x94],0x0
   129f4:	e9 15 01 00 00       	jmp    12b0e <f3_get_stem_contributions_d3+0xa73>
   129f9:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   129ff:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   12a07:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   12a0b:	48 01 d0             	add    rax,rdx
   12a0e:	48 8b 00             	mov    rax,QWORD PTR [rax]
   12a11:	8b 95 74 ff ff ff    	mov    edx,DWORD PTR [rbp-0x8c]
   12a17:	48 63 d2             	movsxd rdx,edx
   12a1a:	48 01 d2             	add    rdx,rdx
   12a1d:	48 83 ea 02          	sub    rdx,0x2
   12a21:	48 01 d0             	add    rax,rdx
   12a24:	0f b7 00             	movzx  eax,WORD PTR [rax]
   12a27:	0f bf c8             	movsx  ecx,ax
   12a2a:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   12a30:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   12a34:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   12a38:	48 01 d0             	add    rax,rdx
   12a3b:	0f b7 00             	movzx  eax,WORD PTR [rax]
   12a3e:	98                   	cwde   
   12a3f:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
   12a43:	89 ce                	mov    esi,ecx
   12a45:	89 c7                	mov    edi,eax
   12a47:	e8 9c b0 01 00       	call   2dae8 <vrna_get_ptype_md>
   12a4c:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
   12a4f:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   12a55:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   12a5d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   12a61:	48 01 d0             	add    rax,rdx
   12a64:	48 8b 00             	mov    rax,QWORD PTR [rax]
   12a67:	8b 95 74 ff ff ff    	mov    edx,DWORD PTR [rbp-0x8c]
   12a6d:	48 63 d2             	movsxd rdx,edx
   12a70:	48 c1 e2 02          	shl    rdx,0x2
   12a74:	48 83 ea 04          	sub    rdx,0x4
   12a78:	48 01 d0             	add    rax,rdx
   12a7b:	8b 10                	mov    edx,DWORD PTR [rax]
   12a7d:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   12a83:	48 8d 0c c5 00 00 00 00 	lea    rcx,[rax*8+0x0]
   12a8b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   12a8f:	48 01 c8             	add    rax,rcx
   12a92:	48 8b 00             	mov    rax,QWORD PTR [rax]
   12a95:	8b 8d 78 ff ff ff    	mov    ecx,DWORD PTR [rbp-0x88]
   12a9b:	48 63 c9             	movsxd rcx,ecx
   12a9e:	48 c1 e1 02          	shl    rcx,0x2
   12aa2:	48 01 c8             	add    rax,rcx
   12aa5:	8b 00                	mov    eax,DWORD PTR [rax]
   12aa7:	39 c2                	cmp    edx,eax
   12aa9:	73 30                	jae    12adb <f3_get_stem_contributions_d3+0xa40>
   12aab:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   12ab1:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   12ab9:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   12abd:	48 01 d0             	add    rax,rdx
   12ac0:	48 8b 00             	mov    rax,QWORD PTR [rax]
   12ac3:	8b 95 74 ff ff ff    	mov    edx,DWORD PTR [rbp-0x8c]
   12ac9:	48 63 d2             	movsxd rdx,edx
   12acc:	48 01 d2             	add    rdx,rdx
   12acf:	48 83 ea 02          	sub    rdx,0x2
   12ad3:	48 01 d0             	add    rax,rdx
   12ad6:	0f b7 00             	movzx  eax,WORD PTR [rax]
   12ad9:	eb 05                	jmp    12ae0 <f3_get_stem_contributions_d3+0xa45>
   12adb:	b8 ff ff ff ff       	mov    eax,0xffffffff
   12ae0:	66 89 85 6a ff ff ff 	mov    WORD PTR [rbp-0x96],ax
   12ae7:	0f bf 95 6a ff ff ff 	movsx  edx,WORD PTR [rbp-0x96]
   12aee:	48 8b 4d 90          	mov    rcx,QWORD PTR [rbp-0x70]
   12af2:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
   12af5:	be ff ff ff ff       	mov    esi,0xffffffff
   12afa:	89 c7                	mov    edi,eax
   12afc:	e8 ea b6 ff ff       	call   e1eb <vrna_E_ext_stem>
   12b01:	01 85 70 ff ff ff    	add    DWORD PTR [rbp-0x90],eax
   12b07:	83 85 6c ff ff ff 01 	add    DWORD PTR [rbp-0x94],0x1
   12b0e:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   12b14:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
   12b17:	0f 82 dc fe ff ff    	jb     129f9 <f3_get_stem_contributions_d3+0x95e>
   12b1d:	48 83 7d b8 00       	cmp    QWORD PTR [rbp-0x48],0x0
   12b22:	74 30                	je     12b54 <f3_get_stem_contributions_d3+0xab9>
   12b24:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   12b2a:	8d 78 ff             	lea    edi,[rax-0x1]
   12b2d:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
   12b34:	8b b5 54 ff ff ff    	mov    esi,DWORD PTR [rbp-0xac]
   12b3a:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   12b40:	4c 8b 45 b8          	mov    r8,QWORD PTR [rbp-0x48]
   12b44:	48 89 d1             	mov    rcx,rdx
   12b47:	89 fa                	mov    edx,edi
   12b49:	89 c7                	mov    edi,eax
   12b4b:	41 ff d0             	call   r8
   12b4e:	01 85 70 ff ff ff    	add    DWORD PTR [rbp-0x90],eax
   12b54:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   12b5a:	48 98                	cdqe   
   12b5c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   12b64:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
   12b68:	48 01 c2             	add    rdx,rax
   12b6b:	8b 85 70 ff ff ff    	mov    eax,DWORD PTR [rbp-0x90]
   12b71:	89 02                	mov    DWORD PTR [rdx],eax
   12b73:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   12b77:	48 89 c7             	mov    rdi,rax
   12b7a:	e8 31 0d ff ff       	call   38b0 <free@plt>
   12b7f:	eb 01                	jmp    12b82 <f3_get_stem_contributions_d3+0xae7>
   12b81:	90                   	nop
   12b82:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
   12b86:	48 81 c4 c8 00 00 00 	add    rsp,0xc8
   12b8d:	5b                   	pop    rbx
   12b8e:	5d                   	pop    rbp
   12b8f:	c3                   	ret    

0000000000012b90 <f5_get_stem_contributions_d3>:
   12b90:	55                   	push   rbp
   12b91:	48 89 e5             	mov    rbp,rsp
   12b94:	53                   	push   rbx
   12b95:	48 81 ec c8 00 00 00 	sub    rsp,0xc8
   12b9c:	48 89 bd 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rdi
   12ba3:	89 b5 54 ff ff ff    	mov    DWORD PTR [rbp-0xac],esi
   12ba9:	48 89 95 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rdx
   12bb0:	48 89 8d 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rcx
   12bb7:	4c 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],r8
   12bbe:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   12bc4:	48 98                	cdqe   
   12bc6:	c1 e0 02             	shl    eax,0x2
   12bc9:	89 c7                	mov    edi,eax
   12bcb:	e8 f1 92 01 00       	call   2bec1 <vrna_alloc>
   12bd0:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
   12bd4:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   12bdb:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
   12bde:	89 85 70 ff ff ff    	mov    DWORD PTR [rbp-0x90],eax
   12be4:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   12beb:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
   12bef:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
   12bf3:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
   12bf7:	48 05 98 35 03 00    	add    rax,0x33598
   12bfd:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
   12c01:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   12c08:	48 8b 40 78          	mov    rax,QWORD PTR [rax+0x78]
   12c0c:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
   12c10:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   12c17:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
   12c1b:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
   12c1f:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
   12c23:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
   12c27:	8b 80 24 36 03 00    	mov    eax,DWORD PTR [rax+0x33624]
   12c2d:	89 85 74 ff ff ff    	mov    DWORD PTR [rbp-0x8c],eax
   12c33:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   12c39:	48 98                	cdqe   
   12c3b:	48 c1 e0 02          	shl    rax,0x2
   12c3f:	48 8d 50 fc          	lea    rdx,[rax-0x4]
   12c43:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   12c47:	48 01 d0             	add    rax,rdx
   12c4a:	8b 10                	mov    edx,DWORD PTR [rax]
   12c4c:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   12c52:	01 d0                	add    eax,edx
   12c54:	2b 85 74 ff ff ff    	sub    eax,DWORD PTR [rbp-0x8c]
   12c5a:	83 e8 01             	sub    eax,0x1
   12c5d:	89 85 6c ff ff ff    	mov    DWORD PTR [rbp-0x94],eax
   12c63:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
   12c6a:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
   12c6e:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
   12c72:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
   12c79:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
   12c7d:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
   12c81:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   12c88:	8b 00                	mov    eax,DWORD PTR [rax]
   12c8a:	85 c0                	test   eax,eax
   12c8c:	74 0e                	je     12c9c <f5_get_stem_contributions_d3+0x10c>
   12c8e:	83 f8 01             	cmp    eax,0x1
   12c91:	0f 84 58 03 00 00    	je     12fef <f5_get_stem_contributions_d3+0x45f>
   12c97:	e9 19 09 00 00       	jmp    135b5 <f5_get_stem_contributions_d3+0xa25>
   12c9c:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   12ca3:	48 8b 80 b8 00 00 00 	mov    rax,QWORD PTR [rax+0xb8]
   12caa:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
   12cae:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   12cb5:	48 8b 80 c8 00 00 00 	mov    rax,QWORD PTR [rax+0xc8]
   12cbc:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
   12cc0:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   12cc6:	48 98                	cdqe   
   12cc8:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   12ccc:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   12cd0:	48 01 d0             	add    rax,rdx
   12cd3:	0f b7 00             	movzx  eax,WORD PTR [rax]
   12cd6:	66 89 85 62 ff ff ff 	mov    WORD PTR [rbp-0x9e],ax
   12cdd:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   12ce3:	2b 85 74 ff ff ff    	sub    eax,DWORD PTR [rbp-0x8c]
   12ce9:	83 e8 01             	sub    eax,0x1
   12cec:	89 85 68 ff ff ff    	mov    DWORD PTR [rbp-0x98],eax
   12cf2:	e9 f9 00 00 00       	jmp    12df0 <f5_get_stem_contributions_d3+0x260>
   12cf7:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   12cfd:	48 98                	cdqe   
   12cff:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   12d07:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
   12d0b:	48 01 d0             	add    rax,rdx
   12d0e:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
   12d14:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   12d1a:	48 98                	cdqe   
   12d1c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   12d24:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   12d28:	48 01 d0             	add    rax,rdx
   12d2b:	8b 00                	mov    eax,DWORD PTR [rax]
   12d2d:	3d 80 96 98 00       	cmp    eax,0x989680
   12d32:	0f 84 aa 00 00 00    	je     12de2 <f5_get_stem_contributions_d3+0x252>
   12d38:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   12d3e:	8d 70 ff             	lea    esi,[rax-0x1]
   12d41:	48 8b 8d 40 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xc0]
   12d48:	8b 95 68 ff ff ff    	mov    edx,DWORD PTR [rbp-0x98]
   12d4e:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   12d54:	4c 8b 95 48 ff ff ff 	mov    r10,QWORD PTR [rbp-0xb8]
   12d5b:	49 89 c9             	mov    r9,rcx
   12d5e:	41 b8 13 00 00 00    	mov    r8d,0x13
   12d64:	89 d1                	mov    ecx,edx
   12d66:	89 f2                	mov    edx,esi
   12d68:	89 c6                	mov    esi,eax
   12d6a:	bf 01 00 00 00       	mov    edi,0x1
   12d6f:	41 ff d2             	call   r10
   12d72:	84 c0                	test   al,al
   12d74:	74 6c                	je     12de2 <f5_get_stem_contributions_d3+0x252>
   12d76:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
   12d7a:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   12d80:	48 89 d6             	mov    rsi,rdx
   12d83:	89 c7                	mov    edi,eax
   12d85:	e8 b1 ad 01 00       	call   2db3b <vrna_get_ptype>
   12d8a:	89 85 7c ff ff ff    	mov    DWORD PTR [rbp-0x84],eax
   12d90:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   12d96:	48 98                	cdqe   
   12d98:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   12da0:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   12da4:	48 01 d0             	add    rax,rdx
   12da7:	8b 18                	mov    ebx,DWORD PTR [rax]
   12da9:	0f bf 95 62 ff ff ff 	movsx  edx,WORD PTR [rbp-0x9e]
   12db0:	48 8b 4d 88          	mov    rcx,QWORD PTR [rbp-0x78]
   12db4:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
   12dba:	be ff ff ff ff       	mov    esi,0xffffffff
   12dbf:	89 c7                	mov    edi,eax
   12dc1:	e8 25 b4 ff ff       	call   e1eb <vrna_E_ext_stem>
   12dc6:	8b 95 68 ff ff ff    	mov    edx,DWORD PTR [rbp-0x98]
   12dcc:	48 63 d2             	movsxd rdx,edx
   12dcf:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   12dd7:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
   12ddb:	48 01 ca             	add    rdx,rcx
   12dde:	01 d8                	add    eax,ebx
   12de0:	89 02                	mov    DWORD PTR [rdx],eax
   12de2:	83 ad 68 ff ff ff 01 	sub    DWORD PTR [rbp-0x98],0x1
   12de9:	83 ad 6c ff ff ff 01 	sub    DWORD PTR [rbp-0x94],0x1
   12df0:	83 bd 68 ff ff ff 01 	cmp    DWORD PTR [rbp-0x98],0x1
   12df7:	0f 8f fa fe ff ff    	jg     12cf7 <f5_get_stem_contributions_d3+0x167>
   12dfd:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
   12e02:	0f 84 a9 00 00 00    	je     12eb1 <f5_get_stem_contributions_d3+0x321>
   12e08:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   12e0e:	2b 85 74 ff ff ff    	sub    eax,DWORD PTR [rbp-0x8c]
   12e14:	83 e8 01             	sub    eax,0x1
   12e17:	89 85 68 ff ff ff    	mov    DWORD PTR [rbp-0x98],eax
   12e1d:	e9 82 00 00 00       	jmp    12ea4 <f5_get_stem_contributions_d3+0x314>
   12e22:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   12e28:	48 98                	cdqe   
   12e2a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   12e32:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
   12e36:	48 01 d0             	add    rax,rdx
   12e39:	8b 00                	mov    eax,DWORD PTR [rax]
   12e3b:	3d 80 96 98 00       	cmp    eax,0x989680
   12e40:	74 5b                	je     12e9d <f5_get_stem_contributions_d3+0x30d>
   12e42:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   12e48:	8d 70 ff             	lea    esi,[rax-0x1]
   12e4b:	48 8b 8d 38 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xc8]
   12e52:	8b 95 68 ff ff ff    	mov    edx,DWORD PTR [rbp-0x98]
   12e58:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   12e5e:	4c 8b 45 a8          	mov    r8,QWORD PTR [rbp-0x58]
   12e62:	89 c7                	mov    edi,eax
   12e64:	41 ff d0             	call   r8
   12e67:	8b 95 68 ff ff ff    	mov    edx,DWORD PTR [rbp-0x98]
   12e6d:	48 63 d2             	movsxd rdx,edx
   12e70:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   12e78:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
   12e7c:	48 01 ca             	add    rdx,rcx
   12e7f:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   12e81:	8b 95 68 ff ff ff    	mov    edx,DWORD PTR [rbp-0x98]
   12e87:	48 63 d2             	movsxd rdx,edx
   12e8a:	48 8d 34 95 00 00 00 00 	lea    rsi,[rdx*4+0x0]
   12e92:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
   12e96:	48 01 f2             	add    rdx,rsi
   12e99:	01 c8                	add    eax,ecx
   12e9b:	89 02                	mov    DWORD PTR [rdx],eax
   12e9d:	83 ad 68 ff ff ff 01 	sub    DWORD PTR [rbp-0x98],0x1
   12ea4:	83 bd 68 ff ff ff 01 	cmp    DWORD PTR [rbp-0x98],0x1
   12eab:	0f 8f 71 ff ff ff    	jg     12e22 <f5_get_stem_contributions_d3+0x292>
   12eb1:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
   12eb5:	48 83 c0 04          	add    rax,0x4
   12eb9:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
   12ebf:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   12ec5:	48 98                	cdqe   
   12ec7:	48 c1 e0 02          	shl    rax,0x2
   12ecb:	48 8d 50 fc          	lea    rdx,[rax-0x4]
   12ecf:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   12ed3:	48 01 d0             	add    rax,rdx
   12ed6:	8b 00                	mov    eax,DWORD PTR [rax]
   12ed8:	83 c0 01             	add    eax,0x1
   12edb:	89 85 6c ff ff ff    	mov    DWORD PTR [rbp-0x94],eax
   12ee1:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   12ee7:	48 98                	cdqe   
   12ee9:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   12ef1:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   12ef5:	48 01 d0             	add    rax,rdx
   12ef8:	8b 00                	mov    eax,DWORD PTR [rax]
   12efa:	3d 80 96 98 00       	cmp    eax,0x989680
   12eff:	0f 84 af 06 00 00    	je     135b4 <f5_get_stem_contributions_d3+0xa24>
   12f05:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   12f0b:	8d 50 ff             	lea    edx,[rax-0x1]
   12f0e:	48 8b 8d 40 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xc0]
   12f15:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   12f1b:	4c 8b 95 48 ff ff ff 	mov    r10,QWORD PTR [rbp-0xb8]
   12f22:	49 89 c9             	mov    r9,rcx
   12f25:	41 b8 0e 00 00 00    	mov    r8d,0xe
   12f2b:	89 d1                	mov    ecx,edx
   12f2d:	ba 01 00 00 00       	mov    edx,0x1
   12f32:	89 c6                	mov    esi,eax
   12f34:	bf 01 00 00 00       	mov    edi,0x1
   12f39:	41 ff d2             	call   r10
   12f3c:	84 c0                	test   al,al
   12f3e:	0f 84 70 06 00 00    	je     135b4 <f5_get_stem_contributions_d3+0xa24>
   12f44:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
   12f48:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   12f4e:	48 89 d6             	mov    rsi,rdx
   12f51:	89 c7                	mov    edi,eax
   12f53:	e8 e3 ab 01 00       	call   2db3b <vrna_get_ptype>
   12f58:	89 85 7c ff ff ff    	mov    DWORD PTR [rbp-0x84],eax
   12f5e:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   12f64:	48 98                	cdqe   
   12f66:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   12f6e:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   12f72:	48 01 d0             	add    rax,rdx
   12f75:	8b 18                	mov    ebx,DWORD PTR [rax]
   12f77:	0f bf 95 62 ff ff ff 	movsx  edx,WORD PTR [rbp-0x9e]
   12f7e:	48 8b 4d 88          	mov    rcx,QWORD PTR [rbp-0x78]
   12f82:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
   12f88:	be ff ff ff ff       	mov    esi,0xffffffff
   12f8d:	89 c7                	mov    edi,eax
   12f8f:	e8 57 b2 ff ff       	call   e1eb <vrna_E_ext_stem>
   12f94:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
   12f98:	48 83 c2 04          	add    rdx,0x4
   12f9c:	01 d8                	add    eax,ebx
   12f9e:	89 02                	mov    DWORD PTR [rdx],eax
   12fa0:	48 83 7d b0 00       	cmp    QWORD PTR [rbp-0x50],0x0
   12fa5:	0f 84 09 06 00 00    	je     135b4 <f5_get_stem_contributions_d3+0xa24>
   12fab:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   12fb1:	8d 70 ff             	lea    esi,[rax-0x1]
   12fb4:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
   12fbb:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   12fc1:	4c 8b 45 b0          	mov    r8,QWORD PTR [rbp-0x50]
   12fc5:	48 89 d1             	mov    rcx,rdx
   12fc8:	89 f2                	mov    edx,esi
   12fca:	be 01 00 00 00       	mov    esi,0x1
   12fcf:	89 c7                	mov    edi,eax
   12fd1:	41 ff d0             	call   r8
   12fd4:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
   12fd8:	48 83 c2 04          	add    rdx,0x4
   12fdc:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   12fde:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
   12fe2:	48 83 c2 04          	add    rdx,0x4
   12fe6:	01 c8                	add    eax,ecx
   12fe8:	89 02                	mov    DWORD PTR [rdx],eax
   12fea:	e9 c5 05 00 00       	jmp    135b4 <f5_get_stem_contributions_d3+0xa24>
   12fef:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   12ff6:	8b 80 b8 00 00 00    	mov    eax,DWORD PTR [rax+0xb8]
   12ffc:	89 85 78 ff ff ff    	mov    DWORD PTR [rbp-0x88],eax
   13002:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   13009:	48 8b 80 d0 00 00 00 	mov    rax,QWORD PTR [rax+0xd0]
   13010:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
   13014:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   1301b:	48 8b 80 e0 00 00 00 	mov    rax,QWORD PTR [rax+0xe0]
   13022:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
   13026:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   1302d:	48 8b 80 f0 00 00 00 	mov    rax,QWORD PTR [rax+0xf0]
   13034:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
   13038:	8b 85 78 ff ff ff    	mov    eax,DWORD PTR [rbp-0x88]
   1303e:	01 c0                	add    eax,eax
   13040:	89 c7                	mov    edi,eax
   13042:	e8 7a 8e 01 00       	call   2bec1 <vrna_alloc>
   13047:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
   1304b:	8b 85 78 ff ff ff    	mov    eax,DWORD PTR [rbp-0x88]
   13051:	01 c0                	add    eax,eax
   13053:	89 c7                	mov    edi,eax
   13055:	e8 67 8e 01 00       	call   2bec1 <vrna_alloc>
   1305a:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
   1305e:	c7 85 64 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x9c],0x0
   13068:	e9 eb 00 00 00       	jmp    13158 <f5_get_stem_contributions_d3+0x5c8>
   1306d:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   13073:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   1307b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   1307f:	48 01 d0             	add    rax,rdx
   13082:	48 8b 00             	mov    rax,QWORD PTR [rax]
   13085:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   1308b:	48 63 d2             	movsxd rdx,edx
   1308e:	48 c1 e2 02          	shl    rdx,0x2
   13092:	48 83 ea 04          	sub    rdx,0x4
   13096:	48 01 d0             	add    rax,rdx
   13099:	8b 10                	mov    edx,DWORD PTR [rax]
   1309b:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   130a1:	48 8d 0c c5 00 00 00 00 	lea    rcx,[rax*8+0x0]
   130a9:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   130ad:	48 01 c8             	add    rax,rcx
   130b0:	48 8b 00             	mov    rax,QWORD PTR [rax]
   130b3:	8b 8d 70 ff ff ff    	mov    ecx,DWORD PTR [rbp-0x90]
   130b9:	48 c1 e1 02          	shl    rcx,0x2
   130bd:	48 01 c8             	add    rax,rcx
   130c0:	8b 00                	mov    eax,DWORD PTR [rax]
   130c2:	39 c2                	cmp    edx,eax
   130c4:	73 30                	jae    130f6 <f5_get_stem_contributions_d3+0x566>
   130c6:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   130cc:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   130d4:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   130d8:	48 01 d0             	add    rax,rdx
   130db:	48 8b 00             	mov    rax,QWORD PTR [rax]
   130de:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   130e4:	48 63 d2             	movsxd rdx,edx
   130e7:	48 01 d2             	add    rdx,rdx
   130ea:	48 83 ea 02          	sub    rdx,0x2
   130ee:	48 01 d0             	add    rax,rdx
   130f1:	0f b7 00             	movzx  eax,WORD PTR [rax]
   130f4:	eb 05                	jmp    130fb <f5_get_stem_contributions_d3+0x56b>
   130f6:	b8 ff ff ff ff       	mov    eax,0xffffffff
   130fb:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   13101:	48 8d 0c 12          	lea    rcx,[rdx+rdx*1]
   13105:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
   13109:	48 01 ca             	add    rdx,rcx
   1310c:	66 89 02             	mov    WORD PTR [rdx],ax
   1310f:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   13115:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   1311d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
   13121:	48 01 d0             	add    rax,rdx
   13124:	48 8b 00             	mov    rax,QWORD PTR [rax]
   13127:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   1312d:	48 63 d2             	movsxd rdx,edx
   13130:	48 01 d2             	add    rdx,rdx
   13133:	48 83 ea 02          	sub    rdx,0x2
   13137:	48 01 d0             	add    rax,rdx
   1313a:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   13140:	48 8d 0c 12          	lea    rcx,[rdx+rdx*1]
   13144:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
   13148:	48 01 ca             	add    rdx,rcx
   1314b:	0f b7 00             	movzx  eax,WORD PTR [rax]
   1314e:	66 89 02             	mov    WORD PTR [rdx],ax
   13151:	83 85 64 ff ff ff 01 	add    DWORD PTR [rbp-0x9c],0x1
   13158:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   1315e:	3b 85 78 ff ff ff    	cmp    eax,DWORD PTR [rbp-0x88]
   13164:	0f 82 03 ff ff ff    	jb     1306d <f5_get_stem_contributions_d3+0x4dd>
   1316a:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   13170:	2b 85 74 ff ff ff    	sub    eax,DWORD PTR [rbp-0x8c]
   13176:	83 e8 01             	sub    eax,0x1
   13179:	89 85 68 ff ff ff    	mov    DWORD PTR [rbp-0x98],eax
   1317f:	e9 a4 01 00 00       	jmp    13328 <f5_get_stem_contributions_d3+0x798>
   13184:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   1318a:	48 98                	cdqe   
   1318c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   13194:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
   13198:	48 01 d0             	add    rax,rdx
   1319b:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
   131a1:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   131a7:	48 98                	cdqe   
   131a9:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   131b1:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   131b5:	48 01 d0             	add    rax,rdx
   131b8:	8b 00                	mov    eax,DWORD PTR [rax]
   131ba:	3d 80 96 98 00       	cmp    eax,0x989680
   131bf:	0f 84 55 01 00 00    	je     1331a <f5_get_stem_contributions_d3+0x78a>
   131c5:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   131cb:	8d 70 ff             	lea    esi,[rax-0x1]
   131ce:	48 8b 8d 40 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xc0]
   131d5:	8b 95 68 ff ff ff    	mov    edx,DWORD PTR [rbp-0x98]
   131db:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   131e1:	4c 8b 95 48 ff ff ff 	mov    r10,QWORD PTR [rbp-0xb8]
   131e8:	49 89 c9             	mov    r9,rcx
   131eb:	41 b8 13 00 00 00    	mov    r8d,0x13
   131f1:	89 d1                	mov    ecx,edx
   131f3:	89 f2                	mov    edx,esi
   131f5:	89 c6                	mov    esi,eax
   131f7:	bf 01 00 00 00       	mov    edi,0x1
   131fc:	41 ff d2             	call   r10
   131ff:	84 c0                	test   al,al
   13201:	0f 84 13 01 00 00    	je     1331a <f5_get_stem_contributions_d3+0x78a>
   13207:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   1320d:	48 98                	cdqe   
   1320f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   13217:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   1321b:	48 01 d0             	add    rax,rdx
   1321e:	8b 95 68 ff ff ff    	mov    edx,DWORD PTR [rbp-0x98]
   13224:	48 63 d2             	movsxd rdx,edx
   13227:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   1322f:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
   13233:	48 01 ca             	add    rdx,rcx
   13236:	8b 00                	mov    eax,DWORD PTR [rax]
   13238:	89 02                	mov    DWORD PTR [rdx],eax
   1323a:	c7 85 64 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x9c],0x0
   13244:	e9 bf 00 00 00       	jmp    13308 <f5_get_stem_contributions_d3+0x778>
   13249:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   1324f:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   13253:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   13257:	48 01 d0             	add    rax,rdx
   1325a:	0f b7 00             	movzx  eax,WORD PTR [rax]
   1325d:	0f bf c8             	movsx  ecx,ax
   13260:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   13266:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   1326e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
   13272:	48 01 d0             	add    rax,rdx
   13275:	48 8b 00             	mov    rax,QWORD PTR [rax]
   13278:	8b 95 68 ff ff ff    	mov    edx,DWORD PTR [rbp-0x98]
   1327e:	48 63 d2             	movsxd rdx,edx
   13281:	48 01 d2             	add    rdx,rdx
   13284:	48 01 d0             	add    rax,rdx
   13287:	0f b7 00             	movzx  eax,WORD PTR [rax]
   1328a:	98                   	cwde   
   1328b:	48 8b 55 90          	mov    rdx,QWORD PTR [rbp-0x70]
   1328f:	89 ce                	mov    esi,ecx
   13291:	89 c7                	mov    edi,eax
   13293:	e8 50 a8 01 00       	call   2dae8 <vrna_get_ptype_md>
   13298:	89 85 7c ff ff ff    	mov    DWORD PTR [rbp-0x84],eax
   1329e:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   132a4:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   132a8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   132ac:	48 01 d0             	add    rax,rdx
   132af:	0f b7 00             	movzx  eax,WORD PTR [rax]
   132b2:	0f bf d0             	movsx  edx,ax
   132b5:	48 8b 4d 88          	mov    rcx,QWORD PTR [rbp-0x78]
   132b9:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
   132bf:	be ff ff ff ff       	mov    esi,0xffffffff
   132c4:	89 c7                	mov    edi,eax
   132c6:	e8 20 af ff ff       	call   e1eb <vrna_E_ext_stem>
   132cb:	8b 95 68 ff ff ff    	mov    edx,DWORD PTR [rbp-0x98]
   132d1:	48 63 d2             	movsxd rdx,edx
   132d4:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   132dc:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
   132e0:	48 01 ca             	add    rdx,rcx
   132e3:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   132e5:	8b 95 68 ff ff ff    	mov    edx,DWORD PTR [rbp-0x98]
   132eb:	48 63 d2             	movsxd rdx,edx
   132ee:	48 8d 34 95 00 00 00 00 	lea    rsi,[rdx*4+0x0]
   132f6:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
   132fa:	48 01 f2             	add    rdx,rsi
   132fd:	01 c8                	add    eax,ecx
   132ff:	89 02                	mov    DWORD PTR [rdx],eax
   13301:	83 85 64 ff ff ff 01 	add    DWORD PTR [rbp-0x9c],0x1
   13308:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   1330e:	3b 85 78 ff ff ff    	cmp    eax,DWORD PTR [rbp-0x88]
   13314:	0f 82 2f ff ff ff    	jb     13249 <f5_get_stem_contributions_d3+0x6b9>
   1331a:	83 ad 68 ff ff ff 01 	sub    DWORD PTR [rbp-0x98],0x1
   13321:	83 ad 6c ff ff ff 01 	sub    DWORD PTR [rbp-0x94],0x1
   13328:	83 bd 68 ff ff ff 01 	cmp    DWORD PTR [rbp-0x98],0x1
   1332f:	0f 8f 4f fe ff ff    	jg     13184 <f5_get_stem_contributions_d3+0x5f4>
   13335:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
   1333a:	0f 84 a9 00 00 00    	je     133e9 <f5_get_stem_contributions_d3+0x859>
   13340:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   13346:	2b 85 74 ff ff ff    	sub    eax,DWORD PTR [rbp-0x8c]
   1334c:	83 e8 01             	sub    eax,0x1
   1334f:	89 85 68 ff ff ff    	mov    DWORD PTR [rbp-0x98],eax
   13355:	e9 82 00 00 00       	jmp    133dc <f5_get_stem_contributions_d3+0x84c>
   1335a:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   13360:	48 98                	cdqe   
   13362:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1336a:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
   1336e:	48 01 d0             	add    rax,rdx
   13371:	8b 00                	mov    eax,DWORD PTR [rax]
   13373:	3d 80 96 98 00       	cmp    eax,0x989680
   13378:	74 5b                	je     133d5 <f5_get_stem_contributions_d3+0x845>
   1337a:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   13380:	8d 70 ff             	lea    esi,[rax-0x1]
   13383:	48 8b 8d 38 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xc8]
   1338a:	8b 95 68 ff ff ff    	mov    edx,DWORD PTR [rbp-0x98]
   13390:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   13396:	4c 8b 45 a8          	mov    r8,QWORD PTR [rbp-0x58]
   1339a:	89 c7                	mov    edi,eax
   1339c:	41 ff d0             	call   r8
   1339f:	8b 95 68 ff ff ff    	mov    edx,DWORD PTR [rbp-0x98]
   133a5:	48 63 d2             	movsxd rdx,edx
   133a8:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   133b0:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
   133b4:	48 01 ca             	add    rdx,rcx
   133b7:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   133b9:	8b 95 68 ff ff ff    	mov    edx,DWORD PTR [rbp-0x98]
   133bf:	48 63 d2             	movsxd rdx,edx
   133c2:	48 8d 34 95 00 00 00 00 	lea    rsi,[rdx*4+0x0]
   133ca:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
   133ce:	48 01 f2             	add    rdx,rsi
   133d1:	01 c8                	add    eax,ecx
   133d3:	89 02                	mov    DWORD PTR [rdx],eax
   133d5:	83 ad 68 ff ff ff 01 	sub    DWORD PTR [rbp-0x98],0x1
   133dc:	83 bd 68 ff ff ff 01 	cmp    DWORD PTR [rbp-0x98],0x1
   133e3:	0f 8f 71 ff ff ff    	jg     1335a <f5_get_stem_contributions_d3+0x7ca>
   133e9:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
   133ed:	48 83 c0 04          	add    rax,0x4
   133f1:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
   133f7:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   133fd:	48 98                	cdqe   
   133ff:	48 c1 e0 02          	shl    rax,0x2
   13403:	48 8d 50 fc          	lea    rdx,[rax-0x4]
   13407:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   1340b:	48 01 d0             	add    rax,rdx
   1340e:	8b 00                	mov    eax,DWORD PTR [rax]
   13410:	83 c0 01             	add    eax,0x1
   13413:	89 85 6c ff ff ff    	mov    DWORD PTR [rbp-0x94],eax
   13419:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   1341f:	48 98                	cdqe   
   13421:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   13429:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   1342d:	48 01 d0             	add    rax,rdx
   13430:	8b 00                	mov    eax,DWORD PTR [rax]
   13432:	3d 80 96 98 00       	cmp    eax,0x989680
   13437:	0f 84 5d 01 00 00    	je     1359a <f5_get_stem_contributions_d3+0xa0a>
   1343d:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   13443:	8d 50 ff             	lea    edx,[rax-0x1]
   13446:	48 8b 8d 40 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xc0]
   1344d:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   13453:	4c 8b 95 48 ff ff ff 	mov    r10,QWORD PTR [rbp-0xb8]
   1345a:	49 89 c9             	mov    r9,rcx
   1345d:	41 b8 0e 00 00 00    	mov    r8d,0xe
   13463:	89 d1                	mov    ecx,edx
   13465:	ba 01 00 00 00       	mov    edx,0x1
   1346a:	89 c6                	mov    esi,eax
   1346c:	bf 01 00 00 00       	mov    edi,0x1
   13471:	41 ff d2             	call   r10
   13474:	84 c0                	test   al,al
   13476:	0f 84 1e 01 00 00    	je     1359a <f5_get_stem_contributions_d3+0xa0a>
   1347c:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   13482:	48 98                	cdqe   
   13484:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1348c:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   13490:	48 01 d0             	add    rax,rdx
   13493:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
   13497:	48 83 c2 04          	add    rdx,0x4
   1349b:	8b 00                	mov    eax,DWORD PTR [rax]
   1349d:	89 02                	mov    DWORD PTR [rdx],eax
   1349f:	c7 85 64 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x9c],0x0
   134a9:	e9 94 00 00 00       	jmp    13542 <f5_get_stem_contributions_d3+0x9b2>
   134ae:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   134b4:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   134b8:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   134bc:	48 01 d0             	add    rax,rdx
   134bf:	0f b7 00             	movzx  eax,WORD PTR [rax]
   134c2:	0f bf c8             	movsx  ecx,ax
   134c5:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   134cb:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   134d3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
   134d7:	48 01 d0             	add    rax,rdx
   134da:	48 8b 00             	mov    rax,QWORD PTR [rax]
   134dd:	48 83 c0 02          	add    rax,0x2
   134e1:	0f b7 00             	movzx  eax,WORD PTR [rax]
   134e4:	98                   	cwde   
   134e5:	48 8b 55 90          	mov    rdx,QWORD PTR [rbp-0x70]
   134e9:	89 ce                	mov    esi,ecx
   134eb:	89 c7                	mov    edi,eax
   134ed:	e8 f6 a5 01 00       	call   2dae8 <vrna_get_ptype_md>
   134f2:	89 85 7c ff ff ff    	mov    DWORD PTR [rbp-0x84],eax
   134f8:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   134fe:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   13502:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   13506:	48 01 d0             	add    rax,rdx
   13509:	0f b7 00             	movzx  eax,WORD PTR [rax]
   1350c:	0f bf d0             	movsx  edx,ax
   1350f:	48 8b 4d 88          	mov    rcx,QWORD PTR [rbp-0x78]
   13513:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
   13519:	be ff ff ff ff       	mov    esi,0xffffffff
   1351e:	89 c7                	mov    edi,eax
   13520:	e8 c6 ac ff ff       	call   e1eb <vrna_E_ext_stem>
   13525:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
   13529:	48 83 c2 04          	add    rdx,0x4
   1352d:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   1352f:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
   13533:	48 83 c2 04          	add    rdx,0x4
   13537:	01 c8                	add    eax,ecx
   13539:	89 02                	mov    DWORD PTR [rdx],eax
   1353b:	83 85 64 ff ff ff 01 	add    DWORD PTR [rbp-0x9c],0x1
   13542:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   13548:	3b 85 78 ff ff ff    	cmp    eax,DWORD PTR [rbp-0x88]
   1354e:	0f 82 5a ff ff ff    	jb     134ae <f5_get_stem_contributions_d3+0x91e>
   13554:	48 83 7d b0 00       	cmp    QWORD PTR [rbp-0x50],0x0
   13559:	74 3f                	je     1359a <f5_get_stem_contributions_d3+0xa0a>
   1355b:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   13561:	8d 70 ff             	lea    esi,[rax-0x1]
   13564:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
   1356b:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   13571:	4c 8b 45 b0          	mov    r8,QWORD PTR [rbp-0x50]
   13575:	48 89 d1             	mov    rcx,rdx
   13578:	89 f2                	mov    edx,esi
   1357a:	be 01 00 00 00       	mov    esi,0x1
   1357f:	89 c7                	mov    edi,eax
   13581:	41 ff d0             	call   r8
   13584:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
   13588:	48 83 c2 04          	add    rdx,0x4
   1358c:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   1358e:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
   13592:	48 83 c2 04          	add    rdx,0x4
   13596:	01 c8                	add    eax,ecx
   13598:	89 02                	mov    DWORD PTR [rdx],eax
   1359a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   1359e:	48 89 c7             	mov    rdi,rax
   135a1:	e8 0a 03 ff ff       	call   38b0 <free@plt>
   135a6:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   135aa:	48 89 c7             	mov    rdi,rax
   135ad:	e8 fe 02 ff ff       	call   38b0 <free@plt>
   135b2:	eb 01                	jmp    135b5 <f5_get_stem_contributions_d3+0xa25>
   135b4:	90                   	nop
   135b5:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
   135b9:	48 81 c4 c8 00 00 00 	add    rsp,0xc8
   135c0:	5b                   	pop    rbx
   135c1:	5d                   	pop    rbp
   135c2:	c3                   	ret    

00000000000135c3 <f3_get_stem_contributions_d5>:
   135c3:	55                   	push   rbp
   135c4:	48 89 e5             	mov    rbp,rsp
   135c7:	53                   	push   rbx
   135c8:	48 81 ec c8 00 00 00 	sub    rsp,0xc8
   135cf:	48 89 bd 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rdi
   135d6:	89 b5 54 ff ff ff    	mov    DWORD PTR [rbp-0xac],esi
   135dc:	48 89 95 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rdx
   135e3:	48 89 8d 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rcx
   135ea:	4c 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],r8
   135f1:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   135f8:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
   135fb:	89 85 70 ff ff ff    	mov    DWORD PTR [rbp-0x90],eax
   13601:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   13608:	8b 80 60 01 00 00    	mov    eax,DWORD PTR [rax+0x160]
   1360e:	89 85 74 ff ff ff    	mov    DWORD PTR [rbp-0x8c],eax
   13614:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   1361b:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
   1361f:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
   13623:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
   13627:	48 05 98 35 03 00    	add    rax,0x33598
   1362d:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
   13631:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   13638:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
   1363c:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
   13640:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   13646:	48 63 d2             	movsxd rdx,edx
   13649:	48 83 c2 01          	add    rdx,0x1
   1364d:	48 c1 e2 03          	shl    rdx,0x3
   13651:	48 01 d0             	add    rax,rdx
   13654:	48 8b 00             	mov    rax,QWORD PTR [rax]
   13657:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
   1365b:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   13661:	48 98                	cdqe   
   13663:	48 c1 e0 02          	shl    rax,0x2
   13667:	48 c7 c2 fc ff ff ff 	mov    rdx,0xfffffffffffffffc
   1366e:	48 29 c2             	sub    rdx,rax
   13671:	48 89 d0             	mov    rax,rdx
   13674:	48 01 45 98          	add    QWORD PTR [rbp-0x68],rax
   13678:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
   1367c:	8b 80 24 36 03 00    	mov    eax,DWORD PTR [rax+0x33624]
   13682:	89 85 78 ff ff ff    	mov    DWORD PTR [rbp-0x88],eax
   13688:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   1368e:	83 c0 06             	add    eax,0x6
   13691:	48 98                	cdqe   
   13693:	c1 e0 02             	shl    eax,0x2
   13696:	89 c7                	mov    edi,eax
   13698:	e8 24 88 01 00       	call   2bec1 <vrna_alloc>
   1369d:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
   136a1:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   136a7:	48 98                	cdqe   
   136a9:	48 c1 e0 02          	shl    rax,0x2
   136ad:	48 f7 d8             	neg    rax
   136b0:	48 01 45 a0          	add    QWORD PTR [rbp-0x60],rax
   136b4:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
   136bb:	48 8b 40 28          	mov    rax,QWORD PTR [rax+0x28]
   136bf:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
   136c3:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
   136ca:	48 8b 40 18          	mov    rax,QWORD PTR [rax+0x18]
   136ce:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
   136d2:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   136d9:	8b 00                	mov    eax,DWORD PTR [rax]
   136db:	85 c0                	test   eax,eax
   136dd:	74 0e                	je     136ed <f3_get_stem_contributions_d5+0x12a>
   136df:	83 f8 01             	cmp    eax,0x1
   136e2:	0f 84 e0 03 00 00    	je     13ac8 <f3_get_stem_contributions_d5+0x505>
   136e8:	e9 a4 09 00 00       	jmp    14091 <f3_get_stem_contributions_d5+0xace>
   136ed:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   136f4:	48 8b 80 b8 00 00 00 	mov    rax,QWORD PTR [rax+0xb8]
   136fb:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
   136ff:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   13706:	48 8b 80 68 01 00 00 	mov    rax,QWORD PTR [rax+0x168]
   1370d:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
   13711:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   13717:	48 98                	cdqe   
   13719:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   1371d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   13721:	48 01 d0             	add    rax,rdx
   13724:	0f b7 00             	movzx  eax,WORD PTR [rax]
   13727:	66 89 85 62 ff ff ff 	mov    WORD PTR [rbp-0x9e],ax
   1372e:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   13734:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   1373a:	01 d0                	add    eax,edx
   1373c:	83 c0 01             	add    eax,0x1
   1373f:	39 85 70 ff ff ff    	cmp    DWORD PTR [rbp-0x90],eax
   13745:	7f 0b                	jg     13752 <f3_get_stem_contributions_d5+0x18f>
   13747:	8b 85 70 ff ff ff    	mov    eax,DWORD PTR [rbp-0x90]
   1374d:	83 e8 01             	sub    eax,0x1
   13750:	eb 11                	jmp    13763 <f3_get_stem_contributions_d5+0x1a0>
   13752:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   13758:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   1375e:	01 d0                	add    eax,edx
   13760:	83 c0 01             	add    eax,0x1
   13763:	89 45 80             	mov    DWORD PTR [rbp-0x80],eax
   13766:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   1376c:	8b 85 78 ff ff ff    	mov    eax,DWORD PTR [rbp-0x88]
   13772:	01 d0                	add    eax,edx
   13774:	83 c0 01             	add    eax,0x1
   13777:	89 85 6c ff ff ff    	mov    DWORD PTR [rbp-0x94],eax
   1377d:	e9 f4 00 00 00       	jmp    13876 <f3_get_stem_contributions_d5+0x2b3>
   13782:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   13788:	48 98                	cdqe   
   1378a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   13792:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   13796:	48 01 d0             	add    rax,rdx
   13799:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
   1379f:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   137a5:	48 98                	cdqe   
   137a7:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   137af:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   137b3:	48 01 d0             	add    rax,rdx
   137b6:	8b 00                	mov    eax,DWORD PTR [rax]
   137b8:	3d 80 96 98 00       	cmp    eax,0x989680
   137bd:	0f 84 ac 00 00 00    	je     1386f <f3_get_stem_contributions_d5+0x2ac>
   137c3:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   137c9:	8d 48 01             	lea    ecx,[rax+0x1]
   137cc:	48 8b bd 40 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xc0]
   137d3:	8b 95 6c ff ff ff    	mov    edx,DWORD PTR [rbp-0x94]
   137d9:	8b b5 70 ff ff ff    	mov    esi,DWORD PTR [rbp-0x90]
   137df:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   137e5:	4c 8b 95 48 ff ff ff 	mov    r10,QWORD PTR [rbp-0xb8]
   137ec:	49 89 f9             	mov    r9,rdi
   137ef:	41 b8 14 00 00 00    	mov    r8d,0x14
   137f5:	89 c7                	mov    edi,eax
   137f7:	41 ff d2             	call   r10
   137fa:	84 c0                	test   al,al
   137fc:	74 71                	je     1386f <f3_get_stem_contributions_d5+0x2ac>
   137fe:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   13804:	8d 48 01             	lea    ecx,[rax+0x1]
   13807:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
   1380b:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   13811:	89 c6                	mov    esi,eax
   13813:	89 cf                	mov    edi,ecx
   13815:	e8 58 a3 01 00       	call   2db72 <vrna_get_ptype_window>
   1381a:	89 45 84             	mov    DWORD PTR [rbp-0x7c],eax
   1381d:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   13823:	48 98                	cdqe   
   13825:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1382d:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   13831:	48 01 d0             	add    rax,rdx
   13834:	8b 18                	mov    ebx,DWORD PTR [rax]
   13836:	0f bf b5 62 ff ff ff 	movsx  esi,WORD PTR [rbp-0x9e]
   1383d:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
   13841:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
   13844:	48 89 d1             	mov    rcx,rdx
   13847:	ba ff ff ff ff       	mov    edx,0xffffffff
   1384c:	89 c7                	mov    edi,eax
   1384e:	e8 98 a9 ff ff       	call   e1eb <vrna_E_ext_stem>
   13853:	8b 95 6c ff ff ff    	mov    edx,DWORD PTR [rbp-0x94]
   13859:	48 63 d2             	movsxd rdx,edx
   1385c:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   13864:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
   13868:	48 01 ca             	add    rdx,rcx
   1386b:	01 d8                	add    eax,ebx
   1386d:	89 02                	mov    DWORD PTR [rdx],eax
   1386f:	83 85 6c ff ff ff 01 	add    DWORD PTR [rbp-0x94],0x1
   13876:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   1387c:	3b 45 80             	cmp    eax,DWORD PTR [rbp-0x80]
   1387f:	0f 8e fd fe ff ff    	jle    13782 <f3_get_stem_contributions_d5+0x1bf>
   13885:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
   1388a:	0f 84 b2 00 00 00    	je     13942 <f3_get_stem_contributions_d5+0x37f>
   13890:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   13896:	8b 85 78 ff ff ff    	mov    eax,DWORD PTR [rbp-0x88]
   1389c:	01 d0                	add    eax,edx
   1389e:	83 c0 01             	add    eax,0x1
   138a1:	89 85 6c ff ff ff    	mov    DWORD PTR [rbp-0x94],eax
   138a7:	e9 87 00 00 00       	jmp    13933 <f3_get_stem_contributions_d5+0x370>
   138ac:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   138b2:	48 98                	cdqe   
   138b4:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   138bc:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   138c0:	48 01 d0             	add    rax,rdx
   138c3:	8b 00                	mov    eax,DWORD PTR [rax]
   138c5:	3d 80 96 98 00       	cmp    eax,0x989680
   138ca:	74 60                	je     1392c <f3_get_stem_contributions_d5+0x369>
   138cc:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   138d2:	8d 78 01             	lea    edi,[rax+0x1]
   138d5:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
   138dc:	8b b5 6c ff ff ff    	mov    esi,DWORD PTR [rbp-0x94]
   138e2:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   138e8:	4c 8b 45 a8          	mov    r8,QWORD PTR [rbp-0x58]
   138ec:	48 89 d1             	mov    rcx,rdx
   138ef:	89 fa                	mov    edx,edi
   138f1:	89 c7                	mov    edi,eax
   138f3:	41 ff d0             	call   r8
   138f6:	8b 95 6c ff ff ff    	mov    edx,DWORD PTR [rbp-0x94]
   138fc:	48 63 d2             	movsxd rdx,edx
   138ff:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   13907:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
   1390b:	48 01 ca             	add    rdx,rcx
   1390e:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   13910:	8b 95 6c ff ff ff    	mov    edx,DWORD PTR [rbp-0x94]
   13916:	48 63 d2             	movsxd rdx,edx
   13919:	48 8d 34 95 00 00 00 00 	lea    rsi,[rdx*4+0x0]
   13921:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
   13925:	48 01 f2             	add    rdx,rsi
   13928:	01 c8                	add    eax,ecx
   1392a:	89 02                	mov    DWORD PTR [rdx],eax
   1392c:	83 85 6c ff ff ff 01 	add    DWORD PTR [rbp-0x94],0x1
   13933:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   13939:	3b 45 80             	cmp    eax,DWORD PTR [rbp-0x80]
   1393c:	0f 8e 6a ff ff ff    	jle    138ac <f3_get_stem_contributions_d5+0x2e9>
   13942:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   13948:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   1394e:	01 d0                	add    eax,edx
   13950:	39 85 70 ff ff ff    	cmp    DWORD PTR [rbp-0x90],eax
   13956:	0f 8f 34 07 00 00    	jg     14090 <f3_get_stem_contributions_d5+0xacd>
   1395c:	8b 85 70 ff ff ff    	mov    eax,DWORD PTR [rbp-0x90]
   13962:	89 85 6c ff ff ff    	mov    DWORD PTR [rbp-0x94],eax
   13968:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   1396e:	48 98                	cdqe   
   13970:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   13978:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   1397c:	48 01 d0             	add    rax,rdx
   1397f:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
   13985:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   1398b:	48 98                	cdqe   
   1398d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   13995:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   13999:	48 01 d0             	add    rax,rdx
   1399c:	8b 00                	mov    eax,DWORD PTR [rax]
   1399e:	3d 80 96 98 00       	cmp    eax,0x989680
   139a3:	0f 84 e7 06 00 00    	je     14090 <f3_get_stem_contributions_d5+0xacd>
   139a9:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   139af:	8d 78 01             	lea    edi,[rax+0x1]
   139b2:	48 8b 8d 40 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xc0]
   139b9:	8b 95 6c ff ff ff    	mov    edx,DWORD PTR [rbp-0x94]
   139bf:	8b b5 6c ff ff ff    	mov    esi,DWORD PTR [rbp-0x94]
   139c5:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   139cb:	4c 8b 95 48 ff ff ff 	mov    r10,QWORD PTR [rbp-0xb8]
   139d2:	49 89 c9             	mov    r9,rcx
   139d5:	41 b8 0e 00 00 00    	mov    r8d,0xe
   139db:	89 d1                	mov    ecx,edx
   139dd:	89 fa                	mov    edx,edi
   139df:	89 c7                	mov    edi,eax
   139e1:	41 ff d2             	call   r10
   139e4:	84 c0                	test   al,al
   139e6:	0f 84 a4 06 00 00    	je     14090 <f3_get_stem_contributions_d5+0xacd>
   139ec:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   139f2:	8d 48 01             	lea    ecx,[rax+0x1]
   139f5:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
   139f9:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   139ff:	89 c6                	mov    esi,eax
   13a01:	89 cf                	mov    edi,ecx
   13a03:	e8 6a a1 01 00       	call   2db72 <vrna_get_ptype_window>
   13a08:	89 45 84             	mov    DWORD PTR [rbp-0x7c],eax
   13a0b:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   13a11:	48 98                	cdqe   
   13a13:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   13a1b:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   13a1f:	48 01 d0             	add    rax,rdx
   13a22:	8b 18                	mov    ebx,DWORD PTR [rax]
   13a24:	0f bf b5 62 ff ff ff 	movsx  esi,WORD PTR [rbp-0x9e]
   13a2b:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
   13a2f:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
   13a32:	48 89 d1             	mov    rcx,rdx
   13a35:	ba ff ff ff ff       	mov    edx,0xffffffff
   13a3a:	89 c7                	mov    edi,eax
   13a3c:	e8 aa a7 ff ff       	call   e1eb <vrna_E_ext_stem>
   13a41:	8b 95 6c ff ff ff    	mov    edx,DWORD PTR [rbp-0x94]
   13a47:	48 63 d2             	movsxd rdx,edx
   13a4a:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   13a52:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
   13a56:	48 01 ca             	add    rdx,rcx
   13a59:	01 d8                	add    eax,ebx
   13a5b:	89 02                	mov    DWORD PTR [rdx],eax
   13a5d:	48 83 7d b0 00       	cmp    QWORD PTR [rbp-0x50],0x0
   13a62:	0f 84 28 06 00 00    	je     14090 <f3_get_stem_contributions_d5+0xacd>
   13a68:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   13a6e:	8d 70 01             	lea    esi,[rax+0x1]
   13a71:	48 8b 8d 38 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xc8]
   13a78:	8b 95 6c ff ff ff    	mov    edx,DWORD PTR [rbp-0x94]
   13a7e:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   13a84:	4c 8b 45 b0          	mov    r8,QWORD PTR [rbp-0x50]
   13a88:	89 c7                	mov    edi,eax
   13a8a:	41 ff d0             	call   r8
   13a8d:	8b 95 6c ff ff ff    	mov    edx,DWORD PTR [rbp-0x94]
   13a93:	48 63 d2             	movsxd rdx,edx
   13a96:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   13a9e:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
   13aa2:	48 01 ca             	add    rdx,rcx
   13aa5:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   13aa7:	8b 95 6c ff ff ff    	mov    edx,DWORD PTR [rbp-0x94]
   13aad:	48 63 d2             	movsxd rdx,edx
   13ab0:	48 8d 34 95 00 00 00 00 	lea    rsi,[rdx*4+0x0]
   13ab8:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
   13abc:	48 01 f2             	add    rdx,rsi
   13abf:	01 c8                	add    eax,ecx
   13ac1:	89 02                	mov    DWORD PTR [rdx],eax
   13ac3:	e9 c8 05 00 00       	jmp    14090 <f3_get_stem_contributions_d5+0xacd>
   13ac8:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   13acf:	8b 80 b8 00 00 00    	mov    eax,DWORD PTR [rax+0xb8]
   13ad5:	89 85 7c ff ff ff    	mov    DWORD PTR [rbp-0x84],eax
   13adb:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   13ae2:	48 8b 80 d0 00 00 00 	mov    rax,QWORD PTR [rax+0xd0]
   13ae9:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
   13aed:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   13af4:	48 8b 80 d8 00 00 00 	mov    rax,QWORD PTR [rax+0xd8]
   13afb:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
   13aff:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   13b06:	48 8b 80 f0 00 00 00 	mov    rax,QWORD PTR [rax+0xf0]
   13b0d:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
   13b11:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   13b17:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   13b1d:	01 d0                	add    eax,edx
   13b1f:	83 c0 01             	add    eax,0x1
   13b22:	39 85 70 ff ff ff    	cmp    DWORD PTR [rbp-0x90],eax
   13b28:	7f 0b                	jg     13b35 <f3_get_stem_contributions_d5+0x572>
   13b2a:	8b 85 70 ff ff ff    	mov    eax,DWORD PTR [rbp-0x90]
   13b30:	83 e8 01             	sub    eax,0x1
   13b33:	eb 11                	jmp    13b46 <f3_get_stem_contributions_d5+0x583>
   13b35:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   13b3b:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   13b41:	01 d0                	add    eax,edx
   13b43:	83 c0 01             	add    eax,0x1
   13b46:	89 45 80             	mov    DWORD PTR [rbp-0x80],eax
   13b49:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
   13b4f:	01 c0                	add    eax,eax
   13b51:	89 c7                	mov    edi,eax
   13b53:	e8 69 83 01 00       	call   2bec1 <vrna_alloc>
   13b58:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
   13b5c:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
   13b62:	01 c0                	add    eax,eax
   13b64:	89 c7                	mov    edi,eax
   13b66:	e8 56 83 01 00       	call   2bec1 <vrna_alloc>
   13b6b:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
   13b6f:	c7 85 64 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x9c],0x0
   13b79:	e9 c5 00 00 00       	jmp    13c43 <f3_get_stem_contributions_d5+0x680>
   13b7e:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   13b84:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   13b8c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   13b90:	48 01 d0             	add    rax,rdx
   13b93:	48 8b 00             	mov    rax,QWORD PTR [rax]
   13b96:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   13b9c:	48 63 d2             	movsxd rdx,edx
   13b9f:	48 83 c2 01          	add    rdx,0x1
   13ba3:	48 c1 e2 02          	shl    rdx,0x2
   13ba7:	48 01 d0             	add    rax,rdx
   13baa:	8b 00                	mov    eax,DWORD PTR [rax]
   13bac:	83 f8 01             	cmp    eax,0x1
   13baf:	76 30                	jbe    13be1 <f3_get_stem_contributions_d5+0x61e>
   13bb1:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   13bb7:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   13bbf:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   13bc3:	48 01 d0             	add    rax,rdx
   13bc6:	48 8b 00             	mov    rax,QWORD PTR [rax]
   13bc9:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   13bcf:	48 63 d2             	movsxd rdx,edx
   13bd2:	48 83 c2 01          	add    rdx,0x1
   13bd6:	48 01 d2             	add    rdx,rdx
   13bd9:	48 01 d0             	add    rax,rdx
   13bdc:	0f b7 00             	movzx  eax,WORD PTR [rax]
   13bdf:	eb 05                	jmp    13be6 <f3_get_stem_contributions_d5+0x623>
   13be1:	b8 ff ff ff ff       	mov    eax,0xffffffff
   13be6:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   13bec:	48 8d 0c 12          	lea    rcx,[rdx+rdx*1]
   13bf0:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
   13bf4:	48 01 ca             	add    rdx,rcx
   13bf7:	66 89 02             	mov    WORD PTR [rdx],ax
   13bfa:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   13c00:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   13c08:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
   13c0c:	48 01 d0             	add    rax,rdx
   13c0f:	48 8b 00             	mov    rax,QWORD PTR [rax]
   13c12:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   13c18:	48 63 d2             	movsxd rdx,edx
   13c1b:	48 83 c2 01          	add    rdx,0x1
   13c1f:	48 01 d2             	add    rdx,rdx
   13c22:	48 01 d0             	add    rax,rdx
   13c25:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   13c2b:	48 8d 0c 12          	lea    rcx,[rdx+rdx*1]
   13c2f:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
   13c33:	48 01 ca             	add    rdx,rcx
   13c36:	0f b7 00             	movzx  eax,WORD PTR [rax]
   13c39:	66 89 02             	mov    WORD PTR [rdx],ax
   13c3c:	83 85 64 ff ff ff 01 	add    DWORD PTR [rbp-0x9c],0x1
   13c43:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   13c49:	3b 85 7c ff ff ff    	cmp    eax,DWORD PTR [rbp-0x84]
   13c4f:	0f 82 29 ff ff ff    	jb     13b7e <f3_get_stem_contributions_d5+0x5bb>
   13c55:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   13c5b:	8b 85 78 ff ff ff    	mov    eax,DWORD PTR [rbp-0x88]
   13c61:	01 d0                	add    eax,edx
   13c63:	83 c0 01             	add    eax,0x1
   13c66:	89 85 6c ff ff ff    	mov    DWORD PTR [rbp-0x94],eax
   13c6c:	e9 72 01 00 00       	jmp    13de3 <f3_get_stem_contributions_d5+0x820>
   13c71:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   13c77:	48 98                	cdqe   
   13c79:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   13c81:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   13c85:	48 01 d0             	add    rax,rdx
   13c88:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
   13c8e:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   13c94:	48 98                	cdqe   
   13c96:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   13c9e:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   13ca2:	48 01 d0             	add    rax,rdx
   13ca5:	8b 00                	mov    eax,DWORD PTR [rax]
   13ca7:	3d 80 96 98 00       	cmp    eax,0x989680
   13cac:	0f 84 2a 01 00 00    	je     13ddc <f3_get_stem_contributions_d5+0x819>
   13cb2:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   13cb8:	8d 48 01             	lea    ecx,[rax+0x1]
   13cbb:	48 8b bd 40 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xc0]
   13cc2:	8b 95 6c ff ff ff    	mov    edx,DWORD PTR [rbp-0x94]
   13cc8:	8b b5 70 ff ff ff    	mov    esi,DWORD PTR [rbp-0x90]
   13cce:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   13cd4:	4c 8b 95 48 ff ff ff 	mov    r10,QWORD PTR [rbp-0xb8]
   13cdb:	49 89 f9             	mov    r9,rdi
   13cde:	41 b8 14 00 00 00    	mov    r8d,0x14
   13ce4:	89 c7                	mov    edi,eax
   13ce6:	41 ff d2             	call   r10
   13ce9:	84 c0                	test   al,al
   13ceb:	0f 84 eb 00 00 00    	je     13ddc <f3_get_stem_contributions_d5+0x819>
   13cf1:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   13cf7:	48 98                	cdqe   
   13cf9:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   13d01:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   13d05:	48 01 d0             	add    rax,rdx
   13d08:	8b 00                	mov    eax,DWORD PTR [rax]
   13d0a:	89 85 68 ff ff ff    	mov    DWORD PTR [rbp-0x98],eax
   13d10:	c7 85 64 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x9c],0x0
   13d1a:	e9 8c 00 00 00       	jmp    13dab <f3_get_stem_contributions_d5+0x7e8>
   13d1f:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   13d25:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   13d2d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
   13d31:	48 01 d0             	add    rax,rdx
   13d34:	48 8b 00             	mov    rax,QWORD PTR [rax]
   13d37:	8b 95 6c ff ff ff    	mov    edx,DWORD PTR [rbp-0x94]
   13d3d:	48 63 d2             	movsxd rdx,edx
   13d40:	48 01 d2             	add    rdx,rdx
   13d43:	48 01 d0             	add    rax,rdx
   13d46:	0f b7 00             	movzx  eax,WORD PTR [rax]
   13d49:	0f bf c8             	movsx  ecx,ax
   13d4c:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   13d52:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   13d56:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   13d5a:	48 01 d0             	add    rax,rdx
   13d5d:	0f b7 00             	movzx  eax,WORD PTR [rax]
   13d60:	98                   	cwde   
   13d61:	48 8b 55 90          	mov    rdx,QWORD PTR [rbp-0x70]
   13d65:	89 ce                	mov    esi,ecx
   13d67:	89 c7                	mov    edi,eax
   13d69:	e8 7a 9d 01 00       	call   2dae8 <vrna_get_ptype_md>
   13d6e:	89 45 84             	mov    DWORD PTR [rbp-0x7c],eax
   13d71:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   13d77:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   13d7b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   13d7f:	48 01 d0             	add    rax,rdx
   13d82:	0f b7 00             	movzx  eax,WORD PTR [rax]
   13d85:	0f bf f0             	movsx  esi,ax
   13d88:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
   13d8c:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
   13d8f:	48 89 d1             	mov    rcx,rdx
   13d92:	ba ff ff ff ff       	mov    edx,0xffffffff
   13d97:	89 c7                	mov    edi,eax
   13d99:	e8 4d a4 ff ff       	call   e1eb <vrna_E_ext_stem>
   13d9e:	01 85 68 ff ff ff    	add    DWORD PTR [rbp-0x98],eax
   13da4:	83 85 64 ff ff ff 01 	add    DWORD PTR [rbp-0x9c],0x1
   13dab:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   13db1:	3b 85 7c ff ff ff    	cmp    eax,DWORD PTR [rbp-0x84]
   13db7:	0f 82 62 ff ff ff    	jb     13d1f <f3_get_stem_contributions_d5+0x75c>
   13dbd:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   13dc3:	48 98                	cdqe   
   13dc5:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   13dcd:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   13dd1:	48 01 c2             	add    rdx,rax
   13dd4:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   13dda:	89 02                	mov    DWORD PTR [rdx],eax
   13ddc:	83 85 6c ff ff ff 01 	add    DWORD PTR [rbp-0x94],0x1
   13de3:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   13de9:	3b 45 80             	cmp    eax,DWORD PTR [rbp-0x80]
   13dec:	0f 8e 7f fe ff ff    	jle    13c71 <f3_get_stem_contributions_d5+0x6ae>
   13df2:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
   13df7:	0f 84 b2 00 00 00    	je     13eaf <f3_get_stem_contributions_d5+0x8ec>
   13dfd:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   13e03:	8b 85 78 ff ff ff    	mov    eax,DWORD PTR [rbp-0x88]
   13e09:	01 d0                	add    eax,edx
   13e0b:	83 c0 01             	add    eax,0x1
   13e0e:	89 85 6c ff ff ff    	mov    DWORD PTR [rbp-0x94],eax
   13e14:	e9 87 00 00 00       	jmp    13ea0 <f3_get_stem_contributions_d5+0x8dd>
   13e19:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   13e1f:	48 98                	cdqe   
   13e21:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   13e29:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   13e2d:	48 01 d0             	add    rax,rdx
   13e30:	8b 00                	mov    eax,DWORD PTR [rax]
   13e32:	3d 80 96 98 00       	cmp    eax,0x989680
   13e37:	74 60                	je     13e99 <f3_get_stem_contributions_d5+0x8d6>
   13e39:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   13e3f:	8d 78 01             	lea    edi,[rax+0x1]
   13e42:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
   13e49:	8b b5 6c ff ff ff    	mov    esi,DWORD PTR [rbp-0x94]
   13e4f:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   13e55:	4c 8b 45 a8          	mov    r8,QWORD PTR [rbp-0x58]
   13e59:	48 89 d1             	mov    rcx,rdx
   13e5c:	89 fa                	mov    edx,edi
   13e5e:	89 c7                	mov    edi,eax
   13e60:	41 ff d0             	call   r8
   13e63:	8b 95 6c ff ff ff    	mov    edx,DWORD PTR [rbp-0x94]
   13e69:	48 63 d2             	movsxd rdx,edx
   13e6c:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   13e74:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
   13e78:	48 01 ca             	add    rdx,rcx
   13e7b:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   13e7d:	8b 95 6c ff ff ff    	mov    edx,DWORD PTR [rbp-0x94]
   13e83:	48 63 d2             	movsxd rdx,edx
   13e86:	48 8d 34 95 00 00 00 00 	lea    rsi,[rdx*4+0x0]
   13e8e:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
   13e92:	48 01 f2             	add    rdx,rsi
   13e95:	01 c8                	add    eax,ecx
   13e97:	89 02                	mov    DWORD PTR [rdx],eax
   13e99:	83 85 6c ff ff ff 01 	add    DWORD PTR [rbp-0x94],0x1
   13ea0:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   13ea6:	3b 45 80             	cmp    eax,DWORD PTR [rbp-0x80]
   13ea9:	0f 8e 6a ff ff ff    	jle    13e19 <f3_get_stem_contributions_d5+0x856>
   13eaf:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   13eb5:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   13ebb:	01 d0                	add    eax,edx
   13ebd:	39 85 70 ff ff ff    	cmp    DWORD PTR [rbp-0x90],eax
   13ec3:	0f 8f ad 01 00 00    	jg     14076 <f3_get_stem_contributions_d5+0xab3>
   13ec9:	8b 85 70 ff ff ff    	mov    eax,DWORD PTR [rbp-0x90]
   13ecf:	89 85 6c ff ff ff    	mov    DWORD PTR [rbp-0x94],eax
   13ed5:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   13edb:	48 98                	cdqe   
   13edd:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   13ee5:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   13ee9:	48 01 d0             	add    rax,rdx
   13eec:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
   13ef2:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   13ef8:	48 98                	cdqe   
   13efa:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   13f02:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   13f06:	48 01 d0             	add    rax,rdx
   13f09:	8b 00                	mov    eax,DWORD PTR [rax]
   13f0b:	3d 80 96 98 00       	cmp    eax,0x989680
   13f10:	0f 84 60 01 00 00    	je     14076 <f3_get_stem_contributions_d5+0xab3>
   13f16:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   13f1c:	8d 78 01             	lea    edi,[rax+0x1]
   13f1f:	48 8b 8d 40 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xc0]
   13f26:	8b 95 6c ff ff ff    	mov    edx,DWORD PTR [rbp-0x94]
   13f2c:	8b b5 6c ff ff ff    	mov    esi,DWORD PTR [rbp-0x94]
   13f32:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   13f38:	4c 8b 95 48 ff ff ff 	mov    r10,QWORD PTR [rbp-0xb8]
   13f3f:	49 89 c9             	mov    r9,rcx
   13f42:	41 b8 0e 00 00 00    	mov    r8d,0xe
   13f48:	89 d1                	mov    ecx,edx
   13f4a:	89 fa                	mov    edx,edi
   13f4c:	89 c7                	mov    edi,eax
   13f4e:	41 ff d2             	call   r10
   13f51:	84 c0                	test   al,al
   13f53:	0f 84 1d 01 00 00    	je     14076 <f3_get_stem_contributions_d5+0xab3>
   13f59:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   13f5f:	48 98                	cdqe   
   13f61:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   13f69:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   13f6d:	48 01 d0             	add    rax,rdx
   13f70:	8b 00                	mov    eax,DWORD PTR [rax]
   13f72:	89 85 68 ff ff ff    	mov    DWORD PTR [rbp-0x98],eax
   13f78:	c7 85 64 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x9c],0x0
   13f82:	e9 8c 00 00 00       	jmp    14013 <f3_get_stem_contributions_d5+0xa50>
   13f87:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   13f8d:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   13f95:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
   13f99:	48 01 d0             	add    rax,rdx
   13f9c:	48 8b 00             	mov    rax,QWORD PTR [rax]
   13f9f:	8b 95 6c ff ff ff    	mov    edx,DWORD PTR [rbp-0x94]
   13fa5:	48 63 d2             	movsxd rdx,edx
   13fa8:	48 01 d2             	add    rdx,rdx
   13fab:	48 01 d0             	add    rax,rdx
   13fae:	0f b7 00             	movzx  eax,WORD PTR [rax]
   13fb1:	0f bf c8             	movsx  ecx,ax
   13fb4:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   13fba:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   13fbe:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   13fc2:	48 01 d0             	add    rax,rdx
   13fc5:	0f b7 00             	movzx  eax,WORD PTR [rax]
   13fc8:	98                   	cwde   
   13fc9:	48 8b 55 90          	mov    rdx,QWORD PTR [rbp-0x70]
   13fcd:	89 ce                	mov    esi,ecx
   13fcf:	89 c7                	mov    edi,eax
   13fd1:	e8 12 9b 01 00       	call   2dae8 <vrna_get_ptype_md>
   13fd6:	89 45 84             	mov    DWORD PTR [rbp-0x7c],eax
   13fd9:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   13fdf:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   13fe3:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   13fe7:	48 01 d0             	add    rax,rdx
   13fea:	0f b7 00             	movzx  eax,WORD PTR [rax]
   13fed:	0f bf f0             	movsx  esi,ax
   13ff0:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
   13ff4:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
   13ff7:	48 89 d1             	mov    rcx,rdx
   13ffa:	ba ff ff ff ff       	mov    edx,0xffffffff
   13fff:	89 c7                	mov    edi,eax
   14001:	e8 e5 a1 ff ff       	call   e1eb <vrna_E_ext_stem>
   14006:	01 85 68 ff ff ff    	add    DWORD PTR [rbp-0x98],eax
   1400c:	83 85 64 ff ff ff 01 	add    DWORD PTR [rbp-0x9c],0x1
   14013:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   14019:	3b 85 7c ff ff ff    	cmp    eax,DWORD PTR [rbp-0x84]
   1401f:	0f 82 62 ff ff ff    	jb     13f87 <f3_get_stem_contributions_d5+0x9c4>
   14025:	48 83 7d b0 00       	cmp    QWORD PTR [rbp-0x50],0x0
   1402a:	74 2b                	je     14057 <f3_get_stem_contributions_d5+0xa94>
   1402c:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   14032:	8d 70 01             	lea    esi,[rax+0x1]
   14035:	48 8b 8d 38 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xc8]
   1403c:	8b 95 6c ff ff ff    	mov    edx,DWORD PTR [rbp-0x94]
   14042:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   14048:	4c 8b 45 b0          	mov    r8,QWORD PTR [rbp-0x50]
   1404c:	89 c7                	mov    edi,eax
   1404e:	41 ff d0             	call   r8
   14051:	01 85 68 ff ff ff    	add    DWORD PTR [rbp-0x98],eax
   14057:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   1405d:	48 98                	cdqe   
   1405f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   14067:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   1406b:	48 01 c2             	add    rdx,rax
   1406e:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   14074:	89 02                	mov    DWORD PTR [rdx],eax
   14076:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   1407a:	48 89 c7             	mov    rdi,rax
   1407d:	e8 2e f8 fe ff       	call   38b0 <free@plt>
   14082:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   14086:	48 89 c7             	mov    rdi,rax
   14089:	e8 22 f8 fe ff       	call   38b0 <free@plt>
   1408e:	eb 01                	jmp    14091 <f3_get_stem_contributions_d5+0xace>
   14090:	90                   	nop
   14091:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   14095:	48 81 c4 c8 00 00 00 	add    rsp,0xc8
   1409c:	5b                   	pop    rbx
   1409d:	5d                   	pop    rbp
   1409e:	c3                   	ret    

000000000001409f <f5_get_stem_contributions_d53>:
   1409f:	55                   	push   rbp
   140a0:	48 89 e5             	mov    rbp,rsp
   140a3:	53                   	push   rbx
   140a4:	48 81 ec d8 00 00 00 	sub    rsp,0xd8
   140ab:	48 89 bd 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rdi
   140b2:	89 b5 44 ff ff ff    	mov    DWORD PTR [rbp-0xbc],esi
   140b8:	48 89 95 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rdx
   140bf:	48 89 8d 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rcx
   140c6:	4c 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],r8
   140cd:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   140d3:	48 98                	cdqe   
   140d5:	c1 e0 02             	shl    eax,0x2
   140d8:	89 c7                	mov    edi,eax
   140da:	e8 e2 7d 01 00       	call   2bec1 <vrna_alloc>
   140df:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
   140e6:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   140ed:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
   140f0:	89 85 60 ff ff ff    	mov    DWORD PTR [rbp-0xa0],eax
   140f6:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   140fd:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
   14101:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
   14105:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
   14109:	48 05 98 35 03 00    	add    rax,0x33598
   1410f:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
   14113:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   1411a:	48 8b 40 78          	mov    rax,QWORD PTR [rax+0x78]
   1411e:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
   14122:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   14129:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
   1412d:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
   14131:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
   14135:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
   14139:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
   1413f:	89 85 64 ff ff ff    	mov    DWORD PTR [rbp-0x9c],eax
   14145:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   1414b:	48 98                	cdqe   
   1414d:	48 c1 e0 02          	shl    rax,0x2
   14151:	48 8d 50 fc          	lea    rdx,[rax-0x4]
   14155:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
   14159:	48 01 d0             	add    rax,rdx
   1415c:	8b 10                	mov    edx,DWORD PTR [rax]
   1415e:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   14164:	01 d0                	add    eax,edx
   14166:	2b 85 64 ff ff ff    	sub    eax,DWORD PTR [rbp-0x9c]
   1416c:	89 85 5c ff ff ff    	mov    DWORD PTR [rbp-0xa4],eax
   14172:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
   14179:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
   1417d:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
   14181:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
   14188:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
   1418c:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
   14190:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   14197:	8b 00                	mov    eax,DWORD PTR [rax]
   14199:	85 c0                	test   eax,eax
   1419b:	74 0e                	je     141ab <f5_get_stem_contributions_d53+0x10c>
   1419d:	83 f8 01             	cmp    eax,0x1
   141a0:	0f 84 bf 03 00 00    	je     14565 <f5_get_stem_contributions_d53+0x4c6>
   141a6:	e9 75 0a 00 00       	jmp    14c20 <f5_get_stem_contributions_d53+0xb81>
   141ab:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   141b2:	48 8b 80 b8 00 00 00 	mov    rax,QWORD PTR [rax+0xb8]
   141b9:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
   141bd:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   141c4:	48 8b 80 c8 00 00 00 	mov    rax,QWORD PTR [rax+0xc8]
   141cb:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
   141cf:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   141d5:	48 98                	cdqe   
   141d7:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   141db:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   141df:	48 01 d0             	add    rax,rdx
   141e2:	0f b7 00             	movzx  eax,WORD PTR [rax]
   141e5:	66 89 85 52 ff ff ff 	mov    WORD PTR [rbp-0xae],ax
   141ec:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   141f2:	48 63 d0             	movsxd rdx,eax
   141f5:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   141fb:	48 98                	cdqe   
   141fd:	48 29 c2             	sub    rdx,rax
   14200:	48 89 d0             	mov    rax,rdx
   14203:	48 01 c0             	add    rax,rax
   14206:	48 8d 50 fe          	lea    rdx,[rax-0x2]
   1420a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   1420e:	48 01 d0             	add    rax,rdx
   14211:	48 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rax
   14218:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   1421e:	2b 85 64 ff ff ff    	sub    eax,DWORD PTR [rbp-0x9c]
   14224:	83 e8 01             	sub    eax,0x1
   14227:	89 85 58 ff ff ff    	mov    DWORD PTR [rbp-0xa8],eax
   1422d:	e9 0e 01 00 00       	jmp    14340 <f5_get_stem_contributions_d53+0x2a1>
   14232:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
   14238:	48 98                	cdqe   
   1423a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   14242:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
   14249:	48 01 d0             	add    rax,rdx
   1424c:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
   14252:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   14258:	48 98                	cdqe   
   1425a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   14262:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   14266:	48 01 d0             	add    rax,rdx
   14269:	8b 00                	mov    eax,DWORD PTR [rax]
   1426b:	3d 80 96 98 00       	cmp    eax,0x989680
   14270:	0f 84 b4 00 00 00    	je     1432a <f5_get_stem_contributions_d53+0x28b>
   14276:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
   1427c:	8d 48 01             	lea    ecx,[rax+0x1]
   1427f:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
   14285:	8d 50 ff             	lea    edx,[rax-0x1]
   14288:	48 8b b5 30 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xd0]
   1428f:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   14295:	4c 8b 95 38 ff ff ff 	mov    r10,QWORD PTR [rbp-0xc8]
   1429c:	49 89 f1             	mov    r9,rsi
   1429f:	41 b8 13 00 00 00    	mov    r8d,0x13
   142a5:	89 c6                	mov    esi,eax
   142a7:	bf 01 00 00 00       	mov    edi,0x1
   142ac:	41 ff d2             	call   r10
   142af:	84 c0                	test   al,al
   142b1:	74 77                	je     1432a <f5_get_stem_contributions_d53+0x28b>
   142b3:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
   142b7:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   142bd:	48 89 d6             	mov    rsi,rdx
   142c0:	89 c7                	mov    edi,eax
   142c2:	e8 74 98 01 00       	call   2db3b <vrna_get_ptype>
   142c7:	89 85 6c ff ff ff    	mov    DWORD PTR [rbp-0x94],eax
   142cd:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   142d3:	48 98                	cdqe   
   142d5:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   142dd:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   142e1:	48 01 d0             	add    rax,rdx
   142e4:	8b 18                	mov    ebx,DWORD PTR [rax]
   142e6:	0f bf 95 52 ff ff ff 	movsx  edx,WORD PTR [rbp-0xae]
   142ed:	48 8b 85 70 ff ff ff 	mov    rax,QWORD PTR [rbp-0x90]
   142f4:	0f b7 00             	movzx  eax,WORD PTR [rax]
   142f7:	0f bf f0             	movsx  esi,ax
   142fa:	48 8b 4d 80          	mov    rcx,QWORD PTR [rbp-0x80]
   142fe:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   14304:	89 c7                	mov    edi,eax
   14306:	e8 e0 9e ff ff       	call   e1eb <vrna_E_ext_stem>
   1430b:	8b 95 58 ff ff ff    	mov    edx,DWORD PTR [rbp-0xa8]
   14311:	48 63 d2             	movsxd rdx,edx
   14314:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   1431c:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
   14323:	48 01 ca             	add    rdx,rcx
   14326:	01 d8                	add    eax,ebx
   14328:	89 02                	mov    DWORD PTR [rdx],eax
   1432a:	83 ad 58 ff ff ff 01 	sub    DWORD PTR [rbp-0xa8],0x1
   14331:	83 ad 5c ff ff ff 01 	sub    DWORD PTR [rbp-0xa4],0x1
   14338:	48 83 ad 70 ff ff ff 02 	sub    QWORD PTR [rbp-0x90],0x2
   14340:	83 bd 58 ff ff ff 01 	cmp    DWORD PTR [rbp-0xa8],0x1
   14347:	0f 8f e5 fe ff ff    	jg     14232 <f5_get_stem_contributions_d53+0x193>
   1434d:	48 83 7d a0 00       	cmp    QWORD PTR [rbp-0x60],0x0
   14352:	0f 84 ba 00 00 00    	je     14412 <f5_get_stem_contributions_d53+0x373>
   14358:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   1435e:	2b 85 64 ff ff ff    	sub    eax,DWORD PTR [rbp-0x9c]
   14364:	83 e8 01             	sub    eax,0x1
   14367:	89 85 58 ff ff ff    	mov    DWORD PTR [rbp-0xa8],eax
   1436d:	e9 93 00 00 00       	jmp    14405 <f5_get_stem_contributions_d53+0x366>
   14372:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
   14378:	48 98                	cdqe   
   1437a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   14382:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
   14389:	48 01 d0             	add    rax,rdx
   1438c:	8b 00                	mov    eax,DWORD PTR [rax]
   1438e:	3d 80 96 98 00       	cmp    eax,0x989680
   14393:	74 69                	je     143fe <f5_get_stem_contributions_d53+0x35f>
   14395:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
   1439b:	8d 78 01             	lea    edi,[rax+0x1]
   1439e:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
   143a4:	8d 70 ff             	lea    esi,[rax-0x1]
   143a7:	48 8b 95 28 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xd8]
   143ae:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   143b4:	4c 8b 45 a0          	mov    r8,QWORD PTR [rbp-0x60]
   143b8:	48 89 d1             	mov    rcx,rdx
   143bb:	89 fa                	mov    edx,edi
   143bd:	89 c7                	mov    edi,eax
   143bf:	41 ff d0             	call   r8
   143c2:	8b 95 58 ff ff ff    	mov    edx,DWORD PTR [rbp-0xa8]
   143c8:	48 63 d2             	movsxd rdx,edx
   143cb:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   143d3:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
   143da:	48 01 ca             	add    rdx,rcx
   143dd:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   143df:	8b 95 58 ff ff ff    	mov    edx,DWORD PTR [rbp-0xa8]
   143e5:	48 63 d2             	movsxd rdx,edx
   143e8:	48 8d 34 95 00 00 00 00 	lea    rsi,[rdx*4+0x0]
   143f0:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
   143f7:	48 01 f2             	add    rdx,rsi
   143fa:	01 c8                	add    eax,ecx
   143fc:	89 02                	mov    DWORD PTR [rdx],eax
   143fe:	83 ad 58 ff ff ff 01 	sub    DWORD PTR [rbp-0xa8],0x1
   14405:	83 bd 58 ff ff ff 01 	cmp    DWORD PTR [rbp-0xa8],0x1
   1440c:	0f 8f 60 ff ff ff    	jg     14372 <f5_get_stem_contributions_d53+0x2d3>
   14412:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
   14419:	48 83 c0 04          	add    rax,0x4
   1441d:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
   14423:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   14429:	48 98                	cdqe   
   1442b:	48 c1 e0 02          	shl    rax,0x2
   1442f:	48 8d 50 fc          	lea    rdx,[rax-0x4]
   14433:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
   14437:	48 01 d0             	add    rax,rdx
   1443a:	8b 00                	mov    eax,DWORD PTR [rax]
   1443c:	83 c0 02             	add    eax,0x2
   1443f:	89 85 5c ff ff ff    	mov    DWORD PTR [rbp-0xa4],eax
   14445:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   1444b:	48 98                	cdqe   
   1444d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   14455:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   14459:	48 01 d0             	add    rax,rdx
   1445c:	8b 00                	mov    eax,DWORD PTR [rax]
   1445e:	3d 80 96 98 00       	cmp    eax,0x989680
   14463:	0f 84 b6 07 00 00    	je     14c1f <f5_get_stem_contributions_d53+0xb80>
   14469:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   1446f:	8d 50 ff             	lea    edx,[rax-0x1]
   14472:	48 8b 8d 30 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xd0]
   14479:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   1447f:	4c 8b 95 38 ff ff ff 	mov    r10,QWORD PTR [rbp-0xc8]
   14486:	49 89 c9             	mov    r9,rcx
   14489:	41 b8 0e 00 00 00    	mov    r8d,0xe
   1448f:	89 d1                	mov    ecx,edx
   14491:	ba 02 00 00 00       	mov    edx,0x2
   14496:	89 c6                	mov    esi,eax
   14498:	bf 01 00 00 00       	mov    edi,0x1
   1449d:	41 ff d2             	call   r10
   144a0:	84 c0                	test   al,al
   144a2:	0f 84 77 07 00 00    	je     14c1f <f5_get_stem_contributions_d53+0xb80>
   144a8:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
   144ac:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   144b2:	48 89 d6             	mov    rsi,rdx
   144b5:	89 c7                	mov    edi,eax
   144b7:	e8 7f 96 01 00       	call   2db3b <vrna_get_ptype>
   144bc:	89 85 6c ff ff ff    	mov    DWORD PTR [rbp-0x94],eax
   144c2:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   144c8:	48 98                	cdqe   
   144ca:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   144d2:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   144d6:	48 01 d0             	add    rax,rdx
   144d9:	8b 18                	mov    ebx,DWORD PTR [rax]
   144db:	0f bf 95 52 ff ff ff 	movsx  edx,WORD PTR [rbp-0xae]
   144e2:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   144e6:	48 83 c0 02          	add    rax,0x2
   144ea:	0f b7 00             	movzx  eax,WORD PTR [rax]
   144ed:	0f bf f0             	movsx  esi,ax
   144f0:	48 8b 4d 80          	mov    rcx,QWORD PTR [rbp-0x80]
   144f4:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   144fa:	89 c7                	mov    edi,eax
   144fc:	e8 ea 9c ff ff       	call   e1eb <vrna_E_ext_stem>
   14501:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
   14508:	48 83 c2 04          	add    rdx,0x4
   1450c:	01 d8                	add    eax,ebx
   1450e:	89 02                	mov    DWORD PTR [rdx],eax
   14510:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
   14515:	0f 84 04 07 00 00    	je     14c1f <f5_get_stem_contributions_d53+0xb80>
   1451b:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   14521:	8d 70 ff             	lea    esi,[rax-0x1]
   14524:	48 8b 95 28 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xd8]
   1452b:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   14531:	4c 8b 45 a8          	mov    r8,QWORD PTR [rbp-0x58]
   14535:	48 89 d1             	mov    rcx,rdx
   14538:	89 f2                	mov    edx,esi
   1453a:	be 02 00 00 00       	mov    esi,0x2
   1453f:	89 c7                	mov    edi,eax
   14541:	41 ff d0             	call   r8
   14544:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
   1454b:	48 83 c2 04          	add    rdx,0x4
   1454f:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   14551:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
   14558:	48 83 c2 04          	add    rdx,0x4
   1455c:	01 c8                	add    eax,ecx
   1455e:	89 02                	mov    DWORD PTR [rdx],eax
   14560:	e9 ba 06 00 00       	jmp    14c1f <f5_get_stem_contributions_d53+0xb80>
   14565:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   1456c:	8b 80 b8 00 00 00    	mov    eax,DWORD PTR [rax+0xb8]
   14572:	89 85 68 ff ff ff    	mov    DWORD PTR [rbp-0x98],eax
   14578:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   1457f:	48 8b 80 d0 00 00 00 	mov    rax,QWORD PTR [rax+0xd0]
   14586:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
   1458a:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   14591:	48 8b 80 d8 00 00 00 	mov    rax,QWORD PTR [rax+0xd8]
   14598:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
   1459c:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   145a3:	48 8b 80 e0 00 00 00 	mov    rax,QWORD PTR [rax+0xe0]
   145aa:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
   145ae:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   145b5:	48 8b 80 f0 00 00 00 	mov    rax,QWORD PTR [rax+0xf0]
   145bc:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
   145c0:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   145c6:	01 c0                	add    eax,eax
   145c8:	89 c7                	mov    edi,eax
   145ca:	e8 f2 78 01 00       	call   2bec1 <vrna_alloc>
   145cf:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
   145d3:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   145d9:	01 c0                	add    eax,eax
   145db:	89 c7                	mov    edi,eax
   145dd:	e8 df 78 01 00       	call   2bec1 <vrna_alloc>
   145e2:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
   145e6:	c7 85 54 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xac],0x0
   145f0:	e9 eb 00 00 00       	jmp    146e0 <f5_get_stem_contributions_d53+0x641>
   145f5:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   145fb:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   14603:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   14607:	48 01 d0             	add    rax,rdx
   1460a:	48 8b 00             	mov    rax,QWORD PTR [rax]
   1460d:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   14613:	48 63 d2             	movsxd rdx,edx
   14616:	48 c1 e2 02          	shl    rdx,0x2
   1461a:	48 83 ea 04          	sub    rdx,0x4
   1461e:	48 01 d0             	add    rax,rdx
   14621:	8b 10                	mov    edx,DWORD PTR [rax]
   14623:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   14629:	48 8d 0c c5 00 00 00 00 	lea    rcx,[rax*8+0x0]
   14631:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   14635:	48 01 c8             	add    rax,rcx
   14638:	48 8b 00             	mov    rax,QWORD PTR [rax]
   1463b:	8b 8d 60 ff ff ff    	mov    ecx,DWORD PTR [rbp-0xa0]
   14641:	48 c1 e1 02          	shl    rcx,0x2
   14645:	48 01 c8             	add    rax,rcx
   14648:	8b 00                	mov    eax,DWORD PTR [rax]
   1464a:	39 c2                	cmp    edx,eax
   1464c:	73 30                	jae    1467e <f5_get_stem_contributions_d53+0x5df>
   1464e:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   14654:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   1465c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   14660:	48 01 d0             	add    rax,rdx
   14663:	48 8b 00             	mov    rax,QWORD PTR [rax]
   14666:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   1466c:	48 63 d2             	movsxd rdx,edx
   1466f:	48 01 d2             	add    rdx,rdx
   14672:	48 83 ea 02          	sub    rdx,0x2
   14676:	48 01 d0             	add    rax,rdx
   14679:	0f b7 00             	movzx  eax,WORD PTR [rax]
   1467c:	eb 05                	jmp    14683 <f5_get_stem_contributions_d53+0x5e4>
   1467e:	b8 ff ff ff ff       	mov    eax,0xffffffff
   14683:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   14689:	48 8d 0c 12          	lea    rcx,[rdx+rdx*1]
   1468d:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
   14691:	48 01 ca             	add    rdx,rcx
   14694:	66 89 02             	mov    WORD PTR [rdx],ax
   14697:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   1469d:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   146a5:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
   146a9:	48 01 d0             	add    rax,rdx
   146ac:	48 8b 00             	mov    rax,QWORD PTR [rax]
   146af:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   146b5:	48 63 d2             	movsxd rdx,edx
   146b8:	48 01 d2             	add    rdx,rdx
   146bb:	48 83 ea 02          	sub    rdx,0x2
   146bf:	48 01 d0             	add    rax,rdx
   146c2:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
   146c8:	48 8d 0c 12          	lea    rcx,[rdx+rdx*1]
   146cc:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
   146d0:	48 01 ca             	add    rdx,rcx
   146d3:	0f b7 00             	movzx  eax,WORD PTR [rax]
   146d6:	66 89 02             	mov    WORD PTR [rdx],ax
   146d9:	83 85 54 ff ff ff 01 	add    DWORD PTR [rbp-0xac],0x1
   146e0:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   146e6:	3b 85 68 ff ff ff    	cmp    eax,DWORD PTR [rbp-0x98]
   146ec:	0f 82 03 ff ff ff    	jb     145f5 <f5_get_stem_contributions_d53+0x556>
   146f2:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   146f8:	2b 85 64 ff ff ff    	sub    eax,DWORD PTR [rbp-0x9c]
   146fe:	83 e8 01             	sub    eax,0x1
   14701:	89 85 58 ff ff ff    	mov    DWORD PTR [rbp-0xa8],eax
   14707:	e9 1f 02 00 00       	jmp    1492b <f5_get_stem_contributions_d53+0x88c>
   1470c:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
   14712:	48 98                	cdqe   
   14714:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1471c:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
   14723:	48 01 d0             	add    rax,rdx
   14726:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
   1472c:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   14732:	48 98                	cdqe   
   14734:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1473c:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   14740:	48 01 d0             	add    rax,rdx
   14743:	8b 00                	mov    eax,DWORD PTR [rax]
   14745:	3d 80 96 98 00       	cmp    eax,0x989680
   1474a:	0f 84 c5 01 00 00    	je     14915 <f5_get_stem_contributions_d53+0x876>
   14750:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
   14756:	8d 48 01             	lea    ecx,[rax+0x1]
   14759:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
   1475f:	8d 50 ff             	lea    edx,[rax-0x1]
   14762:	48 8b b5 30 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xd0]
   14769:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   1476f:	4c 8b 95 38 ff ff ff 	mov    r10,QWORD PTR [rbp-0xc8]
   14776:	49 89 f1             	mov    r9,rsi
   14779:	41 b8 13 00 00 00    	mov    r8d,0x13
   1477f:	89 c6                	mov    esi,eax
   14781:	bf 01 00 00 00       	mov    edi,0x1
   14786:	41 ff d2             	call   r10
   14789:	84 c0                	test   al,al
   1478b:	0f 84 84 01 00 00    	je     14915 <f5_get_stem_contributions_d53+0x876>
   14791:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   14797:	48 98                	cdqe   
   14799:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   147a1:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   147a5:	48 01 d0             	add    rax,rdx
   147a8:	8b 95 58 ff ff ff    	mov    edx,DWORD PTR [rbp-0xa8]
   147ae:	48 63 d2             	movsxd rdx,edx
   147b1:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   147b9:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
   147c0:	48 01 ca             	add    rdx,rcx
   147c3:	8b 00                	mov    eax,DWORD PTR [rax]
   147c5:	89 02                	mov    DWORD PTR [rdx],eax
   147c7:	c7 85 54 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xac],0x0
   147d1:	e9 2d 01 00 00       	jmp    14903 <f5_get_stem_contributions_d53+0x864>
   147d6:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   147dc:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   147e0:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   147e4:	48 01 d0             	add    rax,rdx
   147e7:	0f b7 00             	movzx  eax,WORD PTR [rax]
   147ea:	0f bf c8             	movsx  ecx,ax
   147ed:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   147f3:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   147fb:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
   147ff:	48 01 d0             	add    rax,rdx
   14802:	48 8b 00             	mov    rax,QWORD PTR [rax]
   14805:	8b 95 58 ff ff ff    	mov    edx,DWORD PTR [rbp-0xa8]
   1480b:	48 63 d2             	movsxd rdx,edx
   1480e:	48 83 c2 01          	add    rdx,0x1
   14812:	48 01 d2             	add    rdx,rdx
   14815:	48 01 d0             	add    rax,rdx
   14818:	0f b7 00             	movzx  eax,WORD PTR [rax]
   1481b:	98                   	cwde   
   1481c:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
   14820:	89 ce                	mov    esi,ecx
   14822:	89 c7                	mov    edi,eax
   14824:	e8 bf 92 01 00       	call   2dae8 <vrna_get_ptype_md>
   14829:	89 85 6c ff ff ff    	mov    DWORD PTR [rbp-0x94],eax
   1482f:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   14835:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   14839:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   1483d:	48 01 d0             	add    rax,rdx
   14840:	0f b7 00             	movzx  eax,WORD PTR [rax]
   14843:	0f bf d0             	movsx  edx,ax
   14846:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   1484c:	48 8d 0c c5 00 00 00 00 	lea    rcx,[rax*8+0x0]
   14854:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   14858:	48 01 c8             	add    rax,rcx
   1485b:	48 8b 00             	mov    rax,QWORD PTR [rax]
   1485e:	8b 8d 58 ff ff ff    	mov    ecx,DWORD PTR [rbp-0xa8]
   14864:	48 63 c9             	movsxd rcx,ecx
   14867:	48 83 c1 01          	add    rcx,0x1
   1486b:	48 c1 e1 02          	shl    rcx,0x2
   1486f:	48 01 c8             	add    rax,rcx
   14872:	8b 00                	mov    eax,DWORD PTR [rax]
   14874:	83 f8 01             	cmp    eax,0x1
   14877:	76 31                	jbe    148aa <f5_get_stem_contributions_d53+0x80b>
   14879:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   1487f:	48 8d 0c c5 00 00 00 00 	lea    rcx,[rax*8+0x0]
   14887:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
   1488b:	48 01 c8             	add    rax,rcx
   1488e:	48 8b 00             	mov    rax,QWORD PTR [rax]
   14891:	8b 8d 58 ff ff ff    	mov    ecx,DWORD PTR [rbp-0xa8]
   14897:	48 63 c9             	movsxd rcx,ecx
   1489a:	48 83 c1 01          	add    rcx,0x1
   1489e:	48 01 c9             	add    rcx,rcx
   148a1:	48 01 c8             	add    rax,rcx
   148a4:	0f b7 00             	movzx  eax,WORD PTR [rax]
   148a7:	98                   	cwde   
   148a8:	eb 05                	jmp    148af <f5_get_stem_contributions_d53+0x810>
   148aa:	b8 ff ff ff ff       	mov    eax,0xffffffff
   148af:	48 8b 4d 80          	mov    rcx,QWORD PTR [rbp-0x80]
   148b3:	8b bd 6c ff ff ff    	mov    edi,DWORD PTR [rbp-0x94]
   148b9:	89 c6                	mov    esi,eax
   148bb:	e8 2b 99 ff ff       	call   e1eb <vrna_E_ext_stem>
   148c0:	8b 95 58 ff ff ff    	mov    edx,DWORD PTR [rbp-0xa8]
   148c6:	48 63 d2             	movsxd rdx,edx
   148c9:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   148d1:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
   148d8:	48 01 ca             	add    rdx,rcx
   148db:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   148dd:	8b 95 58 ff ff ff    	mov    edx,DWORD PTR [rbp-0xa8]
   148e3:	48 63 d2             	movsxd rdx,edx
   148e6:	48 8d 34 95 00 00 00 00 	lea    rsi,[rdx*4+0x0]
   148ee:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
   148f5:	48 01 f2             	add    rdx,rsi
   148f8:	01 c8                	add    eax,ecx
   148fa:	89 02                	mov    DWORD PTR [rdx],eax
   148fc:	83 85 54 ff ff ff 01 	add    DWORD PTR [rbp-0xac],0x1
   14903:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   14909:	3b 85 68 ff ff ff    	cmp    eax,DWORD PTR [rbp-0x98]
   1490f:	0f 82 c1 fe ff ff    	jb     147d6 <f5_get_stem_contributions_d53+0x737>
   14915:	83 ad 58 ff ff ff 01 	sub    DWORD PTR [rbp-0xa8],0x1
   1491c:	83 ad 5c ff ff ff 01 	sub    DWORD PTR [rbp-0xa4],0x1
   14923:	48 83 ad 70 ff ff ff 02 	sub    QWORD PTR [rbp-0x90],0x2
   1492b:	83 bd 58 ff ff ff 01 	cmp    DWORD PTR [rbp-0xa8],0x1
   14932:	0f 8f d4 fd ff ff    	jg     1470c <f5_get_stem_contributions_d53+0x66d>
   14938:	48 83 7d a0 00       	cmp    QWORD PTR [rbp-0x60],0x0
   1493d:	0f 84 ba 00 00 00    	je     149fd <f5_get_stem_contributions_d53+0x95e>
   14943:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   14949:	2b 85 64 ff ff ff    	sub    eax,DWORD PTR [rbp-0x9c]
   1494f:	83 e8 01             	sub    eax,0x1
   14952:	89 85 58 ff ff ff    	mov    DWORD PTR [rbp-0xa8],eax
   14958:	e9 93 00 00 00       	jmp    149f0 <f5_get_stem_contributions_d53+0x951>
   1495d:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
   14963:	48 98                	cdqe   
   14965:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1496d:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
   14974:	48 01 d0             	add    rax,rdx
   14977:	8b 00                	mov    eax,DWORD PTR [rax]
   14979:	3d 80 96 98 00       	cmp    eax,0x989680
   1497e:	74 69                	je     149e9 <f5_get_stem_contributions_d53+0x94a>
   14980:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
   14986:	8d 78 01             	lea    edi,[rax+0x1]
   14989:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
   1498f:	8d 70 ff             	lea    esi,[rax-0x1]
   14992:	48 8b 95 28 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xd8]
   14999:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   1499f:	4c 8b 45 a0          	mov    r8,QWORD PTR [rbp-0x60]
   149a3:	48 89 d1             	mov    rcx,rdx
   149a6:	89 fa                	mov    edx,edi
   149a8:	89 c7                	mov    edi,eax
   149aa:	41 ff d0             	call   r8
   149ad:	8b 95 58 ff ff ff    	mov    edx,DWORD PTR [rbp-0xa8]
   149b3:	48 63 d2             	movsxd rdx,edx
   149b6:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   149be:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
   149c5:	48 01 ca             	add    rdx,rcx
   149c8:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   149ca:	8b 95 58 ff ff ff    	mov    edx,DWORD PTR [rbp-0xa8]
   149d0:	48 63 d2             	movsxd rdx,edx
   149d3:	48 8d 34 95 00 00 00 00 	lea    rsi,[rdx*4+0x0]
   149db:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
   149e2:	48 01 f2             	add    rdx,rsi
   149e5:	01 c8                	add    eax,ecx
   149e7:	89 02                	mov    DWORD PTR [rdx],eax
   149e9:	83 ad 58 ff ff ff 01 	sub    DWORD PTR [rbp-0xa8],0x1
   149f0:	83 bd 58 ff ff ff 01 	cmp    DWORD PTR [rbp-0xa8],0x1
   149f7:	0f 8f 60 ff ff ff    	jg     1495d <f5_get_stem_contributions_d53+0x8be>
   149fd:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
   14a04:	48 83 c0 04          	add    rax,0x4
   14a08:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
   14a0e:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   14a14:	48 98                	cdqe   
   14a16:	48 c1 e0 02          	shl    rax,0x2
   14a1a:	48 8d 50 fc          	lea    rdx,[rax-0x4]
   14a1e:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
   14a22:	48 01 d0             	add    rax,rdx
   14a25:	8b 00                	mov    eax,DWORD PTR [rax]
   14a27:	83 c0 02             	add    eax,0x2
   14a2a:	89 85 5c ff ff ff    	mov    DWORD PTR [rbp-0xa4],eax
   14a30:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   14a36:	48 98                	cdqe   
   14a38:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   14a40:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   14a44:	48 01 d0             	add    rax,rdx
   14a47:	8b 00                	mov    eax,DWORD PTR [rax]
   14a49:	3d 80 96 98 00       	cmp    eax,0x989680
   14a4e:	0f 84 b1 01 00 00    	je     14c05 <f5_get_stem_contributions_d53+0xb66>
   14a54:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   14a5a:	8d 50 ff             	lea    edx,[rax-0x1]
   14a5d:	48 8b 8d 30 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xd0]
   14a64:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   14a6a:	4c 8b 95 38 ff ff ff 	mov    r10,QWORD PTR [rbp-0xc8]
   14a71:	49 89 c9             	mov    r9,rcx
   14a74:	41 b8 0e 00 00 00    	mov    r8d,0xe
   14a7a:	89 d1                	mov    ecx,edx
   14a7c:	ba 02 00 00 00       	mov    edx,0x2
   14a81:	89 c6                	mov    esi,eax
   14a83:	bf 01 00 00 00       	mov    edi,0x1
   14a88:	41 ff d2             	call   r10
   14a8b:	84 c0                	test   al,al
   14a8d:	0f 84 72 01 00 00    	je     14c05 <f5_get_stem_contributions_d53+0xb66>
   14a93:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   14a99:	48 98                	cdqe   
   14a9b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   14aa3:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   14aa7:	48 01 d0             	add    rax,rdx
   14aaa:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
   14ab1:	48 83 c2 04          	add    rdx,0x4
   14ab5:	8b 00                	mov    eax,DWORD PTR [rax]
   14ab7:	89 02                	mov    DWORD PTR [rdx],eax
   14ab9:	c7 85 54 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xac],0x0
   14ac3:	e9 df 00 00 00       	jmp    14ba7 <f5_get_stem_contributions_d53+0xb08>
   14ac8:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   14ace:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   14ad2:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   14ad6:	48 01 d0             	add    rax,rdx
   14ad9:	0f b7 00             	movzx  eax,WORD PTR [rax]
   14adc:	0f bf c8             	movsx  ecx,ax
   14adf:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   14ae5:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   14aed:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
   14af1:	48 01 d0             	add    rax,rdx
   14af4:	48 8b 00             	mov    rax,QWORD PTR [rax]
   14af7:	48 83 c0 04          	add    rax,0x4
   14afb:	0f b7 00             	movzx  eax,WORD PTR [rax]
   14afe:	98                   	cwde   
   14aff:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
   14b03:	89 ce                	mov    esi,ecx
   14b05:	89 c7                	mov    edi,eax
   14b07:	e8 dc 8f 01 00       	call   2dae8 <vrna_get_ptype_md>
   14b0c:	89 85 6c ff ff ff    	mov    DWORD PTR [rbp-0x94],eax
   14b12:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   14b18:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   14b1c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   14b20:	48 01 d0             	add    rax,rdx
   14b23:	0f b7 00             	movzx  eax,WORD PTR [rax]
   14b26:	0f bf d0             	movsx  edx,ax
   14b29:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   14b2f:	48 8d 0c c5 00 00 00 00 	lea    rcx,[rax*8+0x0]
   14b37:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   14b3b:	48 01 c8             	add    rax,rcx
   14b3e:	48 8b 00             	mov    rax,QWORD PTR [rax]
   14b41:	48 83 c0 08          	add    rax,0x8
   14b45:	8b 00                	mov    eax,DWORD PTR [rax]
   14b47:	83 f8 01             	cmp    eax,0x1
   14b4a:	76 22                	jbe    14b6e <f5_get_stem_contributions_d53+0xacf>
   14b4c:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   14b52:	48 8d 0c c5 00 00 00 00 	lea    rcx,[rax*8+0x0]
   14b5a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
   14b5e:	48 01 c8             	add    rax,rcx
   14b61:	48 8b 00             	mov    rax,QWORD PTR [rax]
   14b64:	48 83 c0 04          	add    rax,0x4
   14b68:	0f b7 00             	movzx  eax,WORD PTR [rax]
   14b6b:	98                   	cwde   
   14b6c:	eb 05                	jmp    14b73 <f5_get_stem_contributions_d53+0xad4>
   14b6e:	b8 ff ff ff ff       	mov    eax,0xffffffff
   14b73:	48 8b 4d 80          	mov    rcx,QWORD PTR [rbp-0x80]
   14b77:	8b bd 6c ff ff ff    	mov    edi,DWORD PTR [rbp-0x94]
   14b7d:	89 c6                	mov    esi,eax
   14b7f:	e8 67 96 ff ff       	call   e1eb <vrna_E_ext_stem>
   14b84:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
   14b8b:	48 83 c2 04          	add    rdx,0x4
   14b8f:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   14b91:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
   14b98:	48 83 c2 04          	add    rdx,0x4
   14b9c:	01 c8                	add    eax,ecx
   14b9e:	89 02                	mov    DWORD PTR [rdx],eax
   14ba0:	83 85 54 ff ff ff 01 	add    DWORD PTR [rbp-0xac],0x1
   14ba7:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   14bad:	3b 85 68 ff ff ff    	cmp    eax,DWORD PTR [rbp-0x98]
   14bb3:	0f 82 0f ff ff ff    	jb     14ac8 <f5_get_stem_contributions_d53+0xa29>
   14bb9:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
   14bbe:	74 45                	je     14c05 <f5_get_stem_contributions_d53+0xb66>
   14bc0:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   14bc6:	8d 70 ff             	lea    esi,[rax-0x1]
   14bc9:	48 8b 95 28 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xd8]
   14bd0:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   14bd6:	4c 8b 45 a8          	mov    r8,QWORD PTR [rbp-0x58]
   14bda:	48 89 d1             	mov    rcx,rdx
   14bdd:	89 f2                	mov    edx,esi
   14bdf:	be 02 00 00 00       	mov    esi,0x2
   14be4:	89 c7                	mov    edi,eax
   14be6:	41 ff d0             	call   r8
   14be9:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
   14bf0:	48 83 c2 04          	add    rdx,0x4
   14bf4:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   14bf6:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
   14bfd:	48 83 c2 04          	add    rdx,0x4
   14c01:	01 c8                	add    eax,ecx
   14c03:	89 02                	mov    DWORD PTR [rdx],eax
   14c05:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   14c09:	48 89 c7             	mov    rdi,rax
   14c0c:	e8 9f ec fe ff       	call   38b0 <free@plt>
   14c11:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   14c15:	48 89 c7             	mov    rdi,rax
   14c18:	e8 93 ec fe ff       	call   38b0 <free@plt>
   14c1d:	eb 01                	jmp    14c20 <f5_get_stem_contributions_d53+0xb81>
   14c1f:	90                   	nop
   14c20:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
   14c27:	48 81 c4 d8 00 00 00 	add    rsp,0xd8
   14c2e:	5b                   	pop    rbx
   14c2f:	5d                   	pop    rbp
   14c30:	c3                   	ret    

0000000000014c31 <f3_get_stem_contributions_d53>:
   14c31:	55                   	push   rbp
   14c32:	48 89 e5             	mov    rbp,rsp
   14c35:	53                   	push   rbx
   14c36:	48 81 ec d8 00 00 00 	sub    rsp,0xd8
   14c3d:	48 89 bd 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rdi
   14c44:	89 b5 44 ff ff ff    	mov    DWORD PTR [rbp-0xbc],esi
   14c4a:	48 89 95 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rdx
   14c51:	48 89 8d 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rcx
   14c58:	4c 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],r8
   14c5f:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   14c66:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
   14c69:	89 85 68 ff ff ff    	mov    DWORD PTR [rbp-0x98],eax
   14c6f:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   14c76:	8b 80 60 01 00 00    	mov    eax,DWORD PTR [rax+0x160]
   14c7c:	89 85 6c ff ff ff    	mov    DWORD PTR [rbp-0x94],eax
   14c82:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   14c89:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
   14c8d:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
   14c91:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
   14c95:	48 05 98 35 03 00    	add    rax,0x33598
   14c9b:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
   14c9f:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   14ca6:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
   14caa:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
   14cae:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   14cb4:	48 63 d2             	movsxd rdx,edx
   14cb7:	48 83 c2 01          	add    rdx,0x1
   14cbb:	48 c1 e2 03          	shl    rdx,0x3
   14cbf:	48 01 d0             	add    rax,rdx
   14cc2:	48 8b 00             	mov    rax,QWORD PTR [rax]
   14cc5:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
   14cc9:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   14ccf:	48 98                	cdqe   
   14cd1:	48 c1 e0 02          	shl    rax,0x2
   14cd5:	48 c7 c2 fc ff ff ff 	mov    rdx,0xfffffffffffffffc
   14cdc:	48 29 c2             	sub    rdx,rax
   14cdf:	48 89 d0             	mov    rax,rdx
   14ce2:	48 01 45 90          	add    QWORD PTR [rbp-0x70],rax
   14ce6:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
   14cea:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
   14cf0:	89 85 70 ff ff ff    	mov    DWORD PTR [rbp-0x90],eax
   14cf6:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   14cfc:	83 c0 06             	add    eax,0x6
   14cff:	48 98                	cdqe   
   14d01:	c1 e0 02             	shl    eax,0x2
   14d04:	89 c7                	mov    edi,eax
   14d06:	e8 b6 71 01 00       	call   2bec1 <vrna_alloc>
   14d0b:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
   14d0f:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   14d15:	48 98                	cdqe   
   14d17:	48 c1 e0 02          	shl    rax,0x2
   14d1b:	48 f7 d8             	neg    rax
   14d1e:	48 01 45 98          	add    QWORD PTR [rbp-0x68],rax
   14d22:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
   14d29:	48 8b 40 28          	mov    rax,QWORD PTR [rax+0x28]
   14d2d:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
   14d31:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
   14d38:	48 8b 40 18          	mov    rax,QWORD PTR [rax+0x18]
   14d3c:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
   14d40:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   14d47:	8b 00                	mov    eax,DWORD PTR [rax]
   14d49:	85 c0                	test   eax,eax
   14d4b:	74 0e                	je     14d5b <f3_get_stem_contributions_d53+0x12a>
   14d4d:	83 f8 01             	cmp    eax,0x1
   14d50:	0f 84 13 04 00 00    	je     15169 <f3_get_stem_contributions_d53+0x538>
   14d56:	e9 24 0b 00 00       	jmp    1587f <f3_get_stem_contributions_d53+0xc4e>
   14d5b:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   14d62:	48 8b 80 b8 00 00 00 	mov    rax,QWORD PTR [rax+0xb8]
   14d69:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
   14d6d:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   14d74:	48 8b 80 68 01 00 00 	mov    rax,QWORD PTR [rax+0x168]
   14d7b:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
   14d7f:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   14d85:	48 98                	cdqe   
   14d87:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   14d8b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   14d8f:	48 01 d0             	add    rax,rdx
   14d92:	0f b7 00             	movzx  eax,WORD PTR [rax]
   14d95:	66 89 85 5a ff ff ff 	mov    WORD PTR [rbp-0xa6],ax
   14d9c:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   14da2:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   14da8:	01 d0                	add    eax,edx
   14daa:	83 c0 01             	add    eax,0x1
   14dad:	39 85 68 ff ff ff    	cmp    DWORD PTR [rbp-0x98],eax
   14db3:	7f 0b                	jg     14dc0 <f3_get_stem_contributions_d53+0x18f>
   14db5:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   14dbb:	83 e8 01             	sub    eax,0x1
   14dbe:	eb 11                	jmp    14dd1 <f3_get_stem_contributions_d53+0x1a0>
   14dc0:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   14dc6:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   14dcc:	01 d0                	add    eax,edx
   14dce:	83 c0 01             	add    eax,0x1
   14dd1:	89 85 78 ff ff ff    	mov    DWORD PTR [rbp-0x88],eax
   14dd7:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   14ddd:	8b 85 70 ff ff ff    	mov    eax,DWORD PTR [rbp-0x90]
   14de3:	01 d0                	add    eax,edx
   14de5:	83 c0 01             	add    eax,0x1
   14de8:	89 85 64 ff ff ff    	mov    DWORD PTR [rbp-0x9c],eax
   14dee:	e9 16 01 00 00       	jmp    14f09 <f3_get_stem_contributions_d53+0x2d8>
   14df3:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   14df9:	48 98                	cdqe   
   14dfb:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   14e03:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   14e07:	48 01 d0             	add    rax,rdx
   14e0a:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
   14e10:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   14e16:	48 98                	cdqe   
   14e18:	48 c1 e0 02          	shl    rax,0x2
   14e1c:	48 8d 50 fc          	lea    rdx,[rax-0x4]
   14e20:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
   14e24:	48 01 d0             	add    rax,rdx
   14e27:	8b 00                	mov    eax,DWORD PTR [rax]
   14e29:	3d 80 96 98 00       	cmp    eax,0x989680
   14e2e:	0f 84 ce 00 00 00    	je     14f02 <f3_get_stem_contributions_d53+0x2d1>
   14e34:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   14e3a:	8d 48 01             	lea    ecx,[rax+0x1]
   14e3d:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   14e43:	8d 50 ff             	lea    edx,[rax-0x1]
   14e46:	48 8b bd 30 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xd0]
   14e4d:	8b b5 68 ff ff ff    	mov    esi,DWORD PTR [rbp-0x98]
   14e53:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   14e59:	4c 8b 95 38 ff ff ff 	mov    r10,QWORD PTR [rbp-0xc8]
   14e60:	49 89 f9             	mov    r9,rdi
   14e63:	41 b8 14 00 00 00    	mov    r8d,0x14
   14e69:	89 c7                	mov    edi,eax
   14e6b:	41 ff d2             	call   r10
   14e6e:	84 c0                	test   al,al
   14e70:	0f 84 8c 00 00 00    	je     14f02 <f3_get_stem_contributions_d53+0x2d1>
   14e76:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   14e7c:	8d 70 ff             	lea    esi,[rax-0x1]
   14e7f:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   14e85:	8d 48 01             	lea    ecx,[rax+0x1]
   14e88:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   14e8c:	48 89 c2             	mov    rdx,rax
   14e8f:	89 cf                	mov    edi,ecx
   14e91:	e8 dc 8c 01 00       	call   2db72 <vrna_get_ptype_window>
   14e96:	89 85 7c ff ff ff    	mov    DWORD PTR [rbp-0x84],eax
   14e9c:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   14ea2:	48 98                	cdqe   
   14ea4:	48 c1 e0 02          	shl    rax,0x2
   14ea8:	48 8d 50 fc          	lea    rdx,[rax-0x4]
   14eac:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
   14eb0:	48 01 d0             	add    rax,rdx
   14eb3:	8b 18                	mov    ebx,DWORD PTR [rax]
   14eb5:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   14ebb:	48 98                	cdqe   
   14ebd:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   14ec1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   14ec5:	48 01 d0             	add    rax,rdx
   14ec8:	0f b7 00             	movzx  eax,WORD PTR [rax]
   14ecb:	0f bf d0             	movsx  edx,ax
   14ece:	0f bf b5 5a ff ff ff 	movsx  esi,WORD PTR [rbp-0xa6]
   14ed5:	48 8b 4d 80          	mov    rcx,QWORD PTR [rbp-0x80]
   14ed9:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
   14edf:	89 c7                	mov    edi,eax
   14ee1:	e8 05 93 ff ff       	call   e1eb <vrna_E_ext_stem>
   14ee6:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   14eec:	48 63 d2             	movsxd rdx,edx
   14eef:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   14ef7:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
   14efb:	48 01 ca             	add    rdx,rcx
   14efe:	01 d8                	add    eax,ebx
   14f00:	89 02                	mov    DWORD PTR [rdx],eax
   14f02:	83 85 64 ff ff ff 01 	add    DWORD PTR [rbp-0x9c],0x1
   14f09:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   14f0f:	3b 85 78 ff ff ff    	cmp    eax,DWORD PTR [rbp-0x88]
   14f15:	0f 8e d8 fe ff ff    	jle    14df3 <f3_get_stem_contributions_d53+0x1c2>
   14f1b:	48 83 7d a0 00       	cmp    QWORD PTR [rbp-0x60],0x0
   14f20:	0f 84 b8 00 00 00    	je     14fde <f3_get_stem_contributions_d53+0x3ad>
   14f26:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   14f2c:	8b 85 70 ff ff ff    	mov    eax,DWORD PTR [rbp-0x90]
   14f32:	01 d0                	add    eax,edx
   14f34:	83 c0 01             	add    eax,0x1
   14f37:	89 85 64 ff ff ff    	mov    DWORD PTR [rbp-0x9c],eax
   14f3d:	e9 8a 00 00 00       	jmp    14fcc <f3_get_stem_contributions_d53+0x39b>
   14f42:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   14f48:	48 98                	cdqe   
   14f4a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   14f52:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   14f56:	48 01 d0             	add    rax,rdx
   14f59:	8b 00                	mov    eax,DWORD PTR [rax]
   14f5b:	3d 80 96 98 00       	cmp    eax,0x989680
   14f60:	74 63                	je     14fc5 <f3_get_stem_contributions_d53+0x394>
   14f62:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   14f68:	8d 78 01             	lea    edi,[rax+0x1]
   14f6b:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   14f71:	8d 70 ff             	lea    esi,[rax-0x1]
   14f74:	48 8b 95 28 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xd8]
   14f7b:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   14f81:	4c 8b 45 a0          	mov    r8,QWORD PTR [rbp-0x60]
   14f85:	48 89 d1             	mov    rcx,rdx
   14f88:	89 fa                	mov    edx,edi
   14f8a:	89 c7                	mov    edi,eax
   14f8c:	41 ff d0             	call   r8
   14f8f:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   14f95:	48 63 d2             	movsxd rdx,edx
   14f98:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   14fa0:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
   14fa4:	48 01 ca             	add    rdx,rcx
   14fa7:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   14fa9:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   14faf:	48 63 d2             	movsxd rdx,edx
   14fb2:	48 8d 34 95 00 00 00 00 	lea    rsi,[rdx*4+0x0]
   14fba:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
   14fbe:	48 01 f2             	add    rdx,rsi
   14fc1:	01 c8                	add    eax,ecx
   14fc3:	89 02                	mov    DWORD PTR [rdx],eax
   14fc5:	83 85 64 ff ff ff 01 	add    DWORD PTR [rbp-0x9c],0x1
   14fcc:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   14fd2:	3b 85 78 ff ff ff    	cmp    eax,DWORD PTR [rbp-0x88]
   14fd8:	0f 8e 64 ff ff ff    	jle    14f42 <f3_get_stem_contributions_d53+0x311>
   14fde:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   14fe4:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   14fea:	01 d0                	add    eax,edx
   14fec:	39 85 68 ff ff ff    	cmp    DWORD PTR [rbp-0x98],eax
   14ff2:	0f 8f 86 08 00 00    	jg     1587e <f3_get_stem_contributions_d53+0xc4d>
   14ff8:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   14ffe:	89 85 64 ff ff ff    	mov    DWORD PTR [rbp-0x9c],eax
   15004:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   1500a:	48 98                	cdqe   
   1500c:	48 c1 e0 02          	shl    rax,0x2
   15010:	48 8d 50 fc          	lea    rdx,[rax-0x4]
   15014:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
   15018:	48 01 d0             	add    rax,rdx
   1501b:	8b 00                	mov    eax,DWORD PTR [rax]
   1501d:	3d 80 96 98 00       	cmp    eax,0x989680
   15022:	0f 84 56 08 00 00    	je     1587e <f3_get_stem_contributions_d53+0xc4d>
   15028:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   1502e:	8d 48 ff             	lea    ecx,[rax-0x1]
   15031:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   15037:	8d 50 01             	lea    edx,[rax+0x1]
   1503a:	48 8b bd 30 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xd0]
   15041:	8b b5 68 ff ff ff    	mov    esi,DWORD PTR [rbp-0x98]
   15047:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   1504d:	4c 8b 95 38 ff ff ff 	mov    r10,QWORD PTR [rbp-0xc8]
   15054:	49 89 f9             	mov    r9,rdi
   15057:	41 b8 0e 00 00 00    	mov    r8d,0xe
   1505d:	89 c7                	mov    edi,eax
   1505f:	41 ff d2             	call   r10
   15062:	84 c0                	test   al,al
   15064:	0f 84 14 08 00 00    	je     1587e <f3_get_stem_contributions_d53+0xc4d>
   1506a:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   15070:	8d 70 ff             	lea    esi,[rax-0x1]
   15073:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   15079:	8d 48 01             	lea    ecx,[rax+0x1]
   1507c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   15080:	48 89 c2             	mov    rdx,rax
   15083:	89 cf                	mov    edi,ecx
   15085:	e8 e8 8a 01 00       	call   2db72 <vrna_get_ptype_window>
   1508a:	89 85 7c ff ff ff    	mov    DWORD PTR [rbp-0x84],eax
   15090:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   15096:	48 98                	cdqe   
   15098:	48 c1 e0 02          	shl    rax,0x2
   1509c:	48 8d 50 fc          	lea    rdx,[rax-0x4]
   150a0:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
   150a4:	48 01 d0             	add    rax,rdx
   150a7:	8b 18                	mov    ebx,DWORD PTR [rax]
   150a9:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   150af:	48 98                	cdqe   
   150b1:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   150b5:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   150b9:	48 01 d0             	add    rax,rdx
   150bc:	0f b7 00             	movzx  eax,WORD PTR [rax]
   150bf:	0f bf d0             	movsx  edx,ax
   150c2:	0f bf b5 5a ff ff ff 	movsx  esi,WORD PTR [rbp-0xa6]
   150c9:	48 8b 4d 80          	mov    rcx,QWORD PTR [rbp-0x80]
   150cd:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
   150d3:	89 c7                	mov    edi,eax
   150d5:	e8 11 91 ff ff       	call   e1eb <vrna_E_ext_stem>
   150da:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   150e0:	48 63 d2             	movsxd rdx,edx
   150e3:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   150eb:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
   150ef:	48 01 ca             	add    rdx,rcx
   150f2:	01 d8                	add    eax,ebx
   150f4:	89 02                	mov    DWORD PTR [rdx],eax
   150f6:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
   150fb:	0f 84 7d 07 00 00    	je     1587e <f3_get_stem_contributions_d53+0xc4d>
   15101:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   15107:	8d 78 ff             	lea    edi,[rax-0x1]
   1510a:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   15110:	8d 70 01             	lea    esi,[rax+0x1]
   15113:	48 8b 95 28 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xd8]
   1511a:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   15120:	4c 8b 45 a8          	mov    r8,QWORD PTR [rbp-0x58]
   15124:	48 89 d1             	mov    rcx,rdx
   15127:	89 fa                	mov    edx,edi
   15129:	89 c7                	mov    edi,eax
   1512b:	41 ff d0             	call   r8
   1512e:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   15134:	48 63 d2             	movsxd rdx,edx
   15137:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   1513f:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
   15143:	48 01 ca             	add    rdx,rcx
   15146:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   15148:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   1514e:	48 63 d2             	movsxd rdx,edx
   15151:	48 8d 34 95 00 00 00 00 	lea    rsi,[rdx*4+0x0]
   15159:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
   1515d:	48 01 f2             	add    rdx,rsi
   15160:	01 c8                	add    eax,ecx
   15162:	89 02                	mov    DWORD PTR [rdx],eax
   15164:	e9 15 07 00 00       	jmp    1587e <f3_get_stem_contributions_d53+0xc4d>
   15169:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   15170:	8b 80 b8 00 00 00    	mov    eax,DWORD PTR [rax+0xb8]
   15176:	89 85 74 ff ff ff    	mov    DWORD PTR [rbp-0x8c],eax
   1517c:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   15183:	48 8b 80 d0 00 00 00 	mov    rax,QWORD PTR [rax+0xd0]
   1518a:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
   1518e:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   15195:	48 8b 80 d8 00 00 00 	mov    rax,QWORD PTR [rax+0xd8]
   1519c:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
   151a0:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   151a7:	48 8b 80 e0 00 00 00 	mov    rax,QWORD PTR [rax+0xe0]
   151ae:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
   151b2:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   151b9:	48 8b 80 f0 00 00 00 	mov    rax,QWORD PTR [rax+0xf0]
   151c0:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
   151c4:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   151ca:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   151d0:	01 d0                	add    eax,edx
   151d2:	83 c0 01             	add    eax,0x1
   151d5:	39 85 68 ff ff ff    	cmp    DWORD PTR [rbp-0x98],eax
   151db:	7f 0b                	jg     151e8 <f3_get_stem_contributions_d53+0x5b7>
   151dd:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   151e3:	83 e8 01             	sub    eax,0x1
   151e6:	eb 11                	jmp    151f9 <f3_get_stem_contributions_d53+0x5c8>
   151e8:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   151ee:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   151f4:	01 d0                	add    eax,edx
   151f6:	83 c0 01             	add    eax,0x1
   151f9:	89 85 78 ff ff ff    	mov    DWORD PTR [rbp-0x88],eax
   151ff:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   15205:	01 c0                	add    eax,eax
   15207:	89 c7                	mov    edi,eax
   15209:	e8 b3 6c 01 00       	call   2bec1 <vrna_alloc>
   1520e:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
   15212:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   15218:	01 c0                	add    eax,eax
   1521a:	89 c7                	mov    edi,eax
   1521c:	e8 a0 6c 01 00       	call   2bec1 <vrna_alloc>
   15221:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
   15225:	c7 85 5c ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xa4],0x0
   1522f:	e9 c5 00 00 00       	jmp    152f9 <f3_get_stem_contributions_d53+0x6c8>
   15234:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   1523a:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   15242:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   15246:	48 01 d0             	add    rax,rdx
   15249:	48 8b 00             	mov    rax,QWORD PTR [rax]
   1524c:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   15252:	48 63 d2             	movsxd rdx,edx
   15255:	48 83 c2 01          	add    rdx,0x1
   15259:	48 c1 e2 02          	shl    rdx,0x2
   1525d:	48 01 d0             	add    rax,rdx
   15260:	8b 00                	mov    eax,DWORD PTR [rax]
   15262:	83 f8 01             	cmp    eax,0x1
   15265:	76 30                	jbe    15297 <f3_get_stem_contributions_d53+0x666>
   15267:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   1526d:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   15275:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
   15279:	48 01 d0             	add    rax,rdx
   1527c:	48 8b 00             	mov    rax,QWORD PTR [rax]
   1527f:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   15285:	48 63 d2             	movsxd rdx,edx
   15288:	48 83 c2 01          	add    rdx,0x1
   1528c:	48 01 d2             	add    rdx,rdx
   1528f:	48 01 d0             	add    rax,rdx
   15292:	0f b7 00             	movzx  eax,WORD PTR [rax]
   15295:	eb 05                	jmp    1529c <f3_get_stem_contributions_d53+0x66b>
   15297:	b8 ff ff ff ff       	mov    eax,0xffffffff
   1529c:	8b 95 5c ff ff ff    	mov    edx,DWORD PTR [rbp-0xa4]
   152a2:	48 8d 0c 12          	lea    rcx,[rdx+rdx*1]
   152a6:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
   152aa:	48 01 ca             	add    rdx,rcx
   152ad:	66 89 02             	mov    WORD PTR [rdx],ax
   152b0:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   152b6:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   152be:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
   152c2:	48 01 d0             	add    rax,rdx
   152c5:	48 8b 00             	mov    rax,QWORD PTR [rax]
   152c8:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   152ce:	48 63 d2             	movsxd rdx,edx
   152d1:	48 83 c2 01          	add    rdx,0x1
   152d5:	48 01 d2             	add    rdx,rdx
   152d8:	48 01 d0             	add    rax,rdx
   152db:	8b 95 5c ff ff ff    	mov    edx,DWORD PTR [rbp-0xa4]
   152e1:	48 8d 0c 12          	lea    rcx,[rdx+rdx*1]
   152e5:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
   152e9:	48 01 ca             	add    rdx,rcx
   152ec:	0f b7 00             	movzx  eax,WORD PTR [rax]
   152ef:	66 89 02             	mov    WORD PTR [rdx],ax
   152f2:	83 85 5c ff ff ff 01 	add    DWORD PTR [rbp-0xa4],0x1
   152f9:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   152ff:	3b 85 74 ff ff ff    	cmp    eax,DWORD PTR [rbp-0x8c]
   15305:	0f 82 29 ff ff ff    	jb     15234 <f3_get_stem_contributions_d53+0x603>
   1530b:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   15311:	8b 85 70 ff ff ff    	mov    eax,DWORD PTR [rbp-0x90]
   15317:	01 d0                	add    eax,edx
   15319:	83 c0 01             	add    eax,0x1
   1531c:	89 85 64 ff ff ff    	mov    DWORD PTR [rbp-0x9c],eax
   15322:	e9 16 02 00 00       	jmp    1553d <f3_get_stem_contributions_d53+0x90c>
   15327:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   1532d:	48 98                	cdqe   
   1532f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   15337:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   1533b:	48 01 d0             	add    rax,rdx
   1533e:	c7 00 80 96 98 00    	mov    DWORD PTR [rax],0x989680
   15344:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   1534a:	48 98                	cdqe   
   1534c:	48 c1 e0 02          	shl    rax,0x2
   15350:	48 8d 50 fc          	lea    rdx,[rax-0x4]
   15354:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
   15358:	48 01 d0             	add    rax,rdx
   1535b:	8b 00                	mov    eax,DWORD PTR [rax]
   1535d:	3d 80 96 98 00       	cmp    eax,0x989680
   15362:	0f 84 ce 01 00 00    	je     15536 <f3_get_stem_contributions_d53+0x905>
   15368:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   1536e:	8d 48 01             	lea    ecx,[rax+0x1]
   15371:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   15377:	8d 50 ff             	lea    edx,[rax-0x1]
   1537a:	48 8b bd 30 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xd0]
   15381:	8b b5 68 ff ff ff    	mov    esi,DWORD PTR [rbp-0x98]
   15387:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   1538d:	4c 8b 95 38 ff ff ff 	mov    r10,QWORD PTR [rbp-0xc8]
   15394:	49 89 f9             	mov    r9,rdi
   15397:	41 b8 14 00 00 00    	mov    r8d,0x14
   1539d:	89 c7                	mov    edi,eax
   1539f:	41 ff d2             	call   r10
   153a2:	84 c0                	test   al,al
   153a4:	0f 84 8c 01 00 00    	je     15536 <f3_get_stem_contributions_d53+0x905>
   153aa:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   153b0:	48 98                	cdqe   
   153b2:	48 c1 e0 02          	shl    rax,0x2
   153b6:	48 8d 50 fc          	lea    rdx,[rax-0x4]
   153ba:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
   153be:	48 01 d0             	add    rax,rdx
   153c1:	8b 00                	mov    eax,DWORD PTR [rax]
   153c3:	89 85 60 ff ff ff    	mov    DWORD PTR [rbp-0xa0],eax
   153c9:	c7 85 5c ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xa4],0x0
   153d3:	e9 2d 01 00 00       	jmp    15505 <f3_get_stem_contributions_d53+0x8d4>
   153d8:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   153de:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   153e6:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
   153ea:	48 01 d0             	add    rax,rdx
   153ed:	48 8b 00             	mov    rax,QWORD PTR [rax]
   153f0:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   153f6:	48 63 d2             	movsxd rdx,edx
   153f9:	48 01 d2             	add    rdx,rdx
   153fc:	48 83 ea 02          	sub    rdx,0x2
   15400:	48 01 d0             	add    rax,rdx
   15403:	0f b7 00             	movzx  eax,WORD PTR [rax]
   15406:	0f bf c8             	movsx  ecx,ax
   15409:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   1540f:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   15413:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   15417:	48 01 d0             	add    rax,rdx
   1541a:	0f b7 00             	movzx  eax,WORD PTR [rax]
   1541d:	98                   	cwde   
   1541e:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
   15422:	89 ce                	mov    esi,ecx
   15424:	89 c7                	mov    edi,eax
   15426:	e8 bd 86 01 00       	call   2dae8 <vrna_get_ptype_md>
   1542b:	89 85 7c ff ff ff    	mov    DWORD PTR [rbp-0x84],eax
   15431:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   15437:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   1543f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   15443:	48 01 d0             	add    rax,rdx
   15446:	48 8b 00             	mov    rax,QWORD PTR [rax]
   15449:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   1544f:	48 63 d2             	movsxd rdx,edx
   15452:	48 c1 e2 02          	shl    rdx,0x2
   15456:	48 83 ea 04          	sub    rdx,0x4
   1545a:	48 01 d0             	add    rax,rdx
   1545d:	8b 10                	mov    edx,DWORD PTR [rax]
   1545f:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   15465:	48 8d 0c c5 00 00 00 00 	lea    rcx,[rax*8+0x0]
   1546d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   15471:	48 01 c8             	add    rax,rcx
   15474:	48 8b 00             	mov    rax,QWORD PTR [rax]
   15477:	8b 8d 68 ff ff ff    	mov    ecx,DWORD PTR [rbp-0x98]
   1547d:	48 63 c9             	movsxd rcx,ecx
   15480:	48 c1 e1 02          	shl    rcx,0x2
   15484:	48 01 c8             	add    rax,rcx
   15487:	8b 00                	mov    eax,DWORD PTR [rax]
   15489:	39 c2                	cmp    edx,eax
   1548b:	73 30                	jae    154bd <f3_get_stem_contributions_d53+0x88c>
   1548d:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   15493:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   1549b:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   1549f:	48 01 d0             	add    rax,rdx
   154a2:	48 8b 00             	mov    rax,QWORD PTR [rax]
   154a5:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   154ab:	48 63 d2             	movsxd rdx,edx
   154ae:	48 01 d2             	add    rdx,rdx
   154b1:	48 83 ea 02          	sub    rdx,0x2
   154b5:	48 01 d0             	add    rax,rdx
   154b8:	0f b7 00             	movzx  eax,WORD PTR [rax]
   154bb:	eb 05                	jmp    154c2 <f3_get_stem_contributions_d53+0x891>
   154bd:	b8 ff ff ff ff       	mov    eax,0xffffffff
   154c2:	66 89 85 58 ff ff ff 	mov    WORD PTR [rbp-0xa8],ax
   154c9:	0f bf 95 58 ff ff ff 	movsx  edx,WORD PTR [rbp-0xa8]
   154d0:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   154d6:	48 8d 0c 00          	lea    rcx,[rax+rax*1]
   154da:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   154de:	48 01 c8             	add    rax,rcx
   154e1:	0f b7 00             	movzx  eax,WORD PTR [rax]
   154e4:	0f bf f0             	movsx  esi,ax
   154e7:	48 8b 4d 80          	mov    rcx,QWORD PTR [rbp-0x80]
   154eb:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
   154f1:	89 c7                	mov    edi,eax
   154f3:	e8 f3 8c ff ff       	call   e1eb <vrna_E_ext_stem>
   154f8:	01 85 60 ff ff ff    	add    DWORD PTR [rbp-0xa0],eax
   154fe:	83 85 5c ff ff ff 01 	add    DWORD PTR [rbp-0xa4],0x1
   15505:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   1550b:	3b 85 74 ff ff ff    	cmp    eax,DWORD PTR [rbp-0x8c]
   15511:	0f 82 c1 fe ff ff    	jb     153d8 <f3_get_stem_contributions_d53+0x7a7>
   15517:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   1551d:	48 98                	cdqe   
   1551f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   15527:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   1552b:	48 01 c2             	add    rdx,rax
   1552e:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa0]
   15534:	89 02                	mov    DWORD PTR [rdx],eax
   15536:	83 85 64 ff ff ff 01 	add    DWORD PTR [rbp-0x9c],0x1
   1553d:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   15543:	3b 85 78 ff ff ff    	cmp    eax,DWORD PTR [rbp-0x88]
   15549:	0f 8e d8 fd ff ff    	jle    15327 <f3_get_stem_contributions_d53+0x6f6>
   1554f:	48 83 7d a0 00       	cmp    QWORD PTR [rbp-0x60],0x0
   15554:	0f 84 b8 00 00 00    	je     15612 <f3_get_stem_contributions_d53+0x9e1>
   1555a:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   15560:	8b 85 70 ff ff ff    	mov    eax,DWORD PTR [rbp-0x90]
   15566:	01 d0                	add    eax,edx
   15568:	83 c0 01             	add    eax,0x1
   1556b:	89 85 64 ff ff ff    	mov    DWORD PTR [rbp-0x9c],eax
   15571:	e9 8a 00 00 00       	jmp    15600 <f3_get_stem_contributions_d53+0x9cf>
   15576:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   1557c:	48 98                	cdqe   
   1557e:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   15586:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   1558a:	48 01 d0             	add    rax,rdx
   1558d:	8b 00                	mov    eax,DWORD PTR [rax]
   1558f:	3d 80 96 98 00       	cmp    eax,0x989680
   15594:	74 63                	je     155f9 <f3_get_stem_contributions_d53+0x9c8>
   15596:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   1559c:	8d 78 01             	lea    edi,[rax+0x1]
   1559f:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   155a5:	8d 70 ff             	lea    esi,[rax-0x1]
   155a8:	48 8b 95 28 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xd8]
   155af:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   155b5:	4c 8b 45 a0          	mov    r8,QWORD PTR [rbp-0x60]
   155b9:	48 89 d1             	mov    rcx,rdx
   155bc:	89 fa                	mov    edx,edi
   155be:	89 c7                	mov    edi,eax
   155c0:	41 ff d0             	call   r8
   155c3:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   155c9:	48 63 d2             	movsxd rdx,edx
   155cc:	48 8d 0c 95 00 00 00 00 	lea    rcx,[rdx*4+0x0]
   155d4:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
   155d8:	48 01 ca             	add    rdx,rcx
   155db:	8b 0a                	mov    ecx,DWORD PTR [rdx]
   155dd:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   155e3:	48 63 d2             	movsxd rdx,edx
   155e6:	48 8d 34 95 00 00 00 00 	lea    rsi,[rdx*4+0x0]
   155ee:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
   155f2:	48 01 f2             	add    rdx,rsi
   155f5:	01 c8                	add    eax,ecx
   155f7:	89 02                	mov    DWORD PTR [rdx],eax
   155f9:	83 85 64 ff ff ff 01 	add    DWORD PTR [rbp-0x9c],0x1
   15600:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   15606:	3b 85 78 ff ff ff    	cmp    eax,DWORD PTR [rbp-0x88]
   1560c:	0f 8e 64 ff ff ff    	jle    15576 <f3_get_stem_contributions_d53+0x945>
   15612:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [rbp-0xbc]
   15618:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   1561e:	01 d0                	add    eax,edx
   15620:	39 85 68 ff ff ff    	cmp    DWORD PTR [rbp-0x98],eax
   15626:	0f 8f 38 02 00 00    	jg     15864 <f3_get_stem_contributions_d53+0xc33>
   1562c:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   15632:	89 85 64 ff ff ff    	mov    DWORD PTR [rbp-0x9c],eax
   15638:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   1563e:	48 98                	cdqe   
   15640:	48 c1 e0 02          	shl    rax,0x2
   15644:	48 8d 50 fc          	lea    rdx,[rax-0x4]
   15648:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
   1564c:	48 01 d0             	add    rax,rdx
   1564f:	8b 00                	mov    eax,DWORD PTR [rax]
   15651:	3d 80 96 98 00       	cmp    eax,0x989680
   15656:	0f 84 08 02 00 00    	je     15864 <f3_get_stem_contributions_d53+0xc33>
   1565c:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   15662:	8d 48 ff             	lea    ecx,[rax-0x1]
   15665:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   1566b:	8d 50 01             	lea    edx,[rax+0x1]
   1566e:	48 8b bd 30 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xd0]
   15675:	8b b5 68 ff ff ff    	mov    esi,DWORD PTR [rbp-0x98]
   1567b:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   15681:	4c 8b 95 38 ff ff ff 	mov    r10,QWORD PTR [rbp-0xc8]
   15688:	49 89 f9             	mov    r9,rdi
   1568b:	41 b8 0e 00 00 00    	mov    r8d,0xe
   15691:	89 c7                	mov    edi,eax
   15693:	41 ff d2             	call   r10
   15696:	84 c0                	test   al,al
   15698:	0f 84 c6 01 00 00    	je     15864 <f3_get_stem_contributions_d53+0xc33>
   1569e:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   156a4:	48 98                	cdqe   
   156a6:	48 c1 e0 02          	shl    rax,0x2
   156aa:	48 8d 50 fc          	lea    rdx,[rax-0x4]
   156ae:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
   156b2:	48 01 d0             	add    rax,rdx
   156b5:	8b 00                	mov    eax,DWORD PTR [rax]
   156b7:	89 85 60 ff ff ff    	mov    DWORD PTR [rbp-0xa0],eax
   156bd:	c7 85 5c ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xa4],0x0
   156c7:	e9 2d 01 00 00       	jmp    157f9 <f3_get_stem_contributions_d53+0xbc8>
   156cc:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   156d2:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   156da:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
   156de:	48 01 d0             	add    rax,rdx
   156e1:	48 8b 00             	mov    rax,QWORD PTR [rax]
   156e4:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   156ea:	48 63 d2             	movsxd rdx,edx
   156ed:	48 01 d2             	add    rdx,rdx
   156f0:	48 83 ea 02          	sub    rdx,0x2
   156f4:	48 01 d0             	add    rax,rdx
   156f7:	0f b7 00             	movzx  eax,WORD PTR [rax]
   156fa:	0f bf c8             	movsx  ecx,ax
   156fd:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   15703:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   15707:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   1570b:	48 01 d0             	add    rax,rdx
   1570e:	0f b7 00             	movzx  eax,WORD PTR [rax]
   15711:	98                   	cwde   
   15712:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
   15716:	89 ce                	mov    esi,ecx
   15718:	89 c7                	mov    edi,eax
   1571a:	e8 c9 83 01 00       	call   2dae8 <vrna_get_ptype_md>
   1571f:	89 85 7c ff ff ff    	mov    DWORD PTR [rbp-0x84],eax
   15725:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   1572b:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   15733:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   15737:	48 01 d0             	add    rax,rdx
   1573a:	48 8b 00             	mov    rax,QWORD PTR [rax]
   1573d:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   15743:	48 63 d2             	movsxd rdx,edx
   15746:	48 c1 e2 02          	shl    rdx,0x2
   1574a:	48 83 ea 04          	sub    rdx,0x4
   1574e:	48 01 d0             	add    rax,rdx
   15751:	8b 10                	mov    edx,DWORD PTR [rax]
   15753:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   15759:	48 8d 0c c5 00 00 00 00 	lea    rcx,[rax*8+0x0]
   15761:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   15765:	48 01 c8             	add    rax,rcx
   15768:	48 8b 00             	mov    rax,QWORD PTR [rax]
   1576b:	8b 8d 68 ff ff ff    	mov    ecx,DWORD PTR [rbp-0x98]
   15771:	48 63 c9             	movsxd rcx,ecx
   15774:	48 c1 e1 02          	shl    rcx,0x2
   15778:	48 01 c8             	add    rax,rcx
   1577b:	8b 00                	mov    eax,DWORD PTR [rax]
   1577d:	39 c2                	cmp    edx,eax
   1577f:	73 30                	jae    157b1 <f3_get_stem_contributions_d53+0xb80>
   15781:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   15787:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   1578f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   15793:	48 01 d0             	add    rax,rdx
   15796:	48 8b 00             	mov    rax,QWORD PTR [rax]
   15799:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
   1579f:	48 63 d2             	movsxd rdx,edx
   157a2:	48 01 d2             	add    rdx,rdx
   157a5:	48 83 ea 02          	sub    rdx,0x2
   157a9:	48 01 d0             	add    rax,rdx
   157ac:	0f b7 00             	movzx  eax,WORD PTR [rax]
   157af:	eb 05                	jmp    157b6 <f3_get_stem_contributions_d53+0xb85>
   157b1:	b8 ff ff ff ff       	mov    eax,0xffffffff
   157b6:	66 89 85 58 ff ff ff 	mov    WORD PTR [rbp-0xa8],ax
   157bd:	0f bf 95 58 ff ff ff 	movsx  edx,WORD PTR [rbp-0xa8]
   157c4:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   157ca:	48 8d 0c 00          	lea    rcx,[rax+rax*1]
   157ce:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   157d2:	48 01 c8             	add    rax,rcx
   157d5:	0f b7 00             	movzx  eax,WORD PTR [rax]
   157d8:	0f bf f0             	movsx  esi,ax
   157db:	48 8b 4d 80          	mov    rcx,QWORD PTR [rbp-0x80]
   157df:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
   157e5:	89 c7                	mov    edi,eax
   157e7:	e8 ff 89 ff ff       	call   e1eb <vrna_E_ext_stem>
   157ec:	01 85 60 ff ff ff    	add    DWORD PTR [rbp-0xa0],eax
   157f2:	83 85 5c ff ff ff 01 	add    DWORD PTR [rbp-0xa4],0x1
   157f9:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   157ff:	3b 85 74 ff ff ff    	cmp    eax,DWORD PTR [rbp-0x8c]
   15805:	0f 82 c1 fe ff ff    	jb     156cc <f3_get_stem_contributions_d53+0xa9b>
   1580b:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
   15810:	74 33                	je     15845 <f3_get_stem_contributions_d53+0xc14>
   15812:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   15818:	8d 78 ff             	lea    edi,[rax-0x1]
   1581b:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   15821:	8d 70 01             	lea    esi,[rax+0x1]
   15824:	48 8b 95 28 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xd8]
   1582b:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   15831:	4c 8b 45 a8          	mov    r8,QWORD PTR [rbp-0x58]
   15835:	48 89 d1             	mov    rcx,rdx
   15838:	89 fa                	mov    edx,edi
   1583a:	89 c7                	mov    edi,eax
   1583c:	41 ff d0             	call   r8
   1583f:	01 85 60 ff ff ff    	add    DWORD PTR [rbp-0xa0],eax
   15845:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   1584b:	48 98                	cdqe   
   1584d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   15855:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   15859:	48 01 c2             	add    rdx,rax
   1585c:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa0]
   15862:	89 02                	mov    DWORD PTR [rdx],eax
   15864:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   15868:	48 89 c7             	mov    rdi,rax
   1586b:	e8 40 e0 fe ff       	call   38b0 <free@plt>
   15870:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   15874:	48 89 c7             	mov    rdi,rax
   15877:	e8 34 e0 fe ff       	call   38b0 <free@plt>
   1587c:	eb 01                	jmp    1587f <f3_get_stem_contributions_d53+0xc4e>
   1587e:	90                   	nop
   1587f:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   15883:	48 81 c4 d8 00 00 00 	add    rsp,0xd8
   1588a:	5b                   	pop    rbx
   1588b:	5d                   	pop    rbp
   1588c:	c3                   	ret    

000000000001588d <add_f5_gquad>:
   1588d:	55                   	push   rbp
   1588e:	48 89 e5             	mov    rbp,rsp
   15891:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
   15895:	89 75 c4             	mov    DWORD PTR [rbp-0x3c],esi
   15898:	48 89 55 b8          	mov    QWORD PTR [rbp-0x48],rdx
   1589c:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
   158a0:	4c 89 45 a8          	mov    QWORD PTR [rbp-0x58],r8
   158a4:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   158a8:	48 8b 40 78          	mov    rax,QWORD PTR [rax+0x78]
   158ac:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
   158b0:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   158b4:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
   158b8:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
   158bc:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
   158c0:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   158c4:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
   158c8:	48 8b 40 40          	mov    rax,QWORD PTR [rax+0x40]
   158cc:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   158d0:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   158d4:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
   158d8:	8b 80 24 36 03 00    	mov    eax,DWORD PTR [rax+0x33624]
   158de:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
   158e1:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
   158e4:	48 98                	cdqe   
   158e6:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   158ee:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   158f2:	48 01 d0             	add    rax,rdx
   158f5:	8b 10                	mov    edx,DWORD PTR [rax]
   158f7:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
   158fa:	01 d0                	add    eax,edx
   158fc:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
   158ff:	83 e8 01             	sub    eax,0x1
   15902:	89 45 e0             	mov    DWORD PTR [rbp-0x20],eax
   15905:	c7 45 d8 80 96 98 00 	mov    DWORD PTR [rbp-0x28],0x989680
   1590c:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
   1590f:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
   15912:	83 e8 01             	sub    eax,0x1
   15915:	89 45 dc             	mov    DWORD PTR [rbp-0x24],eax
   15918:	eb 7a                	jmp    15994 <add_f5_gquad+0x107>
   1591a:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   1591d:	48 98                	cdqe   
   1591f:	48 c1 e0 02          	shl    rax,0x2
   15923:	48 8d 50 fc          	lea    rdx,[rax-0x4]
   15927:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   1592b:	48 01 d0             	add    rax,rdx
   1592e:	8b 00                	mov    eax,DWORD PTR [rax]
   15930:	3d 80 96 98 00       	cmp    eax,0x989680
   15935:	74 55                	je     1598c <add_f5_gquad+0xff>
   15937:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   1593a:	48 98                	cdqe   
   1593c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   15944:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   15948:	48 01 d0             	add    rax,rdx
   1594b:	8b 00                	mov    eax,DWORD PTR [rax]
   1594d:	3d 80 96 98 00       	cmp    eax,0x989680
   15952:	74 38                	je     1598c <add_f5_gquad+0xff>
   15954:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   15957:	48 98                	cdqe   
   15959:	48 c1 e0 02          	shl    rax,0x2
   1595d:	48 8d 50 fc          	lea    rdx,[rax-0x4]
   15961:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   15965:	48 01 d0             	add    rax,rdx
   15968:	8b 10                	mov    edx,DWORD PTR [rax]
   1596a:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   1596d:	48 98                	cdqe   
   1596f:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   15977:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   1597b:	48 01 c8             	add    rax,rcx
   1597e:	8b 00                	mov    eax,DWORD PTR [rax]
   15980:	01 d0                	add    eax,edx
   15982:	39 45 d8             	cmp    DWORD PTR [rbp-0x28],eax
   15985:	0f 4e 45 d8          	cmovle eax,DWORD PTR [rbp-0x28]
   15989:	89 45 d8             	mov    DWORD PTR [rbp-0x28],eax
   1598c:	83 6d dc 01          	sub    DWORD PTR [rbp-0x24],0x1
   15990:	83 6d e0 01          	sub    DWORD PTR [rbp-0x20],0x1
   15994:	83 7d dc 01          	cmp    DWORD PTR [rbp-0x24],0x1
   15998:	7f 80                	jg     1591a <add_f5_gquad+0x8d>
   1599a:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
   1599d:	48 98                	cdqe   
   1599f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   159a7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   159ab:	48 01 d0             	add    rax,rdx
   159ae:	8b 00                	mov    eax,DWORD PTR [rax]
   159b0:	83 c0 01             	add    eax,0x1
   159b3:	89 45 e0             	mov    DWORD PTR [rbp-0x20],eax
   159b6:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   159b9:	48 98                	cdqe   
   159bb:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   159c3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   159c7:	48 01 d0             	add    rax,rdx
   159ca:	8b 00                	mov    eax,DWORD PTR [rax]
   159cc:	39 45 d8             	cmp    DWORD PTR [rbp-0x28],eax
   159cf:	0f 4e 45 d8          	cmovle eax,DWORD PTR [rbp-0x28]
   159d3:	89 45 d8             	mov    DWORD PTR [rbp-0x28],eax
   159d6:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
   159d9:	5d                   	pop    rbp
   159da:	c3                   	ret    

00000000000159db <add_f3_gquad>:
   159db:	55                   	push   rbp
   159dc:	48 89 e5             	mov    rbp,rsp
   159df:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
   159e3:	89 75 c4             	mov    DWORD PTR [rbp-0x3c],esi
   159e6:	48 89 55 b8          	mov    QWORD PTR [rbp-0x48],rdx
   159ea:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
   159ee:	4c 89 45 a8          	mov    QWORD PTR [rbp-0x58],r8
   159f2:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   159f6:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
   159f9:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
   159fc:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   15a00:	8b 80 60 01 00 00    	mov    eax,DWORD PTR [rax+0x160]
   15a06:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
   15a09:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   15a0d:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
   15a11:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
   15a15:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
   15a19:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   15a1d:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
   15a21:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
   15a25:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
   15a28:	48 63 d2             	movsxd rdx,edx
   15a2b:	48 c1 e2 03          	shl    rdx,0x3
   15a2f:	48 01 d0             	add    rax,rdx
   15a32:	48 8b 00             	mov    rax,QWORD PTR [rax]
   15a35:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   15a39:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   15a3d:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
   15a41:	8b 80 24 36 03 00    	mov    eax,DWORD PTR [rax+0x33624]
   15a47:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
   15a4a:	c7 45 dc 80 96 98 00 	mov    DWORD PTR [rbp-0x24],0x989680
   15a51:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
   15a54:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   15a57:	01 d0                	add    eax,edx
   15a59:	83 c0 01             	add    eax,0x1
   15a5c:	89 45 e0             	mov    DWORD PTR [rbp-0x20],eax
   15a5f:	e9 84 00 00 00       	jmp    15ae8 <add_f3_gquad+0x10d>
   15a64:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   15a67:	48 98                	cdqe   
   15a69:	48 83 c0 01          	add    rax,0x1
   15a6d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   15a75:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   15a79:	48 01 d0             	add    rax,rdx
   15a7c:	8b 00                	mov    eax,DWORD PTR [rax]
   15a7e:	3d 80 96 98 00       	cmp    eax,0x989680
   15a83:	74 5f                	je     15ae4 <add_f3_gquad+0x109>
   15a85:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   15a88:	2b 45 c4             	sub    eax,DWORD PTR [rbp-0x3c]
   15a8b:	48 98                	cdqe   
   15a8d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   15a95:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   15a99:	48 01 d0             	add    rax,rdx
   15a9c:	8b 00                	mov    eax,DWORD PTR [rax]
   15a9e:	3d 80 96 98 00       	cmp    eax,0x989680
   15aa3:	74 3f                	je     15ae4 <add_f3_gquad+0x109>
   15aa5:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   15aa8:	48 98                	cdqe   
   15aaa:	48 83 c0 01          	add    rax,0x1
   15aae:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   15ab6:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   15aba:	48 01 d0             	add    rax,rdx
   15abd:	8b 10                	mov    edx,DWORD PTR [rax]
   15abf:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   15ac2:	2b 45 c4             	sub    eax,DWORD PTR [rbp-0x3c]
   15ac5:	48 98                	cdqe   
   15ac7:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   15acf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   15ad3:	48 01 c8             	add    rax,rcx
   15ad6:	8b 00                	mov    eax,DWORD PTR [rax]
   15ad8:	01 d0                	add    eax,edx
   15ada:	39 45 dc             	cmp    DWORD PTR [rbp-0x24],eax
   15add:	0f 4e 45 dc          	cmovle eax,DWORD PTR [rbp-0x24]
   15ae1:	89 45 dc             	mov    DWORD PTR [rbp-0x24],eax
   15ae4:	83 45 e0 01          	add    DWORD PTR [rbp-0x20],0x1
   15ae8:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   15aeb:	3b 45 e4             	cmp    eax,DWORD PTR [rbp-0x1c]
   15aee:	7d 11                	jge    15b01 <add_f3_gquad+0x126>
   15af0:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
   15af3:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   15af6:	01 d0                	add    eax,edx
   15af8:	39 45 e0             	cmp    DWORD PTR [rbp-0x20],eax
   15afb:	0f 8e 63 ff ff ff    	jle    15a64 <add_f3_gquad+0x89>
   15b01:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
   15b04:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   15b07:	01 d0                	add    eax,edx
   15b09:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
   15b0c:	7f 23                	jg     15b31 <add_f3_gquad+0x156>
   15b0e:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   15b11:	2b 45 c4             	sub    eax,DWORD PTR [rbp-0x3c]
   15b14:	48 98                	cdqe   
   15b16:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   15b1e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   15b22:	48 01 d0             	add    rax,rdx
   15b25:	8b 00                	mov    eax,DWORD PTR [rax]
   15b27:	39 45 dc             	cmp    DWORD PTR [rbp-0x24],eax
   15b2a:	0f 4e 45 dc          	cmovle eax,DWORD PTR [rbp-0x24]
   15b2e:	89 45 dc             	mov    DWORD PTR [rbp-0x24],eax
   15b31:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   15b34:	5d                   	pop    rbp
   15b35:	c3                   	ret    

0000000000015b36 <decompose_f5_ext_stem>:
   15b36:	55                   	push   rbp
   15b37:	48 89 e5             	mov    rbp,rsp
   15b3a:	48 83 ec 40          	sub    rsp,0x40
   15b3e:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
   15b42:	89 75 d4             	mov    DWORD PTR [rbp-0x2c],esi
   15b45:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
   15b49:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   15b4d:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
   15b51:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
   15b55:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   15b59:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   15b5d:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
   15b61:	8b 80 24 36 03 00    	mov    eax,DWORD PTR [rax+0x33624]
   15b67:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
   15b6a:	c7 45 f0 80 96 98 00 	mov    DWORD PTR [rbp-0x10],0x989680
   15b71:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   15b74:	2b 45 ec             	sub    eax,DWORD PTR [rbp-0x14]
   15b77:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
   15b7a:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   15b7d:	8d 50 fe             	lea    edx,[rax-0x2]
   15b80:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   15b84:	48 8d 48 08          	lea    rcx,[rax+0x8]
   15b88:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   15b8c:	48 83 c0 04          	add    rax,0x4
   15b90:	48 89 ce             	mov    rsi,rcx
   15b93:	48 89 c7             	mov    rdi,rax
   15b96:	e8 3c 54 01 00       	call   2afd7 <vrna_fun_zip_add_min>
   15b9b:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
   15b9e:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
   15ba1:	c9                   	leave  
   15ba2:	c3                   	ret    

0000000000015ba3 <decompose_f3_ext_stem>:
   15ba3:	55                   	push   rbp
   15ba4:	48 89 e5             	mov    rbp,rsp
   15ba7:	48 83 ec 40          	sub    rsp,0x40
   15bab:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
   15baf:	89 75 d4             	mov    DWORD PTR [rbp-0x2c],esi
   15bb2:	89 55 d0             	mov    DWORD PTR [rbp-0x30],edx
   15bb5:	48 89 4d c8          	mov    QWORD PTR [rbp-0x38],rcx
   15bb9:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   15bbd:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
   15bc1:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
   15bc5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   15bc9:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   15bcd:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
   15bd1:	8b 80 24 36 03 00    	mov    eax,DWORD PTR [rax+0x33624]
   15bd7:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
   15bda:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   15bdd:	2b 45 d4             	sub    eax,DWORD PTR [rbp-0x2c]
   15be0:	2b 45 ec             	sub    eax,DWORD PTR [rbp-0x14]
   15be3:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
   15be6:	c7 45 f4 80 96 98 00 	mov    DWORD PTR [rbp-0xc],0x989680
   15bed:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   15bf0:	48 63 d0             	movsxd rdx,eax
   15bf3:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   15bf6:	48 98                	cdqe   
   15bf8:	48 01 d0             	add    rax,rdx
   15bfb:	48 83 c0 02          	add    rax,0x2
   15bff:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   15c07:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   15c0b:	48 8d 34 02          	lea    rsi,[rdx+rax*1]
   15c0f:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   15c12:	48 63 d0             	movsxd rdx,eax
   15c15:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   15c18:	48 98                	cdqe   
   15c1a:	48 01 d0             	add    rax,rdx
   15c1d:	48 83 c0 01          	add    rax,0x1
   15c21:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   15c29:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   15c2d:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
   15c31:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
   15c34:	89 c2                	mov    edx,eax
   15c36:	48 89 cf             	mov    rdi,rcx
   15c39:	e8 99 53 01 00       	call   2afd7 <vrna_fun_zip_add_min>
   15c3e:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
   15c41:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   15c44:	c9                   	leave  
   15c45:	c3                   	ret    

0000000000015c46 <E_Stem>:
   15c46:	f3 0f 1e fa          	endbr64 
   15c4a:	55                   	push   rbp
   15c4b:	48 89 e5             	mov    rbp,rsp
   15c4e:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
   15c51:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
   15c54:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
   15c57:	89 4d e0             	mov    DWORD PTR [rbp-0x20],ecx
   15c5a:	4c 89 45 d8          	mov    QWORD PTR [rbp-0x28],r8
   15c5e:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
   15c65:	83 7d e8 00          	cmp    DWORD PTR [rbp-0x18],0x0
   15c69:	78 29                	js     15c94 <E_Stem+0x4e>
   15c6b:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
   15c6f:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   15c72:	48 63 f0             	movsxd rsi,eax
   15c75:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   15c78:	48 63 d0             	movsxd rdx,eax
   15c7b:	48 89 d0             	mov    rax,rdx
   15c7e:	48 c1 e0 02          	shl    rax,0x2
   15c82:	48 01 d0             	add    rax,rdx
   15c85:	48 01 f0             	add    rax,rsi
   15c88:	48 05 4c 05 00 00    	add    rax,0x54c
   15c8e:	8b 44 81 08          	mov    eax,DWORD PTR [rcx+rax*4+0x8]
   15c92:	eb 05                	jmp    15c99 <E_Stem+0x53>
   15c94:	b8 00 00 00 00       	mov    eax,0x0
   15c99:	89 45 f8             	mov    DWORD PTR [rbp-0x8],eax
   15c9c:	83 7d e4 00          	cmp    DWORD PTR [rbp-0x1c],0x0
   15ca0:	78 29                	js     15ccb <E_Stem+0x85>
   15ca2:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
   15ca6:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   15ca9:	48 63 f0             	movsxd rsi,eax
   15cac:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   15caf:	48 63 d0             	movsxd rdx,eax
   15cb2:	48 89 d0             	mov    rax,rdx
   15cb5:	48 c1 e0 02          	shl    rax,0x2
   15cb9:	48 01 d0             	add    rax,rdx
   15cbc:	48 01 f0             	add    rax,rsi
   15cbf:	48 05 74 05 00 00    	add    rax,0x574
   15cc5:	8b 44 81 08          	mov    eax,DWORD PTR [rcx+rax*4+0x8]
   15cc9:	eb 05                	jmp    15cd0 <E_Stem+0x8a>
   15ccb:	b8 00 00 00 00       	mov    eax,0x0
   15cd0:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
   15cd3:	83 7d ec 02          	cmp    DWORD PTR [rbp-0x14],0x2
   15cd7:	7e 0d                	jle    15ce6 <E_Stem+0xa0>
   15cd9:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   15cdd:	8b 80 d4 1d 03 00    	mov    eax,DWORD PTR [rax+0x31dd4]
   15ce3:	01 45 f4             	add    DWORD PTR [rbp-0xc],eax
   15ce6:	83 7d e8 00          	cmp    DWORD PTR [rbp-0x18],0x0
   15cea:	0f 88 a1 00 00 00    	js     15d91 <E_Stem+0x14b>
   15cf0:	83 7d e4 00          	cmp    DWORD PTR [rbp-0x1c],0x0
   15cf4:	0f 88 97 00 00 00    	js     15d91 <E_Stem+0x14b>
   15cfa:	83 7d e0 00          	cmp    DWORD PTR [rbp-0x20],0x0
   15cfe:	74 47                	je     15d47 <E_Stem+0x101>
   15d00:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
   15d04:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   15d07:	48 63 f8             	movsxd rdi,eax
   15d0a:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   15d0d:	48 63 d0             	movsxd rdx,eax
   15d10:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   15d13:	48 63 c8             	movsxd rcx,eax
   15d16:	48 89 d0             	mov    rax,rdx
   15d19:	48 c1 e0 02          	shl    rax,0x2
   15d1d:	48 01 d0             	add    rax,rdx
   15d20:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   15d28:	48 01 d0             	add    rax,rdx
   15d2b:	48 89 ca             	mov    rdx,rcx
   15d2e:	48 c1 e2 02          	shl    rdx,0x2
   15d32:	48 01 ca             	add    rdx,rcx
   15d35:	48 01 d0             	add    rax,rdx
   15d38:	48 01 f8             	add    rax,rdi
   15d3b:	48 05 9c 00 00 00    	add    rax,0x9c
   15d41:	8b 44 86 08          	mov    eax,DWORD PTR [rsi+rax*4+0x8]
   15d45:	eb 45                	jmp    15d8c <E_Stem+0x146>
   15d47:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
   15d4b:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   15d4e:	48 63 f8             	movsxd rdi,eax
   15d51:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   15d54:	48 63 d0             	movsxd rdx,eax
   15d57:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   15d5a:	48 63 c8             	movsxd rcx,eax
   15d5d:	48 89 d0             	mov    rax,rdx
   15d60:	48 c1 e0 02          	shl    rax,0x2
   15d64:	48 01 d0             	add    rax,rdx
   15d67:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   15d6f:	48 01 d0             	add    rax,rdx
   15d72:	48 89 ca             	mov    rdx,rcx
   15d75:	48 c1 e2 02          	shl    rdx,0x2
   15d79:	48 01 ca             	add    rdx,rcx
   15d7c:	48 01 d0             	add    rax,rdx
   15d7f:	48 01 f8             	add    rax,rdi
   15d82:	48 05 84 04 00 00    	add    rax,0x484
   15d88:	8b 44 86 08          	mov    eax,DWORD PTR [rsi+rax*4+0x8]
   15d8c:	01 45 f4             	add    DWORD PTR [rbp-0xc],eax
   15d8f:	eb 0b                	jmp    15d9c <E_Stem+0x156>
   15d91:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
   15d94:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   15d97:	01 d0                	add    eax,edx
   15d99:	01 45 f4             	add    DWORD PTR [rbp-0xc],eax
   15d9c:	83 7d e0 00          	cmp    DWORD PTR [rbp-0x20],0x0
   15da0:	75 18                	jne    15dba <E_Stem+0x174>
   15da2:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   15da6:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
   15da9:	48 63 d2             	movsxd rdx,edx
   15dac:	48 81 c2 64 c7 00 00 	add    rdx,0xc764
   15db3:	8b 44 90 0c          	mov    eax,DWORD PTR [rax+rdx*4+0xc]
   15db7:	01 45 f4             	add    DWORD PTR [rbp-0xc],eax
   15dba:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   15dbd:	5d                   	pop    rbp
   15dbe:	c3                   	ret    

0000000000015dbf <E_ExtLoop>:
   15dbf:	f3 0f 1e fa          	endbr64 
   15dc3:	55                   	push   rbp
   15dc4:	48 89 e5             	mov    rbp,rsp
   15dc7:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
   15dca:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
   15dcd:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
   15dd0:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
   15dd4:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
   15ddb:	83 7d e8 00          	cmp    DWORD PTR [rbp-0x18],0x0
   15ddf:	78 50                	js     15e31 <E_ExtLoop+0x72>
   15de1:	83 7d e4 00          	cmp    DWORD PTR [rbp-0x1c],0x0
   15de5:	78 4a                	js     15e31 <E_ExtLoop+0x72>
   15de7:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
   15deb:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   15dee:	48 63 f8             	movsxd rdi,eax
   15df1:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   15df4:	48 63 d0             	movsxd rdx,eax
   15df7:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   15dfa:	48 63 c8             	movsxd rcx,eax
   15dfd:	48 89 d0             	mov    rax,rdx
   15e00:	48 c1 e0 02          	shl    rax,0x2
   15e04:	48 01 d0             	add    rax,rdx
   15e07:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   15e0f:	48 01 d0             	add    rax,rdx
   15e12:	48 89 ca             	mov    rdx,rcx
   15e15:	48 c1 e2 02          	shl    rdx,0x2
   15e19:	48 01 ca             	add    rdx,rcx
   15e1c:	48 01 d0             	add    rax,rdx
   15e1f:	48 01 f8             	add    rax,rdi
   15e22:	48 05 9c 00 00 00    	add    rax,0x9c
   15e28:	8b 44 86 08          	mov    eax,DWORD PTR [rsi+rax*4+0x8]
   15e2c:	01 45 fc             	add    DWORD PTR [rbp-0x4],eax
   15e2f:	eb 62                	jmp    15e93 <E_ExtLoop+0xd4>
   15e31:	83 7d e8 00          	cmp    DWORD PTR [rbp-0x18],0x0
   15e35:	78 2c                	js     15e63 <E_ExtLoop+0xa4>
   15e37:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
   15e3b:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   15e3e:	48 63 f0             	movsxd rsi,eax
   15e41:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   15e44:	48 63 d0             	movsxd rdx,eax
   15e47:	48 89 d0             	mov    rax,rdx
   15e4a:	48 c1 e0 02          	shl    rax,0x2
   15e4e:	48 01 d0             	add    rax,rdx
   15e51:	48 01 f0             	add    rax,rsi
   15e54:	48 05 4c 05 00 00    	add    rax,0x54c
   15e5a:	8b 44 81 08          	mov    eax,DWORD PTR [rcx+rax*4+0x8]
   15e5e:	01 45 fc             	add    DWORD PTR [rbp-0x4],eax
   15e61:	eb 30                	jmp    15e93 <E_ExtLoop+0xd4>
   15e63:	83 7d e4 00          	cmp    DWORD PTR [rbp-0x1c],0x0
   15e67:	78 2a                	js     15e93 <E_ExtLoop+0xd4>
   15e69:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
   15e6d:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   15e70:	48 63 f0             	movsxd rsi,eax
   15e73:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   15e76:	48 63 d0             	movsxd rdx,eax
   15e79:	48 89 d0             	mov    rax,rdx
   15e7c:	48 c1 e0 02          	shl    rax,0x2
   15e80:	48 01 d0             	add    rax,rdx
   15e83:	48 01 f0             	add    rax,rsi
   15e86:	48 05 74 05 00 00    	add    rax,0x574
   15e8c:	8b 44 81 08          	mov    eax,DWORD PTR [rcx+rax*4+0x8]
   15e90:	01 45 fc             	add    DWORD PTR [rbp-0x4],eax
   15e93:	83 7d ec 02          	cmp    DWORD PTR [rbp-0x14],0x2
   15e97:	7e 0d                	jle    15ea6 <E_ExtLoop+0xe7>
   15e99:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   15e9d:	8b 80 d4 1d 03 00    	mov    eax,DWORD PTR [rax+0x31dd4]
   15ea3:	01 45 fc             	add    DWORD PTR [rbp-0x4],eax
   15ea6:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   15ea9:	5d                   	pop    rbp
   15eaa:	c3                   	ret    

0000000000015eab <vrna_params>:
   15eab:	f3 0f 1e fa          	endbr64 
   15eaf:	55                   	push   rbp
   15eb0:	48 89 e5             	mov    rbp,rsp
   15eb3:	48 81 ec 00 08 00 00 	sub    rsp,0x800
   15eba:	48 89 bd 08 f8 ff ff 	mov    QWORD PTR [rbp-0x7f8],rdi
   15ec1:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   15eca:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   15ece:	31 c0                	xor    eax,eax
   15ed0:	48 83 bd 08 f8 ff ff 00 	cmp    QWORD PTR [rbp-0x7f8],0x0
   15ed8:	74 11                	je     15eeb <vrna_params+0x40>
   15eda:	48 8b 85 08 f8 ff ff 	mov    rax,QWORD PTR [rbp-0x7f8]
   15ee1:	48 89 c7             	mov    rdi,rax
   15ee4:	e8 9f 07 00 00       	call   16688 <get_scaled_params>
   15ee9:	eb 1e                	jmp    15f09 <vrna_params+0x5e>
   15eeb:	48 8d 85 10 f8 ff ff 	lea    rax,[rbp-0x7f0]
   15ef2:	48 89 c7             	mov    rdi,rax
   15ef5:	e8 bc 80 01 00       	call   2dfb6 <vrna_md_set_default>
   15efa:	48 8d 85 10 f8 ff ff 	lea    rax,[rbp-0x7f0]
   15f01:	48 89 c7             	mov    rdi,rax
   15f04:	e8 7f 07 00 00       	call   16688 <get_scaled_params>
   15f09:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   15f0d:	64 48 33 14 25 28 00 00 00 	xor    rdx,QWORD PTR fs:0x28
   15f16:	74 05                	je     15f1d <vrna_params+0x72>
   15f18:	e8 43 d9 fe ff       	call   3860 <__stack_chk_fail@plt>
   15f1d:	c9                   	leave  
   15f1e:	c3                   	ret    

0000000000015f1f <vrna_exp_params>:
   15f1f:	f3 0f 1e fa          	endbr64 
   15f23:	55                   	push   rbp
   15f24:	48 89 e5             	mov    rbp,rsp
   15f27:	48 81 ec 00 08 00 00 	sub    rsp,0x800
   15f2e:	48 89 bd 08 f8 ff ff 	mov    QWORD PTR [rbp-0x7f8],rdi
   15f35:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   15f3e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   15f42:	31 c0                	xor    eax,eax
   15f44:	48 83 bd 08 f8 ff ff 00 	cmp    QWORD PTR [rbp-0x7f8],0x0
   15f4c:	74 1d                	je     15f6b <vrna_exp_params+0x4c>
   15f4e:	48 8b 15 ab c0 01 00 	mov    rdx,QWORD PTR [rip+0x1c0ab]        # 32000 <Law_and_Order+0x5c0>
   15f55:	48 8b 85 08 f8 ff ff 	mov    rax,QWORD PTR [rbp-0x7f8]
   15f5c:	66 48 0f 6e c2       	movq   xmm0,rdx
   15f61:	48 89 c7             	mov    rdi,rax
   15f64:	e8 0c 21 00 00       	call   18075 <get_scaled_exp_params>
   15f69:	eb 2a                	jmp    15f95 <vrna_exp_params+0x76>
   15f6b:	48 8d 85 10 f8 ff ff 	lea    rax,[rbp-0x7f0]
   15f72:	48 89 c7             	mov    rdi,rax
   15f75:	e8 3c 80 01 00       	call   2dfb6 <vrna_md_set_default>
   15f7a:	48 8b 15 7f c0 01 00 	mov    rdx,QWORD PTR [rip+0x1c07f]        # 32000 <Law_and_Order+0x5c0>
   15f81:	48 8d 85 10 f8 ff ff 	lea    rax,[rbp-0x7f0]
   15f88:	66 48 0f 6e c2       	movq   xmm0,rdx
   15f8d:	48 89 c7             	mov    rdi,rax
   15f90:	e8 e0 20 00 00       	call   18075 <get_scaled_exp_params>
   15f95:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
   15f99:	64 48 33 0c 25 28 00 00 00 	xor    rcx,QWORD PTR fs:0x28
   15fa2:	74 05                	je     15fa9 <vrna_exp_params+0x8a>
   15fa4:	e8 b7 d8 fe ff       	call   3860 <__stack_chk_fail@plt>
   15fa9:	c9                   	leave  
   15faa:	c3                   	ret    

0000000000015fab <vrna_exp_params_comparative>:
   15fab:	f3 0f 1e fa          	endbr64 
   15faf:	55                   	push   rbp
   15fb0:	48 89 e5             	mov    rbp,rsp
   15fb3:	48 81 ec 00 08 00 00 	sub    rsp,0x800
   15fba:	89 bd 0c f8 ff ff    	mov    DWORD PTR [rbp-0x7f4],edi
   15fc0:	48 89 b5 00 f8 ff ff 	mov    QWORD PTR [rbp-0x800],rsi
   15fc7:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   15fd0:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   15fd4:	31 c0                	xor    eax,eax
   15fd6:	48 83 bd 00 f8 ff ff 00 	cmp    QWORD PTR [rbp-0x800],0x0
   15fde:	74 25                	je     16005 <vrna_exp_params_comparative+0x5a>
   15fe0:	48 8b 0d 19 c0 01 00 	mov    rcx,QWORD PTR [rip+0x1c019]        # 32000 <Law_and_Order+0x5c0>
   15fe7:	8b 95 0c f8 ff ff    	mov    edx,DWORD PTR [rbp-0x7f4]
   15fed:	48 8b 85 00 f8 ff ff 	mov    rax,QWORD PTR [rbp-0x800]
   15ff4:	66 48 0f 6e c1       	movq   xmm0,rcx
   15ff9:	89 d6                	mov    esi,edx
   15ffb:	48 89 c7             	mov    rdi,rax
   15ffe:	e8 9e 78 00 00       	call   1d8a1 <get_exp_params_ali>
   16003:	eb 32                	jmp    16037 <vrna_exp_params_comparative+0x8c>
   16005:	48 8d 85 10 f8 ff ff 	lea    rax,[rbp-0x7f0]
   1600c:	48 89 c7             	mov    rdi,rax
   1600f:	e8 a2 7f 01 00       	call   2dfb6 <vrna_md_set_default>
   16014:	48 8b 0d e5 bf 01 00 	mov    rcx,QWORD PTR [rip+0x1bfe5]        # 32000 <Law_and_Order+0x5c0>
   1601b:	8b 95 0c f8 ff ff    	mov    edx,DWORD PTR [rbp-0x7f4]
   16021:	48 8d 85 10 f8 ff ff 	lea    rax,[rbp-0x7f0]
   16028:	66 48 0f 6e c1       	movq   xmm0,rcx
   1602d:	89 d6                	mov    esi,edx
   1602f:	48 89 c7             	mov    rdi,rax
   16032:	e8 6a 78 00 00       	call   1d8a1 <get_exp_params_ali>
   16037:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
   1603b:	64 48 33 34 25 28 00 00 00 	xor    rsi,QWORD PTR fs:0x28
   16044:	74 05                	je     1604b <vrna_exp_params_comparative+0xa0>
   16046:	e8 15 d8 fe ff       	call   3860 <__stack_chk_fail@plt>
   1604b:	c9                   	leave  
   1604c:	c3                   	ret    

000000000001604d <vrna_params_copy>:
   1604d:	f3 0f 1e fa          	endbr64 
   16051:	55                   	push   rbp
   16052:	48 89 e5             	mov    rbp,rsp
   16055:	48 83 ec 20          	sub    rsp,0x20
   16059:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   1605d:	48 c7 45 f8 00 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
   16065:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
   1606a:	74 26                	je     16092 <vrna_params_copy+0x45>
   1606c:	bf 80 3e 03 00       	mov    edi,0x33e80
   16071:	e8 4b 5e 01 00       	call   2bec1 <vrna_alloc>
   16076:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   1607a:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
   1607e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   16082:	ba 80 3e 03 00       	mov    edx,0x33e80
   16087:	48 89 ce             	mov    rsi,rcx
   1608a:	48 89 c7             	mov    rdi,rax
   1608d:	e8 0e d7 fe ff       	call   37a0 <memcpy@plt>
   16092:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   16096:	c9                   	leave  
   16097:	c3                   	ret    

0000000000016098 <vrna_exp_params_copy>:
   16098:	f3 0f 1e fa          	endbr64 
   1609c:	55                   	push   rbp
   1609d:	48 89 e5             	mov    rbp,rsp
   160a0:	48 83 ec 20          	sub    rsp,0x20
   160a4:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   160a8:	48 c7 45 f8 00 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
   160b0:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
   160b5:	74 26                	je     160dd <vrna_exp_params_copy+0x45>
   160b7:	bf 60 67 06 00       	mov    edi,0x66760
   160bc:	e8 00 5e 01 00       	call   2bec1 <vrna_alloc>
   160c1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   160c5:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
   160c9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   160cd:	ba 60 67 06 00       	mov    edx,0x66760
   160d2:	48 89 ce             	mov    rsi,rcx
   160d5:	48 89 c7             	mov    rdi,rax
   160d8:	e8 c3 d6 fe ff       	call   37a0 <memcpy@plt>
   160dd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   160e1:	c9                   	leave  
   160e2:	c3                   	ret    

00000000000160e3 <vrna_params_subst>:
   160e3:	f3 0f 1e fa          	endbr64 
   160e7:	55                   	push   rbp
   160e8:	48 89 e5             	mov    rbp,rsp
   160eb:	48 83 ec 10          	sub    rsp,0x10
   160ef:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   160f3:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
   160f7:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
   160fc:	74 59                	je     16157 <vrna_params_subst+0x74>
   160fe:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   16102:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
   16106:	48 85 c0             	test   rax,rax
   16109:	74 10                	je     1611b <vrna_params_subst+0x38>
   1610b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   1610f:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
   16113:	48 89 c7             	mov    rdi,rax
   16116:	e8 95 d7 fe ff       	call   38b0 <free@plt>
   1611b:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
   16120:	74 16                	je     16138 <vrna_params_subst+0x55>
   16122:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   16126:	48 89 c7             	mov    rdi,rax
   16129:	e8 1f ff ff ff       	call   1604d <vrna_params_copy>
   1612e:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   16132:	48 89 42 60          	mov    QWORD PTR [rdx+0x60],rax
   16136:	eb 23                	jmp    1615b <vrna_params_subst+0x78>
   16138:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   1613c:	8b 00                	mov    eax,DWORD PTR [rax]
   1613e:	83 f8 01             	cmp    eax,0x1
   16141:	77 17                	ja     1615a <vrna_params_subst+0x77>
   16143:	bf 00 00 00 00       	mov    edi,0x0
   16148:	e8 5e fd ff ff       	call   15eab <vrna_params>
   1614d:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   16151:	48 89 42 60          	mov    QWORD PTR [rdx+0x60],rax
   16155:	eb 04                	jmp    1615b <vrna_params_subst+0x78>
   16157:	90                   	nop
   16158:	eb 01                	jmp    1615b <vrna_params_subst+0x78>
   1615a:	90                   	nop
   1615b:	90                   	nop
   1615c:	c9                   	leave  
   1615d:	c3                   	ret    

000000000001615e <vrna_params_reset>:
   1615e:	f3 0f 1e fa          	endbr64 
   16162:	55                   	push   rbp
   16163:	48 89 e5             	mov    rbp,rsp
   16166:	48 83 ec 10          	sub    rsp,0x10
   1616a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   1616e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
   16172:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
   16177:	74 6f                	je     161e8 <vrna_params_reset+0x8a>
   16179:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   1617d:	8b 00                	mov    eax,DWORD PTR [rax]
   1617f:	83 f8 01             	cmp    eax,0x1
   16182:	77 67                	ja     161eb <vrna_params_reset+0x8d>
   16184:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   16188:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
   1618c:	48 85 c0             	test   rax,rax
   1618f:	74 10                	je     161a1 <vrna_params_reset+0x43>
   16191:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   16195:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
   16199:	48 89 c7             	mov    rdi,rax
   1619c:	e8 0f d7 fe ff       	call   38b0 <free@plt>
   161a1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   161a5:	48 89 c7             	mov    rdi,rax
   161a8:	e8 fe fc ff ff       	call   15eab <vrna_params>
   161ad:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   161b1:	48 89 42 60          	mov    QWORD PTR [rdx+0x60],rax
   161b5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   161b9:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
   161bd:	48 85 c0             	test   rax,rax
   161c0:	74 2c                	je     161ee <vrna_params_reset+0x90>
   161c2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   161c6:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
   161ca:	48 89 c7             	mov    rdi,rax
   161cd:	e8 de d6 fe ff       	call   38b0 <free@plt>
   161d2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   161d6:	48 89 c7             	mov    rdi,rax
   161d9:	e8 41 fd ff ff       	call   15f1f <vrna_exp_params>
   161de:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   161e2:	48 89 42 68          	mov    QWORD PTR [rdx+0x68],rax
   161e6:	eb 06                	jmp    161ee <vrna_params_reset+0x90>
   161e8:	90                   	nop
   161e9:	eb 04                	jmp    161ef <vrna_params_reset+0x91>
   161eb:	90                   	nop
   161ec:	eb 01                	jmp    161ef <vrna_params_reset+0x91>
   161ee:	90                   	nop
   161ef:	90                   	nop
   161f0:	c9                   	leave  
   161f1:	c3                   	ret    

00000000000161f2 <vrna_exp_params_reset>:
   161f2:	f3 0f 1e fa          	endbr64 
   161f6:	55                   	push   rbp
   161f7:	48 89 e5             	mov    rbp,rsp
   161fa:	48 83 ec 10          	sub    rsp,0x10
   161fe:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   16202:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
   16206:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
   1620b:	74 3e                	je     1624b <vrna_exp_params_reset+0x59>
   1620d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   16211:	8b 00                	mov    eax,DWORD PTR [rax]
   16213:	83 f8 01             	cmp    eax,0x1
   16216:	77 36                	ja     1624e <vrna_exp_params_reset+0x5c>
   16218:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   1621c:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
   16220:	48 85 c0             	test   rax,rax
   16223:	74 10                	je     16235 <vrna_exp_params_reset+0x43>
   16225:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   16229:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
   1622d:	48 89 c7             	mov    rdi,rax
   16230:	e8 7b d6 fe ff       	call   38b0 <free@plt>
   16235:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   16239:	48 89 c7             	mov    rdi,rax
   1623c:	e8 de fc ff ff       	call   15f1f <vrna_exp_params>
   16241:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   16245:	48 89 42 68          	mov    QWORD PTR [rdx+0x68],rax
   16249:	eb 04                	jmp    1624f <vrna_exp_params_reset+0x5d>
   1624b:	90                   	nop
   1624c:	eb 01                	jmp    1624f <vrna_exp_params_reset+0x5d>
   1624e:	90                   	nop
   1624f:	90                   	nop
   16250:	c9                   	leave  
   16251:	c3                   	ret    

0000000000016252 <vrna_exp_params_subst>:
   16252:	f3 0f 1e fa          	endbr64 
   16256:	55                   	push   rbp
   16257:	48 89 e5             	mov    rbp,rsp
   1625a:	48 83 ec 10          	sub    rsp,0x10
   1625e:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   16262:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
   16266:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
   1626b:	0f 84 af 00 00 00    	je     16320 <vrna_exp_params_subst+0xce>
   16271:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   16275:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
   16279:	48 85 c0             	test   rax,rax
   1627c:	74 10                	je     1628e <vrna_exp_params_subst+0x3c>
   1627e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   16282:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
   16286:	48 89 c7             	mov    rdi,rax
   16289:	e8 22 d6 fe ff       	call   38b0 <free@plt>
   1628e:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
   16293:	74 16                	je     162ab <vrna_exp_params_subst+0x59>
   16295:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   16299:	48 89 c7             	mov    rdi,rax
   1629c:	e8 f7 fd ff ff       	call   16098 <vrna_exp_params_copy>
   162a1:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   162a5:	48 89 42 68          	mov    QWORD PTR [rdx+0x68],rax
   162a9:	eb 64                	jmp    1630f <vrna_exp_params_subst+0xbd>
   162ab:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   162af:	8b 00                	mov    eax,DWORD PTR [rax]
   162b1:	85 c0                	test   eax,eax
   162b3:	74 07                	je     162bc <vrna_exp_params_subst+0x6a>
   162b5:	83 f8 01             	cmp    eax,0x1
   162b8:	74 34                	je     162ee <vrna_exp_params_subst+0x9c>
   162ba:	eb 53                	jmp    1630f <vrna_exp_params_subst+0xbd>
   162bc:	bf 00 00 00 00       	mov    edi,0x0
   162c1:	e8 59 fc ff ff       	call   15f1f <vrna_exp_params>
   162c6:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   162ca:	48 89 42 68          	mov    QWORD PTR [rdx+0x68],rax
   162ce:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   162d2:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
   162d5:	83 f8 01             	cmp    eax,0x1
   162d8:	76 34                	jbe    1630e <vrna_exp_params_subst+0xbc>
   162da:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   162de:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
   162e2:	c7 80 04 5f 06 00 00 00 00 00 	mov    DWORD PTR [rax+0x65f04],0x0
   162ec:	eb 20                	jmp    1630e <vrna_exp_params_subst+0xbc>
   162ee:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   162f2:	8b 80 b8 00 00 00    	mov    eax,DWORD PTR [rax+0xb8]
   162f8:	be 00 00 00 00       	mov    esi,0x0
   162fd:	89 c7                	mov    edi,eax
   162ff:	e8 a7 fc ff ff       	call   15fab <vrna_exp_params_comparative>
   16304:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   16308:	48 89 42 68          	mov    QWORD PTR [rdx+0x68],rax
   1630c:	eb 01                	jmp    1630f <vrna_exp_params_subst+0xbd>
   1630e:	90                   	nop
   1630f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   16313:	be 00 00 00 00       	mov    esi,0x0
   16318:	48 89 c7             	mov    rdi,rax
   1631b:	e8 03 00 00 00       	call   16323 <vrna_exp_params_rescale>
   16320:	90                   	nop
   16321:	c9                   	leave  
   16322:	c3                   	ret    

0000000000016323 <vrna_exp_params_rescale>:
   16323:	f3 0f 1e fa          	endbr64 
   16327:	55                   	push   rbp
   16328:	48 89 e5             	mov    rbp,rsp
   1632b:	48 83 ec 30          	sub    rsp,0x30
   1632f:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
   16333:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
   16337:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
   1633c:	0f 84 6d 02 00 00    	je     165af <vrna_exp_params_rescale+0x28c>
   16342:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   16346:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
   1634a:	48 85 c0             	test   rax,rax
   1634d:	75 64                	jne    163b3 <vrna_exp_params_rescale+0x90>
   1634f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   16353:	8b 00                	mov    eax,DWORD PTR [rax]
   16355:	85 c0                	test   eax,eax
   16357:	74 0a                	je     16363 <vrna_exp_params_rescale+0x40>
   16359:	83 f8 01             	cmp    eax,0x1
   1635c:	74 28                	je     16386 <vrna_exp_params_rescale+0x63>
   1635e:	e9 a9 00 00 00       	jmp    1640c <vrna_exp_params_rescale+0xe9>
   16363:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   16367:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
   1636b:	48 05 98 35 03 00    	add    rax,0x33598
   16371:	48 89 c7             	mov    rdi,rax
   16374:	e8 a6 fb ff ff       	call   15f1f <vrna_exp_params>
   16379:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
   1637d:	48 89 42 68          	mov    QWORD PTR [rdx+0x68],rax
   16381:	e9 86 00 00 00       	jmp    1640c <vrna_exp_params_rescale+0xe9>
   16386:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   1638a:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
   1638e:	48 8d 90 98 35 03 00 	lea    rdx,[rax+0x33598]
   16395:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   16399:	8b 80 b8 00 00 00    	mov    eax,DWORD PTR [rax+0xb8]
   1639f:	48 89 d6             	mov    rsi,rdx
   163a2:	89 c7                	mov    edi,eax
   163a4:	e8 02 fc ff ff       	call   15fab <vrna_exp_params_comparative>
   163a9:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
   163ad:	48 89 42 68          	mov    QWORD PTR [rdx+0x68],rax
   163b1:	eb 59                	jmp    1640c <vrna_exp_params_rescale+0xe9>
   163b3:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   163b7:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
   163bb:	48 8d 88 78 5e 06 00 	lea    rcx,[rax+0x65e78]
   163c2:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   163c6:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
   163ca:	48 05 98 35 03 00    	add    rax,0x33598
   163d0:	ba e8 07 00 00       	mov    edx,0x7e8
   163d5:	48 89 ce             	mov    rsi,rcx
   163d8:	48 89 c7             	mov    rdi,rax
   163db:	e8 c0 d2 fe ff       	call   36a0 <memcmp@plt>
   163e0:	85 c0                	test   eax,eax
   163e2:	74 28                	je     1640c <vrna_exp_params_rescale+0xe9>
   163e4:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   163e8:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
   163ec:	48 8d 90 98 35 03 00 	lea    rdx,[rax+0x33598]
   163f3:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   163f7:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
   163fb:	48 05 78 5e 06 00    	add    rax,0x65e78
   16401:	48 89 d6             	mov    rsi,rdx
   16404:	48 89 c7             	mov    rdi,rax
   16407:	e8 51 7a 01 00       	call   2de5d <vrna_md_copy>
   1640c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   16410:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
   16414:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
   16418:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
   1641d:	0f 84 8c 01 00 00    	je     165af <vrna_exp_params_rescale+0x28c>
   16423:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   16427:	f2 0f 10 80 58 5e 06 00 	movsd  xmm0,QWORD PTR [rax+0x65e58]
   1642f:	f2 0f 11 45 e8       	movsd  QWORD PTR [rbp-0x18],xmm0
   16434:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   16438:	48 05 78 5e 06 00    	add    rax,0x65e78
   1643e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   16442:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   16446:	8b 00                	mov    eax,DWORD PTR [rax]
   16448:	83 f8 01             	cmp    eax,0x1
   1644b:	75 3f                	jne    1648c <vrna_exp_params_rescale+0x169>
   1644d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   16451:	8b 80 b8 00 00 00    	mov    eax,DWORD PTR [rax+0xb8]
   16457:	89 c0                	mov    eax,eax
   16459:	48 85 c0             	test   rax,rax
   1645c:	78 07                	js     16465 <vrna_exp_params_rescale+0x142>
   1645e:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
   16463:	eb 15                	jmp    1647a <vrna_exp_params_rescale+0x157>
   16465:	48 89 c2             	mov    rdx,rax
   16468:	48 d1 ea             	shr    rdx,1
   1646b:	83 e0 01             	and    eax,0x1
   1646e:	48 09 c2             	or     rdx,rax
   16471:	f2 48 0f 2a c2       	cvtsi2sd xmm0,rdx
   16476:	f2 0f 58 c0          	addsd  xmm0,xmm0
   1647a:	f2 0f 10 4d e8       	movsd  xmm1,QWORD PTR [rbp-0x18]
   1647f:	f2 0f 5e c8          	divsd  xmm1,xmm0
   16483:	66 0f 28 c1          	movapd xmm0,xmm1
   16487:	f2 0f 11 45 e8       	movsd  QWORD PTR [rbp-0x18],xmm0
   1648c:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
   16491:	75 1e                	jne    164b1 <vrna_exp_params_rescale+0x18e>
   16493:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   16497:	f2 0f 10 88 60 5e 06 00 	movsd  xmm1,QWORD PTR [rax+0x65e60]
   1649f:	f2 0f 10 05 61 bb 01 00 	movsd  xmm0,QWORD PTR [rip+0x1bb61]        # 32008 <Law_and_Order+0x5c8>
   164a7:	66 0f 2f c1          	comisd xmm0,xmm1
   164ab:	0f 86 c4 00 00 00    	jbe    16575 <vrna_exp_params_rescale+0x252>
   164b1:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
   164b6:	74 4d                	je     16505 <vrna_exp_params_rescale+0x1e2>
   164b8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   164bc:	f2 0f 10 08          	movsd  xmm1,QWORD PTR [rax]
   164c0:	f2 0f 10 05 48 bb 01 00 	movsd  xmm0,QWORD PTR [rip+0x1bb48]        # 32010 <Law_and_Order+0x5d0>
   164c8:	f2 0f 59 c8          	mulsd  xmm1,xmm0
   164cc:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   164d0:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
   164d3:	89 c0                	mov    eax,eax
   164d5:	48 85 c0             	test   rax,rax
   164d8:	78 07                	js     164e1 <vrna_exp_params_rescale+0x1be>
   164da:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
   164df:	eb 15                	jmp    164f6 <vrna_exp_params_rescale+0x1d3>
   164e1:	48 89 c2             	mov    rdx,rax
   164e4:	48 d1 ea             	shr    rdx,1
   164e7:	83 e0 01             	and    eax,0x1
   164ea:	48 09 c2             	or     rdx,rax
   164ed:	f2 48 0f 2a c2       	cvtsi2sd xmm0,rdx
   164f2:	f2 0f 58 c0          	addsd  xmm0,xmm0
   164f6:	f2 0f 5e c8          	divsd  xmm1,xmm0
   164fa:	66 0f 28 c1          	movapd xmm0,xmm1
   164fe:	f2 0f 11 45 e0       	movsd  QWORD PTR [rbp-0x20],xmm0
   16503:	eb 39                	jmp    1653e <vrna_exp_params_rescale+0x21b>
   16505:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   16509:	f2 0f 10 80 68 5e 06 00 	movsd  xmm0,QWORD PTR [rax+0x65e68]
   16511:	f2 0f 10 0d ff ba 01 00 	movsd  xmm1,QWORD PTR [rip+0x1baff]        # 32018 <Law_and_Order+0x5d8>
   16519:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1651d:	66 0f 28 c8          	movapd xmm1,xmm0
   16521:	f2 0f 10 05 f7 ba 01 00 	movsd  xmm0,QWORD PTR [rip+0x1baf7]        # 32020 <Law_and_Order+0x5e0>
   16529:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1652d:	f2 0f 10 0d f3 ba 01 00 	movsd  xmm1,QWORD PTR [rip+0x1baf3]        # 32028 <Law_and_Order+0x5e8>
   16535:	f2 0f 5c c1          	subsd  xmm0,xmm1
   16539:	f2 0f 11 45 e0       	movsd  QWORD PTR [rbp-0x20],xmm0
   1653e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   16542:	f2 0f 10 80 b0 00 00 00 	movsd  xmm0,QWORD PTR [rax+0xb0]
   1654a:	f2 0f 59 45 e0       	mulsd  xmm0,QWORD PTR [rbp-0x20]
   1654f:	f3 0f 7e 0d d9 ba 01 00 	movq   xmm1,QWORD PTR [rip+0x1bad9]        # 32030 <Law_and_Order+0x5f0>
   16557:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1655b:	f2 0f 5e 45 e8       	divsd  xmm0,QWORD PTR [rbp-0x18]
   16560:	e8 0b d5 fe ff       	call   3a70 <exp@plt>
   16565:	66 48 0f 7e c0       	movq   rax,xmm0
   1656a:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
   1656e:	48 89 82 60 5e 06 00 	mov    QWORD PTR [rdx+0x65e60],rax
   16575:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   16579:	f2 0f 10 88 60 5e 06 00 	movsd  xmm1,QWORD PTR [rax+0x65e60]
   16581:	f2 0f 10 05 7f ba 01 00 	movsd  xmm0,QWORD PTR [rip+0x1ba7f]        # 32008 <Law_and_Order+0x5c8>
   16589:	66 0f 2f c1          	comisd xmm0,xmm1
   1658d:	76 14                	jbe    165a3 <vrna_exp_params_rescale+0x280>
   1658f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   16593:	f2 0f 10 05 6d ba 01 00 	movsd  xmm0,QWORD PTR [rip+0x1ba6d]        # 32008 <Law_and_Order+0x5c8>
   1659b:	f2 0f 11 80 60 5e 06 00 	movsd  QWORD PTR [rax+0x65e60],xmm0
   165a3:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   165a7:	48 89 c7             	mov    rdi,rax
   165aa:	e8 8c ca 00 00       	call   2303b <rescale_params>
   165af:	90                   	nop
   165b0:	c9                   	leave  
   165b1:	c3                   	ret    

00000000000165b2 <vrna_params_prepare>:
   165b2:	f3 0f 1e fa          	endbr64 
   165b6:	55                   	push   rbp
   165b7:	48 89 e5             	mov    rbp,rsp
   165ba:	48 83 ec 20          	sub    rsp,0x20
   165be:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   165c2:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
   165c5:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
   165ca:	0f 84 b5 00 00 00    	je     16685 <vrna_params_prepare+0xd3>
   165d0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   165d4:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
   165d8:	48 05 98 35 03 00    	add    rax,0x33598
   165de:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   165e2:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   165e5:	83 e0 02             	and    eax,0x2
   165e8:	85 c0                	test   eax,eax
   165ea:	0f 84 95 00 00 00    	je     16685 <vrna_params_prepare+0xd3>
   165f0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   165f4:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
   165f8:	48 85 c0             	test   rax,rax
   165fb:	74 43                	je     16640 <vrna_params_prepare+0x8e>
   165fd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   16601:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
   16605:	48 8d 88 78 5e 06 00 	lea    rcx,[rax+0x65e78]
   1660c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   16610:	ba e8 07 00 00       	mov    edx,0x7e8
   16615:	48 89 ce             	mov    rsi,rcx
   16618:	48 89 c7             	mov    rdi,rax
   1661b:	e8 80 d0 fe ff       	call   36a0 <memcmp@plt>
   16620:	85 c0                	test   eax,eax
   16622:	74 1c                	je     16640 <vrna_params_prepare+0x8e>
   16624:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   16628:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
   1662c:	48 89 c7             	mov    rdi,rax
   1662f:	e8 7c d2 fe ff       	call   38b0 <free@plt>
   16634:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   16638:	48 c7 40 68 00 00 00 00 	mov    QWORD PTR [rax+0x68],0x0
   16640:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   16644:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
   16648:	48 85 c0             	test   rax,rax
   1664b:	75 38                	jne    16685 <vrna_params_prepare+0xd3>
   1664d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   16651:	8b 00                	mov    eax,DWORD PTR [rax]
   16653:	85 c0                	test   eax,eax
   16655:	75 0e                	jne    16665 <vrna_params_prepare+0xb3>
   16657:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   1665b:	48 89 c7             	mov    rdi,rax
   1665e:	e8 bc f8 ff ff       	call   15f1f <vrna_exp_params>
   16663:	eb 18                	jmp    1667d <vrna_params_prepare+0xcb>
   16665:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   16669:	8b 80 b8 00 00 00    	mov    eax,DWORD PTR [rax+0xb8]
   1666f:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   16673:	48 89 d6             	mov    rsi,rdx
   16676:	89 c7                	mov    edi,eax
   16678:	e8 2e f9 ff ff       	call   15fab <vrna_exp_params_comparative>
   1667d:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
   16681:	48 89 42 68          	mov    QWORD PTR [rdx+0x68],rax
   16685:	90                   	nop
   16686:	c9                   	leave  
   16687:	c3                   	ret    

0000000000016688 <get_scaled_params>:
   16688:	f3 0f 1e fa          	endbr64 
   1668c:	55                   	push   rbp
   1668d:	48 89 e5             	mov    rbp,rsp
   16690:	53                   	push   rbx
   16691:	48 83 ec 68          	sub    rsp,0x68
   16695:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
   16699:	bf 80 3e 03 00       	mov    edi,0x33e80
   1669e:	e8 1e 58 01 00       	call   2bec1 <vrna_alloc>
   166a3:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
   166a7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   166ab:	48 05 80 3d 03 00    	add    rax,0x33d80
   166b1:	ba 00 01 00 00       	mov    edx,0x100
   166b6:	be 00 00 00 00       	mov    esi,0x0
   166bb:	48 89 c7             	mov    rdi,rax
   166be:	e8 4d d0 fe ff       	call   3710 <memset@plt>
   166c3:	e8 5f 25 01 00       	call   28c27 <last_parameter_file>
   166c8:	48 85 c0             	test   rax,rax
   166cb:	74 22                	je     166ef <get_scaled_params+0x67>
   166cd:	e8 55 25 01 00       	call   28c27 <last_parameter_file>
   166d2:	48 89 c1             	mov    rcx,rax
   166d5:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   166d9:	48 05 80 3d 03 00    	add    rax,0x33d80
   166df:	ba ff 00 00 00       	mov    edx,0xff
   166e4:	48 89 ce             	mov    rsi,rcx
   166e7:	48 89 c7             	mov    rdi,rax
   166ea:	e8 f1 cf fe ff       	call   36e0 <strncpy@plt>
   166ef:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   166f3:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
   166f7:	48 05 98 35 03 00    	add    rax,0x33598
   166fd:	48 89 d6             	mov    rsi,rdx
   16700:	ba fd 00 00 00       	mov    edx,0xfd
   16705:	48 89 c7             	mov    rdi,rax
   16708:	48 89 d1             	mov    rcx,rdx
   1670b:	f3 48 a5             	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   1670e:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   16712:	f2 0f 10 00          	movsd  xmm0,QWORD PTR [rax]
   16716:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   1671a:	f2 0f 11 80 90 35 03 00 	movsd  QWORD PTR [rax+0x33590],xmm0
   16722:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   16726:	f2 0f 10 88 90 35 03 00 	movsd  xmm1,QWORD PTR [rax+0x33590]
   1672e:	f2 0f 10 05 0a b9 01 00 	movsd  xmm0,QWORD PTR [rip+0x1b90a]        # 32040 <Law_and_Order+0x600>
   16736:	f2 0f 58 c1          	addsd  xmm0,xmm1
   1673a:	f2 0f 10 0d be 2a 1d 00 	movsd  xmm1,QWORD PTR [rip+0x1d2abe]        # 1e9200 <Tmeasure>
   16742:	f2 0f 5e c1          	divsd  xmm0,xmm1
   16746:	f2 0f 11 45 d8       	movsd  QWORD PTR [rbp-0x28],xmm0
   1674b:	8b 05 d7 2a 1d 00    	mov    eax,DWORD PTR [rip+0x1d2ad7]        # 1e9228 <niniodH>
   16751:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   16755:	8b 15 cd 2a 1d 00    	mov    edx,DWORD PTR [rip+0x1d2acd]        # 1e9228 <niniodH>
   1675b:	8b 05 c3 2a 1d 00    	mov    eax,DWORD PTR [rip+0x1d2ac3]        # 1e9224 <ninio37>
   16761:	29 c2                	sub    edx,eax
   16763:	89 d0                	mov    eax,edx
   16765:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   16769:	f2 0f 59 4d d8       	mulsd  xmm1,QWORD PTR [rbp-0x28]
   1676e:	f2 0f 5c c1          	subsd  xmm0,xmm1
   16772:	f2 0f 2c d0          	cvttsd2si edx,xmm0
   16776:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   1677a:	89 90 80 1d 03 00    	mov    DWORD PTR [rax+0x31d80],edx
   16780:	f2 0f 10 05 80 2a 1d 00 	movsd  xmm0,QWORD PTR [rip+0x1d2a80]        # 1e9208 <lxc37>
   16788:	f2 0f 59 45 d8       	mulsd  xmm0,QWORD PTR [rbp-0x28]
   1678d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   16791:	f2 0f 11 80 90 1d 03 00 	movsd  QWORD PTR [rax+0x31d90],xmm0
   16799:	8b 05 a1 2a 1d 00    	mov    eax,DWORD PTR [rip+0x1d2aa1]        # 1e9240 <TripleCdH>
   1679f:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   167a3:	8b 15 97 2a 1d 00    	mov    edx,DWORD PTR [rip+0x1d2a97]        # 1e9240 <TripleCdH>
   167a9:	8b 05 8d 2a 1d 00    	mov    eax,DWORD PTR [rip+0x1d2a8d]        # 1e923c <TripleC37>
   167af:	29 c2                	sub    edx,eax
   167b1:	89 d0                	mov    eax,edx
   167b3:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   167b7:	f2 0f 59 4d d8       	mulsd  xmm1,QWORD PTR [rbp-0x28]
   167bc:	f2 0f 5c c1          	subsd  xmm0,xmm1
   167c0:	f2 0f 2c d0          	cvttsd2si edx,xmm0
   167c4:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   167c8:	89 90 b8 2f 03 00    	mov    DWORD PTR [rax+0x32fb8],edx
   167ce:	8b 05 74 2a 1d 00    	mov    eax,DWORD PTR [rip+0x1d2a74]        # 1e9248 <MultipleCAdH>
   167d4:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   167d8:	8b 15 6a 2a 1d 00    	mov    edx,DWORD PTR [rip+0x1d2a6a]        # 1e9248 <MultipleCAdH>
   167de:	8b 05 60 2a 1d 00    	mov    eax,DWORD PTR [rip+0x1d2a60]        # 1e9244 <MultipleCA37>
   167e4:	29 c2                	sub    edx,eax
   167e6:	89 d0                	mov    eax,edx
   167e8:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   167ec:	f2 0f 59 4d d8       	mulsd  xmm1,QWORD PTR [rbp-0x28]
   167f1:	f2 0f 5c c1          	subsd  xmm0,xmm1
   167f5:	f2 0f 2c d0          	cvttsd2si edx,xmm0
   167f9:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   167fd:	89 90 bc 2f 03 00    	mov    DWORD PTR [rax+0x32fbc],edx
   16803:	8b 05 47 2a 1d 00    	mov    eax,DWORD PTR [rip+0x1d2a47]        # 1e9250 <MultipleCBdH>
   16809:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1680d:	8b 15 3d 2a 1d 00    	mov    edx,DWORD PTR [rip+0x1d2a3d]        # 1e9250 <MultipleCBdH>
   16813:	8b 05 33 2a 1d 00    	mov    eax,DWORD PTR [rip+0x1d2a33]        # 1e924c <MultipleCB37>
   16819:	29 c2                	sub    edx,eax
   1681b:	89 d0                	mov    eax,edx
   1681d:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   16821:	f2 0f 59 4d d8       	mulsd  xmm1,QWORD PTR [rbp-0x28]
   16826:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1682a:	f2 0f 2c d0          	cvttsd2si edx,xmm0
   1682e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   16832:	89 90 c0 2f 03 00    	mov    DWORD PTR [rax+0x32fc0],edx
   16838:	8b 05 f2 29 1d 00    	mov    eax,DWORD PTR [rip+0x1d29f2]        # 1e9230 <TerminalAUdH>
   1683e:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   16842:	8b 15 e8 29 1d 00    	mov    edx,DWORD PTR [rip+0x1d29e8]        # 1e9230 <TerminalAUdH>
   16848:	8b 05 de 29 1d 00    	mov    eax,DWORD PTR [rip+0x1d29de]        # 1e922c <TerminalAU37>
   1684e:	29 c2                	sub    edx,eax
   16850:	89 d0                	mov    eax,edx
   16852:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   16856:	f2 0f 59 4d d8       	mulsd  xmm1,QWORD PTR [rbp-0x28]
   1685b:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1685f:	f2 0f 2c d0          	cvttsd2si edx,xmm0
   16863:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   16867:	89 90 d4 1d 03 00    	mov    DWORD PTR [rax+0x31dd4],edx
   1686d:	8b 05 c5 29 1d 00    	mov    eax,DWORD PTR [rip+0x1d29c5]        # 1e9238 <DuplexInitdH>
   16873:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   16877:	8b 15 bb 29 1d 00    	mov    edx,DWORD PTR [rip+0x1d29bb]        # 1e9238 <DuplexInitdH>
   1687d:	8b 05 b1 29 1d 00    	mov    eax,DWORD PTR [rip+0x1d29b1]        # 1e9234 <DuplexInit37>
   16883:	29 c2                	sub    edx,eax
   16885:	89 d0                	mov    eax,edx
   16887:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1688b:	f2 0f 59 4d d8       	mulsd  xmm1,QWORD PTR [rbp-0x28]
   16890:	f2 0f 5c c1          	subsd  xmm0,xmm1
   16894:	f2 0f 2c d0          	cvttsd2si edx,xmm0
   16898:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   1689c:	89 90 d8 1d 03 00    	mov    DWORD PTR [rax+0x31dd8],edx
   168a2:	8b 05 48 81 23 00    	mov    eax,DWORD PTR [rip+0x238148]        # 24e9f0 <ML_BASEdH>
   168a8:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   168ac:	8b 15 3e 81 23 00    	mov    edx,DWORD PTR [rip+0x23813e]        # 24e9f0 <ML_BASEdH>
   168b2:	8b 05 34 81 23 00    	mov    eax,DWORD PTR [rip+0x238134]        # 24e9ec <ML_BASE37>
   168b8:	29 c2                	sub    edx,eax
   168ba:	89 d0                	mov    eax,edx
   168bc:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   168c0:	f2 0f 59 4d d8       	mulsd  xmm1,QWORD PTR [rbp-0x28]
   168c5:	f2 0f 5c c1          	subsd  xmm0,xmm1
   168c9:	f2 0f 2c d0          	cvttsd2si edx,xmm0
   168cd:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   168d1:	89 90 98 1d 03 00    	mov    DWORD PTR [rax+0x31d98],edx
   168d7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   168db:	c7 80 c0 1d 03 00 c0 03 00 00 	mov    DWORD PTR [rax+0x31dc0],0x3c0
   168e5:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   168e9:	c7 80 c4 1d 03 00 dc 05 00 00 	mov    DWORD PTR [rax+0x31dc4],0x5dc
   168f3:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   168f7:	c7 80 c8 1d 03 00 14 00 00 00 	mov    DWORD PTR [rax+0x31dc8],0x14
   16901:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   16905:	c7 80 cc 1d 03 00 0a 00 00 00 	mov    DWORD PTR [rax+0x31dcc],0xa
   1690f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   16913:	c7 80 d0 1d 03 00 0a 00 00 00 	mov    DWORD PTR [rax+0x31dd0],0xa
   1691d:	8b 05 f9 28 1d 00    	mov    eax,DWORD PTR [rip+0x1d28f9]        # 1e921c <ML_closingdH>
   16923:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   16927:	8b 15 ef 28 1d 00    	mov    edx,DWORD PTR [rip+0x1d28ef]        # 1e921c <ML_closingdH>
   1692d:	8b 05 e5 28 1d 00    	mov    eax,DWORD PTR [rip+0x1d28e5]        # 1e9218 <ML_closing37>
   16933:	29 c2                	sub    edx,eax
   16935:	89 d0                	mov    eax,edx
   16937:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1693b:	f2 0f 59 4d d8       	mulsd  xmm1,QWORD PTR [rbp-0x28]
   16940:	f2 0f 5c c1          	subsd  xmm0,xmm1
   16944:	f2 0f 2c d0          	cvttsd2si edx,xmm0
   16948:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   1694c:	89 90 bc 1d 03 00    	mov    DWORD PTR [rax+0x31dbc],edx
   16952:	8b 05 a0 80 23 00    	mov    eax,DWORD PTR [rip+0x2380a0]        # 24e9f8 <GQuadLayerMismatchH>
   16958:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1695c:	8b 15 96 80 23 00    	mov    edx,DWORD PTR [rip+0x238096]        # 24e9f8 <GQuadLayerMismatchH>
   16962:	8b 05 f8 28 1d 00    	mov    eax,DWORD PTR [rip+0x1d28f8]        # 1e9260 <GQuadLayerMismatch37>
   16968:	29 c2                	sub    edx,eax
   1696a:	89 d0                	mov    eax,edx
   1696c:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   16970:	f2 0f 59 4d d8       	mulsd  xmm1,QWORD PTR [rbp-0x28]
   16975:	f2 0f 5c c1          	subsd  xmm0,xmm1
   16979:	f2 0f 2c d0          	cvttsd2si edx,xmm0
   1697d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   16981:	89 90 84 35 03 00    	mov    DWORD PTR [rax+0x33584],edx
   16987:	8b 15 d7 28 1d 00    	mov    edx,DWORD PTR [rip+0x1d28d7]        # 1e9264 <GQuadLayerMismatchMax>
   1698d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   16991:	89 90 88 35 03 00    	mov    DWORD PTR [rax+0x33588],edx
   16997:	c7 45 ac 02 00 00 00 	mov    DWORD PTR [rbp-0x54],0x2
   1699e:	e9 e3 00 00 00       	jmp    16a86 <get_scaled_params+0x3fe>
   169a3:	c7 45 b0 03 00 00 00 	mov    DWORD PTR [rbp-0x50],0x3
   169aa:	e9 c9 00 00 00       	jmp    16a78 <get_scaled_params+0x3f0>
   169af:	8b 05 a3 28 1d 00    	mov    eax,DWORD PTR [rip+0x1d28a3]        # 1e9258 <GQuadAlphadH>
   169b5:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   169b9:	8b 15 99 28 1d 00    	mov    edx,DWORD PTR [rip+0x1d2899]        # 1e9258 <GQuadAlphadH>
   169bf:	8b 05 8f 28 1d 00    	mov    eax,DWORD PTR [rip+0x1d288f]        # 1e9254 <GQuadAlpha37>
   169c5:	29 c2                	sub    edx,eax
   169c7:	89 d0                	mov    eax,edx
   169c9:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   169cd:	f2 0f 59 4d d8       	mulsd  xmm1,QWORD PTR [rbp-0x28]
   169d2:	f2 0f 5c c1          	subsd  xmm0,xmm1
   169d6:	f2 0f 11 45 e0       	movsd  QWORD PTR [rbp-0x20],xmm0
   169db:	8b 05 13 80 23 00    	mov    eax,DWORD PTR [rip+0x238013]        # 24e9f4 <GQuadBetadH>
   169e1:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   169e5:	8b 15 09 80 23 00    	mov    edx,DWORD PTR [rip+0x238009]        # 24e9f4 <GQuadBetadH>
   169eb:	8b 05 6b 28 1d 00    	mov    eax,DWORD PTR [rip+0x1d286b]        # 1e925c <GQuadBeta37>
   169f1:	29 c2                	sub    edx,eax
   169f3:	89 d0                	mov    eax,edx
   169f5:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   169f9:	f2 0f 59 4d d8       	mulsd  xmm1,QWORD PTR [rbp-0x28]
   169fe:	f2 0f 5c c1          	subsd  xmm0,xmm1
   16a02:	f2 0f 11 45 e8       	movsd  QWORD PTR [rbp-0x18],xmm0
   16a07:	f2 0f 10 45 e0       	movsd  xmm0,QWORD PTR [rbp-0x20]
   16a0c:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   16a10:	89 c2                	mov    edx,eax
   16a12:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
   16a15:	83 e8 01             	sub    eax,0x1
   16a18:	89 d3                	mov    ebx,edx
   16a1a:	0f af d8             	imul   ebx,eax
   16a1d:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
   16a20:	83 e8 02             	sub    eax,0x2
   16a23:	89 c0                	mov    eax,eax
   16a25:	48 85 c0             	test   rax,rax
   16a28:	78 07                	js     16a31 <get_scaled_params+0x3a9>
   16a2a:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
   16a2f:	eb 15                	jmp    16a46 <get_scaled_params+0x3be>
   16a31:	48 89 c2             	mov    rdx,rax
   16a34:	48 d1 ea             	shr    rdx,1
   16a37:	83 e0 01             	and    eax,0x1
   16a3a:	48 09 c2             	or     rdx,rax
   16a3d:	f2 48 0f 2a c2       	cvtsi2sd xmm0,rdx
   16a42:	f2 0f 58 c0          	addsd  xmm0,xmm0
   16a46:	e8 45 cd fe ff       	call   3790 <log@plt>
   16a4b:	f2 0f 59 45 e8       	mulsd  xmm0,QWORD PTR [rbp-0x18]
   16a50:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   16a54:	01 d8                	add    eax,ebx
   16a56:	89 c6                	mov    esi,eax
   16a58:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   16a5c:	8b 55 b0             	mov    edx,DWORD PTR [rbp-0x50]
   16a5f:	8b 4d ac             	mov    ecx,DWORD PTR [rbp-0x54]
   16a62:	48 6b c9 2e          	imul   rcx,rcx,0x2e
   16a66:	48 01 ca             	add    rdx,rcx
   16a69:	48 81 c2 f0 cb 00 00 	add    rdx,0xcbf0
   16a70:	89 74 90 04          	mov    DWORD PTR [rax+rdx*4+0x4],esi
   16a74:	83 45 b0 01          	add    DWORD PTR [rbp-0x50],0x1
   16a78:	83 7d b0 2d          	cmp    DWORD PTR [rbp-0x50],0x2d
   16a7c:	0f 86 2d ff ff ff    	jbe    169af <get_scaled_params+0x327>
   16a82:	83 45 ac 01          	add    DWORD PTR [rbp-0x54],0x1
   16a86:	83 7d ac 07          	cmp    DWORD PTR [rbp-0x54],0x7
   16a8a:	0f 86 13 ff ff ff    	jbe    169a3 <get_scaled_params+0x31b>
   16a90:	c7 45 ac 00 00 00 00 	mov    DWORD PTR [rbp-0x54],0x0
   16a97:	eb 6b                	jmp    16b04 <get_scaled_params+0x47c>
   16a99:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
   16a9c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   16aa4:	48 8d 05 55 2a 1d 00 	lea    rax,[rip+0x1d2a55]        # 1e9500 <hairpindH>
   16aab:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   16aae:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   16ab2:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
   16ab5:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   16abd:	48 8d 05 3c 2a 1d 00 	lea    rax,[rip+0x1d2a3c]        # 1e9500 <hairpindH>
   16ac4:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   16ac7:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
   16aca:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   16ad2:	48 8d 05 a7 29 1d 00 	lea    rax,[rip+0x1d29a7]        # 1e9480 <hairpin37>
   16ad9:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   16adc:	29 c2                	sub    edx,eax
   16ade:	89 d0                	mov    eax,edx
   16ae0:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   16ae4:	f2 0f 59 4d d8       	mulsd  xmm1,QWORD PTR [rbp-0x28]
   16ae9:	f2 0f 5c c1          	subsd  xmm0,xmm1
   16aed:	f2 0f 2c d0          	cvttsd2si edx,xmm0
   16af1:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   16af5:	8b 4d ac             	mov    ecx,DWORD PTR [rbp-0x54]
   16af8:	48 83 c1 40          	add    rcx,0x40
   16afc:	89 54 88 04          	mov    DWORD PTR [rax+rcx*4+0x4],edx
   16b00:	83 45 ac 01          	add    DWORD PTR [rbp-0x54],0x1
   16b04:	83 7d ac 1e          	cmp    DWORD PTR [rbp-0x54],0x1e
   16b08:	76 8f                	jbe    16a99 <get_scaled_params+0x411>
   16b0a:	c7 45 ac 00 00 00 00 	mov    DWORD PTR [rbp-0x54],0x0
   16b11:	e9 d1 00 00 00       	jmp    16be7 <get_scaled_params+0x55f>
   16b16:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
   16b19:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   16b21:	48 8d 05 d8 2a 1d 00 	lea    rax,[rip+0x1d2ad8]        # 1e9600 <bulgedH>
   16b28:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   16b2b:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   16b2f:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
   16b32:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   16b3a:	48 8d 05 bf 2a 1d 00 	lea    rax,[rip+0x1d2abf]        # 1e9600 <bulgedH>
   16b41:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   16b44:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
   16b47:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   16b4f:	48 8d 05 2a 2a 1d 00 	lea    rax,[rip+0x1d2a2a]        # 1e9580 <bulge37>
   16b56:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   16b59:	29 c2                	sub    edx,eax
   16b5b:	89 d0                	mov    eax,edx
   16b5d:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   16b61:	f2 0f 59 4d d8       	mulsd  xmm1,QWORD PTR [rbp-0x28]
   16b66:	f2 0f 5c c1          	subsd  xmm0,xmm1
   16b6a:	f2 0f 2c d0          	cvttsd2si edx,xmm0
   16b6e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   16b72:	8b 4d ac             	mov    ecx,DWORD PTR [rbp-0x54]
   16b75:	48 83 c1 60          	add    rcx,0x60
   16b79:	89 14 88             	mov    DWORD PTR [rax+rcx*4],edx
   16b7c:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
   16b7f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   16b87:	48 8d 05 72 2b 1d 00 	lea    rax,[rip+0x1d2b72]        # 1e9700 <internal_loopdH>
   16b8e:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   16b91:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   16b95:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
   16b98:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   16ba0:	48 8d 05 59 2b 1d 00 	lea    rax,[rip+0x1d2b59]        # 1e9700 <internal_loopdH>
   16ba7:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   16baa:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
   16bad:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   16bb5:	48 8d 05 c4 2a 1d 00 	lea    rax,[rip+0x1d2ac4]        # 1e9680 <internal_loop37>
   16bbc:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   16bbf:	29 c2                	sub    edx,eax
   16bc1:	89 d0                	mov    eax,edx
   16bc3:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   16bc7:	f2 0f 59 4d d8       	mulsd  xmm1,QWORD PTR [rbp-0x28]
   16bcc:	f2 0f 5c c1          	subsd  xmm0,xmm1
   16bd0:	f2 0f 2c d0          	cvttsd2si edx,xmm0
   16bd4:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   16bd8:	8b 4d ac             	mov    ecx,DWORD PTR [rbp-0x54]
   16bdb:	48 83 c1 7c          	add    rcx,0x7c
   16bdf:	89 54 88 0c          	mov    DWORD PTR [rax+rcx*4+0xc],edx
   16be3:	83 45 ac 01          	add    DWORD PTR [rbp-0x54],0x1
   16be7:	83 7d ac 1e          	cmp    DWORD PTR [rbp-0x54],0x1e
   16beb:	0f 86 25 ff ff ff    	jbe    16b16 <get_scaled_params+0x48e>
   16bf1:	e9 d9 00 00 00       	jmp    16ccf <get_scaled_params+0x647>
   16bf6:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   16bfa:	8b 98 f8 01 00 00    	mov    ebx,DWORD PTR [rax+0x1f8]
   16c00:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   16c04:	f2 0f 10 90 90 1d 03 00 	movsd  xmm2,QWORD PTR [rax+0x31d90]
   16c0c:	f2 0f 11 55 90       	movsd  QWORD PTR [rbp-0x70],xmm2
   16c11:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
   16c14:	48 85 c0             	test   rax,rax
   16c17:	78 07                	js     16c20 <get_scaled_params+0x598>
   16c19:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
   16c1e:	eb 15                	jmp    16c35 <get_scaled_params+0x5ad>
   16c20:	48 89 c2             	mov    rdx,rax
   16c23:	48 d1 ea             	shr    rdx,1
   16c26:	83 e0 01             	and    eax,0x1
   16c29:	48 09 c2             	or     rdx,rax
   16c2c:	f2 48 0f 2a c2       	cvtsi2sd xmm0,rdx
   16c31:	f2 0f 58 c0          	addsd  xmm0,xmm0
   16c35:	f2 0f 10 0d 0b b4 01 00 	movsd  xmm1,QWORD PTR [rip+0x1b40b]        # 32048 <Law_and_Order+0x608>
   16c3d:	f2 0f 5e c1          	divsd  xmm0,xmm1
   16c41:	e8 4a cb fe ff       	call   3790 <log@plt>
   16c46:	f2 0f 59 45 90       	mulsd  xmm0,QWORD PTR [rbp-0x70]
   16c4b:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   16c4f:	8d 0c 03             	lea    ecx,[rbx+rax*1]
   16c52:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   16c56:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   16c59:	48 83 c2 60          	add    rdx,0x60
   16c5d:	89 0c 90             	mov    DWORD PTR [rax+rdx*4],ecx
   16c60:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   16c64:	8b 98 74 02 00 00    	mov    ebx,DWORD PTR [rax+0x274]
   16c6a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   16c6e:	f2 0f 10 a0 90 1d 03 00 	movsd  xmm4,QWORD PTR [rax+0x31d90]
   16c76:	f2 0f 11 65 90       	movsd  QWORD PTR [rbp-0x70],xmm4
   16c7b:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
   16c7e:	48 85 c0             	test   rax,rax
   16c81:	78 07                	js     16c8a <get_scaled_params+0x602>
   16c83:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
   16c88:	eb 15                	jmp    16c9f <get_scaled_params+0x617>
   16c8a:	48 89 c2             	mov    rdx,rax
   16c8d:	48 d1 ea             	shr    rdx,1
   16c90:	83 e0 01             	and    eax,0x1
   16c93:	48 09 c2             	or     rdx,rax
   16c96:	f2 48 0f 2a c2       	cvtsi2sd xmm0,rdx
   16c9b:	f2 0f 58 c0          	addsd  xmm0,xmm0
   16c9f:	f2 0f 10 0d a1 b3 01 00 	movsd  xmm1,QWORD PTR [rip+0x1b3a1]        # 32048 <Law_and_Order+0x608>
   16ca7:	f2 0f 5e c1          	divsd  xmm0,xmm1
   16cab:	e8 e0 ca fe ff       	call   3790 <log@plt>
   16cb0:	f2 0f 59 45 90       	mulsd  xmm0,QWORD PTR [rbp-0x70]
   16cb5:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   16cb9:	8d 0c 03             	lea    ecx,[rbx+rax*1]
   16cbc:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   16cc0:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   16cc3:	48 83 c2 7c          	add    rdx,0x7c
   16cc7:	89 4c 90 0c          	mov    DWORD PTR [rax+rdx*4+0xc],ecx
   16ccb:	83 45 ac 01          	add    DWORD PTR [rbp-0x54],0x1
   16ccf:	83 7d ac 1e          	cmp    DWORD PTR [rbp-0x54],0x1e
   16cd3:	0f 86 1d ff ff ff    	jbe    16bf6 <get_scaled_params+0x56e>
   16cd9:	c7 45 ac 00 00 00 00 	mov    DWORD PTR [rbp-0x54],0x0
   16ce0:	eb 6e                	jmp    16d50 <get_scaled_params+0x6c8>
   16ce2:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
   16ce5:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   16ced:	48 8d 05 8c 56 1d 00 	lea    rax,[rip+0x1d568c]        # 1ec380 <TetraloopdH>
   16cf4:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   16cf7:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   16cfb:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
   16cfe:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   16d06:	48 8d 05 73 56 1d 00 	lea    rax,[rip+0x1d5673]        # 1ec380 <TetraloopdH>
   16d0d:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   16d10:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
   16d13:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   16d1b:	48 8d 05 be 55 1d 00 	lea    rax,[rip+0x1d55be]        # 1ec2e0 <Tetraloop37>
   16d22:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   16d25:	29 c2                	sub    edx,eax
   16d27:	89 d0                	mov    eax,edx
   16d29:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   16d2d:	f2 0f 59 4d d8       	mulsd  xmm1,QWORD PTR [rbp-0x28]
   16d32:	f2 0f 5c c1          	subsd  xmm0,xmm1
   16d36:	f2 0f 2c d0          	cvttsd2si edx,xmm0
   16d3a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   16d3e:	8b 4d ac             	mov    ecx,DWORD PTR [rbp-0x54]
   16d41:	48 81 c1 74 c7 00 00 	add    rcx,0xc774
   16d48:	89 54 88 0c          	mov    DWORD PTR [rax+rcx*4+0xc],edx
   16d4c:	83 45 ac 01          	add    DWORD PTR [rbp-0x54],0x1
   16d50:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   16d53:	89 d0                	mov    eax,edx
   16d55:	c1 e0 03             	shl    eax,0x3
   16d58:	29 d0                	sub    eax,edx
   16d5a:	89 c3                	mov    ebx,eax
   16d5c:	48 8d 3d 5d 54 1d 00 	lea    rdi,[rip+0x1d545d]        # 1ec1c0 <Tetraloops>
   16d63:	e8 28 c9 fe ff       	call   3690 <strlen@plt>
   16d68:	48 39 c3             	cmp    rbx,rax
   16d6b:	0f 82 71 ff ff ff    	jb     16ce2 <get_scaled_params+0x65a>
   16d71:	c7 45 ac 00 00 00 00 	mov    DWORD PTR [rbp-0x54],0x0
   16d78:	eb 6e                	jmp    16de8 <get_scaled_params+0x760>
   16d7a:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
   16d7d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   16d85:	48 8d 05 94 53 1d 00 	lea    rax,[rip+0x1d5394]        # 1ec120 <TriloopdH>
   16d8c:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   16d8f:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   16d93:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
   16d96:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   16d9e:	48 8d 05 7b 53 1d 00 	lea    rax,[rip+0x1d537b]        # 1ec120 <TriloopdH>
   16da5:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   16da8:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
   16dab:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   16db3:	48 8d 05 c6 52 1d 00 	lea    rax,[rip+0x1d52c6]        # 1ec080 <Triloop37>
   16dba:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   16dbd:	29 c2                	sub    edx,eax
   16dbf:	89 d0                	mov    eax,edx
   16dc1:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   16dc5:	f2 0f 59 4d d8       	mulsd  xmm1,QWORD PTR [rbp-0x28]
   16dca:	f2 0f 5c c1          	subsd  xmm0,xmm1
   16dce:	f2 0f 2c d0          	cvttsd2si edx,xmm0
   16dd2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   16dd6:	8b 4d ac             	mov    ecx,DWORD PTR [rbp-0x54]
   16dd9:	48 81 c1 9c c9 00 00 	add    rcx,0xc99c
   16de0:	89 54 88 08          	mov    DWORD PTR [rax+rcx*4+0x8],edx
   16de4:	83 45 ac 01          	add    DWORD PTR [rbp-0x54],0x1
   16de8:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   16deb:	89 d0                	mov    eax,edx
   16ded:	c1 e0 02             	shl    eax,0x2
   16df0:	01 d0                	add    eax,edx
   16df2:	89 c3                	mov    ebx,eax
   16df4:	48 8d 3d 85 51 1d 00 	lea    rdi,[rip+0x1d5185]        # 1ebf80 <Triloops>
   16dfb:	e8 90 c8 fe ff       	call   3690 <strlen@plt>
   16e00:	48 39 c3             	cmp    rbx,rax
   16e03:	0f 82 71 ff ff ff    	jb     16d7a <get_scaled_params+0x6f2>
   16e09:	c7 45 ac 00 00 00 00 	mov    DWORD PTR [rbp-0x54],0x0
   16e10:	eb 6e                	jmp    16e80 <get_scaled_params+0x7f8>
   16e12:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
   16e15:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   16e1d:	48 8d 05 1c 58 1d 00 	lea    rax,[rip+0x1d581c]        # 1ec640 <HexaloopdH>
   16e24:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   16e27:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   16e2b:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
   16e2e:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   16e36:	48 8d 05 03 58 1d 00 	lea    rax,[rip+0x1d5803]        # 1ec640 <HexaloopdH>
   16e3d:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   16e40:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
   16e43:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   16e4b:	48 8d 05 4e 57 1d 00 	lea    rax,[rip+0x1d574e]        # 1ec5a0 <Hexaloop37>
   16e52:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   16e55:	29 c2                	sub    edx,eax
   16e57:	89 d0                	mov    eax,edx
   16e59:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   16e5d:	f2 0f 59 4d d8       	mulsd  xmm1,QWORD PTR [rbp-0x28]
   16e62:	f2 0f 5c c1          	subsd  xmm0,xmm1
   16e66:	f2 0f 2c d0          	cvttsd2si edx,xmm0
   16e6a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   16e6e:	8b 4d ac             	mov    ecx,DWORD PTR [rbp-0x54]
   16e71:	48 81 c1 00 ca 00 00 	add    rcx,0xca00
   16e78:	89 54 88 0c          	mov    DWORD PTR [rax+rcx*4+0xc],edx
   16e7c:	83 45 ac 01          	add    DWORD PTR [rbp-0x54],0x1
   16e80:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   16e83:	89 d0                	mov    eax,edx
   16e85:	c1 e0 03             	shl    eax,0x3
   16e88:	01 d0                	add    eax,edx
   16e8a:	89 c3                	mov    ebx,eax
   16e8c:	48 8d 3d 8d 55 1d 00 	lea    rdi,[rip+0x1d558d]        # 1ec420 <Hexaloops>
   16e93:	e8 f8 c7 fe ff       	call   3690 <strlen@plt>
   16e98:	48 39 c3             	cmp    rbx,rax
   16e9b:	0f 82 71 ff ff ff    	jb     16e12 <get_scaled_params+0x78a>
   16ea1:	c7 45 ac 00 00 00 00 	mov    DWORD PTR [rbp-0x54],0x0
   16ea8:	eb 41                	jmp    16eeb <get_scaled_params+0x863>
   16eaa:	8b 05 64 23 1d 00    	mov    eax,DWORD PTR [rip+0x1d2364]        # 1e9214 <ML_interndH>
   16eb0:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   16eb4:	8b 15 5a 23 1d 00    	mov    edx,DWORD PTR [rip+0x1d235a]        # 1e9214 <ML_interndH>
   16eba:	8b 05 50 23 1d 00    	mov    eax,DWORD PTR [rip+0x1d2350]        # 1e9210 <ML_intern37>
   16ec0:	29 c2                	sub    edx,eax
   16ec2:	89 d0                	mov    eax,edx
   16ec4:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   16ec8:	f2 0f 59 4d d8       	mulsd  xmm1,QWORD PTR [rbp-0x28]
   16ecd:	f2 0f 5c c1          	subsd  xmm0,xmm1
   16ed1:	f2 0f 2c d0          	cvttsd2si edx,xmm0
   16ed5:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   16ed9:	8b 4d ac             	mov    ecx,DWORD PTR [rbp-0x54]
   16edc:	48 81 c1 64 c7 00 00 	add    rcx,0xc764
   16ee3:	89 54 88 0c          	mov    DWORD PTR [rax+rcx*4+0xc],edx
   16ee7:	83 45 ac 01          	add    DWORD PTR [rbp-0x54],0x1
   16eeb:	83 7d ac 07          	cmp    DWORD PTR [rbp-0x54],0x7
   16eef:	76 b9                	jbe    16eaa <get_scaled_params+0x822>
   16ef1:	c7 45 ac 00 00 00 00 	mov    DWORD PTR [rbp-0x54],0x0
   16ef8:	e9 a9 00 00 00       	jmp    16fa6 <get_scaled_params+0x91e>
   16efd:	c7 45 b0 00 00 00 00 	mov    DWORD PTR [rbp-0x50],0x0
   16f04:	e9 8f 00 00 00       	jmp    16f98 <get_scaled_params+0x910>
   16f09:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
   16f0c:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   16f0f:	48 c1 e2 03          	shl    rdx,0x3
   16f13:	48 01 d0             	add    rax,rdx
   16f16:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   16f1e:	48 8d 05 5b 24 1d 00 	lea    rax,[rip+0x1d245b]        # 1e9380 <stackdH>
   16f25:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   16f28:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   16f2c:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
   16f2f:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   16f32:	48 c1 e2 03          	shl    rdx,0x3
   16f36:	48 01 d0             	add    rax,rdx
   16f39:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   16f41:	48 8d 05 38 24 1d 00 	lea    rax,[rip+0x1d2438]        # 1e9380 <stackdH>
   16f48:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   16f4b:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
   16f4e:	8b 4d ac             	mov    ecx,DWORD PTR [rbp-0x54]
   16f51:	48 c1 e1 03          	shl    rcx,0x3
   16f55:	48 01 c8             	add    rax,rcx
   16f58:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   16f60:	48 8d 05 19 23 1d 00 	lea    rax,[rip+0x1d2319]        # 1e9280 <stack37>
   16f67:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   16f6a:	29 c2                	sub    edx,eax
   16f6c:	89 d0                	mov    eax,edx
   16f6e:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   16f72:	f2 0f 59 4d d8       	mulsd  xmm1,QWORD PTR [rbp-0x28]
   16f77:	f2 0f 5c c1          	subsd  xmm0,xmm1
   16f7b:	f2 0f 2c d0          	cvttsd2si edx,xmm0
   16f7f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   16f83:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   16f86:	8b 75 ac             	mov    esi,DWORD PTR [rbp-0x54]
   16f89:	48 c1 e6 03          	shl    rsi,0x3
   16f8d:	48 01 f1             	add    rcx,rsi
   16f90:	89 54 88 04          	mov    DWORD PTR [rax+rcx*4+0x4],edx
   16f94:	83 45 b0 01          	add    DWORD PTR [rbp-0x50],0x1
   16f98:	83 7d b0 07          	cmp    DWORD PTR [rbp-0x50],0x7
   16f9c:	0f 86 67 ff ff ff    	jbe    16f09 <get_scaled_params+0x881>
   16fa2:	83 45 ac 01          	add    DWORD PTR [rbp-0x54],0x1
   16fa6:	83 7d ac 07          	cmp    DWORD PTR [rbp-0x54],0x7
   16faa:	0f 86 4d ff ff ff    	jbe    16efd <get_scaled_params+0x875>
   16fb0:	c7 45 ac 00 00 00 00 	mov    DWORD PTR [rbp-0x54],0x0
   16fb7:	e9 ad 07 00 00       	jmp    17769 <get_scaled_params+0x10e1>
   16fbc:	c7 45 b0 00 00 00 00 	mov    DWORD PTR [rbp-0x50],0x0
   16fc3:	e9 93 07 00 00       	jmp    1775b <get_scaled_params+0x10d3>
   16fc8:	c7 45 b4 00 00 00 00 	mov    DWORD PTR [rbp-0x4c],0x0
   16fcf:	e9 79 07 00 00       	jmp    1774d <get_scaled_params+0x10c5>
   16fd4:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
   16fd7:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   16fda:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   16fdd:	48 89 d0             	mov    rax,rdx
   16fe0:	48 c1 e0 02          	shl    rax,0x2
   16fe4:	48 01 d0             	add    rax,rdx
   16fe7:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   16fef:	48 01 d0             	add    rax,rdx
   16ff2:	48 89 ca             	mov    rdx,rcx
   16ff5:	48 c1 e2 02          	shl    rdx,0x2
   16ff9:	48 01 ca             	add    rdx,rcx
   16ffc:	48 01 d0             	add    rax,rdx
   16fff:	48 01 f0             	add    rax,rsi
   17002:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1700a:	48 8d 05 8f 2a 1d 00 	lea    rax,[rip+0x1d2a8f]        # 1e9aa0 <mismatchIdH>
   17011:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   17014:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   17018:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
   1701b:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   1701e:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   17021:	48 89 d0             	mov    rax,rdx
   17024:	48 c1 e0 02          	shl    rax,0x2
   17028:	48 01 d0             	add    rax,rdx
   1702b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   17033:	48 01 d0             	add    rax,rdx
   17036:	48 89 ca             	mov    rdx,rcx
   17039:	48 c1 e2 02          	shl    rdx,0x2
   1703d:	48 01 ca             	add    rdx,rcx
   17040:	48 01 d0             	add    rax,rdx
   17043:	48 01 f0             	add    rax,rsi
   17046:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1704e:	48 8d 05 4b 2a 1d 00 	lea    rax,[rip+0x1d2a4b]        # 1e9aa0 <mismatchIdH>
   17055:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   17058:	8b 7d b4             	mov    edi,DWORD PTR [rbp-0x4c]
   1705b:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   1705e:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   17061:	48 89 d0             	mov    rax,rdx
   17064:	48 c1 e0 02          	shl    rax,0x2
   17068:	48 01 d0             	add    rax,rdx
   1706b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   17073:	48 01 d0             	add    rax,rdx
   17076:	48 89 ca             	mov    rdx,rcx
   17079:	48 c1 e2 02          	shl    rdx,0x2
   1707d:	48 01 ca             	add    rdx,rcx
   17080:	48 01 d0             	add    rax,rdx
   17083:	48 01 f8             	add    rax,rdi
   17086:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1708e:	48 8d 05 eb 26 1d 00 	lea    rax,[rip+0x1d26eb]        # 1e9780 <mismatchI37>
   17095:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   17098:	29 c6                	sub    esi,eax
   1709a:	89 f0                	mov    eax,esi
   1709c:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   170a0:	f2 0f 59 4d d8       	mulsd  xmm1,QWORD PTR [rbp-0x28]
   170a5:	f2 0f 5c c1          	subsd  xmm0,xmm1
   170a9:	f2 0f 2c f8          	cvttsd2si edi,xmm0
   170ad:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
   170b1:	44 8b 45 b4          	mov    r8d,DWORD PTR [rbp-0x4c]
   170b5:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   170b8:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   170bb:	48 89 d0             	mov    rax,rdx
   170be:	48 c1 e0 02          	shl    rax,0x2
   170c2:	48 01 d0             	add    rax,rdx
   170c5:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   170cd:	48 01 d0             	add    rax,rdx
   170d0:	48 89 ca             	mov    rdx,rcx
   170d3:	48 c1 e2 02          	shl    rdx,0x2
   170d7:	48 01 ca             	add    rdx,rcx
   170da:	48 01 d0             	add    rax,rdx
   170dd:	4c 01 c0             	add    rax,r8
   170e0:	48 05 64 01 00 00    	add    rax,0x164
   170e6:	89 7c 86 08          	mov    DWORD PTR [rsi+rax*4+0x8],edi
   170ea:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
   170ed:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   170f0:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   170f3:	48 89 d0             	mov    rax,rdx
   170f6:	48 c1 e0 02          	shl    rax,0x2
   170fa:	48 01 d0             	add    rax,rdx
   170fd:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   17105:	48 01 d0             	add    rax,rdx
   17108:	48 89 ca             	mov    rdx,rcx
   1710b:	48 c1 e2 02          	shl    rdx,0x2
   1710f:	48 01 ca             	add    rdx,rcx
   17112:	48 01 d0             	add    rax,rdx
   17115:	48 01 f0             	add    rax,rsi
   17118:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   17120:	48 8d 05 b9 2f 1d 00 	lea    rax,[rip+0x1d2fb9]        # 1ea0e0 <mismatchHdH>
   17127:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1712a:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1712e:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
   17131:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   17134:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   17137:	48 89 d0             	mov    rax,rdx
   1713a:	48 c1 e0 02          	shl    rax,0x2
   1713e:	48 01 d0             	add    rax,rdx
   17141:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   17149:	48 01 d0             	add    rax,rdx
   1714c:	48 89 ca             	mov    rdx,rcx
   1714f:	48 c1 e2 02          	shl    rdx,0x2
   17153:	48 01 ca             	add    rdx,rcx
   17156:	48 01 d0             	add    rax,rdx
   17159:	48 01 f0             	add    rax,rsi
   1715c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   17164:	48 8d 05 75 2f 1d 00 	lea    rax,[rip+0x1d2f75]        # 1ea0e0 <mismatchHdH>
   1716b:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1716e:	8b 7d b4             	mov    edi,DWORD PTR [rbp-0x4c]
   17171:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   17174:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   17177:	48 89 d0             	mov    rax,rdx
   1717a:	48 c1 e0 02          	shl    rax,0x2
   1717e:	48 01 d0             	add    rax,rdx
   17181:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   17189:	48 01 d0             	add    rax,rdx
   1718c:	48 89 ca             	mov    rdx,rcx
   1718f:	48 c1 e2 02          	shl    rdx,0x2
   17193:	48 01 ca             	add    rdx,rcx
   17196:	48 01 d0             	add    rax,rdx
   17199:	48 01 f8             	add    rax,rdi
   1719c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   171a4:	48 8d 05 15 2c 1d 00 	lea    rax,[rip+0x1d2c15]        # 1e9dc0 <mismatchH37>
   171ab:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   171ae:	29 c6                	sub    esi,eax
   171b0:	89 f0                	mov    eax,esi
   171b2:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   171b6:	f2 0f 59 4d d8       	mulsd  xmm1,QWORD PTR [rbp-0x28]
   171bb:	f2 0f 5c c1          	subsd  xmm0,xmm1
   171bf:	f2 0f 2c f8          	cvttsd2si edi,xmm0
   171c3:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
   171c7:	44 8b 45 b4          	mov    r8d,DWORD PTR [rbp-0x4c]
   171cb:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   171ce:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   171d1:	48 89 d0             	mov    rax,rdx
   171d4:	48 c1 e0 02          	shl    rax,0x2
   171d8:	48 01 d0             	add    rax,rdx
   171db:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   171e3:	48 01 d0             	add    rax,rdx
   171e6:	48 89 ca             	mov    rdx,rcx
   171e9:	48 c1 e2 02          	shl    rdx,0x2
   171ed:	48 01 ca             	add    rdx,rcx
   171f0:	48 01 d0             	add    rax,rdx
   171f3:	4c 01 c0             	add    rax,r8
   171f6:	48 05 bc 03 00 00    	add    rax,0x3bc
   171fc:	89 7c 86 08          	mov    DWORD PTR [rsi+rax*4+0x8],edi
   17200:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
   17203:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   17206:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   17209:	48 89 d0             	mov    rax,rdx
   1720c:	48 c1 e0 02          	shl    rax,0x2
   17210:	48 01 d0             	add    rax,rdx
   17213:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1721b:	48 01 d0             	add    rax,rdx
   1721e:	48 89 ca             	mov    rdx,rcx
   17221:	48 c1 e2 02          	shl    rdx,0x2
   17225:	48 01 ca             	add    rdx,rcx
   17228:	48 01 d0             	add    rax,rdx
   1722b:	48 01 f0             	add    rax,rsi
   1722e:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   17236:	48 8d 05 23 3b 1d 00 	lea    rax,[rip+0x1d3b23]        # 1ead60 <mismatch1nIdH>
   1723d:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   17240:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   17244:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
   17247:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   1724a:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   1724d:	48 89 d0             	mov    rax,rdx
   17250:	48 c1 e0 02          	shl    rax,0x2
   17254:	48 01 d0             	add    rax,rdx
   17257:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1725f:	48 01 d0             	add    rax,rdx
   17262:	48 89 ca             	mov    rdx,rcx
   17265:	48 c1 e2 02          	shl    rdx,0x2
   17269:	48 01 ca             	add    rdx,rcx
   1726c:	48 01 d0             	add    rax,rdx
   1726f:	48 01 f0             	add    rax,rsi
   17272:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1727a:	48 8d 05 df 3a 1d 00 	lea    rax,[rip+0x1d3adf]        # 1ead60 <mismatch1nIdH>
   17281:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   17284:	8b 7d b4             	mov    edi,DWORD PTR [rbp-0x4c]
   17287:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   1728a:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   1728d:	48 89 d0             	mov    rax,rdx
   17290:	48 c1 e0 02          	shl    rax,0x2
   17294:	48 01 d0             	add    rax,rdx
   17297:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1729f:	48 01 d0             	add    rax,rdx
   172a2:	48 89 ca             	mov    rdx,rcx
   172a5:	48 c1 e2 02          	shl    rdx,0x2
   172a9:	48 01 ca             	add    rdx,rcx
   172ac:	48 01 d0             	add    rax,rdx
   172af:	48 01 f8             	add    rax,rdi
   172b2:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   172ba:	48 8d 05 7f 37 1d 00 	lea    rax,[rip+0x1d377f]        # 1eaa40 <mismatch1nI37>
   172c1:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   172c4:	29 c6                	sub    esi,eax
   172c6:	89 f0                	mov    eax,esi
   172c8:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   172cc:	f2 0f 59 4d d8       	mulsd  xmm1,QWORD PTR [rbp-0x28]
   172d1:	f2 0f 5c c1          	subsd  xmm0,xmm1
   172d5:	f2 0f 2c f8          	cvttsd2si edi,xmm0
   172d9:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
   172dd:	44 8b 45 b4          	mov    r8d,DWORD PTR [rbp-0x4c]
   172e1:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   172e4:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   172e7:	48 89 d0             	mov    rax,rdx
   172ea:	48 c1 e0 02          	shl    rax,0x2
   172ee:	48 01 d0             	add    rax,rdx
   172f1:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   172f9:	48 01 d0             	add    rax,rdx
   172fc:	48 89 ca             	mov    rdx,rcx
   172ff:	48 c1 e2 02          	shl    rdx,0x2
   17303:	48 01 ca             	add    rdx,rcx
   17306:	48 01 d0             	add    rax,rdx
   17309:	4c 01 c0             	add    rax,r8
   1730c:	48 05 2c 02 00 00    	add    rax,0x22c
   17312:	89 7c 86 08          	mov    DWORD PTR [rsi+rax*4+0x8],edi
   17316:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
   17319:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   1731c:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   1731f:	48 89 d0             	mov    rax,rdx
   17322:	48 c1 e0 02          	shl    rax,0x2
   17326:	48 01 d0             	add    rax,rdx
   17329:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   17331:	48 01 d0             	add    rax,rdx
   17334:	48 89 ca             	mov    rdx,rcx
   17337:	48 c1 e2 02          	shl    rdx,0x2
   1733b:	48 01 ca             	add    rdx,rcx
   1733e:	48 01 d0             	add    rax,rdx
   17341:	48 01 f0             	add    rax,rsi
   17344:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1734c:	48 8d 05 4d 40 1d 00 	lea    rax,[rip+0x1d404d]        # 1eb3a0 <mismatch23IdH>
   17353:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   17356:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1735a:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
   1735d:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   17360:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   17363:	48 89 d0             	mov    rax,rdx
   17366:	48 c1 e0 02          	shl    rax,0x2
   1736a:	48 01 d0             	add    rax,rdx
   1736d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   17375:	48 01 d0             	add    rax,rdx
   17378:	48 89 ca             	mov    rdx,rcx
   1737b:	48 c1 e2 02          	shl    rdx,0x2
   1737f:	48 01 ca             	add    rdx,rcx
   17382:	48 01 d0             	add    rax,rdx
   17385:	48 01 f0             	add    rax,rsi
   17388:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   17390:	48 8d 05 09 40 1d 00 	lea    rax,[rip+0x1d4009]        # 1eb3a0 <mismatch23IdH>
   17397:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1739a:	8b 7d b4             	mov    edi,DWORD PTR [rbp-0x4c]
   1739d:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   173a0:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   173a3:	48 89 d0             	mov    rax,rdx
   173a6:	48 c1 e0 02          	shl    rax,0x2
   173aa:	48 01 d0             	add    rax,rdx
   173ad:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   173b5:	48 01 d0             	add    rax,rdx
   173b8:	48 89 ca             	mov    rdx,rcx
   173bb:	48 c1 e2 02          	shl    rdx,0x2
   173bf:	48 01 ca             	add    rdx,rcx
   173c2:	48 01 d0             	add    rax,rdx
   173c5:	48 01 f8             	add    rax,rdi
   173c8:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   173d0:	48 8d 05 a9 3c 1d 00 	lea    rax,[rip+0x1d3ca9]        # 1eb080 <mismatch23I37>
   173d7:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   173da:	29 c6                	sub    esi,eax
   173dc:	89 f0                	mov    eax,esi
   173de:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   173e2:	f2 0f 59 4d d8       	mulsd  xmm1,QWORD PTR [rbp-0x28]
   173e7:	f2 0f 5c c1          	subsd  xmm0,xmm1
   173eb:	f2 0f 2c f8          	cvttsd2si edi,xmm0
   173ef:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
   173f3:	44 8b 45 b4          	mov    r8d,DWORD PTR [rbp-0x4c]
   173f7:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   173fa:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   173fd:	48 89 d0             	mov    rax,rdx
   17400:	48 c1 e0 02          	shl    rax,0x2
   17404:	48 01 d0             	add    rax,rdx
   17407:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1740f:	48 01 d0             	add    rax,rdx
   17412:	48 89 ca             	mov    rdx,rcx
   17415:	48 c1 e2 02          	shl    rdx,0x2
   17419:	48 01 ca             	add    rdx,rcx
   1741c:	48 01 d0             	add    rax,rdx
   1741f:	4c 01 c0             	add    rax,r8
   17422:	48 05 f4 02 00 00    	add    rax,0x2f4
   17428:	89 7c 86 08          	mov    DWORD PTR [rsi+rax*4+0x8],edi
   1742c:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   17430:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
   17433:	85 c0                	test   eax,eax
   17435:	0f 84 55 02 00 00    	je     17690 <get_scaled_params+0x1008>
   1743b:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
   1743e:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   17441:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   17444:	48 89 d0             	mov    rax,rdx
   17447:	48 c1 e0 02          	shl    rax,0x2
   1744b:	48 01 d0             	add    rax,rdx
   1744e:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   17456:	48 01 d0             	add    rax,rdx
   17459:	48 89 ca             	mov    rdx,rcx
   1745c:	48 c1 e2 02          	shl    rdx,0x2
   17460:	48 01 ca             	add    rdx,rcx
   17463:	48 01 d0             	add    rax,rdx
   17466:	48 01 f0             	add    rax,rsi
   17469:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   17471:	48 8d 05 a8 32 1d 00 	lea    rax,[rip+0x1d32a8]        # 1ea720 <mismatchMdH>
   17478:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1747b:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1747f:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
   17482:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   17485:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   17488:	48 89 d0             	mov    rax,rdx
   1748b:	48 c1 e0 02          	shl    rax,0x2
   1748f:	48 01 d0             	add    rax,rdx
   17492:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1749a:	48 01 d0             	add    rax,rdx
   1749d:	48 89 ca             	mov    rdx,rcx
   174a0:	48 c1 e2 02          	shl    rdx,0x2
   174a4:	48 01 ca             	add    rdx,rcx
   174a7:	48 01 d0             	add    rax,rdx
   174aa:	48 01 f0             	add    rax,rsi
   174ad:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   174b5:	48 8d 05 64 32 1d 00 	lea    rax,[rip+0x1d3264]        # 1ea720 <mismatchMdH>
   174bc:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   174bf:	8b 7d b4             	mov    edi,DWORD PTR [rbp-0x4c]
   174c2:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   174c5:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   174c8:	48 89 d0             	mov    rax,rdx
   174cb:	48 c1 e0 02          	shl    rax,0x2
   174cf:	48 01 d0             	add    rax,rdx
   174d2:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   174da:	48 01 d0             	add    rax,rdx
   174dd:	48 89 ca             	mov    rdx,rcx
   174e0:	48 c1 e2 02          	shl    rdx,0x2
   174e4:	48 01 ca             	add    rdx,rcx
   174e7:	48 01 d0             	add    rax,rdx
   174ea:	48 01 f8             	add    rax,rdi
   174ed:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   174f5:	48 8d 05 04 2f 1d 00 	lea    rax,[rip+0x1d2f04]        # 1ea400 <mismatchM37>
   174fc:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   174ff:	29 c6                	sub    esi,eax
   17501:	89 f0                	mov    eax,esi
   17503:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   17507:	f2 0f 59 4d d8       	mulsd  xmm1,QWORD PTR [rbp-0x28]
   1750c:	f2 0f 5c c1          	subsd  xmm0,xmm1
   17510:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   17514:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
   17517:	b8 00 00 00 00       	mov    eax,0x0
   1751c:	83 7d cc 00          	cmp    DWORD PTR [rbp-0x34],0x0
   17520:	0f 4e 45 cc          	cmovle eax,DWORD PTR [rbp-0x34]
   17524:	89 c7                	mov    edi,eax
   17526:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
   1752a:	44 8b 45 b4          	mov    r8d,DWORD PTR [rbp-0x4c]
   1752e:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   17531:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   17534:	48 89 d0             	mov    rax,rdx
   17537:	48 c1 e0 02          	shl    rax,0x2
   1753b:	48 01 d0             	add    rax,rdx
   1753e:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   17546:	48 01 d0             	add    rax,rdx
   17549:	48 89 ca             	mov    rdx,rcx
   1754c:	48 c1 e2 02          	shl    rdx,0x2
   17550:	48 01 ca             	add    rdx,rcx
   17553:	48 01 d0             	add    rax,rdx
   17556:	4c 01 c0             	add    rax,r8
   17559:	48 05 84 04 00 00    	add    rax,0x484
   1755f:	89 7c 86 08          	mov    DWORD PTR [rsi+rax*4+0x8],edi
   17563:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
   17566:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   17569:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   1756c:	48 89 d0             	mov    rax,rdx
   1756f:	48 c1 e0 02          	shl    rax,0x2
   17573:	48 01 d0             	add    rax,rdx
   17576:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1757e:	48 01 d0             	add    rax,rdx
   17581:	48 89 ca             	mov    rdx,rcx
   17584:	48 c1 e2 02          	shl    rdx,0x2
   17588:	48 01 ca             	add    rdx,rcx
   1758b:	48 01 d0             	add    rax,rdx
   1758e:	48 01 f0             	add    rax,rsi
   17591:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   17599:	48 8d 05 40 44 1d 00 	lea    rax,[rip+0x1d4440]        # 1eb9e0 <mismatchExtdH>
   175a0:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   175a3:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   175a7:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
   175aa:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   175ad:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   175b0:	48 89 d0             	mov    rax,rdx
   175b3:	48 c1 e0 02          	shl    rax,0x2
   175b7:	48 01 d0             	add    rax,rdx
   175ba:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   175c2:	48 01 d0             	add    rax,rdx
   175c5:	48 89 ca             	mov    rdx,rcx
   175c8:	48 c1 e2 02          	shl    rdx,0x2
   175cc:	48 01 ca             	add    rdx,rcx
   175cf:	48 01 d0             	add    rax,rdx
   175d2:	48 01 f0             	add    rax,rsi
   175d5:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   175dd:	48 8d 05 fc 43 1d 00 	lea    rax,[rip+0x1d43fc]        # 1eb9e0 <mismatchExtdH>
   175e4:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   175e7:	8b 7d b4             	mov    edi,DWORD PTR [rbp-0x4c]
   175ea:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   175ed:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   175f0:	48 89 d0             	mov    rax,rdx
   175f3:	48 c1 e0 02          	shl    rax,0x2
   175f7:	48 01 d0             	add    rax,rdx
   175fa:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   17602:	48 01 d0             	add    rax,rdx
   17605:	48 89 ca             	mov    rdx,rcx
   17608:	48 c1 e2 02          	shl    rdx,0x2
   1760c:	48 01 ca             	add    rdx,rcx
   1760f:	48 01 d0             	add    rax,rdx
   17612:	48 01 f8             	add    rax,rdi
   17615:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1761d:	48 8d 05 9c 40 1d 00 	lea    rax,[rip+0x1d409c]        # 1eb6c0 <mismatchExt37>
   17624:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   17627:	29 c6                	sub    esi,eax
   17629:	89 f0                	mov    eax,esi
   1762b:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1762f:	f2 0f 59 4d d8       	mulsd  xmm1,QWORD PTR [rbp-0x28]
   17634:	f2 0f 5c c1          	subsd  xmm0,xmm1
   17638:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1763c:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
   1763f:	b8 00 00 00 00       	mov    eax,0x0
   17644:	83 7d cc 00          	cmp    DWORD PTR [rbp-0x34],0x0
   17648:	0f 4e 45 cc          	cmovle eax,DWORD PTR [rbp-0x34]
   1764c:	89 c7                	mov    edi,eax
   1764e:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
   17652:	44 8b 45 b4          	mov    r8d,DWORD PTR [rbp-0x4c]
   17656:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   17659:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   1765c:	48 89 d0             	mov    rax,rdx
   1765f:	48 c1 e0 02          	shl    rax,0x2
   17663:	48 01 d0             	add    rax,rdx
   17666:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1766e:	48 01 d0             	add    rax,rdx
   17671:	48 89 ca             	mov    rdx,rcx
   17674:	48 c1 e2 02          	shl    rdx,0x2
   17678:	48 01 ca             	add    rdx,rcx
   1767b:	48 01 d0             	add    rax,rdx
   1767e:	4c 01 c0             	add    rax,r8
   17681:	48 05 9c 00 00 00    	add    rax,0x9c
   17687:	89 7c 86 08          	mov    DWORD PTR [rsi+rax*4+0x8],edi
   1768b:	e9 b9 00 00 00       	jmp    17749 <get_scaled_params+0x10c1>
   17690:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
   17694:	8b 7d b4             	mov    edi,DWORD PTR [rbp-0x4c]
   17697:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   1769a:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   1769d:	48 89 d0             	mov    rax,rdx
   176a0:	48 c1 e0 02          	shl    rax,0x2
   176a4:	48 01 d0             	add    rax,rdx
   176a7:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   176af:	48 01 d0             	add    rax,rdx
   176b2:	48 89 ca             	mov    rdx,rcx
   176b5:	48 c1 e2 02          	shl    rdx,0x2
   176b9:	48 01 ca             	add    rdx,rcx
   176bc:	48 01 d0             	add    rax,rdx
   176bf:	48 01 f8             	add    rax,rdi
   176c2:	48 05 9c 00 00 00    	add    rax,0x9c
   176c8:	c7 44 86 08 00 00 00 00 	mov    DWORD PTR [rsi+rax*4+0x8],0x0
   176d0:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
   176d4:	8b 7d b4             	mov    edi,DWORD PTR [rbp-0x4c]
   176d7:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   176da:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   176dd:	48 89 d0             	mov    rax,rdx
   176e0:	48 c1 e0 02          	shl    rax,0x2
   176e4:	48 01 d0             	add    rax,rdx
   176e7:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   176ef:	48 01 d0             	add    rax,rdx
   176f2:	48 89 ca             	mov    rdx,rcx
   176f5:	48 c1 e2 02          	shl    rdx,0x2
   176f9:	48 01 ca             	add    rdx,rcx
   176fc:	48 01 d0             	add    rax,rdx
   176ff:	48 01 f8             	add    rax,rdi
   17702:	48 05 9c 00 00 00    	add    rax,0x9c
   17708:	8b 7c 86 08          	mov    edi,DWORD PTR [rsi+rax*4+0x8]
   1770c:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
   17710:	44 8b 45 b4          	mov    r8d,DWORD PTR [rbp-0x4c]
   17714:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   17717:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   1771a:	48 89 d0             	mov    rax,rdx
   1771d:	48 c1 e0 02          	shl    rax,0x2
   17721:	48 01 d0             	add    rax,rdx
   17724:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1772c:	48 01 d0             	add    rax,rdx
   1772f:	48 89 ca             	mov    rdx,rcx
   17732:	48 c1 e2 02          	shl    rdx,0x2
   17736:	48 01 ca             	add    rdx,rcx
   17739:	48 01 d0             	add    rax,rdx
   1773c:	4c 01 c0             	add    rax,r8
   1773f:	48 05 84 04 00 00    	add    rax,0x484
   17745:	89 7c 86 08          	mov    DWORD PTR [rsi+rax*4+0x8],edi
   17749:	83 45 b4 01          	add    DWORD PTR [rbp-0x4c],0x1
   1774d:	83 7d b4 04          	cmp    DWORD PTR [rbp-0x4c],0x4
   17751:	0f 86 7d f8 ff ff    	jbe    16fd4 <get_scaled_params+0x94c>
   17757:	83 45 b0 01          	add    DWORD PTR [rbp-0x50],0x1
   1775b:	83 7d b0 04          	cmp    DWORD PTR [rbp-0x50],0x4
   1775f:	0f 86 63 f8 ff ff    	jbe    16fc8 <get_scaled_params+0x940>
   17765:	83 45 ac 01          	add    DWORD PTR [rbp-0x54],0x1
   17769:	83 7d ac 07          	cmp    DWORD PTR [rbp-0x54],0x7
   1776d:	0f 86 49 f8 ff ff    	jbe    16fbc <get_scaled_params+0x934>
   17773:	c7 45 ac 00 00 00 00 	mov    DWORD PTR [rbp-0x54],0x0
   1777a:	e9 94 01 00 00       	jmp    17913 <get_scaled_params+0x128b>
   1777f:	c7 45 b0 00 00 00 00 	mov    DWORD PTR [rbp-0x50],0x0
   17786:	e9 7a 01 00 00       	jmp    17905 <get_scaled_params+0x127d>
   1778b:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   1778e:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   17791:	48 89 d0             	mov    rax,rdx
   17794:	48 c1 e0 02          	shl    rax,0x2
   17798:	48 01 d0             	add    rax,rdx
   1779b:	48 01 c8             	add    rax,rcx
   1779e:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   177a6:	48 8d 05 93 46 1d 00 	lea    rax,[rip+0x1d4693]        # 1ebe40 <dangle5_dH>
   177ad:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   177b0:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   177b4:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   177b7:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   177ba:	48 89 d0             	mov    rax,rdx
   177bd:	48 c1 e0 02          	shl    rax,0x2
   177c1:	48 01 d0             	add    rax,rdx
   177c4:	48 01 c8             	add    rax,rcx
   177c7:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   177cf:	48 8d 05 6a 46 1d 00 	lea    rax,[rip+0x1d466a]        # 1ebe40 <dangle5_dH>
   177d6:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   177d9:	8b 75 b0             	mov    esi,DWORD PTR [rbp-0x50]
   177dc:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   177df:	48 89 d0             	mov    rax,rdx
   177e2:	48 c1 e0 02          	shl    rax,0x2
   177e6:	48 01 d0             	add    rax,rdx
   177e9:	48 01 f0             	add    rax,rsi
   177ec:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   177f4:	48 8d 05 05 45 1d 00 	lea    rax,[rip+0x1d4505]        # 1ebd00 <dangle5_37>
   177fb:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   177fe:	29 c1                	sub    ecx,eax
   17800:	89 c8                	mov    eax,ecx
   17802:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   17806:	f2 0f 59 4d d8       	mulsd  xmm1,QWORD PTR [rbp-0x28]
   1780b:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1780f:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   17813:	89 45 c8             	mov    DWORD PTR [rbp-0x38],eax
   17816:	b8 00 00 00 00       	mov    eax,0x0
   1781b:	83 7d c8 00          	cmp    DWORD PTR [rbp-0x38],0x0
   1781f:	0f 4e 45 c8          	cmovle eax,DWORD PTR [rbp-0x38]
   17823:	89 c6                	mov    esi,eax
   17825:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
   17829:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
   1782c:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   1782f:	48 89 d0             	mov    rax,rdx
   17832:	48 c1 e0 02          	shl    rax,0x2
   17836:	48 01 d0             	add    rax,rdx
   17839:	48 01 f8             	add    rax,rdi
   1783c:	48 05 4c 05 00 00    	add    rax,0x54c
   17842:	89 74 81 08          	mov    DWORD PTR [rcx+rax*4+0x8],esi
   17846:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   17849:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   1784c:	48 89 d0             	mov    rax,rdx
   1784f:	48 c1 e0 02          	shl    rax,0x2
   17853:	48 01 d0             	add    rax,rdx
   17856:	48 01 c8             	add    rax,rcx
   17859:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   17861:	48 8d 05 78 46 1d 00 	lea    rax,[rip+0x1d4678]        # 1ebee0 <dangle3_dH>
   17868:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1786b:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1786f:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   17872:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   17875:	48 89 d0             	mov    rax,rdx
   17878:	48 c1 e0 02          	shl    rax,0x2
   1787c:	48 01 d0             	add    rax,rdx
   1787f:	48 01 c8             	add    rax,rcx
   17882:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1788a:	48 8d 05 4f 46 1d 00 	lea    rax,[rip+0x1d464f]        # 1ebee0 <dangle3_dH>
   17891:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   17894:	8b 75 b0             	mov    esi,DWORD PTR [rbp-0x50]
   17897:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   1789a:	48 89 d0             	mov    rax,rdx
   1789d:	48 c1 e0 02          	shl    rax,0x2
   178a1:	48 01 d0             	add    rax,rdx
   178a4:	48 01 f0             	add    rax,rsi
   178a7:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   178af:	48 8d 05 ea 44 1d 00 	lea    rax,[rip+0x1d44ea]        # 1ebda0 <dangle3_37>
   178b6:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   178b9:	29 c1                	sub    ecx,eax
   178bb:	89 c8                	mov    eax,ecx
   178bd:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   178c1:	f2 0f 59 4d d8       	mulsd  xmm1,QWORD PTR [rbp-0x28]
   178c6:	f2 0f 5c c1          	subsd  xmm0,xmm1
   178ca:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   178ce:	89 45 c8             	mov    DWORD PTR [rbp-0x38],eax
   178d1:	b8 00 00 00 00       	mov    eax,0x0
   178d6:	83 7d c8 00          	cmp    DWORD PTR [rbp-0x38],0x0
   178da:	0f 4e 45 c8          	cmovle eax,DWORD PTR [rbp-0x38]
   178de:	89 c6                	mov    esi,eax
   178e0:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
   178e4:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
   178e7:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
   178ea:	48 89 d0             	mov    rax,rdx
   178ed:	48 c1 e0 02          	shl    rax,0x2
   178f1:	48 01 d0             	add    rax,rdx
   178f4:	48 01 f8             	add    rax,rdi
   178f7:	48 05 74 05 00 00    	add    rax,0x574
   178fd:	89 74 81 08          	mov    DWORD PTR [rcx+rax*4+0x8],esi
   17901:	83 45 b0 01          	add    DWORD PTR [rbp-0x50],0x1
   17905:	83 7d b0 04          	cmp    DWORD PTR [rbp-0x50],0x4
   17909:	0f 86 7c fe ff ff    	jbe    1778b <get_scaled_params+0x1103>
   1790f:	83 45 ac 01          	add    DWORD PTR [rbp-0x54],0x1
   17913:	83 7d ac 07          	cmp    DWORD PTR [rbp-0x54],0x7
   17917:	0f 86 62 fe ff ff    	jbe    1777f <get_scaled_params+0x10f7>
   1791d:	c7 45 ac 00 00 00 00 	mov    DWORD PTR [rbp-0x54],0x0
   17924:	e9 e8 01 00 00       	jmp    17b11 <get_scaled_params+0x1489>
   17929:	c7 45 b0 00 00 00 00 	mov    DWORD PTR [rbp-0x50],0x0
   17930:	e9 ce 01 00 00       	jmp    17b03 <get_scaled_params+0x147b>
   17935:	c7 45 b4 00 00 00 00 	mov    DWORD PTR [rbp-0x4c],0x0
   1793c:	e9 b4 01 00 00       	jmp    17af5 <get_scaled_params+0x146d>
   17941:	c7 45 b8 00 00 00 00 	mov    DWORD PTR [rbp-0x48],0x0
   17948:	e9 9a 01 00 00       	jmp    17ae7 <get_scaled_params+0x145f>
   1794d:	8b 7d b8             	mov    edi,DWORD PTR [rbp-0x48]
   17950:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
   17953:	8b 4d b4             	mov    ecx,DWORD PTR [rbp-0x4c]
   17956:	8b 75 ac             	mov    esi,DWORD PTR [rbp-0x54]
   17959:	48 89 c2             	mov    rdx,rax
   1795c:	48 c1 e2 02          	shl    rdx,0x2
   17960:	48 01 c2             	add    rdx,rax
   17963:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   1796b:	48 01 c2             	add    rdx,rax
   1796e:	48 89 f0             	mov    rax,rsi
   17971:	48 c1 e0 02          	shl    rax,0x2
   17975:	48 01 f0             	add    rax,rsi
   17978:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   17980:	48 01 f0             	add    rax,rsi
   17983:	48 c1 e0 03          	shl    rax,0x3
   17987:	48 01 c2             	add    rdx,rax
   1798a:	48 89 c8             	mov    rax,rcx
   1798d:	48 c1 e0 02          	shl    rax,0x2
   17991:	48 01 c8             	add    rax,rcx
   17994:	48 01 d0             	add    rax,rdx
   17997:	48 01 f8             	add    rax,rdi
   1799a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   179a2:	48 8d 05 37 66 1d 00 	lea    rax,[rip+0x1d6637]        # 1edfe0 <int11_dH>
   179a9:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   179ac:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   179b0:	8b 7d b8             	mov    edi,DWORD PTR [rbp-0x48]
   179b3:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
   179b6:	8b 4d b4             	mov    ecx,DWORD PTR [rbp-0x4c]
   179b9:	8b 75 ac             	mov    esi,DWORD PTR [rbp-0x54]
   179bc:	48 89 c2             	mov    rdx,rax
   179bf:	48 c1 e2 02          	shl    rdx,0x2
   179c3:	48 01 c2             	add    rdx,rax
   179c6:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   179ce:	48 01 c2             	add    rdx,rax
   179d1:	48 89 f0             	mov    rax,rsi
   179d4:	48 c1 e0 02          	shl    rax,0x2
   179d8:	48 01 f0             	add    rax,rsi
   179db:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   179e3:	48 01 f0             	add    rax,rsi
   179e6:	48 c1 e0 03          	shl    rax,0x3
   179ea:	48 01 c2             	add    rdx,rax
   179ed:	48 89 c8             	mov    rax,rcx
   179f0:	48 c1 e0 02          	shl    rax,0x2
   179f4:	48 01 c8             	add    rax,rcx
   179f7:	48 01 d0             	add    rax,rdx
   179fa:	48 01 f8             	add    rax,rdi
   179fd:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   17a05:	48 8d 05 d4 65 1d 00 	lea    rax,[rip+0x1d65d4]        # 1edfe0 <int11_dH>
   17a0c:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
   17a0f:	44 8b 45 b8          	mov    r8d,DWORD PTR [rbp-0x48]
   17a13:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
   17a16:	8b 4d b4             	mov    ecx,DWORD PTR [rbp-0x4c]
   17a19:	8b 75 ac             	mov    esi,DWORD PTR [rbp-0x54]
   17a1c:	48 89 c2             	mov    rdx,rax
   17a1f:	48 c1 e2 02          	shl    rdx,0x2
   17a23:	48 01 c2             	add    rdx,rax
   17a26:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   17a2e:	48 01 c2             	add    rdx,rax
   17a31:	48 89 f0             	mov    rax,rsi
   17a34:	48 c1 e0 02          	shl    rax,0x2
   17a38:	48 01 f0             	add    rax,rsi
   17a3b:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   17a43:	48 01 f0             	add    rax,rsi
   17a46:	48 c1 e0 03          	shl    rax,0x3
   17a4a:	48 01 c2             	add    rdx,rax
   17a4d:	48 89 c8             	mov    rax,rcx
   17a50:	48 c1 e0 02          	shl    rax,0x2
   17a54:	48 01 c8             	add    rax,rcx
   17a57:	48 01 d0             	add    rax,rdx
   17a5a:	4c 01 c0             	add    rax,r8
   17a5d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   17a65:	48 8d 05 74 4c 1d 00 	lea    rax,[rip+0x1d4c74]        # 1ec6e0 <int11_37>
   17a6c:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   17a6f:	29 c7                	sub    edi,eax
   17a71:	89 f8                	mov    eax,edi
   17a73:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   17a77:	f2 0f 59 4d d8       	mulsd  xmm1,QWORD PTR [rbp-0x28]
   17a7c:	f2 0f 5c c1          	subsd  xmm0,xmm1
   17a80:	f2 44 0f 2c c0       	cvttsd2si r8d,xmm0
   17a85:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
   17a89:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
   17a8d:	8b 55 b0             	mov    edx,DWORD PTR [rbp-0x50]
   17a90:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
   17a93:	8b 4d ac             	mov    ecx,DWORD PTR [rbp-0x54]
   17a96:	48 89 d0             	mov    rax,rdx
   17a99:	48 c1 e0 02          	shl    rax,0x2
   17a9d:	48 01 d0             	add    rax,rdx
   17aa0:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   17aa8:	48 01 d0             	add    rax,rdx
   17aab:	48 89 f2             	mov    rdx,rsi
   17aae:	48 c1 e2 02          	shl    rdx,0x2
   17ab2:	48 01 f2             	add    rdx,rsi
   17ab5:	48 8d 34 10          	lea    rsi,[rax+rdx*1]
   17ab9:	48 89 c8             	mov    rax,rcx
   17abc:	48 c1 e0 02          	shl    rax,0x2
   17ac0:	48 01 c8             	add    rax,rcx
   17ac3:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   17acb:	48 01 d0             	add    rax,rdx
   17ace:	48 c1 e0 03          	shl    rax,0x3
   17ad2:	48 01 f0             	add    rax,rsi
   17ad5:	4c 01 c8             	add    rax,r9
   17ad8:	48 05 9c 05 00 00    	add    rax,0x59c
   17ade:	44 89 44 87 08       	mov    DWORD PTR [rdi+rax*4+0x8],r8d
   17ae3:	83 45 b8 01          	add    DWORD PTR [rbp-0x48],0x1
   17ae7:	83 7d b8 04          	cmp    DWORD PTR [rbp-0x48],0x4
   17aeb:	0f 86 5c fe ff ff    	jbe    1794d <get_scaled_params+0x12c5>
   17af1:	83 45 b4 01          	add    DWORD PTR [rbp-0x4c],0x1
   17af5:	83 7d b4 04          	cmp    DWORD PTR [rbp-0x4c],0x4
   17af9:	0f 86 42 fe ff ff    	jbe    17941 <get_scaled_params+0x12b9>
   17aff:	83 45 b0 01          	add    DWORD PTR [rbp-0x50],0x1
   17b03:	83 7d b0 07          	cmp    DWORD PTR [rbp-0x50],0x7
   17b07:	0f 86 28 fe ff ff    	jbe    17935 <get_scaled_params+0x12ad>
   17b0d:	83 45 ac 01          	add    DWORD PTR [rbp-0x54],0x1
   17b11:	83 7d ac 07          	cmp    DWORD PTR [rbp-0x54],0x7
   17b15:	0f 86 0e fe ff ff    	jbe    17929 <get_scaled_params+0x12a1>
   17b1b:	c7 45 ac 00 00 00 00 	mov    DWORD PTR [rbp-0x54],0x0
   17b22:	e9 26 02 00 00       	jmp    17d4d <get_scaled_params+0x16c5>
   17b27:	c7 45 b0 00 00 00 00 	mov    DWORD PTR [rbp-0x50],0x0
   17b2e:	e9 0c 02 00 00       	jmp    17d3f <get_scaled_params+0x16b7>
   17b33:	c7 45 b4 00 00 00 00 	mov    DWORD PTR [rbp-0x4c],0x0
   17b3a:	e9 f2 01 00 00       	jmp    17d31 <get_scaled_params+0x16a9>
   17b3f:	c7 45 b8 00 00 00 00 	mov    DWORD PTR [rbp-0x48],0x0
   17b46:	e9 d8 01 00 00       	jmp    17d23 <get_scaled_params+0x169b>
   17b4b:	c7 45 bc 00 00 00 00 	mov    DWORD PTR [rbp-0x44],0x0
   17b52:	e9 be 01 00 00       	jmp    17d15 <get_scaled_params+0x168d>
   17b57:	8b 45 bc             	mov    eax,DWORD PTR [rbp-0x44]
   17b5a:	48 63 f8             	movsxd rdi,eax
   17b5d:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
   17b60:	8b 4d b8             	mov    ecx,DWORD PTR [rbp-0x48]
   17b63:	44 8b 45 ac          	mov    r8d,DWORD PTR [rbp-0x54]
   17b67:	8b 55 b0             	mov    edx,DWORD PTR [rbp-0x50]
   17b6a:	48 89 f0             	mov    rax,rsi
   17b6d:	48 c1 e0 02          	shl    rax,0x2
   17b71:	48 01 f0             	add    rax,rsi
   17b74:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   17b7c:	48 01 f0             	add    rax,rsi
   17b7f:	49 69 f0 e8 03 00 00 	imul   rsi,r8,0x3e8
   17b86:	48 01 c6             	add    rsi,rax
   17b89:	48 89 d0             	mov    rax,rdx
   17b8c:	48 c1 e0 05          	shl    rax,0x5
   17b90:	48 29 d0             	sub    rax,rdx
   17b93:	48 c1 e0 02          	shl    rax,0x2
   17b97:	48 01 d0             	add    rax,rdx
   17b9a:	48 8d 14 06          	lea    rdx,[rsi+rax*1]
   17b9e:	48 89 c8             	mov    rax,rcx
   17ba1:	48 c1 e0 02          	shl    rax,0x2
   17ba5:	48 01 c8             	add    rax,rcx
   17ba8:	48 01 d0             	add    rax,rdx
   17bab:	48 01 f8             	add    rax,rdi
   17bae:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   17bb6:	48 8d 05 23 fa 1d 00 	lea    rax,[rip+0x1dfa23]        # 1f75e0 <int21_dH>
   17bbd:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   17bc0:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   17bc4:	8b 45 bc             	mov    eax,DWORD PTR [rbp-0x44]
   17bc7:	48 63 f8             	movsxd rdi,eax
   17bca:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
   17bcd:	8b 4d b8             	mov    ecx,DWORD PTR [rbp-0x48]
   17bd0:	44 8b 45 ac          	mov    r8d,DWORD PTR [rbp-0x54]
   17bd4:	8b 55 b0             	mov    edx,DWORD PTR [rbp-0x50]
   17bd7:	48 89 f0             	mov    rax,rsi
   17bda:	48 c1 e0 02          	shl    rax,0x2
   17bde:	48 01 f0             	add    rax,rsi
   17be1:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   17be9:	48 01 f0             	add    rax,rsi
   17bec:	49 69 f0 e8 03 00 00 	imul   rsi,r8,0x3e8
   17bf3:	48 01 c6             	add    rsi,rax
   17bf6:	48 89 d0             	mov    rax,rdx
   17bf9:	48 c1 e0 05          	shl    rax,0x5
   17bfd:	48 29 d0             	sub    rax,rdx
   17c00:	48 c1 e0 02          	shl    rax,0x2
   17c04:	48 01 d0             	add    rax,rdx
   17c07:	48 8d 14 06          	lea    rdx,[rsi+rax*1]
   17c0b:	48 89 c8             	mov    rax,rcx
   17c0e:	48 c1 e0 02          	shl    rax,0x2
   17c12:	48 01 c8             	add    rax,rcx
   17c15:	48 01 d0             	add    rax,rdx
   17c18:	48 01 f8             	add    rax,rdi
   17c1b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   17c23:	48 8d 05 b6 f9 1d 00 	lea    rax,[rip+0x1df9b6]        # 1f75e0 <int21_dH>
   17c2a:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
   17c2d:	8b 45 bc             	mov    eax,DWORD PTR [rbp-0x44]
   17c30:	4c 63 c0             	movsxd r8,eax
   17c33:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
   17c36:	8b 4d b8             	mov    ecx,DWORD PTR [rbp-0x48]
   17c39:	44 8b 4d ac          	mov    r9d,DWORD PTR [rbp-0x54]
   17c3d:	8b 55 b0             	mov    edx,DWORD PTR [rbp-0x50]
   17c40:	48 89 f0             	mov    rax,rsi
   17c43:	48 c1 e0 02          	shl    rax,0x2
   17c47:	48 01 f0             	add    rax,rsi
   17c4a:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   17c52:	48 01 f0             	add    rax,rsi
   17c55:	49 69 f1 e8 03 00 00 	imul   rsi,r9,0x3e8
   17c5c:	48 01 c6             	add    rsi,rax
   17c5f:	48 89 d0             	mov    rax,rdx
   17c62:	48 c1 e0 05          	shl    rax,0x5
   17c66:	48 29 d0             	sub    rax,rdx
   17c69:	48 c1 e0 02          	shl    rax,0x2
   17c6d:	48 01 d0             	add    rax,rdx
   17c70:	48 8d 14 06          	lea    rdx,[rsi+rax*1]
   17c74:	48 89 c8             	mov    rax,rcx
   17c77:	48 c1 e0 02          	shl    rax,0x2
   17c7b:	48 01 c8             	add    rax,rcx
   17c7e:	48 01 d0             	add    rax,rdx
   17c81:	4c 01 c0             	add    rax,r8
   17c84:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   17c8c:	48 8d 05 4d 7c 1d 00 	lea    rax,[rip+0x1d7c4d]        # 1ef8e0 <int21_37>
   17c93:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   17c96:	29 c7                	sub    edi,eax
   17c98:	89 f8                	mov    eax,edi
   17c9a:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   17c9e:	f2 0f 59 4d d8       	mulsd  xmm1,QWORD PTR [rbp-0x28]
   17ca3:	f2 0f 5c c1          	subsd  xmm0,xmm1
   17ca7:	f2 44 0f 2c c0       	cvttsd2si r8d,xmm0
   17cac:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
   17cb0:	8b 45 bc             	mov    eax,DWORD PTR [rbp-0x44]
   17cb3:	4c 63 c8             	movsxd r9,eax
   17cb6:	8b 55 b4             	mov    edx,DWORD PTR [rbp-0x4c]
   17cb9:	8b 75 b8             	mov    esi,DWORD PTR [rbp-0x48]
   17cbc:	44 8b 55 ac          	mov    r10d,DWORD PTR [rbp-0x54]
   17cc0:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
   17cc3:	48 89 d0             	mov    rax,rdx
   17cc6:	48 c1 e0 02          	shl    rax,0x2
   17cca:	48 01 d0             	add    rax,rdx
   17ccd:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   17cd5:	48 01 d0             	add    rax,rdx
   17cd8:	48 89 f2             	mov    rdx,rsi
   17cdb:	48 c1 e2 02          	shl    rdx,0x2
   17cdf:	48 01 f2             	add    rdx,rsi
   17ce2:	48 01 c2             	add    rdx,rax
   17ce5:	48 89 c8             	mov    rax,rcx
   17ce8:	48 c1 e0 05          	shl    rax,0x5
   17cec:	48 29 c8             	sub    rax,rcx
   17cef:	48 c1 e0 02          	shl    rax,0x2
   17cf3:	48 01 c8             	add    rax,rcx
   17cf6:	48 01 c2             	add    rdx,rax
   17cf9:	49 69 c2 e8 03 00 00 	imul   rax,r10,0x3e8
   17d00:	48 01 d0             	add    rax,rdx
   17d03:	4c 01 c8             	add    rax,r9
   17d06:	48 05 dc 0b 00 00    	add    rax,0xbdc
   17d0c:	44 89 44 87 08       	mov    DWORD PTR [rdi+rax*4+0x8],r8d
   17d11:	83 45 bc 01          	add    DWORD PTR [rbp-0x44],0x1
   17d15:	83 7d bc 04          	cmp    DWORD PTR [rbp-0x44],0x4
   17d19:	0f 8e 38 fe ff ff    	jle    17b57 <get_scaled_params+0x14cf>
   17d1f:	83 45 b8 01          	add    DWORD PTR [rbp-0x48],0x1
   17d23:	83 7d b8 04          	cmp    DWORD PTR [rbp-0x48],0x4
   17d27:	0f 86 1e fe ff ff    	jbe    17b4b <get_scaled_params+0x14c3>
   17d2d:	83 45 b4 01          	add    DWORD PTR [rbp-0x4c],0x1
   17d31:	83 7d b4 04          	cmp    DWORD PTR [rbp-0x4c],0x4
   17d35:	0f 86 04 fe ff ff    	jbe    17b3f <get_scaled_params+0x14b7>
   17d3b:	83 45 b0 01          	add    DWORD PTR [rbp-0x50],0x1
   17d3f:	83 7d b0 07          	cmp    DWORD PTR [rbp-0x50],0x7
   17d43:	0f 86 ea fd ff ff    	jbe    17b33 <get_scaled_params+0x14ab>
   17d49:	83 45 ac 01          	add    DWORD PTR [rbp-0x54],0x1
   17d4d:	83 7d ac 07          	cmp    DWORD PTR [rbp-0x54],0x7
   17d51:	0f 86 d0 fd ff ff    	jbe    17b27 <get_scaled_params+0x149f>
   17d57:	c7 45 ac 00 00 00 00 	mov    DWORD PTR [rbp-0x54],0x0
   17d5e:	e9 88 02 00 00       	jmp    17feb <get_scaled_params+0x1963>
   17d63:	c7 45 b0 00 00 00 00 	mov    DWORD PTR [rbp-0x50],0x0
   17d6a:	e9 6e 02 00 00       	jmp    17fdd <get_scaled_params+0x1955>
   17d6f:	c7 45 b4 00 00 00 00 	mov    DWORD PTR [rbp-0x4c],0x0
   17d76:	e9 54 02 00 00       	jmp    17fcf <get_scaled_params+0x1947>
   17d7b:	c7 45 b8 00 00 00 00 	mov    DWORD PTR [rbp-0x48],0x0
   17d82:	e9 3a 02 00 00       	jmp    17fc1 <get_scaled_params+0x1939>
   17d87:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
   17d8e:	e9 20 02 00 00       	jmp    17fb3 <get_scaled_params+0x192b>
   17d93:	c7 45 c4 00 00 00 00 	mov    DWORD PTR [rbp-0x3c],0x0
   17d9a:	e9 06 02 00 00       	jmp    17fa5 <get_scaled_params+0x191d>
   17d9f:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
   17da2:	48 63 f8             	movsxd rdi,eax
   17da5:	8b 75 b8             	mov    esi,DWORD PTR [rbp-0x48]
   17da8:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
   17dab:	48 63 c8             	movsxd rcx,eax
   17dae:	44 8b 45 b0          	mov    r8d,DWORD PTR [rbp-0x50]
   17db2:	8b 55 b4             	mov    edx,DWORD PTR [rbp-0x4c]
   17db5:	44 8b 4d ac          	mov    r9d,DWORD PTR [rbp-0x54]
   17db9:	48 89 f0             	mov    rax,rsi
   17dbc:	48 c1 e0 02          	shl    rax,0x2
   17dc0:	48 01 f0             	add    rax,rsi
   17dc3:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   17dcb:	48 01 f0             	add    rax,rsi
   17dce:	49 69 f1 88 13 00 00 	imul   rsi,r9,0x1388
   17dd5:	48 01 c6             	add    rsi,rax
   17dd8:	48 89 c8             	mov    rax,rcx
   17ddb:	48 c1 e0 02          	shl    rax,0x2
   17ddf:	48 01 c8             	add    rax,rcx
   17de2:	48 8d 0c 06          	lea    rcx,[rsi+rax*1]
   17de6:	48 89 d0             	mov    rax,rdx
   17de9:	48 c1 e0 05          	shl    rax,0x5
   17ded:	48 29 d0             	sub    rax,rdx
   17df0:	48 c1 e0 02          	shl    rax,0x2
   17df4:	48 01 d0             	add    rax,rdx
   17df7:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   17dfb:	49 69 c0 71 02 00 00 	imul   rax,r8,0x271
   17e02:	48 01 d0             	add    rax,rdx
   17e05:	48 01 f8             	add    rax,rdi
   17e08:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   17e10:	48 8d 05 c9 e5 20 00 	lea    rax,[rip+0x20e5c9]        # 2263e0 <int22_dH>
   17e17:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   17e1a:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   17e1e:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
   17e21:	48 63 f8             	movsxd rdi,eax
   17e24:	8b 75 b8             	mov    esi,DWORD PTR [rbp-0x48]
   17e27:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
   17e2a:	48 63 c8             	movsxd rcx,eax
   17e2d:	44 8b 45 b0          	mov    r8d,DWORD PTR [rbp-0x50]
   17e31:	8b 55 b4             	mov    edx,DWORD PTR [rbp-0x4c]
   17e34:	44 8b 4d ac          	mov    r9d,DWORD PTR [rbp-0x54]
   17e38:	48 89 f0             	mov    rax,rsi
   17e3b:	48 c1 e0 02          	shl    rax,0x2
   17e3f:	48 01 f0             	add    rax,rsi
   17e42:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   17e4a:	48 01 f0             	add    rax,rsi
   17e4d:	49 69 f1 88 13 00 00 	imul   rsi,r9,0x1388
   17e54:	48 01 c6             	add    rsi,rax
   17e57:	48 89 c8             	mov    rax,rcx
   17e5a:	48 c1 e0 02          	shl    rax,0x2
   17e5e:	48 01 c8             	add    rax,rcx
   17e61:	48 8d 0c 06          	lea    rcx,[rsi+rax*1]
   17e65:	48 89 d0             	mov    rax,rdx
   17e68:	48 c1 e0 05          	shl    rax,0x5
   17e6c:	48 29 d0             	sub    rax,rdx
   17e6f:	48 c1 e0 02          	shl    rax,0x2
   17e73:	48 01 d0             	add    rax,rdx
   17e76:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   17e7a:	49 69 c0 71 02 00 00 	imul   rax,r8,0x271
   17e81:	48 01 d0             	add    rax,rdx
   17e84:	48 01 f8             	add    rax,rdi
   17e87:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   17e8f:	48 8d 05 4a e5 20 00 	lea    rax,[rip+0x20e54a]        # 2263e0 <int22_dH>
   17e96:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
   17e99:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
   17e9c:	4c 63 c0             	movsxd r8,eax
   17e9f:	8b 75 b8             	mov    esi,DWORD PTR [rbp-0x48]
   17ea2:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
   17ea5:	48 63 c8             	movsxd rcx,eax
   17ea8:	44 8b 4d b0          	mov    r9d,DWORD PTR [rbp-0x50]
   17eac:	8b 55 b4             	mov    edx,DWORD PTR [rbp-0x4c]
   17eaf:	44 8b 55 ac          	mov    r10d,DWORD PTR [rbp-0x54]
   17eb3:	48 89 f0             	mov    rax,rsi
   17eb6:	48 c1 e0 02          	shl    rax,0x2
   17eba:	48 01 f0             	add    rax,rsi
   17ebd:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   17ec5:	48 01 f0             	add    rax,rsi
   17ec8:	49 69 f2 88 13 00 00 	imul   rsi,r10,0x1388
   17ecf:	48 01 c6             	add    rsi,rax
   17ed2:	48 89 c8             	mov    rax,rcx
   17ed5:	48 c1 e0 02          	shl    rax,0x2
   17ed9:	48 01 c8             	add    rax,rcx
   17edc:	48 8d 0c 06          	lea    rcx,[rsi+rax*1]
   17ee0:	48 89 d0             	mov    rax,rdx
   17ee3:	48 c1 e0 05          	shl    rax,0x5
   17ee7:	48 29 d0             	sub    rax,rdx
   17eea:	48 c1 e0 02          	shl    rax,0x2
   17eee:	48 01 d0             	add    rax,rdx
   17ef1:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   17ef5:	49 69 c1 71 02 00 00 	imul   rax,r9,0x271
   17efc:	48 01 d0             	add    rax,rdx
   17eff:	4c 01 c0             	add    rax,r8
   17f02:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   17f0a:	48 8d 05 cf 73 1e 00 	lea    rax,[rip+0x1e73cf]        # 1ff2e0 <int22_37>
   17f11:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   17f14:	29 c7                	sub    edi,eax
   17f16:	89 f8                	mov    eax,edi
   17f18:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   17f1c:	f2 0f 59 4d d8       	mulsd  xmm1,QWORD PTR [rbp-0x28]
   17f21:	f2 0f 5c c1          	subsd  xmm0,xmm1
   17f25:	f2 44 0f 2c c0       	cvttsd2si r8d,xmm0
   17f2a:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
   17f2e:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
   17f31:	4c 63 c8             	movsxd r9,eax
   17f34:	8b 75 b8             	mov    esi,DWORD PTR [rbp-0x48]
   17f37:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
   17f3a:	48 63 c8             	movsxd rcx,eax
   17f3d:	44 8b 5d b0          	mov    r11d,DWORD PTR [rbp-0x50]
   17f41:	8b 55 b4             	mov    edx,DWORD PTR [rbp-0x4c]
   17f44:	44 8b 55 ac          	mov    r10d,DWORD PTR [rbp-0x54]
   17f48:	48 89 f0             	mov    rax,rsi
   17f4b:	48 c1 e0 02          	shl    rax,0x2
   17f4f:	48 01 f0             	add    rax,rsi
   17f52:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   17f5a:	48 01 f0             	add    rax,rsi
   17f5d:	49 69 f3 71 02 00 00 	imul   rsi,r11,0x271
   17f64:	48 01 c6             	add    rsi,rax
   17f67:	48 89 d0             	mov    rax,rdx
   17f6a:	48 c1 e0 05          	shl    rax,0x5
   17f6e:	48 29 d0             	sub    rax,rdx
   17f71:	48 c1 e0 02          	shl    rax,0x2
   17f75:	48 01 d0             	add    rax,rdx
   17f78:	48 8d 14 06          	lea    rdx,[rsi+rax*1]
   17f7c:	48 89 c8             	mov    rax,rcx
   17f7f:	48 c1 e0 02          	shl    rax,0x2
   17f83:	48 01 c8             	add    rax,rcx
   17f86:	48 01 c2             	add    rdx,rax
   17f89:	49 69 c2 88 13 00 00 	imul   rax,r10,0x1388
   17f90:	48 01 d0             	add    rax,rdx
   17f93:	4c 01 c8             	add    rax,r9
   17f96:	48 05 1c 2b 00 00    	add    rax,0x2b1c
   17f9c:	44 89 44 87 08       	mov    DWORD PTR [rdi+rax*4+0x8],r8d
   17fa1:	83 45 c4 01          	add    DWORD PTR [rbp-0x3c],0x1
   17fa5:	83 7d c4 04          	cmp    DWORD PTR [rbp-0x3c],0x4
   17fa9:	0f 8e f0 fd ff ff    	jle    17d9f <get_scaled_params+0x1717>
   17faf:	83 45 c0 01          	add    DWORD PTR [rbp-0x40],0x1
   17fb3:	83 7d c0 04          	cmp    DWORD PTR [rbp-0x40],0x4
   17fb7:	0f 8e d6 fd ff ff    	jle    17d93 <get_scaled_params+0x170b>
   17fbd:	83 45 b8 01          	add    DWORD PTR [rbp-0x48],0x1
   17fc1:	83 7d b8 04          	cmp    DWORD PTR [rbp-0x48],0x4
   17fc5:	0f 86 bc fd ff ff    	jbe    17d87 <get_scaled_params+0x16ff>
   17fcb:	83 45 b4 01          	add    DWORD PTR [rbp-0x4c],0x1
   17fcf:	83 7d b4 04          	cmp    DWORD PTR [rbp-0x4c],0x4
   17fd3:	0f 86 a2 fd ff ff    	jbe    17d7b <get_scaled_params+0x16f3>
   17fd9:	83 45 b0 01          	add    DWORD PTR [rbp-0x50],0x1
   17fdd:	83 7d b0 07          	cmp    DWORD PTR [rbp-0x50],0x7
   17fe1:	0f 86 88 fd ff ff    	jbe    17d6f <get_scaled_params+0x16e7>
   17fe7:	83 45 ac 01          	add    DWORD PTR [rbp-0x54],0x1
   17feb:	83 7d ac 07          	cmp    DWORD PTR [rbp-0x54],0x7
   17fef:	0f 86 6e fd ff ff    	jbe    17d63 <get_scaled_params+0x16db>
   17ff5:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   17ff9:	48 05 fc 20 03 00    	add    rax,0x320fc
   17fff:	ba 19 01 00 00       	mov    edx,0x119
   18004:	48 8d 35 b5 41 1d 00 	lea    rsi,[rip+0x1d41b5]        # 1ec1c0 <Tetraloops>
   1800b:	48 89 c7             	mov    rdi,rax
   1800e:	e8 cd b6 fe ff       	call   36e0 <strncpy@plt>
   18013:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   18017:	48 05 18 27 03 00    	add    rax,0x32718
   1801d:	ba f1 00 00 00       	mov    edx,0xf1
   18022:	48 8d 35 57 3f 1d 00 	lea    rsi,[rip+0x1d3f57]        # 1ebf80 <Triloops>
   18029:	48 89 c7             	mov    rdi,rax
   1802c:	e8 af b6 fe ff       	call   36e0 <strncpy@plt>
   18031:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   18035:	48 05 ac 28 03 00    	add    rax,0x328ac
   1803b:	ba 69 01 00 00       	mov    edx,0x169
   18040:	48 8d 35 d9 43 1d 00 	lea    rsi,[rip+0x1d43d9]        # 1ec420 <Hexaloops>
   18047:	48 89 c7             	mov    rdi,rax
   1804a:	e8 91 b6 fe ff       	call   36e0 <strncpy@plt>
   1804f:	8b 05 8b 54 23 00    	mov    eax,DWORD PTR [rip+0x23548b]        # 24d4e0 <id>
   18055:	83 c0 01             	add    eax,0x1
   18058:	89 05 82 54 23 00    	mov    DWORD PTR [rip+0x235482],eax        # 24d4e0 <id>
   1805e:	8b 15 7c 54 23 00    	mov    edx,DWORD PTR [rip+0x23547c]        # 24d4e0 <id>
   18064:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   18068:	89 10                	mov    DWORD PTR [rax],edx
   1806a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   1806e:	48 83 c4 68          	add    rsp,0x68
   18072:	5b                   	pop    rbx
   18073:	5d                   	pop    rbp
   18074:	c3                   	ret    

0000000000018075 <get_scaled_exp_params>:
   18075:	f3 0f 1e fa          	endbr64 
   18079:	55                   	push   rbp
   1807a:	48 89 e5             	mov    rbp,rsp
   1807d:	53                   	push   rbx
   1807e:	48 83 ec 78          	sub    rsp,0x78
   18082:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
   18086:	f2 0f 11 45 90       	movsd  QWORD PTR [rbp-0x70],xmm0
   1808b:	bf 60 67 06 00       	mov    edi,0x66760
   18090:	e8 2c 3e 01 00       	call   2bec1 <vrna_alloc>
   18095:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
   18099:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   1809d:	48 05 60 66 06 00    	add    rax,0x66660
   180a3:	ba 00 01 00 00       	mov    edx,0x100
   180a8:	be 00 00 00 00       	mov    esi,0x0
   180ad:	48 89 c7             	mov    rdi,rax
   180b0:	e8 5b b6 fe ff       	call   3710 <memset@plt>
   180b5:	e8 6d 0b 01 00       	call   28c27 <last_parameter_file>
   180ba:	48 85 c0             	test   rax,rax
   180bd:	74 22                	je     180e1 <get_scaled_exp_params+0x6c>
   180bf:	e8 63 0b 01 00       	call   28c27 <last_parameter_file>
   180c4:	48 89 c1             	mov    rcx,rax
   180c7:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   180cb:	48 05 60 66 06 00    	add    rax,0x66660
   180d1:	ba ff 00 00 00       	mov    edx,0xff
   180d6:	48 89 ce             	mov    rsi,rcx
   180d9:	48 89 c7             	mov    rdi,rax
   180dc:	e8 ff b5 fe ff       	call   36e0 <strncpy@plt>
   180e1:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   180e5:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
   180e9:	48 05 78 5e 06 00    	add    rax,0x65e78
   180ef:	48 89 d6             	mov    rsi,rdx
   180f2:	ba fd 00 00 00       	mov    edx,0xfd
   180f7:	48 89 c7             	mov    rdi,rax
   180fa:	48 89 d1             	mov    rcx,rdx
   180fd:	f3 48 a5             	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   18100:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   18104:	f2 0f 10 00          	movsd  xmm0,QWORD PTR [rax]
   18108:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   1810c:	f2 0f 11 80 68 5e 06 00 	movsd  QWORD PTR [rax+0x65e68],xmm0
   18114:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   18118:	f2 0f 10 40 08       	movsd  xmm0,QWORD PTR [rax+0x8]
   1811d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   18121:	f2 0f 11 80 70 5e 06 00 	movsd  QWORD PTR [rax+0x65e70],xmm0
   18129:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   1812d:	f2 0f 10 48 08       	movsd  xmm1,QWORD PTR [rax+0x8]
   18132:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   18136:	f2 0f 10 10          	movsd  xmm2,QWORD PTR [rax]
   1813a:	f2 0f 10 05 fe 9e 01 00 	movsd  xmm0,QWORD PTR [rip+0x19efe]        # 32040 <Law_and_Order+0x600>
   18142:	f2 0f 58 c2          	addsd  xmm0,xmm2
   18146:	f2 0f 59 c8          	mulsd  xmm1,xmm0
   1814a:	f2 0f 10 05 fe 9e 01 00 	movsd  xmm0,QWORD PTR [rip+0x19efe]        # 32050 <Law_and_Order+0x610>
   18152:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   18156:	f2 0f 11 45 c8       	movsd  QWORD PTR [rbp-0x38],xmm0
   1815b:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   1815f:	f2 0f 10 45 c8       	movsd  xmm0,QWORD PTR [rbp-0x38]
   18164:	f2 0f 11 80 58 5e 06 00 	movsd  QWORD PTR [rax+0x65e58],xmm0
   1816c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   18170:	f2 0f 10 45 90       	movsd  xmm0,QWORD PTR [rbp-0x70]
   18175:	f2 0f 11 80 60 5e 06 00 	movsd  QWORD PTR [rax+0x65e60],xmm0
   1817d:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   18181:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
   18184:	89 45 bc             	mov    DWORD PTR [rbp-0x44],eax
   18187:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   1818b:	f2 0f 10 08          	movsd  xmm1,QWORD PTR [rax]
   1818f:	f2 0f 10 05 a9 9e 01 00 	movsd  xmm0,QWORD PTR [rip+0x19ea9]        # 32040 <Law_and_Order+0x600>
   18197:	f2 0f 58 c1          	addsd  xmm0,xmm1
   1819b:	f2 0f 10 0d 5d 10 1d 00 	movsd  xmm1,QWORD PTR [rip+0x1d105d]        # 1e9200 <Tmeasure>
   181a3:	f2 0f 5e c1          	divsd  xmm0,xmm1
   181a7:	f2 0f 11 45 d0       	movsd  QWORD PTR [rbp-0x30],xmm0
   181ac:	f2 0f 10 05 54 10 1d 00 	movsd  xmm0,QWORD PTR [rip+0x1d1054]        # 1e9208 <lxc37>
   181b4:	f2 0f 59 45 d0       	mulsd  xmm0,QWORD PTR [rbp-0x30]
   181b9:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   181bd:	f2 0f 11 80 c8 3f 06 00 	movsd  QWORD PTR [rax+0x63fc8],xmm0
   181c5:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   181c9:	75 3d                	jne    18208 <get_scaled_exp_params+0x193>
   181cb:	8b 05 67 10 1d 00    	mov    eax,DWORD PTR [rip+0x1d1067]        # 1e9238 <DuplexInitdH>
   181d1:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   181d5:	8b 15 5d 10 1d 00    	mov    edx,DWORD PTR [rip+0x1d105d]        # 1e9238 <DuplexInitdH>
   181db:	8b 05 53 10 1d 00    	mov    eax,DWORD PTR [rip+0x1d1053]        # 1e9234 <DuplexInit37>
   181e1:	29 c2                	sub    edx,eax
   181e3:	89 d0                	mov    eax,edx
   181e5:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   181e9:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   181ee:	f2 0f 5c c1          	subsd  xmm0,xmm1
   181f2:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   181f6:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   181fa:	f3 0f 7e 0d 2e 9e 01 00 	movq   xmm1,QWORD PTR [rip+0x19e2e]        # 32030 <Law_and_Order+0x5f0>
   18202:	66 0f 57 c1          	xorpd  xmm0,xmm1
   18206:	eb 33                	jmp    1823b <get_scaled_exp_params+0x1c6>
   18208:	8b 05 2a 10 1d 00    	mov    eax,DWORD PTR [rip+0x1d102a]        # 1e9238 <DuplexInitdH>
   1820e:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   18212:	8b 15 20 10 1d 00    	mov    edx,DWORD PTR [rip+0x1d1020]        # 1e9238 <DuplexInitdH>
   18218:	8b 05 16 10 1d 00    	mov    eax,DWORD PTR [rip+0x1d1016]        # 1e9234 <DuplexInit37>
   1821e:	29 c2                	sub    edx,eax
   18220:	89 d0                	mov    eax,edx
   18222:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   18226:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1822b:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1822f:	f3 0f 7e 0d f9 9d 01 00 	movq   xmm1,QWORD PTR [rip+0x19df9]        # 32030 <Law_and_Order+0x5f0>
   18237:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1823b:	f2 0f 10 0d 15 9e 01 00 	movsd  xmm1,QWORD PTR [rip+0x19e15]        # 32058 <Law_and_Order+0x618>
   18243:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   18247:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1824c:	e8 1f b8 fe ff       	call   3a70 <exp@plt>
   18251:	66 48 0f 7e c0       	movq   rax,xmm0
   18256:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   1825a:	48 89 82 28 40 06 00 	mov    QWORD PTR [rdx+0x64028],rax
   18261:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   18265:	75 3d                	jne    182a4 <get_scaled_exp_params+0x22f>
   18267:	8b 05 c3 0f 1d 00    	mov    eax,DWORD PTR [rip+0x1d0fc3]        # 1e9230 <TerminalAUdH>
   1826d:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   18271:	8b 15 b9 0f 1d 00    	mov    edx,DWORD PTR [rip+0x1d0fb9]        # 1e9230 <TerminalAUdH>
   18277:	8b 05 af 0f 1d 00    	mov    eax,DWORD PTR [rip+0x1d0faf]        # 1e922c <TerminalAU37>
   1827d:	29 c2                	sub    edx,eax
   1827f:	89 d0                	mov    eax,edx
   18281:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   18285:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1828a:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1828e:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   18292:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   18296:	f3 0f 7e 0d 92 9d 01 00 	movq   xmm1,QWORD PTR [rip+0x19d92]        # 32030 <Law_and_Order+0x5f0>
   1829e:	66 0f 57 c1          	xorpd  xmm0,xmm1
   182a2:	eb 33                	jmp    182d7 <get_scaled_exp_params+0x262>
   182a4:	8b 05 86 0f 1d 00    	mov    eax,DWORD PTR [rip+0x1d0f86]        # 1e9230 <TerminalAUdH>
   182aa:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   182ae:	8b 15 7c 0f 1d 00    	mov    edx,DWORD PTR [rip+0x1d0f7c]        # 1e9230 <TerminalAUdH>
   182b4:	8b 05 72 0f 1d 00    	mov    eax,DWORD PTR [rip+0x1d0f72]        # 1e922c <TerminalAU37>
   182ba:	29 c2                	sub    edx,eax
   182bc:	89 d0                	mov    eax,edx
   182be:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   182c2:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   182c7:	f2 0f 5c c1          	subsd  xmm0,xmm1
   182cb:	f3 0f 7e 0d 5d 9d 01 00 	movq   xmm1,QWORD PTR [rip+0x19d5d]        # 32030 <Law_and_Order+0x5f0>
   182d3:	66 0f 57 c1          	xorpd  xmm0,xmm1
   182d7:	f2 0f 10 0d 79 9d 01 00 	movsd  xmm1,QWORD PTR [rip+0x19d79]        # 32058 <Law_and_Order+0x618>
   182df:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   182e3:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   182e8:	e8 83 b7 fe ff       	call   3a70 <exp@plt>
   182ed:	66 48 0f 7e c0       	movq   rax,xmm0
   182f2:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   182f6:	48 89 82 20 40 06 00 	mov    QWORD PTR [rdx+0x64020],rax
   182fd:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   18301:	75 3d                	jne    18340 <get_scaled_exp_params+0x2cb>
   18303:	8b 05 e7 66 23 00    	mov    eax,DWORD PTR [rip+0x2366e7]        # 24e9f0 <ML_BASEdH>
   18309:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1830d:	8b 15 dd 66 23 00    	mov    edx,DWORD PTR [rip+0x2366dd]        # 24e9f0 <ML_BASEdH>
   18313:	8b 05 d3 66 23 00    	mov    eax,DWORD PTR [rip+0x2366d3]        # 24e9ec <ML_BASE37>
   18319:	29 c2                	sub    edx,eax
   1831b:	89 d0                	mov    eax,edx
   1831d:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   18321:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   18326:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1832a:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1832e:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   18332:	f3 0f 7e 0d f6 9c 01 00 	movq   xmm1,QWORD PTR [rip+0x19cf6]        # 32030 <Law_and_Order+0x5f0>
   1833a:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1833e:	eb 33                	jmp    18373 <get_scaled_exp_params+0x2fe>
   18340:	8b 05 aa 66 23 00    	mov    eax,DWORD PTR [rip+0x2366aa]        # 24e9f0 <ML_BASEdH>
   18346:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1834a:	8b 15 a0 66 23 00    	mov    edx,DWORD PTR [rip+0x2366a0]        # 24e9f0 <ML_BASEdH>
   18350:	8b 05 96 66 23 00    	mov    eax,DWORD PTR [rip+0x236696]        # 24e9ec <ML_BASE37>
   18356:	29 c2                	sub    edx,eax
   18358:	89 d0                	mov    eax,edx
   1835a:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1835e:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   18363:	f2 0f 5c c1          	subsd  xmm0,xmm1
   18367:	f3 0f 7e 0d c1 9c 01 00 	movq   xmm1,QWORD PTR [rip+0x19cc1]        # 32030 <Law_and_Order+0x5f0>
   1836f:	66 0f 57 c1          	xorpd  xmm0,xmm1
   18373:	f2 0f 10 0d dd 9c 01 00 	movsd  xmm1,QWORD PTR [rip+0x19cdd]        # 32058 <Law_and_Order+0x618>
   1837b:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1837f:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   18384:	e8 e7 b6 fe ff       	call   3a70 <exp@plt>
   18389:	66 48 0f 7e c0       	movq   rax,xmm0
   1838e:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   18392:	48 89 82 d0 3f 06 00 	mov    QWORD PTR [rdx+0x63fd0],rax
   18399:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1839d:	75 3d                	jne    183dc <get_scaled_exp_params+0x367>
   1839f:	8b 05 77 0e 1d 00    	mov    eax,DWORD PTR [rip+0x1d0e77]        # 1e921c <ML_closingdH>
   183a5:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   183a9:	8b 15 6d 0e 1d 00    	mov    edx,DWORD PTR [rip+0x1d0e6d]        # 1e921c <ML_closingdH>
   183af:	8b 05 63 0e 1d 00    	mov    eax,DWORD PTR [rip+0x1d0e63]        # 1e9218 <ML_closing37>
   183b5:	29 c2                	sub    edx,eax
   183b7:	89 d0                	mov    eax,edx
   183b9:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   183bd:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   183c2:	f2 0f 5c c1          	subsd  xmm0,xmm1
   183c6:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   183ca:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   183ce:	f3 0f 7e 0d 5a 9c 01 00 	movq   xmm1,QWORD PTR [rip+0x19c5a]        # 32030 <Law_and_Order+0x5f0>
   183d6:	66 0f 57 c1          	xorpd  xmm0,xmm1
   183da:	eb 33                	jmp    1840f <get_scaled_exp_params+0x39a>
   183dc:	8b 05 3a 0e 1d 00    	mov    eax,DWORD PTR [rip+0x1d0e3a]        # 1e921c <ML_closingdH>
   183e2:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   183e6:	8b 15 30 0e 1d 00    	mov    edx,DWORD PTR [rip+0x1d0e30]        # 1e921c <ML_closingdH>
   183ec:	8b 05 26 0e 1d 00    	mov    eax,DWORD PTR [rip+0x1d0e26]        # 1e9218 <ML_closing37>
   183f2:	29 c2                	sub    edx,eax
   183f4:	89 d0                	mov    eax,edx
   183f6:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   183fa:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   183ff:	f2 0f 5c c1          	subsd  xmm0,xmm1
   18403:	f3 0f 7e 0d 25 9c 01 00 	movq   xmm1,QWORD PTR [rip+0x19c25]        # 32030 <Law_and_Order+0x5f0>
   1840b:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1840f:	f2 0f 10 0d 41 9c 01 00 	movsd  xmm1,QWORD PTR [rip+0x19c41]        # 32058 <Law_and_Order+0x618>
   18417:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1841b:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   18420:	e8 4b b6 fe ff       	call   3a70 <exp@plt>
   18425:	66 48 0f 7e c0       	movq   rax,xmm0
   1842a:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   1842e:	48 89 82 18 40 06 00 	mov    QWORD PTR [rdx+0x64018],rax
   18435:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   18439:	75 3d                	jne    18478 <get_scaled_exp_params+0x403>
   1843b:	8b 05 b7 65 23 00    	mov    eax,DWORD PTR [rip+0x2365b7]        # 24e9f8 <GQuadLayerMismatchH>
   18441:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   18445:	8b 15 ad 65 23 00    	mov    edx,DWORD PTR [rip+0x2365ad]        # 24e9f8 <GQuadLayerMismatchH>
   1844b:	8b 05 0f 0e 1d 00    	mov    eax,DWORD PTR [rip+0x1d0e0f]        # 1e9260 <GQuadLayerMismatch37>
   18451:	29 c2                	sub    edx,eax
   18453:	89 d0                	mov    eax,edx
   18455:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   18459:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1845e:	f2 0f 5c c1          	subsd  xmm0,xmm1
   18462:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   18466:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1846a:	f3 0f 7e 0d be 9b 01 00 	movq   xmm1,QWORD PTR [rip+0x19bbe]        # 32030 <Law_and_Order+0x5f0>
   18472:	66 0f 57 c1          	xorpd  xmm0,xmm1
   18476:	eb 33                	jmp    184ab <get_scaled_exp_params+0x436>
   18478:	8b 05 7a 65 23 00    	mov    eax,DWORD PTR [rip+0x23657a]        # 24e9f8 <GQuadLayerMismatchH>
   1847e:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   18482:	8b 15 70 65 23 00    	mov    edx,DWORD PTR [rip+0x236570]        # 24e9f8 <GQuadLayerMismatchH>
   18488:	8b 05 d2 0d 1d 00    	mov    eax,DWORD PTR [rip+0x1d0dd2]        # 1e9260 <GQuadLayerMismatch37>
   1848e:	29 c2                	sub    edx,eax
   18490:	89 d0                	mov    eax,edx
   18492:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   18496:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1849b:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1849f:	f3 0f 7e 0d 89 9b 01 00 	movq   xmm1,QWORD PTR [rip+0x19b89]        # 32030 <Law_and_Order+0x5f0>
   184a7:	66 0f 57 c1          	xorpd  xmm0,xmm1
   184ab:	f2 0f 10 0d a5 9b 01 00 	movsd  xmm1,QWORD PTR [rip+0x19ba5]        # 32058 <Law_and_Order+0x618>
   184b3:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   184b7:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   184bc:	e8 af b5 fe ff       	call   3a70 <exp@plt>
   184c1:	66 48 0f 7e c0       	movq   rax,xmm0
   184c6:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   184ca:	48 89 82 48 5e 06 00 	mov    QWORD PTR [rdx+0x65e48],rax
   184d1:	8b 15 8d 0d 1d 00    	mov    edx,DWORD PTR [rip+0x1d0d8d]        # 1e9264 <GQuadLayerMismatchMax>
   184d7:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   184db:	89 90 50 5e 06 00    	mov    DWORD PTR [rax+0x65e50],edx
   184e1:	c7 45 a0 02 00 00 00 	mov    DWORD PTR [rbp-0x60],0x2
   184e8:	e9 57 01 00 00       	jmp    18644 <get_scaled_exp_params+0x5cf>
   184ed:	c7 45 a4 03 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x3
   184f4:	e9 3d 01 00 00       	jmp    18636 <get_scaled_exp_params+0x5c1>
   184f9:	8b 05 59 0d 1d 00    	mov    eax,DWORD PTR [rip+0x1d0d59]        # 1e9258 <GQuadAlphadH>
   184ff:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   18503:	8b 15 4f 0d 1d 00    	mov    edx,DWORD PTR [rip+0x1d0d4f]        # 1e9258 <GQuadAlphadH>
   18509:	8b 05 45 0d 1d 00    	mov    eax,DWORD PTR [rip+0x1d0d45]        # 1e9254 <GQuadAlpha37>
   1850f:	29 c2                	sub    edx,eax
   18511:	89 d0                	mov    eax,edx
   18513:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   18517:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1851c:	f2 0f 5c c1          	subsd  xmm0,xmm1
   18520:	f2 0f 11 45 e0       	movsd  QWORD PTR [rbp-0x20],xmm0
   18525:	8b 05 c9 64 23 00    	mov    eax,DWORD PTR [rip+0x2364c9]        # 24e9f4 <GQuadBetadH>
   1852b:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1852f:	8b 15 bf 64 23 00    	mov    edx,DWORD PTR [rip+0x2364bf]        # 24e9f4 <GQuadBetadH>
   18535:	8b 05 21 0d 1d 00    	mov    eax,DWORD PTR [rip+0x1d0d21]        # 1e925c <GQuadBeta37>
   1853b:	29 c2                	sub    edx,eax
   1853d:	89 d0                	mov    eax,edx
   1853f:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   18543:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   18548:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1854c:	f2 0f 11 45 e8       	movsd  QWORD PTR [rbp-0x18],xmm0
   18551:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   18554:	83 e8 01             	sub    eax,0x1
   18557:	89 c0                	mov    eax,eax
   18559:	48 85 c0             	test   rax,rax
   1855c:	78 07                	js     18565 <get_scaled_exp_params+0x4f0>
   1855e:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
   18563:	eb 15                	jmp    1857a <get_scaled_exp_params+0x505>
   18565:	48 89 c2             	mov    rdx,rax
   18568:	48 d1 ea             	shr    rdx,1
   1856b:	83 e0 01             	and    eax,0x1
   1856e:	48 09 c2             	or     rdx,rax
   18571:	f2 48 0f 2a c2       	cvtsi2sd xmm0,rdx
   18576:	f2 0f 58 c0          	addsd  xmm0,xmm0
   1857a:	f2 0f 59 45 e0       	mulsd  xmm0,QWORD PTR [rbp-0x20]
   1857f:	f2 0f 11 45 88       	movsd  QWORD PTR [rbp-0x78],xmm0
   18584:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
   18587:	48 85 c0             	test   rax,rax
   1858a:	78 07                	js     18593 <get_scaled_exp_params+0x51e>
   1858c:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
   18591:	eb 15                	jmp    185a8 <get_scaled_exp_params+0x533>
   18593:	48 89 c2             	mov    rdx,rax
   18596:	48 d1 ea             	shr    rdx,1
   18599:	83 e0 01             	and    eax,0x1
   1859c:	48 09 c2             	or     rdx,rax
   1859f:	f2 48 0f 2a c2       	cvtsi2sd xmm0,rdx
   185a4:	f2 0f 58 c0          	addsd  xmm0,xmm0
   185a8:	f2 0f 10 0d b0 9a 01 00 	movsd  xmm1,QWORD PTR [rip+0x19ab0]        # 32060 <Law_and_Order+0x620>
   185b0:	f2 0f 5c c1          	subsd  xmm0,xmm1
   185b4:	e8 d7 b1 fe ff       	call   3790 <log@plt>
   185b9:	f2 0f 59 45 e8       	mulsd  xmm0,QWORD PTR [rbp-0x18]
   185be:	f2 0f 58 45 88       	addsd  xmm0,QWORD PTR [rbp-0x78]
   185c3:	f2 0f 11 45 d8       	movsd  QWORD PTR [rbp-0x28],xmm0
   185c8:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   185cc:	75 1b                	jne    185e9 <get_scaled_exp_params+0x574>
   185ce:	f2 0f 10 45 d8       	movsd  xmm0,QWORD PTR [rbp-0x28]
   185d3:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   185d7:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   185db:	f3 0f 7e 0d 4d 9a 01 00 	movq   xmm1,QWORD PTR [rip+0x19a4d]        # 32030 <Law_and_Order+0x5f0>
   185e3:	66 0f 57 c1          	xorpd  xmm0,xmm1
   185e7:	eb 11                	jmp    185fa <get_scaled_exp_params+0x585>
   185e9:	f2 0f 10 45 d8       	movsd  xmm0,QWORD PTR [rbp-0x28]
   185ee:	f3 0f 7e 0d 3a 9a 01 00 	movq   xmm1,QWORD PTR [rip+0x19a3a]        # 32030 <Law_and_Order+0x5f0>
   185f6:	66 0f 57 c1          	xorpd  xmm0,xmm1
   185fa:	f2 0f 10 0d 56 9a 01 00 	movsd  xmm1,QWORD PTR [rip+0x19a56]        # 32058 <Law_and_Order+0x618>
   18602:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   18606:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1860b:	e8 60 b4 fe ff       	call   3a70 <exp@plt>
   18610:	66 48 0f 7e c0       	movq   rax,xmm0
   18615:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   18619:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1861c:	8b 75 a0             	mov    esi,DWORD PTR [rbp-0x60]
   1861f:	48 6b f6 2e          	imul   rsi,rsi,0x2e
   18623:	48 01 f1             	add    rcx,rsi
   18626:	48 81 c1 58 ca 00 00 	add    rcx,0xca58
   1862d:	48 89 44 ca 08       	mov    QWORD PTR [rdx+rcx*8+0x8],rax
   18632:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
   18636:	83 7d a4 2d          	cmp    DWORD PTR [rbp-0x5c],0x2d
   1863a:	0f 86 b9 fe ff ff    	jbe    184f9 <get_scaled_exp_params+0x484>
   18640:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
   18644:	83 7d a0 07          	cmp    DWORD PTR [rbp-0x60],0x7
   18648:	0f 86 9f fe ff ff    	jbe    184ed <get_scaled_exp_params+0x478>
   1864e:	c7 45 a0 00 00 00 00 	mov    DWORD PTR [rbp-0x60],0x0
   18655:	e9 ff 00 00 00       	jmp    18759 <get_scaled_exp_params+0x6e4>
   1865a:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1865e:	75 6a                	jne    186ca <get_scaled_exp_params+0x655>
   18660:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   18663:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1866b:	48 8d 05 8e 0e 1d 00 	lea    rax,[rip+0x1d0e8e]        # 1e9500 <hairpindH>
   18672:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   18675:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   18679:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1867c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   18684:	48 8d 05 75 0e 1d 00 	lea    rax,[rip+0x1d0e75]        # 1e9500 <hairpindH>
   1868b:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   1868e:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   18691:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   18699:	48 8d 05 e0 0d 1d 00 	lea    rax,[rip+0x1d0de0]        # 1e9480 <hairpin37>
   186a0:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   186a3:	29 c2                	sub    edx,eax
   186a5:	89 d0                	mov    eax,edx
   186a7:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   186ab:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   186b0:	f2 0f 5c c1          	subsd  xmm0,xmm1
   186b4:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   186b8:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   186bc:	f3 0f 7e 0d 6c 99 01 00 	movq   xmm1,QWORD PTR [rip+0x1996c]        # 32030 <Law_and_Order+0x5f0>
   186c4:	66 0f 57 c1          	xorpd  xmm0,xmm1
   186c8:	eb 60                	jmp    1872a <get_scaled_exp_params+0x6b5>
   186ca:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   186cd:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   186d5:	48 8d 05 24 0e 1d 00 	lea    rax,[rip+0x1d0e24]        # 1e9500 <hairpindH>
   186dc:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   186df:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   186e3:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   186e6:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   186ee:	48 8d 05 0b 0e 1d 00 	lea    rax,[rip+0x1d0e0b]        # 1e9500 <hairpindH>
   186f5:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   186f8:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   186fb:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   18703:	48 8d 05 76 0d 1d 00 	lea    rax,[rip+0x1d0d76]        # 1e9480 <hairpin37>
   1870a:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   1870d:	29 c2                	sub    edx,eax
   1870f:	89 d0                	mov    eax,edx
   18711:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   18715:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1871a:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1871e:	f3 0f 7e 0d 0a 99 01 00 	movq   xmm1,QWORD PTR [rip+0x1990a]        # 32030 <Law_and_Order+0x5f0>
   18726:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1872a:	f2 0f 10 0d 26 99 01 00 	movsd  xmm1,QWORD PTR [rip+0x19926]        # 32058 <Law_and_Order+0x618>
   18732:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   18736:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1873b:	e8 30 b3 fe ff       	call   3a70 <exp@plt>
   18740:	66 48 0f 7e c0       	movq   rax,xmm0
   18745:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   18749:	8b 4d a0             	mov    ecx,DWORD PTR [rbp-0x60]
   1874c:	48 83 c1 40          	add    rcx,0x40
   18750:	48 89 44 ca 08       	mov    QWORD PTR [rdx+rcx*8+0x8],rax
   18755:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
   18759:	83 7d a0 1e          	cmp    DWORD PTR [rbp-0x60],0x1e
   1875d:	0f 86 f7 fe ff ff    	jbe    1865a <get_scaled_exp_params+0x5e5>
   18763:	c7 45 a0 00 00 00 00 	mov    DWORD PTR [rbp-0x60],0x0
   1876a:	e9 f9 01 00 00       	jmp    18968 <get_scaled_exp_params+0x8f3>
   1876f:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   18773:	75 6a                	jne    187df <get_scaled_exp_params+0x76a>
   18775:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   18778:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   18780:	48 8d 05 79 0e 1d 00 	lea    rax,[rip+0x1d0e79]        # 1e9600 <bulgedH>
   18787:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1878a:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1878e:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   18791:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   18799:	48 8d 05 60 0e 1d 00 	lea    rax,[rip+0x1d0e60]        # 1e9600 <bulgedH>
   187a0:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   187a3:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   187a6:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   187ae:	48 8d 05 cb 0d 1d 00 	lea    rax,[rip+0x1d0dcb]        # 1e9580 <bulge37>
   187b5:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   187b8:	29 c2                	sub    edx,eax
   187ba:	89 d0                	mov    eax,edx
   187bc:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   187c0:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   187c5:	f2 0f 5c c1          	subsd  xmm0,xmm1
   187c9:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   187cd:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   187d1:	f3 0f 7e 0d 57 98 01 00 	movq   xmm1,QWORD PTR [rip+0x19857]        # 32030 <Law_and_Order+0x5f0>
   187d9:	66 0f 57 c1          	xorpd  xmm0,xmm1
   187dd:	eb 60                	jmp    1883f <get_scaled_exp_params+0x7ca>
   187df:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   187e2:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   187ea:	48 8d 05 0f 0e 1d 00 	lea    rax,[rip+0x1d0e0f]        # 1e9600 <bulgedH>
   187f1:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   187f4:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   187f8:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   187fb:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   18803:	48 8d 05 f6 0d 1d 00 	lea    rax,[rip+0x1d0df6]        # 1e9600 <bulgedH>
   1880a:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   1880d:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   18810:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   18818:	48 8d 05 61 0d 1d 00 	lea    rax,[rip+0x1d0d61]        # 1e9580 <bulge37>
   1881f:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   18822:	29 c2                	sub    edx,eax
   18824:	89 d0                	mov    eax,edx
   18826:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1882a:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1882f:	f2 0f 5c c1          	subsd  xmm0,xmm1
   18833:	f3 0f 7e 0d f5 97 01 00 	movq   xmm1,QWORD PTR [rip+0x197f5]        # 32030 <Law_and_Order+0x5f0>
   1883b:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1883f:	f2 0f 10 0d 11 98 01 00 	movsd  xmm1,QWORD PTR [rip+0x19811]        # 32058 <Law_and_Order+0x618>
   18847:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1884b:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   18850:	e8 1b b2 fe ff       	call   3a70 <exp@plt>
   18855:	66 48 0f 7e c0       	movq   rax,xmm0
   1885a:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   1885e:	8b 4d a0             	mov    ecx,DWORD PTR [rbp-0x60]
   18861:	48 83 c1 60          	add    rcx,0x60
   18865:	48 89 04 ca          	mov    QWORD PTR [rdx+rcx*8],rax
   18869:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1886d:	75 6a                	jne    188d9 <get_scaled_exp_params+0x864>
   1886f:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   18872:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1887a:	48 8d 05 7f 0e 1d 00 	lea    rax,[rip+0x1d0e7f]        # 1e9700 <internal_loopdH>
   18881:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   18884:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   18888:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1888b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   18893:	48 8d 05 66 0e 1d 00 	lea    rax,[rip+0x1d0e66]        # 1e9700 <internal_loopdH>
   1889a:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   1889d:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   188a0:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   188a8:	48 8d 05 d1 0d 1d 00 	lea    rax,[rip+0x1d0dd1]        # 1e9680 <internal_loop37>
   188af:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   188b2:	29 c2                	sub    edx,eax
   188b4:	89 d0                	mov    eax,edx
   188b6:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   188ba:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   188bf:	f2 0f 5c c1          	subsd  xmm0,xmm1
   188c3:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   188c7:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   188cb:	f3 0f 7e 0d 5d 97 01 00 	movq   xmm1,QWORD PTR [rip+0x1975d]        # 32030 <Law_and_Order+0x5f0>
   188d3:	66 0f 57 c1          	xorpd  xmm0,xmm1
   188d7:	eb 60                	jmp    18939 <get_scaled_exp_params+0x8c4>
   188d9:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   188dc:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   188e4:	48 8d 05 15 0e 1d 00 	lea    rax,[rip+0x1d0e15]        # 1e9700 <internal_loopdH>
   188eb:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   188ee:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   188f2:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   188f5:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   188fd:	48 8d 05 fc 0d 1d 00 	lea    rax,[rip+0x1d0dfc]        # 1e9700 <internal_loopdH>
   18904:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   18907:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1890a:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   18912:	48 8d 05 67 0d 1d 00 	lea    rax,[rip+0x1d0d67]        # 1e9680 <internal_loop37>
   18919:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   1891c:	29 c2                	sub    edx,eax
   1891e:	89 d0                	mov    eax,edx
   18920:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   18924:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   18929:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1892d:	f3 0f 7e 0d fb 96 01 00 	movq   xmm1,QWORD PTR [rip+0x196fb]        # 32030 <Law_and_Order+0x5f0>
   18935:	66 0f 57 c1          	xorpd  xmm0,xmm1
   18939:	f2 0f 10 0d 17 97 01 00 	movsd  xmm1,QWORD PTR [rip+0x19717]        # 32058 <Law_and_Order+0x618>
   18941:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   18945:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1894a:	e8 21 b1 fe ff       	call   3a70 <exp@plt>
   1894f:	66 48 0f 7e c0       	movq   rax,xmm0
   18954:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   18958:	8b 4d a0             	mov    ecx,DWORD PTR [rbp-0x60]
   1895b:	48 83 c1 7e          	add    rcx,0x7e
   1895f:	48 89 44 ca 08       	mov    QWORD PTR [rdx+rcx*8+0x8],rax
   18964:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
   18968:	83 7d a0 1e          	cmp    DWORD PTR [rbp-0x60],0x1e
   1896c:	0f 86 fd fd ff ff    	jbe    1876f <get_scaled_exp_params+0x6fa>
   18972:	8b 05 40 4d 23 00    	mov    eax,DWORD PTR [rip+0x234d40]        # 24d6b8 <james_rule>
   18978:	85 c0                	test   eax,eax
   1897a:	74 22                	je     1899e <get_scaled_exp_params+0x929>
   1897c:	f2 0f 10 05 e4 96 01 00 	movsd  xmm0,QWORD PTR [rip+0x196e4]        # 32068 <Law_and_Order+0x628>
   18984:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   18989:	e8 e2 b0 fe ff       	call   3a70 <exp@plt>
   1898e:	66 48 0f 7e c0       	movq   rax,xmm0
   18993:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   18997:	48 89 82 08 04 00 00 	mov    QWORD PTR [rdx+0x408],rax
   1899e:	8b 05 d4 0c 1d 00    	mov    eax,DWORD PTR [rip+0x1d0cd4]        # 1e9678 <bulgedH+0x78>
   189a4:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   189a8:	8b 15 ca 0c 1d 00    	mov    edx,DWORD PTR [rip+0x1d0cca]        # 1e9678 <bulgedH+0x78>
   189ae:	8b 05 44 0c 1d 00    	mov    eax,DWORD PTR [rip+0x1d0c44]        # 1e95f8 <bulge37+0x78>
   189b4:	29 c2                	sub    edx,eax
   189b6:	89 d0                	mov    eax,edx
   189b8:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   189bc:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   189c1:	f2 0f 5c c1          	subsd  xmm0,xmm1
   189c5:	f2 0f 11 45 d8       	movsd  QWORD PTR [rbp-0x28],xmm0
   189ca:	c7 45 a0 1f 00 00 00 	mov    DWORD PTR [rbp-0x60],0x1f
   189d1:	e9 f6 00 00 00       	jmp    18acc <get_scaled_exp_params+0xa57>
   189d6:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   189da:	75 66                	jne    18a42 <get_scaled_exp_params+0x9cd>
   189dc:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   189e0:	f2 0f 10 a0 c8 3f 06 00 	movsd  xmm4,QWORD PTR [rax+0x63fc8]
   189e8:	f2 0f 11 65 88       	movsd  QWORD PTR [rbp-0x78],xmm4
   189ed:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   189f0:	48 85 c0             	test   rax,rax
   189f3:	78 07                	js     189fc <get_scaled_exp_params+0x987>
   189f5:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
   189fa:	eb 15                	jmp    18a11 <get_scaled_exp_params+0x99c>
   189fc:	48 89 c2             	mov    rdx,rax
   189ff:	48 d1 ea             	shr    rdx,1
   18a02:	83 e0 01             	and    eax,0x1
   18a05:	48 09 c2             	or     rdx,rax
   18a08:	f2 48 0f 2a c2       	cvtsi2sd xmm0,rdx
   18a0d:	f2 0f 58 c0          	addsd  xmm0,xmm0
   18a11:	f2 0f 10 0d 2f 96 01 00 	movsd  xmm1,QWORD PTR [rip+0x1962f]        # 32048 <Law_and_Order+0x608>
   18a19:	f2 0f 5e c1          	divsd  xmm0,xmm1
   18a1d:	e8 6e ad fe ff       	call   3790 <log@plt>
   18a22:	f2 0f 59 45 88       	mulsd  xmm0,QWORD PTR [rbp-0x78]
   18a27:	f2 0f 58 45 d8       	addsd  xmm0,QWORD PTR [rbp-0x28]
   18a2c:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   18a30:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   18a34:	f3 0f 7e 0d f4 95 01 00 	movq   xmm1,QWORD PTR [rip+0x195f4]        # 32030 <Law_and_Order+0x5f0>
   18a3c:	66 0f 57 c1          	xorpd  xmm0,xmm1
   18a40:	eb 5c                	jmp    18a9e <get_scaled_exp_params+0xa29>
   18a42:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   18a46:	f2 0f 10 b0 c8 3f 06 00 	movsd  xmm6,QWORD PTR [rax+0x63fc8]
   18a4e:	f2 0f 11 75 88       	movsd  QWORD PTR [rbp-0x78],xmm6
   18a53:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   18a56:	48 85 c0             	test   rax,rax
   18a59:	78 07                	js     18a62 <get_scaled_exp_params+0x9ed>
   18a5b:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
   18a60:	eb 15                	jmp    18a77 <get_scaled_exp_params+0xa02>
   18a62:	48 89 c2             	mov    rdx,rax
   18a65:	48 d1 ea             	shr    rdx,1
   18a68:	83 e0 01             	and    eax,0x1
   18a6b:	48 09 c2             	or     rdx,rax
   18a6e:	f2 48 0f 2a c2       	cvtsi2sd xmm0,rdx
   18a73:	f2 0f 58 c0          	addsd  xmm0,xmm0
   18a77:	f2 0f 10 0d c9 95 01 00 	movsd  xmm1,QWORD PTR [rip+0x195c9]        # 32048 <Law_and_Order+0x608>
   18a7f:	f2 0f 5e c1          	divsd  xmm0,xmm1
   18a83:	e8 08 ad fe ff       	call   3790 <log@plt>
   18a88:	f2 0f 59 45 88       	mulsd  xmm0,QWORD PTR [rbp-0x78]
   18a8d:	f2 0f 58 45 d8       	addsd  xmm0,QWORD PTR [rbp-0x28]
   18a92:	f3 0f 7e 0d 96 95 01 00 	movq   xmm1,QWORD PTR [rip+0x19596]        # 32030 <Law_and_Order+0x5f0>
   18a9a:	66 0f 57 c1          	xorpd  xmm0,xmm1
   18a9e:	f2 0f 10 0d b2 95 01 00 	movsd  xmm1,QWORD PTR [rip+0x195b2]        # 32058 <Law_and_Order+0x618>
   18aa6:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   18aaa:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   18aaf:	e8 bc af fe ff       	call   3a70 <exp@plt>
   18ab4:	66 48 0f 7e c0       	movq   rax,xmm0
   18ab9:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   18abd:	8b 4d a0             	mov    ecx,DWORD PTR [rbp-0x60]
   18ac0:	48 83 c1 60          	add    rcx,0x60
   18ac4:	48 89 04 ca          	mov    QWORD PTR [rdx+rcx*8],rax
   18ac8:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
   18acc:	83 7d a0 1e          	cmp    DWORD PTR [rbp-0x60],0x1e
   18ad0:	0f 86 00 ff ff ff    	jbe    189d6 <get_scaled_exp_params+0x961>
   18ad6:	8b 05 9c 0c 1d 00    	mov    eax,DWORD PTR [rip+0x1d0c9c]        # 1e9778 <internal_loopdH+0x78>
   18adc:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   18ae0:	8b 15 92 0c 1d 00    	mov    edx,DWORD PTR [rip+0x1d0c92]        # 1e9778 <internal_loopdH+0x78>
   18ae6:	8b 05 0c 0c 1d 00    	mov    eax,DWORD PTR [rip+0x1d0c0c]        # 1e96f8 <internal_loop37+0x78>
   18aec:	29 c2                	sub    edx,eax
   18aee:	89 d0                	mov    eax,edx
   18af0:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   18af4:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   18af9:	f2 0f 5c c1          	subsd  xmm0,xmm1
   18afd:	f2 0f 11 45 d8       	movsd  QWORD PTR [rbp-0x28],xmm0
   18b02:	c7 45 a0 1f 00 00 00 	mov    DWORD PTR [rbp-0x60],0x1f
   18b09:	e9 f7 00 00 00       	jmp    18c05 <get_scaled_exp_params+0xb90>
   18b0e:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   18b12:	75 66                	jne    18b7a <get_scaled_exp_params+0xb05>
   18b14:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   18b18:	f2 0f 10 98 c8 3f 06 00 	movsd  xmm3,QWORD PTR [rax+0x63fc8]
   18b20:	f2 0f 11 5d 88       	movsd  QWORD PTR [rbp-0x78],xmm3
   18b25:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   18b28:	48 85 c0             	test   rax,rax
   18b2b:	78 07                	js     18b34 <get_scaled_exp_params+0xabf>
   18b2d:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
   18b32:	eb 15                	jmp    18b49 <get_scaled_exp_params+0xad4>
   18b34:	48 89 c2             	mov    rdx,rax
   18b37:	48 d1 ea             	shr    rdx,1
   18b3a:	83 e0 01             	and    eax,0x1
   18b3d:	48 09 c2             	or     rdx,rax
   18b40:	f2 48 0f 2a c2       	cvtsi2sd xmm0,rdx
   18b45:	f2 0f 58 c0          	addsd  xmm0,xmm0
   18b49:	f2 0f 10 0d f7 94 01 00 	movsd  xmm1,QWORD PTR [rip+0x194f7]        # 32048 <Law_and_Order+0x608>
   18b51:	f2 0f 5e c1          	divsd  xmm0,xmm1
   18b55:	e8 36 ac fe ff       	call   3790 <log@plt>
   18b5a:	f2 0f 59 45 88       	mulsd  xmm0,QWORD PTR [rbp-0x78]
   18b5f:	f2 0f 58 45 d8       	addsd  xmm0,QWORD PTR [rbp-0x28]
   18b64:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   18b68:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   18b6c:	f3 0f 7e 0d bc 94 01 00 	movq   xmm1,QWORD PTR [rip+0x194bc]        # 32030 <Law_and_Order+0x5f0>
   18b74:	66 0f 57 c1          	xorpd  xmm0,xmm1
   18b78:	eb 5c                	jmp    18bd6 <get_scaled_exp_params+0xb61>
   18b7a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   18b7e:	f2 0f 10 a8 c8 3f 06 00 	movsd  xmm5,QWORD PTR [rax+0x63fc8]
   18b86:	f2 0f 11 6d 88       	movsd  QWORD PTR [rbp-0x78],xmm5
   18b8b:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   18b8e:	48 85 c0             	test   rax,rax
   18b91:	78 07                	js     18b9a <get_scaled_exp_params+0xb25>
   18b93:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
   18b98:	eb 15                	jmp    18baf <get_scaled_exp_params+0xb3a>
   18b9a:	48 89 c2             	mov    rdx,rax
   18b9d:	48 d1 ea             	shr    rdx,1
   18ba0:	83 e0 01             	and    eax,0x1
   18ba3:	48 09 c2             	or     rdx,rax
   18ba6:	f2 48 0f 2a c2       	cvtsi2sd xmm0,rdx
   18bab:	f2 0f 58 c0          	addsd  xmm0,xmm0
   18baf:	f2 0f 10 0d 91 94 01 00 	movsd  xmm1,QWORD PTR [rip+0x19491]        # 32048 <Law_and_Order+0x608>
   18bb7:	f2 0f 5e c1          	divsd  xmm0,xmm1
   18bbb:	e8 d0 ab fe ff       	call   3790 <log@plt>
   18bc0:	f2 0f 59 45 88       	mulsd  xmm0,QWORD PTR [rbp-0x78]
   18bc5:	f2 0f 58 45 d8       	addsd  xmm0,QWORD PTR [rbp-0x28]
   18bca:	f3 0f 7e 0d 5e 94 01 00 	movq   xmm1,QWORD PTR [rip+0x1945e]        # 32030 <Law_and_Order+0x5f0>
   18bd2:	66 0f 57 c1          	xorpd  xmm0,xmm1
   18bd6:	f2 0f 10 0d 7a 94 01 00 	movsd  xmm1,QWORD PTR [rip+0x1947a]        # 32058 <Law_and_Order+0x618>
   18bde:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   18be2:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   18be7:	e8 84 ae fe ff       	call   3a70 <exp@plt>
   18bec:	66 48 0f 7e c0       	movq   rax,xmm0
   18bf1:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   18bf5:	8b 4d a0             	mov    ecx,DWORD PTR [rbp-0x60]
   18bf8:	48 83 c1 7e          	add    rcx,0x7e
   18bfc:	48 89 44 ca 08       	mov    QWORD PTR [rdx+rcx*8+0x8],rax
   18c01:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
   18c05:	83 7d a0 1e          	cmp    DWORD PTR [rbp-0x60],0x1e
   18c09:	0f 86 ff fe ff ff    	jbe    18b0e <get_scaled_exp_params+0xa99>
   18c0f:	8b 05 13 06 1d 00    	mov    eax,DWORD PTR [rip+0x1d0613]        # 1e9228 <niniodH>
   18c15:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   18c19:	8b 15 09 06 1d 00    	mov    edx,DWORD PTR [rip+0x1d0609]        # 1e9228 <niniodH>
   18c1f:	8b 05 ff 05 1d 00    	mov    eax,DWORD PTR [rip+0x1d05ff]        # 1e9224 <ninio37>
   18c25:	29 c2                	sub    edx,eax
   18c27:	89 d0                	mov    eax,edx
   18c29:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   18c2d:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   18c32:	f2 0f 5c c1          	subsd  xmm0,xmm1
   18c36:	f2 0f 11 45 d8       	movsd  QWORD PTR [rbp-0x28],xmm0
   18c3b:	c7 45 a4 00 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x0
   18c42:	e9 e9 00 00 00       	jmp    18d30 <get_scaled_exp_params+0xcbb>
   18c47:	8b 05 d3 05 1d 00    	mov    eax,DWORD PTR [rip+0x1d05d3]        # 1e9220 <MAX_NINIO>
   18c4d:	f2 0f 2a d0          	cvtsi2sd xmm2,eax
   18c51:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
   18c54:	48 85 c0             	test   rax,rax
   18c57:	78 07                	js     18c60 <get_scaled_exp_params+0xbeb>
   18c59:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
   18c5e:	eb 15                	jmp    18c75 <get_scaled_exp_params+0xc00>
   18c60:	48 89 c2             	mov    rdx,rax
   18c63:	48 d1 ea             	shr    rdx,1
   18c66:	83 e0 01             	and    eax,0x1
   18c69:	48 09 c2             	or     rdx,rax
   18c6c:	f2 48 0f 2a c2       	cvtsi2sd xmm0,rdx
   18c71:	f2 0f 58 c0          	addsd  xmm0,xmm0
   18c75:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   18c79:	75 0f                	jne    18c8a <get_scaled_exp_params+0xc15>
   18c7b:	f2 0f 10 4d d8       	movsd  xmm1,QWORD PTR [rbp-0x28]
   18c80:	f2 0f 2c c1          	cvttsd2si eax,xmm1
   18c84:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   18c88:	eb 05                	jmp    18c8f <get_scaled_exp_params+0xc1a>
   18c8a:	f2 0f 10 4d d8       	movsd  xmm1,QWORD PTR [rbp-0x28]
   18c8f:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   18c93:	66 0f 2f c2          	comisd xmm0,xmm2
   18c97:	76 18                	jbe    18cb1 <get_scaled_exp_params+0xc3c>
   18c99:	8b 05 81 05 1d 00    	mov    eax,DWORD PTR [rip+0x1d0581]        # 1e9220 <MAX_NINIO>
   18c9f:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   18ca3:	f3 0f 7e 0d 85 93 01 00 	movq   xmm1,QWORD PTR [rip+0x19385]        # 32030 <Law_and_Order+0x5f0>
   18cab:	66 0f 57 c1          	xorpd  xmm0,xmm1
   18caf:	eb 4e                	jmp    18cff <get_scaled_exp_params+0xc8a>
   18cb1:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
   18cb4:	48 85 c0             	test   rax,rax
   18cb7:	78 07                	js     18cc0 <get_scaled_exp_params+0xc4b>
   18cb9:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
   18cbe:	eb 15                	jmp    18cd5 <get_scaled_exp_params+0xc60>
   18cc0:	48 89 c2             	mov    rdx,rax
   18cc3:	48 d1 ea             	shr    rdx,1
   18cc6:	83 e0 01             	and    eax,0x1
   18cc9:	48 09 c2             	or     rdx,rax
   18ccc:	f2 48 0f 2a c2       	cvtsi2sd xmm0,rdx
   18cd1:	f2 0f 58 c0          	addsd  xmm0,xmm0
   18cd5:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   18cd9:	75 0f                	jne    18cea <get_scaled_exp_params+0xc75>
   18cdb:	f2 0f 10 4d d8       	movsd  xmm1,QWORD PTR [rbp-0x28]
   18ce0:	f2 0f 2c c1          	cvttsd2si eax,xmm1
   18ce4:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   18ce8:	eb 05                	jmp    18cef <get_scaled_exp_params+0xc7a>
   18cea:	f2 0f 10 4d d8       	movsd  xmm1,QWORD PTR [rbp-0x28]
   18cef:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   18cf3:	f3 0f 7e 0d 35 93 01 00 	movq   xmm1,QWORD PTR [rip+0x19335]        # 32030 <Law_and_Order+0x5f0>
   18cfb:	66 0f 57 c1          	xorpd  xmm0,xmm1
   18cff:	f2 0f 10 0d 51 93 01 00 	movsd  xmm1,QWORD PTR [rip+0x19351]        # 32058 <Law_and_Order+0x618>
   18d07:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   18d0b:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   18d10:	e8 5b ad fe ff       	call   3a70 <exp@plt>
   18d15:	66 48 0f 7e c0       	movq   rax,xmm0
   18d1a:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   18d1e:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   18d21:	48 81 c1 9c c7 00 00 	add    rcx,0xc79c
   18d28:	48 89 04 ca          	mov    QWORD PTR [rdx+rcx*8],rax
   18d2c:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
   18d30:	83 7d a4 1e          	cmp    DWORD PTR [rbp-0x5c],0x1e
   18d34:	0f 86 0d ff ff ff    	jbe    18c47 <get_scaled_exp_params+0xbd2>
   18d3a:	c7 45 a0 00 00 00 00 	mov    DWORD PTR [rbp-0x60],0x0
   18d41:	e9 01 01 00 00       	jmp    18e47 <get_scaled_exp_params+0xdd2>
   18d46:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   18d4a:	75 6a                	jne    18db6 <get_scaled_exp_params+0xd41>
   18d4c:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   18d4f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   18d57:	48 8d 05 22 36 1d 00 	lea    rax,[rip+0x1d3622]        # 1ec380 <TetraloopdH>
   18d5e:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   18d61:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   18d65:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   18d68:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   18d70:	48 8d 05 09 36 1d 00 	lea    rax,[rip+0x1d3609]        # 1ec380 <TetraloopdH>
   18d77:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   18d7a:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   18d7d:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   18d85:	48 8d 05 54 35 1d 00 	lea    rax,[rip+0x1d3554]        # 1ec2e0 <Tetraloop37>
   18d8c:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   18d8f:	29 c2                	sub    edx,eax
   18d91:	89 d0                	mov    eax,edx
   18d93:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   18d97:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   18d9c:	f2 0f 5c c1          	subsd  xmm0,xmm1
   18da0:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   18da4:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   18da8:	f3 0f 7e 0d 80 92 01 00 	movq   xmm1,QWORD PTR [rip+0x19280]        # 32030 <Law_and_Order+0x5f0>
   18db0:	66 0f 57 c1          	xorpd  xmm0,xmm1
   18db4:	eb 60                	jmp    18e16 <get_scaled_exp_params+0xda1>
   18db6:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   18db9:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   18dc1:	48 8d 05 b8 35 1d 00 	lea    rax,[rip+0x1d35b8]        # 1ec380 <TetraloopdH>
   18dc8:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   18dcb:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   18dcf:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   18dd2:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   18dda:	48 8d 05 9f 35 1d 00 	lea    rax,[rip+0x1d359f]        # 1ec380 <TetraloopdH>
   18de1:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   18de4:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   18de7:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   18def:	48 8d 05 ea 34 1d 00 	lea    rax,[rip+0x1d34ea]        # 1ec2e0 <Tetraloop37>
   18df6:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   18df9:	29 c2                	sub    edx,eax
   18dfb:	89 d0                	mov    eax,edx
   18dfd:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   18e01:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   18e06:	f2 0f 5c c1          	subsd  xmm0,xmm1
   18e0a:	f3 0f 7e 0d 1e 92 01 00 	movq   xmm1,QWORD PTR [rip+0x1921e]        # 32030 <Law_and_Order+0x5f0>
   18e12:	66 0f 57 c1          	xorpd  xmm0,xmm1
   18e16:	f2 0f 10 0d 3a 92 01 00 	movsd  xmm1,QWORD PTR [rip+0x1923a]        # 32058 <Law_and_Order+0x618>
   18e1e:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   18e22:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   18e27:	e8 44 ac fe ff       	call   3a70 <exp@plt>
   18e2c:	66 48 0f 7e c0       	movq   rax,xmm0
   18e31:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   18e35:	8b 4d a0             	mov    ecx,DWORD PTR [rbp-0x60]
   18e38:	48 81 c1 06 c8 00 00 	add    rcx,0xc806
   18e3f:	48 89 04 ca          	mov    QWORD PTR [rdx+rcx*8],rax
   18e43:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
   18e47:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   18e4a:	89 d0                	mov    eax,edx
   18e4c:	c1 e0 03             	shl    eax,0x3
   18e4f:	29 d0                	sub    eax,edx
   18e51:	89 c3                	mov    ebx,eax
   18e53:	48 8d 3d 66 33 1d 00 	lea    rdi,[rip+0x1d3366]        # 1ec1c0 <Tetraloops>
   18e5a:	e8 31 a8 fe ff       	call   3690 <strlen@plt>
   18e5f:	48 39 c3             	cmp    rbx,rax
   18e62:	0f 82 de fe ff ff    	jb     18d46 <get_scaled_exp_params+0xcd1>
   18e68:	c7 45 a0 00 00 00 00 	mov    DWORD PTR [rbp-0x60],0x0
   18e6f:	e9 01 01 00 00       	jmp    18f75 <get_scaled_exp_params+0xf00>
   18e74:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   18e78:	75 6a                	jne    18ee4 <get_scaled_exp_params+0xe6f>
   18e7a:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   18e7d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   18e85:	48 8d 05 94 32 1d 00 	lea    rax,[rip+0x1d3294]        # 1ec120 <TriloopdH>
   18e8c:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   18e8f:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   18e93:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   18e96:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   18e9e:	48 8d 05 7b 32 1d 00 	lea    rax,[rip+0x1d327b]        # 1ec120 <TriloopdH>
   18ea5:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   18ea8:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   18eab:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   18eb3:	48 8d 05 c6 31 1d 00 	lea    rax,[rip+0x1d31c6]        # 1ec080 <Triloop37>
   18eba:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   18ebd:	29 c2                	sub    edx,eax
   18ebf:	89 d0                	mov    eax,edx
   18ec1:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   18ec5:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   18eca:	f2 0f 5c c1          	subsd  xmm0,xmm1
   18ece:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   18ed2:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   18ed6:	f3 0f 7e 0d 52 91 01 00 	movq   xmm1,QWORD PTR [rip+0x19152]        # 32030 <Law_and_Order+0x5f0>
   18ede:	66 0f 57 c1          	xorpd  xmm0,xmm1
   18ee2:	eb 60                	jmp    18f44 <get_scaled_exp_params+0xecf>
   18ee4:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   18ee7:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   18eef:	48 8d 05 2a 32 1d 00 	lea    rax,[rip+0x1d322a]        # 1ec120 <TriloopdH>
   18ef6:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   18ef9:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   18efd:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   18f00:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   18f08:	48 8d 05 11 32 1d 00 	lea    rax,[rip+0x1d3211]        # 1ec120 <TriloopdH>
   18f0f:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   18f12:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   18f15:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   18f1d:	48 8d 05 5c 31 1d 00 	lea    rax,[rip+0x1d315c]        # 1ec080 <Triloop37>
   18f24:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   18f27:	29 c2                	sub    edx,eax
   18f29:	89 d0                	mov    eax,edx
   18f2b:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   18f2f:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   18f34:	f2 0f 5c c1          	subsd  xmm0,xmm1
   18f38:	f3 0f 7e 0d f0 90 01 00 	movq   xmm1,QWORD PTR [rip+0x190f0]        # 32030 <Law_and_Order+0x5f0>
   18f40:	66 0f 57 c1          	xorpd  xmm0,xmm1
   18f44:	f2 0f 10 0d 0c 91 01 00 	movsd  xmm1,QWORD PTR [rip+0x1910c]        # 32058 <Law_and_Order+0x618>
   18f4c:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   18f50:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   18f55:	e8 16 ab fe ff       	call   3a70 <exp@plt>
   18f5a:	66 48 0f 7e c0       	movq   rax,xmm0
   18f5f:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   18f63:	8b 4d a0             	mov    ecx,DWORD PTR [rbp-0x60]
   18f66:	48 81 c1 2e c8 00 00 	add    rcx,0xc82e
   18f6d:	48 89 04 ca          	mov    QWORD PTR [rdx+rcx*8],rax
   18f71:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
   18f75:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   18f78:	89 d0                	mov    eax,edx
   18f7a:	c1 e0 02             	shl    eax,0x2
   18f7d:	01 d0                	add    eax,edx
   18f7f:	89 c3                	mov    ebx,eax
   18f81:	48 8d 3d f8 2f 1d 00 	lea    rdi,[rip+0x1d2ff8]        # 1ebf80 <Triloops>
   18f88:	e8 03 a7 fe ff       	call   3690 <strlen@plt>
   18f8d:	48 39 c3             	cmp    rbx,rax
   18f90:	0f 82 de fe ff ff    	jb     18e74 <get_scaled_exp_params+0xdff>
   18f96:	c7 45 a0 00 00 00 00 	mov    DWORD PTR [rbp-0x60],0x0
   18f9d:	e9 01 01 00 00       	jmp    190a3 <get_scaled_exp_params+0x102e>
   18fa2:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   18fa6:	75 6a                	jne    19012 <get_scaled_exp_params+0xf9d>
   18fa8:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   18fab:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   18fb3:	48 8d 05 86 36 1d 00 	lea    rax,[rip+0x1d3686]        # 1ec640 <HexaloopdH>
   18fba:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   18fbd:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   18fc1:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   18fc4:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   18fcc:	48 8d 05 6d 36 1d 00 	lea    rax,[rip+0x1d366d]        # 1ec640 <HexaloopdH>
   18fd3:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   18fd6:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   18fd9:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   18fe1:	48 8d 05 b8 35 1d 00 	lea    rax,[rip+0x1d35b8]        # 1ec5a0 <Hexaloop37>
   18fe8:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   18feb:	29 c2                	sub    edx,eax
   18fed:	89 d0                	mov    eax,edx
   18fef:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   18ff3:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   18ff8:	f2 0f 5c c1          	subsd  xmm0,xmm1
   18ffc:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   19000:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   19004:	f3 0f 7e 0d 24 90 01 00 	movq   xmm1,QWORD PTR [rip+0x19024]        # 32030 <Law_and_Order+0x5f0>
   1900c:	66 0f 57 c1          	xorpd  xmm0,xmm1
   19010:	eb 60                	jmp    19072 <get_scaled_exp_params+0xffd>
   19012:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   19015:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1901d:	48 8d 05 1c 36 1d 00 	lea    rax,[rip+0x1d361c]        # 1ec640 <HexaloopdH>
   19024:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   19027:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1902b:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1902e:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19036:	48 8d 05 03 36 1d 00 	lea    rax,[rip+0x1d3603]        # 1ec640 <HexaloopdH>
   1903d:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   19040:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   19043:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   1904b:	48 8d 05 4e 35 1d 00 	lea    rax,[rip+0x1d354e]        # 1ec5a0 <Hexaloop37>
   19052:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   19055:	29 c2                	sub    edx,eax
   19057:	89 d0                	mov    eax,edx
   19059:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1905d:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   19062:	f2 0f 5c c1          	subsd  xmm0,xmm1
   19066:	f3 0f 7e 0d c2 8f 01 00 	movq   xmm1,QWORD PTR [rip+0x18fc2]        # 32030 <Law_and_Order+0x5f0>
   1906e:	66 0f 57 c1          	xorpd  xmm0,xmm1
   19072:	f2 0f 10 0d de 8f 01 00 	movsd  xmm1,QWORD PTR [rip+0x18fde]        # 32058 <Law_and_Order+0x618>
   1907a:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1907e:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   19083:	e8 e8 a9 fe ff       	call   3a70 <exp@plt>
   19088:	66 48 0f 7e c0       	movq   rax,xmm0
   1908d:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   19091:	8b 4d a0             	mov    ecx,DWORD PTR [rbp-0x60]
   19094:	48 81 c1 56 c8 00 00 	add    rcx,0xc856
   1909b:	48 89 04 ca          	mov    QWORD PTR [rdx+rcx*8],rax
   1909f:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
   190a3:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   190a6:	89 d0                	mov    eax,edx
   190a8:	c1 e0 03             	shl    eax,0x3
   190ab:	01 d0                	add    eax,edx
   190ad:	89 c3                	mov    ebx,eax
   190af:	48 8d 3d 6a 33 1d 00 	lea    rdi,[rip+0x1d336a]        # 1ec420 <Hexaloops>
   190b6:	e8 d5 a5 fe ff       	call   3690 <strlen@plt>
   190bb:	48 39 c3             	cmp    rbx,rax
   190be:	0f 82 de fe ff ff    	jb     18fa2 <get_scaled_exp_params+0xf2d>
   190c4:	c7 45 a0 00 00 00 00 	mov    DWORD PTR [rbp-0x60],0x0
   190cb:	e9 a8 00 00 00       	jmp    19178 <get_scaled_exp_params+0x1103>
   190d0:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   190d4:	75 3d                	jne    19113 <get_scaled_exp_params+0x109e>
   190d6:	8b 05 38 01 1d 00    	mov    eax,DWORD PTR [rip+0x1d0138]        # 1e9214 <ML_interndH>
   190dc:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   190e0:	8b 15 2e 01 1d 00    	mov    edx,DWORD PTR [rip+0x1d012e]        # 1e9214 <ML_interndH>
   190e6:	8b 05 24 01 1d 00    	mov    eax,DWORD PTR [rip+0x1d0124]        # 1e9210 <ML_intern37>
   190ec:	29 c2                	sub    edx,eax
   190ee:	89 d0                	mov    eax,edx
   190f0:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   190f4:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   190f9:	f2 0f 5c c1          	subsd  xmm0,xmm1
   190fd:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   19101:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   19105:	f3 0f 7e 0d 23 8f 01 00 	movq   xmm1,QWORD PTR [rip+0x18f23]        # 32030 <Law_and_Order+0x5f0>
   1910d:	66 0f 57 c1          	xorpd  xmm0,xmm1
   19111:	eb 33                	jmp    19146 <get_scaled_exp_params+0x10d1>
   19113:	8b 05 fb 00 1d 00    	mov    eax,DWORD PTR [rip+0x1d00fb]        # 1e9214 <ML_interndH>
   19119:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1911d:	8b 15 f1 00 1d 00    	mov    edx,DWORD PTR [rip+0x1d00f1]        # 1e9214 <ML_interndH>
   19123:	8b 05 e7 00 1d 00    	mov    eax,DWORD PTR [rip+0x1d00e7]        # 1e9210 <ML_intern37>
   19129:	29 c2                	sub    edx,eax
   1912b:	89 d0                	mov    eax,edx
   1912d:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   19131:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   19136:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1913a:	f3 0f 7e 0d ee 8e 01 00 	movq   xmm1,QWORD PTR [rip+0x18eee]        # 32030 <Law_and_Order+0x5f0>
   19142:	66 0f 57 c1          	xorpd  xmm0,xmm1
   19146:	f2 0f 10 0d 0a 8f 01 00 	movsd  xmm1,QWORD PTR [rip+0x18f0a]        # 32058 <Law_and_Order+0x618>
   1914e:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   19152:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   19157:	e8 14 a9 fe ff       	call   3a70 <exp@plt>
   1915c:	66 48 0f 7e c0       	movq   rax,xmm0
   19161:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   19165:	8b 4d a0             	mov    ecx,DWORD PTR [rbp-0x60]
   19168:	48 81 c1 fa c7 00 00 	add    rcx,0xc7fa
   1916f:	48 89 44 ca 08       	mov    QWORD PTR [rdx+rcx*8+0x8],rax
   19174:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
   19178:	83 7d a0 07          	cmp    DWORD PTR [rbp-0x60],0x7
   1917c:	0f 86 4e ff ff ff    	jbe    190d0 <get_scaled_exp_params+0x105b>
   19182:	c7 45 a0 00 00 00 00 	mov    DWORD PTR [rbp-0x60],0x0
   19189:	e9 93 13 00 00       	jmp    1a521 <get_scaled_exp_params+0x24ac>
   1918e:	c7 45 a4 00 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x0
   19195:	e9 79 13 00 00       	jmp    1a513 <get_scaled_exp_params+0x249e>
   1919a:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   1919e:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
   191a1:	85 c0                	test   eax,eax
   191a3:	0f 84 f8 12 00 00    	je     1a4a1 <get_scaled_exp_params+0x242c>
   191a9:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   191ad:	0f 85 74 02 00 00    	jne    19427 <get_scaled_exp_params+0x13b2>
   191b3:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   191b7:	0f 85 92 00 00 00    	jne    1924f <get_scaled_exp_params+0x11da>
   191bd:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   191c0:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   191c3:	48 89 d0             	mov    rax,rdx
   191c6:	48 c1 e0 02          	shl    rax,0x2
   191ca:	48 01 d0             	add    rax,rdx
   191cd:	48 01 c8             	add    rax,rcx
   191d0:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   191d8:	48 8d 05 61 2c 1d 00 	lea    rax,[rip+0x1d2c61]        # 1ebe40 <dangle5_dH>
   191df:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   191e2:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   191e6:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   191e9:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   191ec:	48 89 d0             	mov    rax,rdx
   191ef:	48 c1 e0 02          	shl    rax,0x2
   191f3:	48 01 d0             	add    rax,rdx
   191f6:	48 01 c8             	add    rax,rcx
   191f9:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19201:	48 8d 05 38 2c 1d 00 	lea    rax,[rip+0x1d2c38]        # 1ebe40 <dangle5_dH>
   19208:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1920b:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1920e:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19211:	48 89 d0             	mov    rax,rdx
   19214:	48 c1 e0 02          	shl    rax,0x2
   19218:	48 01 d0             	add    rax,rdx
   1921b:	48 01 f0             	add    rax,rsi
   1921e:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19226:	48 8d 05 d3 2a 1d 00 	lea    rax,[rip+0x1d2ad3]        # 1ebd00 <dangle5_37>
   1922d:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   19230:	29 c1                	sub    ecx,eax
   19232:	89 c8                	mov    eax,ecx
   19234:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   19238:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1923d:	f2 0f 5c c1          	subsd  xmm0,xmm1
   19241:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   19245:	85 c0                	test   eax,eax
   19247:	0f 9f c0             	setg   al
   1924a:	e9 8f 00 00 00       	jmp    192de <get_scaled_exp_params+0x1269>
   1924f:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   19252:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19255:	48 89 d0             	mov    rax,rdx
   19258:	48 c1 e0 02          	shl    rax,0x2
   1925c:	48 01 d0             	add    rax,rdx
   1925f:	48 01 c8             	add    rax,rcx
   19262:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1926a:	48 8d 05 cf 2b 1d 00 	lea    rax,[rip+0x1d2bcf]        # 1ebe40 <dangle5_dH>
   19271:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   19274:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   19278:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1927b:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1927e:	48 89 d0             	mov    rax,rdx
   19281:	48 c1 e0 02          	shl    rax,0x2
   19285:	48 01 d0             	add    rax,rdx
   19288:	48 01 c8             	add    rax,rcx
   1928b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19293:	48 8d 05 a6 2b 1d 00 	lea    rax,[rip+0x1d2ba6]        # 1ebe40 <dangle5_dH>
   1929a:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1929d:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   192a0:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   192a3:	48 89 d0             	mov    rax,rdx
   192a6:	48 c1 e0 02          	shl    rax,0x2
   192aa:	48 01 d0             	add    rax,rdx
   192ad:	48 01 f0             	add    rax,rsi
   192b0:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   192b8:	48 8d 05 41 2a 1d 00 	lea    rax,[rip+0x1d2a41]        # 1ebd00 <dangle5_37>
   192bf:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   192c2:	29 c1                	sub    ecx,eax
   192c4:	89 c8                	mov    eax,ecx
   192c6:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   192ca:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   192cf:	f2 0f 5c c1          	subsd  xmm0,xmm1
   192d3:	66 0f ef c9          	pxor   xmm1,xmm1
   192d7:	66 0f 2f c1          	comisd xmm0,xmm1
   192db:	0f 97 c0             	seta   al
   192de:	84 c0                	test   al,al
   192e0:	74 09                	je     192eb <get_scaled_exp_params+0x1276>
   192e2:	66 0f ef c0          	pxor   xmm0,xmm0
   192e6:	e9 fd 07 00 00       	jmp    19ae8 <get_scaled_exp_params+0x1a73>
   192eb:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   192ef:	0f 85 9d 00 00 00    	jne    19392 <get_scaled_exp_params+0x131d>
   192f5:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   192f8:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   192fb:	48 89 d0             	mov    rax,rdx
   192fe:	48 c1 e0 02          	shl    rax,0x2
   19302:	48 01 d0             	add    rax,rdx
   19305:	48 01 c8             	add    rax,rcx
   19308:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19310:	48 8d 05 29 2b 1d 00 	lea    rax,[rip+0x1d2b29]        # 1ebe40 <dangle5_dH>
   19317:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1931a:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1931e:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   19321:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19324:	48 89 d0             	mov    rax,rdx
   19327:	48 c1 e0 02          	shl    rax,0x2
   1932b:	48 01 d0             	add    rax,rdx
   1932e:	48 01 c8             	add    rax,rcx
   19331:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19339:	48 8d 05 00 2b 1d 00 	lea    rax,[rip+0x1d2b00]        # 1ebe40 <dangle5_dH>
   19340:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   19343:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   19346:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19349:	48 89 d0             	mov    rax,rdx
   1934c:	48 c1 e0 02          	shl    rax,0x2
   19350:	48 01 d0             	add    rax,rdx
   19353:	48 01 f0             	add    rax,rsi
   19356:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1935e:	48 8d 05 9b 29 1d 00 	lea    rax,[rip+0x1d299b]        # 1ebd00 <dangle5_37>
   19365:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   19368:	29 c1                	sub    ecx,eax
   1936a:	89 c8                	mov    eax,ecx
   1936c:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   19370:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   19375:	f2 0f 5c c1          	subsd  xmm0,xmm1
   19379:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1937d:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   19381:	f3 0f 7e 0d a7 8c 01 00 	movq   xmm1,QWORD PTR [rip+0x18ca7]        # 32030 <Law_and_Order+0x5f0>
   19389:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1938d:	e9 56 07 00 00       	jmp    19ae8 <get_scaled_exp_params+0x1a73>
   19392:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   19395:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19398:	48 89 d0             	mov    rax,rdx
   1939b:	48 c1 e0 02          	shl    rax,0x2
   1939f:	48 01 d0             	add    rax,rdx
   193a2:	48 01 c8             	add    rax,rcx
   193a5:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   193ad:	48 8d 05 8c 2a 1d 00 	lea    rax,[rip+0x1d2a8c]        # 1ebe40 <dangle5_dH>
   193b4:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   193b7:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   193bb:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   193be:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   193c1:	48 89 d0             	mov    rax,rdx
   193c4:	48 c1 e0 02          	shl    rax,0x2
   193c8:	48 01 d0             	add    rax,rdx
   193cb:	48 01 c8             	add    rax,rcx
   193ce:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   193d6:	48 8d 05 63 2a 1d 00 	lea    rax,[rip+0x1d2a63]        # 1ebe40 <dangle5_dH>
   193dd:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   193e0:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   193e3:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   193e6:	48 89 d0             	mov    rax,rdx
   193e9:	48 c1 e0 02          	shl    rax,0x2
   193ed:	48 01 d0             	add    rax,rdx
   193f0:	48 01 f0             	add    rax,rsi
   193f3:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   193fb:	48 8d 05 fe 28 1d 00 	lea    rax,[rip+0x1d28fe]        # 1ebd00 <dangle5_37>
   19402:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   19405:	29 c1                	sub    ecx,eax
   19407:	89 c8                	mov    eax,ecx
   19409:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1940d:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   19412:	f2 0f 5c c1          	subsd  xmm0,xmm1
   19416:	f3 0f 7e 0d 12 8c 01 00 	movq   xmm1,QWORD PTR [rip+0x18c12]        # 32030 <Law_and_Order+0x5f0>
   1941e:	66 0f 57 c1          	xorpd  xmm0,xmm1
   19422:	e9 c1 06 00 00       	jmp    19ae8 <get_scaled_exp_params+0x1a73>
   19427:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1942b:	0f 85 9d 00 00 00    	jne    194ce <get_scaled_exp_params+0x1459>
   19431:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   19434:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19437:	48 89 d0             	mov    rax,rdx
   1943a:	48 c1 e0 02          	shl    rax,0x2
   1943e:	48 01 d0             	add    rax,rdx
   19441:	48 01 c8             	add    rax,rcx
   19444:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1944c:	48 8d 05 ed 29 1d 00 	lea    rax,[rip+0x1d29ed]        # 1ebe40 <dangle5_dH>
   19453:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   19456:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1945a:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1945d:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19460:	48 89 d0             	mov    rax,rdx
   19463:	48 c1 e0 02          	shl    rax,0x2
   19467:	48 01 d0             	add    rax,rdx
   1946a:	48 01 c8             	add    rax,rcx
   1946d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19475:	48 8d 05 c4 29 1d 00 	lea    rax,[rip+0x1d29c4]        # 1ebe40 <dangle5_dH>
   1947c:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1947f:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   19482:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19485:	48 89 d0             	mov    rax,rdx
   19488:	48 c1 e0 02          	shl    rax,0x2
   1948c:	48 01 d0             	add    rax,rdx
   1948f:	48 01 f0             	add    rax,rsi
   19492:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1949a:	48 8d 05 5f 28 1d 00 	lea    rax,[rip+0x1d285f]        # 1ebd00 <dangle5_37>
   194a1:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   194a4:	29 c1                	sub    ecx,eax
   194a6:	89 c8                	mov    eax,ecx
   194a8:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   194ac:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   194b1:	f2 0f 5c c1          	subsd  xmm0,xmm1
   194b5:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   194b9:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   194bd:	f3 0f 7e 0d 6b 8b 01 00 	movq   xmm1,QWORD PTR [rip+0x18b6b]        # 32030 <Law_and_Order+0x5f0>
   194c5:	66 0f 57 c1          	xorpd  xmm0,xmm1
   194c9:	e9 90 00 00 00       	jmp    1955e <get_scaled_exp_params+0x14e9>
   194ce:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   194d1:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   194d4:	48 89 d0             	mov    rax,rdx
   194d7:	48 c1 e0 02          	shl    rax,0x2
   194db:	48 01 d0             	add    rax,rdx
   194de:	48 01 c8             	add    rax,rcx
   194e1:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   194e9:	48 8d 05 50 29 1d 00 	lea    rax,[rip+0x1d2950]        # 1ebe40 <dangle5_dH>
   194f0:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   194f3:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   194f7:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   194fa:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   194fd:	48 89 d0             	mov    rax,rdx
   19500:	48 c1 e0 02          	shl    rax,0x2
   19504:	48 01 d0             	add    rax,rdx
   19507:	48 01 c8             	add    rax,rcx
   1950a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19512:	48 8d 05 27 29 1d 00 	lea    rax,[rip+0x1d2927]        # 1ebe40 <dangle5_dH>
   19519:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1951c:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1951f:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19522:	48 89 d0             	mov    rax,rdx
   19525:	48 c1 e0 02          	shl    rax,0x2
   19529:	48 01 d0             	add    rax,rdx
   1952c:	48 01 f0             	add    rax,rsi
   1952f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19537:	48 8d 05 c2 27 1d 00 	lea    rax,[rip+0x1d27c2]        # 1ebd00 <dangle5_37>
   1953e:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   19541:	29 c1                	sub    ecx,eax
   19543:	89 c8                	mov    eax,ecx
   19545:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   19549:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1954e:	f2 0f 5c c1          	subsd  xmm0,xmm1
   19552:	f3 0f 7e 0d d6 8a 01 00 	movq   xmm1,QWORD PTR [rip+0x18ad6]        # 32030 <Law_and_Order+0x5f0>
   1955a:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1955e:	f2 0f 10 0d f2 8a 01 00 	movsd  xmm1,QWORD PTR [rip+0x18af2]        # 32058 <Law_and_Order+0x618>
   19566:	f2 0f 5e c1          	divsd  xmm0,xmm1
   1956a:	66 0f 28 c8          	movapd xmm1,xmm0
   1956e:	f2 0f 10 05 fa 8a 01 00 	movsd  xmm0,QWORD PTR [rip+0x18afa]        # 32070 <Law_and_Order+0x630>
   19576:	66 0f 2f c1          	comisd xmm0,xmm1
   1957a:	76 09                	jbe    19585 <get_scaled_exp_params+0x1510>
   1957c:	66 0f ef c0          	pxor   xmm0,xmm0
   19580:	e9 63 05 00 00       	jmp    19ae8 <get_scaled_exp_params+0x1a73>
   19585:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   19589:	0f 85 9d 00 00 00    	jne    1962c <get_scaled_exp_params+0x15b7>
   1958f:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   19592:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19595:	48 89 d0             	mov    rax,rdx
   19598:	48 c1 e0 02          	shl    rax,0x2
   1959c:	48 01 d0             	add    rax,rdx
   1959f:	48 01 c8             	add    rax,rcx
   195a2:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   195aa:	48 8d 05 8f 28 1d 00 	lea    rax,[rip+0x1d288f]        # 1ebe40 <dangle5_dH>
   195b1:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   195b4:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   195b8:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   195bb:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   195be:	48 89 d0             	mov    rax,rdx
   195c1:	48 c1 e0 02          	shl    rax,0x2
   195c5:	48 01 d0             	add    rax,rdx
   195c8:	48 01 c8             	add    rax,rcx
   195cb:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   195d3:	48 8d 05 66 28 1d 00 	lea    rax,[rip+0x1d2866]        # 1ebe40 <dangle5_dH>
   195da:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   195dd:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   195e0:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   195e3:	48 89 d0             	mov    rax,rdx
   195e6:	48 c1 e0 02          	shl    rax,0x2
   195ea:	48 01 d0             	add    rax,rdx
   195ed:	48 01 f0             	add    rax,rsi
   195f0:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   195f8:	48 8d 05 01 27 1d 00 	lea    rax,[rip+0x1d2701]        # 1ebd00 <dangle5_37>
   195ff:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   19602:	29 c1                	sub    ecx,eax
   19604:	89 c8                	mov    eax,ecx
   19606:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1960a:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1960f:	f2 0f 5c c1          	subsd  xmm0,xmm1
   19613:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   19617:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1961b:	f3 0f 7e 0d 0d 8a 01 00 	movq   xmm1,QWORD PTR [rip+0x18a0d]        # 32030 <Law_and_Order+0x5f0>
   19623:	66 0f 57 c1          	xorpd  xmm0,xmm1
   19627:	e9 90 00 00 00       	jmp    196bc <get_scaled_exp_params+0x1647>
   1962c:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1962f:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19632:	48 89 d0             	mov    rax,rdx
   19635:	48 c1 e0 02          	shl    rax,0x2
   19639:	48 01 d0             	add    rax,rdx
   1963c:	48 01 c8             	add    rax,rcx
   1963f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19647:	48 8d 05 f2 27 1d 00 	lea    rax,[rip+0x1d27f2]        # 1ebe40 <dangle5_dH>
   1964e:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   19651:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   19655:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   19658:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1965b:	48 89 d0             	mov    rax,rdx
   1965e:	48 c1 e0 02          	shl    rax,0x2
   19662:	48 01 d0             	add    rax,rdx
   19665:	48 01 c8             	add    rax,rcx
   19668:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19670:	48 8d 05 c9 27 1d 00 	lea    rax,[rip+0x1d27c9]        # 1ebe40 <dangle5_dH>
   19677:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1967a:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1967d:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19680:	48 89 d0             	mov    rax,rdx
   19683:	48 c1 e0 02          	shl    rax,0x2
   19687:	48 01 d0             	add    rax,rdx
   1968a:	48 01 f0             	add    rax,rsi
   1968d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19695:	48 8d 05 64 26 1d 00 	lea    rax,[rip+0x1d2664]        # 1ebd00 <dangle5_37>
   1969c:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1969f:	29 c1                	sub    ecx,eax
   196a1:	89 c8                	mov    eax,ecx
   196a3:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   196a7:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   196ac:	f2 0f 5c c1          	subsd  xmm0,xmm1
   196b0:	f3 0f 7e 0d 78 89 01 00 	movq   xmm1,QWORD PTR [rip+0x18978]        # 32030 <Law_and_Order+0x5f0>
   196b8:	66 0f 57 c1          	xorpd  xmm0,xmm1
   196bc:	f2 0f 10 0d 94 89 01 00 	movsd  xmm1,QWORD PTR [rip+0x18994]        # 32058 <Law_and_Order+0x618>
   196c4:	f2 0f 5e c1          	divsd  xmm0,xmm1
   196c8:	66 0f 2f 05 a8 89 01 00 	comisd xmm0,QWORD PTR [rip+0x189a8]        # 32078 <Law_and_Order+0x638>
   196d0:	0f 86 3c 01 00 00    	jbe    19812 <get_scaled_exp_params+0x179d>
   196d6:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   196da:	0f 85 9d 00 00 00    	jne    1977d <get_scaled_exp_params+0x1708>
   196e0:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   196e3:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   196e6:	48 89 d0             	mov    rax,rdx
   196e9:	48 c1 e0 02          	shl    rax,0x2
   196ed:	48 01 d0             	add    rax,rdx
   196f0:	48 01 c8             	add    rax,rcx
   196f3:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   196fb:	48 8d 05 3e 27 1d 00 	lea    rax,[rip+0x1d273e]        # 1ebe40 <dangle5_dH>
   19702:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   19705:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   19709:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1970c:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1970f:	48 89 d0             	mov    rax,rdx
   19712:	48 c1 e0 02          	shl    rax,0x2
   19716:	48 01 d0             	add    rax,rdx
   19719:	48 01 c8             	add    rax,rcx
   1971c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19724:	48 8d 05 15 27 1d 00 	lea    rax,[rip+0x1d2715]        # 1ebe40 <dangle5_dH>
   1972b:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1972e:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   19731:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19734:	48 89 d0             	mov    rax,rdx
   19737:	48 c1 e0 02          	shl    rax,0x2
   1973b:	48 01 d0             	add    rax,rdx
   1973e:	48 01 f0             	add    rax,rsi
   19741:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19749:	48 8d 05 b0 25 1d 00 	lea    rax,[rip+0x1d25b0]        # 1ebd00 <dangle5_37>
   19750:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   19753:	29 c1                	sub    ecx,eax
   19755:	89 c8                	mov    eax,ecx
   19757:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1975b:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   19760:	f2 0f 5c c1          	subsd  xmm0,xmm1
   19764:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   19768:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1976c:	f3 0f 7e 0d bc 88 01 00 	movq   xmm1,QWORD PTR [rip+0x188bc]        # 32030 <Law_and_Order+0x5f0>
   19774:	66 0f 57 c1          	xorpd  xmm0,xmm1
   19778:	e9 6b 03 00 00       	jmp    19ae8 <get_scaled_exp_params+0x1a73>
   1977d:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   19780:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19783:	48 89 d0             	mov    rax,rdx
   19786:	48 c1 e0 02          	shl    rax,0x2
   1978a:	48 01 d0             	add    rax,rdx
   1978d:	48 01 c8             	add    rax,rcx
   19790:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19798:	48 8d 05 a1 26 1d 00 	lea    rax,[rip+0x1d26a1]        # 1ebe40 <dangle5_dH>
   1979f:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   197a2:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   197a6:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   197a9:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   197ac:	48 89 d0             	mov    rax,rdx
   197af:	48 c1 e0 02          	shl    rax,0x2
   197b3:	48 01 d0             	add    rax,rdx
   197b6:	48 01 c8             	add    rax,rcx
   197b9:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   197c1:	48 8d 05 78 26 1d 00 	lea    rax,[rip+0x1d2678]        # 1ebe40 <dangle5_dH>
   197c8:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   197cb:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   197ce:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   197d1:	48 89 d0             	mov    rax,rdx
   197d4:	48 c1 e0 02          	shl    rax,0x2
   197d8:	48 01 d0             	add    rax,rdx
   197db:	48 01 f0             	add    rax,rsi
   197de:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   197e6:	48 8d 05 13 25 1d 00 	lea    rax,[rip+0x1d2513]        # 1ebd00 <dangle5_37>
   197ed:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   197f0:	29 c1                	sub    ecx,eax
   197f2:	89 c8                	mov    eax,ecx
   197f4:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   197f8:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   197fd:	f2 0f 5c c1          	subsd  xmm0,xmm1
   19801:	f3 0f 7e 0d 27 88 01 00 	movq   xmm1,QWORD PTR [rip+0x18827]        # 32030 <Law_and_Order+0x5f0>
   19809:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1980d:	e9 d6 02 00 00       	jmp    19ae8 <get_scaled_exp_params+0x1a73>
   19812:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   19816:	0f 85 9d 00 00 00    	jne    198b9 <get_scaled_exp_params+0x1844>
   1981c:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1981f:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19822:	48 89 d0             	mov    rax,rdx
   19825:	48 c1 e0 02          	shl    rax,0x2
   19829:	48 01 d0             	add    rax,rdx
   1982c:	48 01 c8             	add    rax,rcx
   1982f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19837:	48 8d 05 02 26 1d 00 	lea    rax,[rip+0x1d2602]        # 1ebe40 <dangle5_dH>
   1983e:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   19841:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   19845:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   19848:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1984b:	48 89 d0             	mov    rax,rdx
   1984e:	48 c1 e0 02          	shl    rax,0x2
   19852:	48 01 d0             	add    rax,rdx
   19855:	48 01 c8             	add    rax,rcx
   19858:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19860:	48 8d 05 d9 25 1d 00 	lea    rax,[rip+0x1d25d9]        # 1ebe40 <dangle5_dH>
   19867:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1986a:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1986d:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19870:	48 89 d0             	mov    rax,rdx
   19873:	48 c1 e0 02          	shl    rax,0x2
   19877:	48 01 d0             	add    rax,rdx
   1987a:	48 01 f0             	add    rax,rsi
   1987d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19885:	48 8d 05 74 24 1d 00 	lea    rax,[rip+0x1d2474]        # 1ebd00 <dangle5_37>
   1988c:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1988f:	29 c1                	sub    ecx,eax
   19891:	89 c8                	mov    eax,ecx
   19893:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   19897:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1989c:	f2 0f 5c c1          	subsd  xmm0,xmm1
   198a0:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   198a4:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   198a8:	f3 0f 7e 0d 80 87 01 00 	movq   xmm1,QWORD PTR [rip+0x18780]        # 32030 <Law_and_Order+0x5f0>
   198b0:	66 0f 57 c1          	xorpd  xmm0,xmm1
   198b4:	e9 90 00 00 00       	jmp    19949 <get_scaled_exp_params+0x18d4>
   198b9:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   198bc:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   198bf:	48 89 d0             	mov    rax,rdx
   198c2:	48 c1 e0 02          	shl    rax,0x2
   198c6:	48 01 d0             	add    rax,rdx
   198c9:	48 01 c8             	add    rax,rcx
   198cc:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   198d4:	48 8d 05 65 25 1d 00 	lea    rax,[rip+0x1d2565]        # 1ebe40 <dangle5_dH>
   198db:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   198de:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   198e2:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   198e5:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   198e8:	48 89 d0             	mov    rax,rdx
   198eb:	48 c1 e0 02          	shl    rax,0x2
   198ef:	48 01 d0             	add    rax,rdx
   198f2:	48 01 c8             	add    rax,rcx
   198f5:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   198fd:	48 8d 05 3c 25 1d 00 	lea    rax,[rip+0x1d253c]        # 1ebe40 <dangle5_dH>
   19904:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   19907:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1990a:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1990d:	48 89 d0             	mov    rax,rdx
   19910:	48 c1 e0 02          	shl    rax,0x2
   19914:	48 01 d0             	add    rax,rdx
   19917:	48 01 f0             	add    rax,rsi
   1991a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19922:	48 8d 05 d7 23 1d 00 	lea    rax,[rip+0x1d23d7]        # 1ebd00 <dangle5_37>
   19929:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1992c:	29 c1                	sub    ecx,eax
   1992e:	89 c8                	mov    eax,ecx
   19930:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   19934:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   19939:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1993d:	f3 0f 7e 0d eb 86 01 00 	movq   xmm1,QWORD PTR [rip+0x186eb]        # 32030 <Law_and_Order+0x5f0>
   19945:	66 0f 57 c1          	xorpd  xmm0,xmm1
   19949:	f2 0f 10 0d 07 87 01 00 	movsd  xmm1,QWORD PTR [rip+0x18707]        # 32058 <Law_and_Order+0x618>
   19951:	f2 0f 5e c1          	divsd  xmm0,xmm1
   19955:	f2 0f 10 0d 23 87 01 00 	movsd  xmm1,QWORD PTR [rip+0x18723]        # 32080 <Law_and_Order+0x640>
   1995d:	f2 0f 5c c1          	subsd  xmm0,xmm1
   19961:	e8 8a 9c fe ff       	call   35f0 <sin@plt>
   19966:	f2 0f 10 0d 9a 86 01 00 	movsd  xmm1,QWORD PTR [rip+0x1869a]        # 32008 <Law_and_Order+0x5c8>
   1996e:	f2 0f 58 c8          	addsd  xmm1,xmm0
   19972:	f2 0f 10 05 0e 87 01 00 	movsd  xmm0,QWORD PTR [rip+0x1870e]        # 32088 <Law_and_Order+0x648>
   1997a:	f2 0f 59 c8          	mulsd  xmm1,xmm0
   1997e:	f2 0f 11 4d 88       	movsd  QWORD PTR [rbp-0x78],xmm1
   19983:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   19987:	0f 85 9d 00 00 00    	jne    19a2a <get_scaled_exp_params+0x19b5>
   1998d:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   19990:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19993:	48 89 d0             	mov    rax,rdx
   19996:	48 c1 e0 02          	shl    rax,0x2
   1999a:	48 01 d0             	add    rax,rdx
   1999d:	48 01 c8             	add    rax,rcx
   199a0:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   199a8:	48 8d 05 91 24 1d 00 	lea    rax,[rip+0x1d2491]        # 1ebe40 <dangle5_dH>
   199af:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   199b2:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   199b6:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   199b9:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   199bc:	48 89 d0             	mov    rax,rdx
   199bf:	48 c1 e0 02          	shl    rax,0x2
   199c3:	48 01 d0             	add    rax,rdx
   199c6:	48 01 c8             	add    rax,rcx
   199c9:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   199d1:	48 8d 05 68 24 1d 00 	lea    rax,[rip+0x1d2468]        # 1ebe40 <dangle5_dH>
   199d8:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   199db:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   199de:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   199e1:	48 89 d0             	mov    rax,rdx
   199e4:	48 c1 e0 02          	shl    rax,0x2
   199e8:	48 01 d0             	add    rax,rdx
   199eb:	48 01 f0             	add    rax,rsi
   199ee:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   199f6:	48 8d 05 03 23 1d 00 	lea    rax,[rip+0x1d2303]        # 1ebd00 <dangle5_37>
   199fd:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   19a00:	29 c1                	sub    ecx,eax
   19a02:	89 c8                	mov    eax,ecx
   19a04:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   19a08:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   19a0d:	f2 0f 5c c1          	subsd  xmm0,xmm1
   19a11:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   19a15:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   19a19:	f3 0f 7e 0d 0f 86 01 00 	movq   xmm1,QWORD PTR [rip+0x1860f]        # 32030 <Law_and_Order+0x5f0>
   19a21:	66 0f 57 c1          	xorpd  xmm0,xmm1
   19a25:	e9 90 00 00 00       	jmp    19aba <get_scaled_exp_params+0x1a45>
   19a2a:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   19a2d:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19a30:	48 89 d0             	mov    rax,rdx
   19a33:	48 c1 e0 02          	shl    rax,0x2
   19a37:	48 01 d0             	add    rax,rdx
   19a3a:	48 01 c8             	add    rax,rcx
   19a3d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19a45:	48 8d 05 f4 23 1d 00 	lea    rax,[rip+0x1d23f4]        # 1ebe40 <dangle5_dH>
   19a4c:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   19a4f:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   19a53:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   19a56:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19a59:	48 89 d0             	mov    rax,rdx
   19a5c:	48 c1 e0 02          	shl    rax,0x2
   19a60:	48 01 d0             	add    rax,rdx
   19a63:	48 01 c8             	add    rax,rcx
   19a66:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19a6e:	48 8d 05 cb 23 1d 00 	lea    rax,[rip+0x1d23cb]        # 1ebe40 <dangle5_dH>
   19a75:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   19a78:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   19a7b:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19a7e:	48 89 d0             	mov    rax,rdx
   19a81:	48 c1 e0 02          	shl    rax,0x2
   19a85:	48 01 d0             	add    rax,rdx
   19a88:	48 01 f0             	add    rax,rsi
   19a8b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19a93:	48 8d 05 66 22 1d 00 	lea    rax,[rip+0x1d2266]        # 1ebd00 <dangle5_37>
   19a9a:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   19a9d:	29 c1                	sub    ecx,eax
   19a9f:	89 c8                	mov    eax,ecx
   19aa1:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   19aa5:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   19aaa:	f2 0f 5c c1          	subsd  xmm0,xmm1
   19aae:	f3 0f 7e 0d 7a 85 01 00 	movq   xmm1,QWORD PTR [rip+0x1857a]        # 32030 <Law_and_Order+0x5f0>
   19ab6:	66 0f 57 c1          	xorpd  xmm0,xmm1
   19aba:	f2 0f 10 0d 96 85 01 00 	movsd  xmm1,QWORD PTR [rip+0x18596]        # 32058 <Law_and_Order+0x618>
   19ac2:	f2 0f 5e c1          	divsd  xmm0,xmm1
   19ac6:	f2 0f 10 0d b2 85 01 00 	movsd  xmm1,QWORD PTR [rip+0x185b2]        # 32080 <Law_and_Order+0x640>
   19ace:	f2 0f 5c c1          	subsd  xmm0,xmm1
   19ad2:	e8 19 9b fe ff       	call   35f0 <sin@plt>
   19ad7:	f2 0f 10 0d 29 85 01 00 	movsd  xmm1,QWORD PTR [rip+0x18529]        # 32008 <Law_and_Order+0x5c8>
   19adf:	f2 0f 58 c1          	addsd  xmm0,xmm1
   19ae3:	f2 0f 59 45 88       	mulsd  xmm0,QWORD PTR [rbp-0x78]
   19ae8:	f2 0f 10 0d 68 85 01 00 	movsd  xmm1,QWORD PTR [rip+0x18568]        # 32058 <Law_and_Order+0x618>
   19af0:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   19af4:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   19af9:	e8 72 9f fe ff       	call   3a70 <exp@plt>
   19afe:	66 48 0f 7e c1       	movq   rcx,xmm0
   19b03:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
   19b07:	8b 7d a4             	mov    edi,DWORD PTR [rbp-0x5c]
   19b0a:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19b0d:	48 89 d0             	mov    rax,rdx
   19b10:	48 c1 e0 02          	shl    rax,0x2
   19b14:	48 01 d0             	add    rax,rdx
   19b17:	48 01 f8             	add    rax,rdi
   19b1a:	48 05 4e 05 00 00    	add    rax,0x54e
   19b20:	48 89 0c c6          	mov    QWORD PTR [rsi+rax*8],rcx
   19b24:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   19b28:	0f 85 74 02 00 00    	jne    19da2 <get_scaled_exp_params+0x1d2d>
   19b2e:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   19b32:	0f 85 92 00 00 00    	jne    19bca <get_scaled_exp_params+0x1b55>
   19b38:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   19b3b:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19b3e:	48 89 d0             	mov    rax,rdx
   19b41:	48 c1 e0 02          	shl    rax,0x2
   19b45:	48 01 d0             	add    rax,rdx
   19b48:	48 01 c8             	add    rax,rcx
   19b4b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19b53:	48 8d 05 86 23 1d 00 	lea    rax,[rip+0x1d2386]        # 1ebee0 <dangle3_dH>
   19b5a:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   19b5d:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   19b61:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   19b64:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19b67:	48 89 d0             	mov    rax,rdx
   19b6a:	48 c1 e0 02          	shl    rax,0x2
   19b6e:	48 01 d0             	add    rax,rdx
   19b71:	48 01 c8             	add    rax,rcx
   19b74:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19b7c:	48 8d 05 5d 23 1d 00 	lea    rax,[rip+0x1d235d]        # 1ebee0 <dangle3_dH>
   19b83:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   19b86:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   19b89:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19b8c:	48 89 d0             	mov    rax,rdx
   19b8f:	48 c1 e0 02          	shl    rax,0x2
   19b93:	48 01 d0             	add    rax,rdx
   19b96:	48 01 f0             	add    rax,rsi
   19b99:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19ba1:	48 8d 05 f8 21 1d 00 	lea    rax,[rip+0x1d21f8]        # 1ebda0 <dangle3_37>
   19ba8:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   19bab:	29 c1                	sub    ecx,eax
   19bad:	89 c8                	mov    eax,ecx
   19baf:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   19bb3:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   19bb8:	f2 0f 5c c1          	subsd  xmm0,xmm1
   19bbc:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   19bc0:	85 c0                	test   eax,eax
   19bc2:	0f 9f c0             	setg   al
   19bc5:	e9 8f 00 00 00       	jmp    19c59 <get_scaled_exp_params+0x1be4>
   19bca:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   19bcd:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19bd0:	48 89 d0             	mov    rax,rdx
   19bd3:	48 c1 e0 02          	shl    rax,0x2
   19bd7:	48 01 d0             	add    rax,rdx
   19bda:	48 01 c8             	add    rax,rcx
   19bdd:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19be5:	48 8d 05 f4 22 1d 00 	lea    rax,[rip+0x1d22f4]        # 1ebee0 <dangle3_dH>
   19bec:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   19bef:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   19bf3:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   19bf6:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19bf9:	48 89 d0             	mov    rax,rdx
   19bfc:	48 c1 e0 02          	shl    rax,0x2
   19c00:	48 01 d0             	add    rax,rdx
   19c03:	48 01 c8             	add    rax,rcx
   19c06:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19c0e:	48 8d 05 cb 22 1d 00 	lea    rax,[rip+0x1d22cb]        # 1ebee0 <dangle3_dH>
   19c15:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   19c18:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   19c1b:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19c1e:	48 89 d0             	mov    rax,rdx
   19c21:	48 c1 e0 02          	shl    rax,0x2
   19c25:	48 01 d0             	add    rax,rdx
   19c28:	48 01 f0             	add    rax,rsi
   19c2b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19c33:	48 8d 05 66 21 1d 00 	lea    rax,[rip+0x1d2166]        # 1ebda0 <dangle3_37>
   19c3a:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   19c3d:	29 c1                	sub    ecx,eax
   19c3f:	89 c8                	mov    eax,ecx
   19c41:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   19c45:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   19c4a:	f2 0f 5c c1          	subsd  xmm0,xmm1
   19c4e:	66 0f ef c9          	pxor   xmm1,xmm1
   19c52:	66 0f 2f c1          	comisd xmm0,xmm1
   19c56:	0f 97 c0             	seta   al
   19c59:	84 c0                	test   al,al
   19c5b:	74 09                	je     19c66 <get_scaled_exp_params+0x1bf1>
   19c5d:	66 0f ef c0          	pxor   xmm0,xmm0
   19c61:	e9 fd 07 00 00       	jmp    1a463 <get_scaled_exp_params+0x23ee>
   19c66:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   19c6a:	0f 85 9d 00 00 00    	jne    19d0d <get_scaled_exp_params+0x1c98>
   19c70:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   19c73:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19c76:	48 89 d0             	mov    rax,rdx
   19c79:	48 c1 e0 02          	shl    rax,0x2
   19c7d:	48 01 d0             	add    rax,rdx
   19c80:	48 01 c8             	add    rax,rcx
   19c83:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19c8b:	48 8d 05 4e 22 1d 00 	lea    rax,[rip+0x1d224e]        # 1ebee0 <dangle3_dH>
   19c92:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   19c95:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   19c99:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   19c9c:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19c9f:	48 89 d0             	mov    rax,rdx
   19ca2:	48 c1 e0 02          	shl    rax,0x2
   19ca6:	48 01 d0             	add    rax,rdx
   19ca9:	48 01 c8             	add    rax,rcx
   19cac:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19cb4:	48 8d 05 25 22 1d 00 	lea    rax,[rip+0x1d2225]        # 1ebee0 <dangle3_dH>
   19cbb:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   19cbe:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   19cc1:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19cc4:	48 89 d0             	mov    rax,rdx
   19cc7:	48 c1 e0 02          	shl    rax,0x2
   19ccb:	48 01 d0             	add    rax,rdx
   19cce:	48 01 f0             	add    rax,rsi
   19cd1:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19cd9:	48 8d 05 c0 20 1d 00 	lea    rax,[rip+0x1d20c0]        # 1ebda0 <dangle3_37>
   19ce0:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   19ce3:	29 c1                	sub    ecx,eax
   19ce5:	89 c8                	mov    eax,ecx
   19ce7:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   19ceb:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   19cf0:	f2 0f 5c c1          	subsd  xmm0,xmm1
   19cf4:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   19cf8:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   19cfc:	f3 0f 7e 0d 2c 83 01 00 	movq   xmm1,QWORD PTR [rip+0x1832c]        # 32030 <Law_and_Order+0x5f0>
   19d04:	66 0f 57 c1          	xorpd  xmm0,xmm1
   19d08:	e9 56 07 00 00       	jmp    1a463 <get_scaled_exp_params+0x23ee>
   19d0d:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   19d10:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19d13:	48 89 d0             	mov    rax,rdx
   19d16:	48 c1 e0 02          	shl    rax,0x2
   19d1a:	48 01 d0             	add    rax,rdx
   19d1d:	48 01 c8             	add    rax,rcx
   19d20:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19d28:	48 8d 05 b1 21 1d 00 	lea    rax,[rip+0x1d21b1]        # 1ebee0 <dangle3_dH>
   19d2f:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   19d32:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   19d36:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   19d39:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19d3c:	48 89 d0             	mov    rax,rdx
   19d3f:	48 c1 e0 02          	shl    rax,0x2
   19d43:	48 01 d0             	add    rax,rdx
   19d46:	48 01 c8             	add    rax,rcx
   19d49:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19d51:	48 8d 05 88 21 1d 00 	lea    rax,[rip+0x1d2188]        # 1ebee0 <dangle3_dH>
   19d58:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   19d5b:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   19d5e:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19d61:	48 89 d0             	mov    rax,rdx
   19d64:	48 c1 e0 02          	shl    rax,0x2
   19d68:	48 01 d0             	add    rax,rdx
   19d6b:	48 01 f0             	add    rax,rsi
   19d6e:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19d76:	48 8d 05 23 20 1d 00 	lea    rax,[rip+0x1d2023]        # 1ebda0 <dangle3_37>
   19d7d:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   19d80:	29 c1                	sub    ecx,eax
   19d82:	89 c8                	mov    eax,ecx
   19d84:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   19d88:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   19d8d:	f2 0f 5c c1          	subsd  xmm0,xmm1
   19d91:	f3 0f 7e 0d 97 82 01 00 	movq   xmm1,QWORD PTR [rip+0x18297]        # 32030 <Law_and_Order+0x5f0>
   19d99:	66 0f 57 c1          	xorpd  xmm0,xmm1
   19d9d:	e9 c1 06 00 00       	jmp    1a463 <get_scaled_exp_params+0x23ee>
   19da2:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   19da6:	0f 85 9d 00 00 00    	jne    19e49 <get_scaled_exp_params+0x1dd4>
   19dac:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   19daf:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19db2:	48 89 d0             	mov    rax,rdx
   19db5:	48 c1 e0 02          	shl    rax,0x2
   19db9:	48 01 d0             	add    rax,rdx
   19dbc:	48 01 c8             	add    rax,rcx
   19dbf:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19dc7:	48 8d 05 12 21 1d 00 	lea    rax,[rip+0x1d2112]        # 1ebee0 <dangle3_dH>
   19dce:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   19dd1:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   19dd5:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   19dd8:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19ddb:	48 89 d0             	mov    rax,rdx
   19dde:	48 c1 e0 02          	shl    rax,0x2
   19de2:	48 01 d0             	add    rax,rdx
   19de5:	48 01 c8             	add    rax,rcx
   19de8:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19df0:	48 8d 05 e9 20 1d 00 	lea    rax,[rip+0x1d20e9]        # 1ebee0 <dangle3_dH>
   19df7:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   19dfa:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   19dfd:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19e00:	48 89 d0             	mov    rax,rdx
   19e03:	48 c1 e0 02          	shl    rax,0x2
   19e07:	48 01 d0             	add    rax,rdx
   19e0a:	48 01 f0             	add    rax,rsi
   19e0d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19e15:	48 8d 05 84 1f 1d 00 	lea    rax,[rip+0x1d1f84]        # 1ebda0 <dangle3_37>
   19e1c:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   19e1f:	29 c1                	sub    ecx,eax
   19e21:	89 c8                	mov    eax,ecx
   19e23:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   19e27:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   19e2c:	f2 0f 5c c1          	subsd  xmm0,xmm1
   19e30:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   19e34:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   19e38:	f3 0f 7e 0d f0 81 01 00 	movq   xmm1,QWORD PTR [rip+0x181f0]        # 32030 <Law_and_Order+0x5f0>
   19e40:	66 0f 57 c1          	xorpd  xmm0,xmm1
   19e44:	e9 90 00 00 00       	jmp    19ed9 <get_scaled_exp_params+0x1e64>
   19e49:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   19e4c:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19e4f:	48 89 d0             	mov    rax,rdx
   19e52:	48 c1 e0 02          	shl    rax,0x2
   19e56:	48 01 d0             	add    rax,rdx
   19e59:	48 01 c8             	add    rax,rcx
   19e5c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19e64:	48 8d 05 75 20 1d 00 	lea    rax,[rip+0x1d2075]        # 1ebee0 <dangle3_dH>
   19e6b:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   19e6e:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   19e72:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   19e75:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19e78:	48 89 d0             	mov    rax,rdx
   19e7b:	48 c1 e0 02          	shl    rax,0x2
   19e7f:	48 01 d0             	add    rax,rdx
   19e82:	48 01 c8             	add    rax,rcx
   19e85:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19e8d:	48 8d 05 4c 20 1d 00 	lea    rax,[rip+0x1d204c]        # 1ebee0 <dangle3_dH>
   19e94:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   19e97:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   19e9a:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19e9d:	48 89 d0             	mov    rax,rdx
   19ea0:	48 c1 e0 02          	shl    rax,0x2
   19ea4:	48 01 d0             	add    rax,rdx
   19ea7:	48 01 f0             	add    rax,rsi
   19eaa:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19eb2:	48 8d 05 e7 1e 1d 00 	lea    rax,[rip+0x1d1ee7]        # 1ebda0 <dangle3_37>
   19eb9:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   19ebc:	29 c1                	sub    ecx,eax
   19ebe:	89 c8                	mov    eax,ecx
   19ec0:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   19ec4:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   19ec9:	f2 0f 5c c1          	subsd  xmm0,xmm1
   19ecd:	f3 0f 7e 0d 5b 81 01 00 	movq   xmm1,QWORD PTR [rip+0x1815b]        # 32030 <Law_and_Order+0x5f0>
   19ed5:	66 0f 57 c1          	xorpd  xmm0,xmm1
   19ed9:	f2 0f 10 0d 77 81 01 00 	movsd  xmm1,QWORD PTR [rip+0x18177]        # 32058 <Law_and_Order+0x618>
   19ee1:	f2 0f 5e c1          	divsd  xmm0,xmm1
   19ee5:	66 0f 28 c8          	movapd xmm1,xmm0
   19ee9:	f2 0f 10 05 7f 81 01 00 	movsd  xmm0,QWORD PTR [rip+0x1817f]        # 32070 <Law_and_Order+0x630>
   19ef1:	66 0f 2f c1          	comisd xmm0,xmm1
   19ef5:	76 09                	jbe    19f00 <get_scaled_exp_params+0x1e8b>
   19ef7:	66 0f ef c0          	pxor   xmm0,xmm0
   19efb:	e9 63 05 00 00       	jmp    1a463 <get_scaled_exp_params+0x23ee>
   19f00:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   19f04:	0f 85 9d 00 00 00    	jne    19fa7 <get_scaled_exp_params+0x1f32>
   19f0a:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   19f0d:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19f10:	48 89 d0             	mov    rax,rdx
   19f13:	48 c1 e0 02          	shl    rax,0x2
   19f17:	48 01 d0             	add    rax,rdx
   19f1a:	48 01 c8             	add    rax,rcx
   19f1d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19f25:	48 8d 05 b4 1f 1d 00 	lea    rax,[rip+0x1d1fb4]        # 1ebee0 <dangle3_dH>
   19f2c:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   19f2f:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   19f33:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   19f36:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19f39:	48 89 d0             	mov    rax,rdx
   19f3c:	48 c1 e0 02          	shl    rax,0x2
   19f40:	48 01 d0             	add    rax,rdx
   19f43:	48 01 c8             	add    rax,rcx
   19f46:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19f4e:	48 8d 05 8b 1f 1d 00 	lea    rax,[rip+0x1d1f8b]        # 1ebee0 <dangle3_dH>
   19f55:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   19f58:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   19f5b:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19f5e:	48 89 d0             	mov    rax,rdx
   19f61:	48 c1 e0 02          	shl    rax,0x2
   19f65:	48 01 d0             	add    rax,rdx
   19f68:	48 01 f0             	add    rax,rsi
   19f6b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19f73:	48 8d 05 26 1e 1d 00 	lea    rax,[rip+0x1d1e26]        # 1ebda0 <dangle3_37>
   19f7a:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   19f7d:	29 c1                	sub    ecx,eax
   19f7f:	89 c8                	mov    eax,ecx
   19f81:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   19f85:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   19f8a:	f2 0f 5c c1          	subsd  xmm0,xmm1
   19f8e:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   19f92:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   19f96:	f3 0f 7e 0d 92 80 01 00 	movq   xmm1,QWORD PTR [rip+0x18092]        # 32030 <Law_and_Order+0x5f0>
   19f9e:	66 0f 57 c1          	xorpd  xmm0,xmm1
   19fa2:	e9 90 00 00 00       	jmp    1a037 <get_scaled_exp_params+0x1fc2>
   19fa7:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   19faa:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19fad:	48 89 d0             	mov    rax,rdx
   19fb0:	48 c1 e0 02          	shl    rax,0x2
   19fb4:	48 01 d0             	add    rax,rdx
   19fb7:	48 01 c8             	add    rax,rcx
   19fba:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19fc2:	48 8d 05 17 1f 1d 00 	lea    rax,[rip+0x1d1f17]        # 1ebee0 <dangle3_dH>
   19fc9:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   19fcc:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   19fd0:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   19fd3:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19fd6:	48 89 d0             	mov    rax,rdx
   19fd9:	48 c1 e0 02          	shl    rax,0x2
   19fdd:	48 01 d0             	add    rax,rdx
   19fe0:	48 01 c8             	add    rax,rcx
   19fe3:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   19feb:	48 8d 05 ee 1e 1d 00 	lea    rax,[rip+0x1d1eee]        # 1ebee0 <dangle3_dH>
   19ff2:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   19ff5:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   19ff8:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   19ffb:	48 89 d0             	mov    rax,rdx
   19ffe:	48 c1 e0 02          	shl    rax,0x2
   1a002:	48 01 d0             	add    rax,rdx
   1a005:	48 01 f0             	add    rax,rsi
   1a008:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a010:	48 8d 05 89 1d 1d 00 	lea    rax,[rip+0x1d1d89]        # 1ebda0 <dangle3_37>
   1a017:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1a01a:	29 c1                	sub    ecx,eax
   1a01c:	89 c8                	mov    eax,ecx
   1a01e:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1a022:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1a027:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1a02b:	f3 0f 7e 0d fd 7f 01 00 	movq   xmm1,QWORD PTR [rip+0x17ffd]        # 32030 <Law_and_Order+0x5f0>
   1a033:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1a037:	f2 0f 10 0d 19 80 01 00 	movsd  xmm1,QWORD PTR [rip+0x18019]        # 32058 <Law_and_Order+0x618>
   1a03f:	f2 0f 5e c1          	divsd  xmm0,xmm1
   1a043:	66 0f 2f 05 2d 80 01 00 	comisd xmm0,QWORD PTR [rip+0x1802d]        # 32078 <Law_and_Order+0x638>
   1a04b:	0f 86 3c 01 00 00    	jbe    1a18d <get_scaled_exp_params+0x2118>
   1a051:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1a055:	0f 85 9d 00 00 00    	jne    1a0f8 <get_scaled_exp_params+0x2083>
   1a05b:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1a05e:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a061:	48 89 d0             	mov    rax,rdx
   1a064:	48 c1 e0 02          	shl    rax,0x2
   1a068:	48 01 d0             	add    rax,rdx
   1a06b:	48 01 c8             	add    rax,rcx
   1a06e:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a076:	48 8d 05 63 1e 1d 00 	lea    rax,[rip+0x1d1e63]        # 1ebee0 <dangle3_dH>
   1a07d:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1a080:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1a084:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1a087:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a08a:	48 89 d0             	mov    rax,rdx
   1a08d:	48 c1 e0 02          	shl    rax,0x2
   1a091:	48 01 d0             	add    rax,rdx
   1a094:	48 01 c8             	add    rax,rcx
   1a097:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a09f:	48 8d 05 3a 1e 1d 00 	lea    rax,[rip+0x1d1e3a]        # 1ebee0 <dangle3_dH>
   1a0a6:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1a0a9:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1a0ac:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a0af:	48 89 d0             	mov    rax,rdx
   1a0b2:	48 c1 e0 02          	shl    rax,0x2
   1a0b6:	48 01 d0             	add    rax,rdx
   1a0b9:	48 01 f0             	add    rax,rsi
   1a0bc:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a0c4:	48 8d 05 d5 1c 1d 00 	lea    rax,[rip+0x1d1cd5]        # 1ebda0 <dangle3_37>
   1a0cb:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1a0ce:	29 c1                	sub    ecx,eax
   1a0d0:	89 c8                	mov    eax,ecx
   1a0d2:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1a0d6:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1a0db:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1a0df:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1a0e3:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1a0e7:	f3 0f 7e 0d 41 7f 01 00 	movq   xmm1,QWORD PTR [rip+0x17f41]        # 32030 <Law_and_Order+0x5f0>
   1a0ef:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1a0f3:	e9 6b 03 00 00       	jmp    1a463 <get_scaled_exp_params+0x23ee>
   1a0f8:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1a0fb:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a0fe:	48 89 d0             	mov    rax,rdx
   1a101:	48 c1 e0 02          	shl    rax,0x2
   1a105:	48 01 d0             	add    rax,rdx
   1a108:	48 01 c8             	add    rax,rcx
   1a10b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a113:	48 8d 05 c6 1d 1d 00 	lea    rax,[rip+0x1d1dc6]        # 1ebee0 <dangle3_dH>
   1a11a:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1a11d:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1a121:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1a124:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a127:	48 89 d0             	mov    rax,rdx
   1a12a:	48 c1 e0 02          	shl    rax,0x2
   1a12e:	48 01 d0             	add    rax,rdx
   1a131:	48 01 c8             	add    rax,rcx
   1a134:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a13c:	48 8d 05 9d 1d 1d 00 	lea    rax,[rip+0x1d1d9d]        # 1ebee0 <dangle3_dH>
   1a143:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1a146:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1a149:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a14c:	48 89 d0             	mov    rax,rdx
   1a14f:	48 c1 e0 02          	shl    rax,0x2
   1a153:	48 01 d0             	add    rax,rdx
   1a156:	48 01 f0             	add    rax,rsi
   1a159:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a161:	48 8d 05 38 1c 1d 00 	lea    rax,[rip+0x1d1c38]        # 1ebda0 <dangle3_37>
   1a168:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1a16b:	29 c1                	sub    ecx,eax
   1a16d:	89 c8                	mov    eax,ecx
   1a16f:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1a173:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1a178:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1a17c:	f3 0f 7e 0d ac 7e 01 00 	movq   xmm1,QWORD PTR [rip+0x17eac]        # 32030 <Law_and_Order+0x5f0>
   1a184:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1a188:	e9 d6 02 00 00       	jmp    1a463 <get_scaled_exp_params+0x23ee>
   1a18d:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1a191:	0f 85 9d 00 00 00    	jne    1a234 <get_scaled_exp_params+0x21bf>
   1a197:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1a19a:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a19d:	48 89 d0             	mov    rax,rdx
   1a1a0:	48 c1 e0 02          	shl    rax,0x2
   1a1a4:	48 01 d0             	add    rax,rdx
   1a1a7:	48 01 c8             	add    rax,rcx
   1a1aa:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a1b2:	48 8d 05 27 1d 1d 00 	lea    rax,[rip+0x1d1d27]        # 1ebee0 <dangle3_dH>
   1a1b9:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1a1bc:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1a1c0:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1a1c3:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a1c6:	48 89 d0             	mov    rax,rdx
   1a1c9:	48 c1 e0 02          	shl    rax,0x2
   1a1cd:	48 01 d0             	add    rax,rdx
   1a1d0:	48 01 c8             	add    rax,rcx
   1a1d3:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a1db:	48 8d 05 fe 1c 1d 00 	lea    rax,[rip+0x1d1cfe]        # 1ebee0 <dangle3_dH>
   1a1e2:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1a1e5:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1a1e8:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a1eb:	48 89 d0             	mov    rax,rdx
   1a1ee:	48 c1 e0 02          	shl    rax,0x2
   1a1f2:	48 01 d0             	add    rax,rdx
   1a1f5:	48 01 f0             	add    rax,rsi
   1a1f8:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a200:	48 8d 05 99 1b 1d 00 	lea    rax,[rip+0x1d1b99]        # 1ebda0 <dangle3_37>
   1a207:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1a20a:	29 c1                	sub    ecx,eax
   1a20c:	89 c8                	mov    eax,ecx
   1a20e:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1a212:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1a217:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1a21b:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1a21f:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1a223:	f3 0f 7e 0d 05 7e 01 00 	movq   xmm1,QWORD PTR [rip+0x17e05]        # 32030 <Law_and_Order+0x5f0>
   1a22b:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1a22f:	e9 90 00 00 00       	jmp    1a2c4 <get_scaled_exp_params+0x224f>
   1a234:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1a237:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a23a:	48 89 d0             	mov    rax,rdx
   1a23d:	48 c1 e0 02          	shl    rax,0x2
   1a241:	48 01 d0             	add    rax,rdx
   1a244:	48 01 c8             	add    rax,rcx
   1a247:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a24f:	48 8d 05 8a 1c 1d 00 	lea    rax,[rip+0x1d1c8a]        # 1ebee0 <dangle3_dH>
   1a256:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1a259:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1a25d:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1a260:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a263:	48 89 d0             	mov    rax,rdx
   1a266:	48 c1 e0 02          	shl    rax,0x2
   1a26a:	48 01 d0             	add    rax,rdx
   1a26d:	48 01 c8             	add    rax,rcx
   1a270:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a278:	48 8d 05 61 1c 1d 00 	lea    rax,[rip+0x1d1c61]        # 1ebee0 <dangle3_dH>
   1a27f:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1a282:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1a285:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a288:	48 89 d0             	mov    rax,rdx
   1a28b:	48 c1 e0 02          	shl    rax,0x2
   1a28f:	48 01 d0             	add    rax,rdx
   1a292:	48 01 f0             	add    rax,rsi
   1a295:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a29d:	48 8d 05 fc 1a 1d 00 	lea    rax,[rip+0x1d1afc]        # 1ebda0 <dangle3_37>
   1a2a4:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1a2a7:	29 c1                	sub    ecx,eax
   1a2a9:	89 c8                	mov    eax,ecx
   1a2ab:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1a2af:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1a2b4:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1a2b8:	f3 0f 7e 0d 70 7d 01 00 	movq   xmm1,QWORD PTR [rip+0x17d70]        # 32030 <Law_and_Order+0x5f0>
   1a2c0:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1a2c4:	f2 0f 10 0d 8c 7d 01 00 	movsd  xmm1,QWORD PTR [rip+0x17d8c]        # 32058 <Law_and_Order+0x618>
   1a2cc:	f2 0f 5e c1          	divsd  xmm0,xmm1
   1a2d0:	f2 0f 10 0d a8 7d 01 00 	movsd  xmm1,QWORD PTR [rip+0x17da8]        # 32080 <Law_and_Order+0x640>
   1a2d8:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1a2dc:	e8 0f 93 fe ff       	call   35f0 <sin@plt>
   1a2e1:	f2 0f 10 0d 1f 7d 01 00 	movsd  xmm1,QWORD PTR [rip+0x17d1f]        # 32008 <Law_and_Order+0x5c8>
   1a2e9:	f2 0f 58 c8          	addsd  xmm1,xmm0
   1a2ed:	f2 0f 10 05 93 7d 01 00 	movsd  xmm0,QWORD PTR [rip+0x17d93]        # 32088 <Law_and_Order+0x648>
   1a2f5:	f2 0f 59 c8          	mulsd  xmm1,xmm0
   1a2f9:	f2 0f 11 4d 88       	movsd  QWORD PTR [rbp-0x78],xmm1
   1a2fe:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1a302:	0f 85 9d 00 00 00    	jne    1a3a5 <get_scaled_exp_params+0x2330>
   1a308:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1a30b:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a30e:	48 89 d0             	mov    rax,rdx
   1a311:	48 c1 e0 02          	shl    rax,0x2
   1a315:	48 01 d0             	add    rax,rdx
   1a318:	48 01 c8             	add    rax,rcx
   1a31b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a323:	48 8d 05 b6 1b 1d 00 	lea    rax,[rip+0x1d1bb6]        # 1ebee0 <dangle3_dH>
   1a32a:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1a32d:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1a331:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1a334:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a337:	48 89 d0             	mov    rax,rdx
   1a33a:	48 c1 e0 02          	shl    rax,0x2
   1a33e:	48 01 d0             	add    rax,rdx
   1a341:	48 01 c8             	add    rax,rcx
   1a344:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a34c:	48 8d 05 8d 1b 1d 00 	lea    rax,[rip+0x1d1b8d]        # 1ebee0 <dangle3_dH>
   1a353:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1a356:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1a359:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a35c:	48 89 d0             	mov    rax,rdx
   1a35f:	48 c1 e0 02          	shl    rax,0x2
   1a363:	48 01 d0             	add    rax,rdx
   1a366:	48 01 f0             	add    rax,rsi
   1a369:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a371:	48 8d 05 28 1a 1d 00 	lea    rax,[rip+0x1d1a28]        # 1ebda0 <dangle3_37>
   1a378:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1a37b:	29 c1                	sub    ecx,eax
   1a37d:	89 c8                	mov    eax,ecx
   1a37f:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1a383:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1a388:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1a38c:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1a390:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1a394:	f3 0f 7e 0d 94 7c 01 00 	movq   xmm1,QWORD PTR [rip+0x17c94]        # 32030 <Law_and_Order+0x5f0>
   1a39c:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1a3a0:	e9 90 00 00 00       	jmp    1a435 <get_scaled_exp_params+0x23c0>
   1a3a5:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1a3a8:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a3ab:	48 89 d0             	mov    rax,rdx
   1a3ae:	48 c1 e0 02          	shl    rax,0x2
   1a3b2:	48 01 d0             	add    rax,rdx
   1a3b5:	48 01 c8             	add    rax,rcx
   1a3b8:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a3c0:	48 8d 05 19 1b 1d 00 	lea    rax,[rip+0x1d1b19]        # 1ebee0 <dangle3_dH>
   1a3c7:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1a3ca:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1a3ce:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1a3d1:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a3d4:	48 89 d0             	mov    rax,rdx
   1a3d7:	48 c1 e0 02          	shl    rax,0x2
   1a3db:	48 01 d0             	add    rax,rdx
   1a3de:	48 01 c8             	add    rax,rcx
   1a3e1:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a3e9:	48 8d 05 f0 1a 1d 00 	lea    rax,[rip+0x1d1af0]        # 1ebee0 <dangle3_dH>
   1a3f0:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1a3f3:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1a3f6:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a3f9:	48 89 d0             	mov    rax,rdx
   1a3fc:	48 c1 e0 02          	shl    rax,0x2
   1a400:	48 01 d0             	add    rax,rdx
   1a403:	48 01 f0             	add    rax,rsi
   1a406:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a40e:	48 8d 05 8b 19 1d 00 	lea    rax,[rip+0x1d198b]        # 1ebda0 <dangle3_37>
   1a415:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1a418:	29 c1                	sub    ecx,eax
   1a41a:	89 c8                	mov    eax,ecx
   1a41c:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1a420:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1a425:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1a429:	f3 0f 7e 0d ff 7b 01 00 	movq   xmm1,QWORD PTR [rip+0x17bff]        # 32030 <Law_and_Order+0x5f0>
   1a431:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1a435:	f2 0f 10 0d 1b 7c 01 00 	movsd  xmm1,QWORD PTR [rip+0x17c1b]        # 32058 <Law_and_Order+0x618>
   1a43d:	f2 0f 5e c1          	divsd  xmm0,xmm1
   1a441:	f2 0f 10 0d 37 7c 01 00 	movsd  xmm1,QWORD PTR [rip+0x17c37]        # 32080 <Law_and_Order+0x640>
   1a449:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1a44d:	e8 9e 91 fe ff       	call   35f0 <sin@plt>
   1a452:	f2 0f 10 0d ae 7b 01 00 	movsd  xmm1,QWORD PTR [rip+0x17bae]        # 32008 <Law_and_Order+0x5c8>
   1a45a:	f2 0f 58 c1          	addsd  xmm0,xmm1
   1a45e:	f2 0f 59 45 88       	mulsd  xmm0,QWORD PTR [rbp-0x78]
   1a463:	f2 0f 10 0d ed 7b 01 00 	movsd  xmm1,QWORD PTR [rip+0x17bed]        # 32058 <Law_and_Order+0x618>
   1a46b:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1a46f:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1a474:	e8 f7 95 fe ff       	call   3a70 <exp@plt>
   1a479:	66 48 0f 7e c1       	movq   rcx,xmm0
   1a47e:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
   1a482:	8b 7d a4             	mov    edi,DWORD PTR [rbp-0x5c]
   1a485:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a488:	48 89 d0             	mov    rax,rdx
   1a48b:	48 c1 e0 02          	shl    rax,0x2
   1a48f:	48 01 d0             	add    rax,rdx
   1a492:	48 01 f8             	add    rax,rdi
   1a495:	48 05 76 05 00 00    	add    rax,0x576
   1a49b:	48 89 0c c6          	mov    QWORD PTR [rsi+rax*8],rcx
   1a49f:	eb 6e                	jmp    1a50f <get_scaled_exp_params+0x249a>
   1a4a1:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
   1a4a5:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1a4a8:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a4ab:	48 89 d0             	mov    rax,rdx
   1a4ae:	48 c1 e0 02          	shl    rax,0x2
   1a4b2:	48 01 d0             	add    rax,rdx
   1a4b5:	48 01 f0             	add    rax,rsi
   1a4b8:	48 05 4e 05 00 00    	add    rax,0x54e
   1a4be:	f2 0f 10 05 42 7b 01 00 	movsd  xmm0,QWORD PTR [rip+0x17b42]        # 32008 <Law_and_Order+0x5c8>
   1a4c6:	f2 0f 11 04 c1       	movsd  QWORD PTR [rcx+rax*8],xmm0
   1a4cb:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
   1a4cf:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1a4d2:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a4d5:	48 89 d0             	mov    rax,rdx
   1a4d8:	48 c1 e0 02          	shl    rax,0x2
   1a4dc:	48 01 d0             	add    rax,rdx
   1a4df:	48 01 f0             	add    rax,rsi
   1a4e2:	48 05 4e 05 00 00    	add    rax,0x54e
   1a4e8:	f2 0f 10 04 c1       	movsd  xmm0,QWORD PTR [rcx+rax*8]
   1a4ed:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
   1a4f1:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1a4f4:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a4f7:	48 89 d0             	mov    rax,rdx
   1a4fa:	48 c1 e0 02          	shl    rax,0x2
   1a4fe:	48 01 d0             	add    rax,rdx
   1a501:	48 01 f0             	add    rax,rsi
   1a504:	48 05 76 05 00 00    	add    rax,0x576
   1a50a:	f2 0f 11 04 c1       	movsd  QWORD PTR [rcx+rax*8],xmm0
   1a50f:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
   1a513:	83 7d a4 04          	cmp    DWORD PTR [rbp-0x5c],0x4
   1a517:	0f 86 7d ec ff ff    	jbe    1919a <get_scaled_exp_params+0x1125>
   1a51d:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
   1a521:	83 7d a0 07          	cmp    DWORD PTR [rbp-0x60],0x7
   1a525:	0f 86 63 ec ff ff    	jbe    1918e <get_scaled_exp_params+0x1119>
   1a52b:	c7 45 a0 00 00 00 00 	mov    DWORD PTR [rbp-0x60],0x0
   1a532:	e9 5f 01 00 00       	jmp    1a696 <get_scaled_exp_params+0x2621>
   1a537:	c7 45 a4 00 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x0
   1a53e:	e9 45 01 00 00       	jmp    1a688 <get_scaled_exp_params+0x2613>
   1a543:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1a547:	0f 85 88 00 00 00    	jne    1a5d5 <get_scaled_exp_params+0x2560>
   1a54d:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
   1a550:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a553:	48 c1 e2 03          	shl    rdx,0x3
   1a557:	48 01 d0             	add    rax,rdx
   1a55a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a562:	48 8d 05 17 ee 1c 00 	lea    rax,[rip+0x1cee17]        # 1e9380 <stackdH>
   1a569:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1a56c:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1a570:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
   1a573:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a576:	48 c1 e2 03          	shl    rdx,0x3
   1a57a:	48 01 d0             	add    rax,rdx
   1a57d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a585:	48 8d 05 f4 ed 1c 00 	lea    rax,[rip+0x1cedf4]        # 1e9380 <stackdH>
   1a58c:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   1a58f:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
   1a592:	8b 4d a0             	mov    ecx,DWORD PTR [rbp-0x60]
   1a595:	48 c1 e1 03          	shl    rcx,0x3
   1a599:	48 01 c8             	add    rax,rcx
   1a59c:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   1a5a4:	48 8d 05 d5 ec 1c 00 	lea    rax,[rip+0x1cecd5]        # 1e9280 <stack37>
   1a5ab:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   1a5ae:	29 c2                	sub    edx,eax
   1a5b0:	89 d0                	mov    eax,edx
   1a5b2:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1a5b6:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1a5bb:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1a5bf:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1a5c3:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1a5c7:	f3 0f 7e 0d 61 7a 01 00 	movq   xmm1,QWORD PTR [rip+0x17a61]        # 32030 <Law_and_Order+0x5f0>
   1a5cf:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1a5d3:	eb 7e                	jmp    1a653 <get_scaled_exp_params+0x25de>
   1a5d5:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
   1a5d8:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a5db:	48 c1 e2 03          	shl    rdx,0x3
   1a5df:	48 01 d0             	add    rax,rdx
   1a5e2:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a5ea:	48 8d 05 8f ed 1c 00 	lea    rax,[rip+0x1ced8f]        # 1e9380 <stackdH>
   1a5f1:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1a5f4:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1a5f8:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
   1a5fb:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a5fe:	48 c1 e2 03          	shl    rdx,0x3
   1a602:	48 01 d0             	add    rax,rdx
   1a605:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a60d:	48 8d 05 6c ed 1c 00 	lea    rax,[rip+0x1ced6c]        # 1e9380 <stackdH>
   1a614:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   1a617:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
   1a61a:	8b 4d a0             	mov    ecx,DWORD PTR [rbp-0x60]
   1a61d:	48 c1 e1 03          	shl    rcx,0x3
   1a621:	48 01 c8             	add    rax,rcx
   1a624:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   1a62c:	48 8d 05 4d ec 1c 00 	lea    rax,[rip+0x1cec4d]        # 1e9280 <stack37>
   1a633:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   1a636:	29 c2                	sub    edx,eax
   1a638:	89 d0                	mov    eax,edx
   1a63a:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1a63e:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1a643:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1a647:	f3 0f 7e 0d e1 79 01 00 	movq   xmm1,QWORD PTR [rip+0x179e1]        # 32030 <Law_and_Order+0x5f0>
   1a64f:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1a653:	f2 0f 10 0d fd 79 01 00 	movsd  xmm1,QWORD PTR [rip+0x179fd]        # 32058 <Law_and_Order+0x618>
   1a65b:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1a65f:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1a664:	e8 07 94 fe ff       	call   3a70 <exp@plt>
   1a669:	66 48 0f 7e c0       	movq   rax,xmm0
   1a66e:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   1a672:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1a675:	8b 75 a0             	mov    esi,DWORD PTR [rbp-0x60]
   1a678:	48 c1 e6 03          	shl    rsi,0x3
   1a67c:	48 01 f1             	add    rcx,rsi
   1a67f:	48 89 44 ca 08       	mov    QWORD PTR [rdx+rcx*8+0x8],rax
   1a684:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
   1a688:	83 7d a4 07          	cmp    DWORD PTR [rbp-0x5c],0x7
   1a68c:	0f 86 b1 fe ff ff    	jbe    1a543 <get_scaled_exp_params+0x24ce>
   1a692:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
   1a696:	83 7d a0 07          	cmp    DWORD PTR [rbp-0x60],0x7
   1a69a:	0f 86 97 fe ff ff    	jbe    1a537 <get_scaled_exp_params+0x24c2>
   1a6a0:	c7 45 a0 00 00 00 00 	mov    DWORD PTR [rbp-0x60],0x0
   1a6a7:	e9 d9 25 00 00       	jmp    1cc85 <get_scaled_exp_params+0x4c10>
   1a6ac:	c7 45 a4 00 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x0
   1a6b3:	e9 bf 25 00 00       	jmp    1cc77 <get_scaled_exp_params+0x4c02>
   1a6b8:	c7 45 a8 00 00 00 00 	mov    DWORD PTR [rbp-0x58],0x0
   1a6bf:	e9 a5 25 00 00       	jmp    1cc69 <get_scaled_exp_params+0x4bf4>
   1a6c4:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1a6c8:	0f 85 ee 00 00 00    	jne    1a7bc <get_scaled_exp_params+0x2747>
   1a6ce:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1a6d1:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a6d4:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1a6d7:	48 89 d0             	mov    rax,rdx
   1a6da:	48 c1 e0 02          	shl    rax,0x2
   1a6de:	48 01 d0             	add    rax,rdx
   1a6e1:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a6e9:	48 01 d0             	add    rax,rdx
   1a6ec:	48 89 ca             	mov    rdx,rcx
   1a6ef:	48 c1 e2 02          	shl    rdx,0x2
   1a6f3:	48 01 ca             	add    rdx,rcx
   1a6f6:	48 01 d0             	add    rax,rdx
   1a6f9:	48 01 f0             	add    rax,rsi
   1a6fc:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a704:	48 8d 05 95 f3 1c 00 	lea    rax,[rip+0x1cf395]        # 1e9aa0 <mismatchIdH>
   1a70b:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1a70e:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1a712:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1a715:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a718:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1a71b:	48 89 d0             	mov    rax,rdx
   1a71e:	48 c1 e0 02          	shl    rax,0x2
   1a722:	48 01 d0             	add    rax,rdx
   1a725:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a72d:	48 01 d0             	add    rax,rdx
   1a730:	48 89 ca             	mov    rdx,rcx
   1a733:	48 c1 e2 02          	shl    rdx,0x2
   1a737:	48 01 ca             	add    rdx,rcx
   1a73a:	48 01 d0             	add    rax,rdx
   1a73d:	48 01 f0             	add    rax,rsi
   1a740:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a748:	48 8d 05 51 f3 1c 00 	lea    rax,[rip+0x1cf351]        # 1e9aa0 <mismatchIdH>
   1a74f:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1a752:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1a755:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a758:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1a75b:	48 89 d0             	mov    rax,rdx
   1a75e:	48 c1 e0 02          	shl    rax,0x2
   1a762:	48 01 d0             	add    rax,rdx
   1a765:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a76d:	48 01 d0             	add    rax,rdx
   1a770:	48 89 ca             	mov    rdx,rcx
   1a773:	48 c1 e2 02          	shl    rdx,0x2
   1a777:	48 01 ca             	add    rdx,rcx
   1a77a:	48 01 d0             	add    rax,rdx
   1a77d:	48 01 f8             	add    rax,rdi
   1a780:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a788:	48 8d 05 f1 ef 1c 00 	lea    rax,[rip+0x1ceff1]        # 1e9780 <mismatchI37>
   1a78f:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1a792:	29 c6                	sub    esi,eax
   1a794:	89 f0                	mov    eax,esi
   1a796:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1a79a:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1a79f:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1a7a3:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1a7a7:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1a7ab:	f3 0f 7e 0d 7d 78 01 00 	movq   xmm1,QWORD PTR [rip+0x1787d]        # 32030 <Law_and_Order+0x5f0>
   1a7b3:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1a7b7:	e9 e1 00 00 00       	jmp    1a89d <get_scaled_exp_params+0x2828>
   1a7bc:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1a7bf:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a7c2:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1a7c5:	48 89 d0             	mov    rax,rdx
   1a7c8:	48 c1 e0 02          	shl    rax,0x2
   1a7cc:	48 01 d0             	add    rax,rdx
   1a7cf:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a7d7:	48 01 d0             	add    rax,rdx
   1a7da:	48 89 ca             	mov    rdx,rcx
   1a7dd:	48 c1 e2 02          	shl    rdx,0x2
   1a7e1:	48 01 ca             	add    rdx,rcx
   1a7e4:	48 01 d0             	add    rax,rdx
   1a7e7:	48 01 f0             	add    rax,rsi
   1a7ea:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a7f2:	48 8d 05 a7 f2 1c 00 	lea    rax,[rip+0x1cf2a7]        # 1e9aa0 <mismatchIdH>
   1a7f9:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1a7fc:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1a800:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1a803:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a806:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1a809:	48 89 d0             	mov    rax,rdx
   1a80c:	48 c1 e0 02          	shl    rax,0x2
   1a810:	48 01 d0             	add    rax,rdx
   1a813:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a81b:	48 01 d0             	add    rax,rdx
   1a81e:	48 89 ca             	mov    rdx,rcx
   1a821:	48 c1 e2 02          	shl    rdx,0x2
   1a825:	48 01 ca             	add    rdx,rcx
   1a828:	48 01 d0             	add    rax,rdx
   1a82b:	48 01 f0             	add    rax,rsi
   1a82e:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a836:	48 8d 05 63 f2 1c 00 	lea    rax,[rip+0x1cf263]        # 1e9aa0 <mismatchIdH>
   1a83d:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1a840:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1a843:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a846:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1a849:	48 89 d0             	mov    rax,rdx
   1a84c:	48 c1 e0 02          	shl    rax,0x2
   1a850:	48 01 d0             	add    rax,rdx
   1a853:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a85b:	48 01 d0             	add    rax,rdx
   1a85e:	48 89 ca             	mov    rdx,rcx
   1a861:	48 c1 e2 02          	shl    rdx,0x2
   1a865:	48 01 ca             	add    rdx,rcx
   1a868:	48 01 d0             	add    rax,rdx
   1a86b:	48 01 f8             	add    rax,rdi
   1a86e:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a876:	48 8d 05 03 ef 1c 00 	lea    rax,[rip+0x1cef03]        # 1e9780 <mismatchI37>
   1a87d:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1a880:	29 c6                	sub    esi,eax
   1a882:	89 f0                	mov    eax,esi
   1a884:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1a888:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1a88d:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1a891:	f3 0f 7e 0d 97 77 01 00 	movq   xmm1,QWORD PTR [rip+0x17797]        # 32030 <Law_and_Order+0x5f0>
   1a899:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1a89d:	f2 0f 10 0d b3 77 01 00 	movsd  xmm1,QWORD PTR [rip+0x177b3]        # 32058 <Law_and_Order+0x618>
   1a8a5:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1a8a9:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1a8ae:	e8 bd 91 fe ff       	call   3a70 <exp@plt>
   1a8b3:	66 48 0f 7e c6       	movq   rsi,xmm0
   1a8b8:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
   1a8bc:	44 8b 45 a8          	mov    r8d,DWORD PTR [rbp-0x58]
   1a8c0:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a8c3:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1a8c6:	48 89 d0             	mov    rax,rdx
   1a8c9:	48 c1 e0 02          	shl    rax,0x2
   1a8cd:	48 01 d0             	add    rax,rdx
   1a8d0:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a8d8:	48 01 d0             	add    rax,rdx
   1a8db:	48 89 ca             	mov    rdx,rcx
   1a8de:	48 c1 e2 02          	shl    rdx,0x2
   1a8e2:	48 01 ca             	add    rdx,rcx
   1a8e5:	48 01 d0             	add    rax,rdx
   1a8e8:	4c 01 c0             	add    rax,r8
   1a8eb:	48 05 66 01 00 00    	add    rax,0x166
   1a8f1:	48 89 34 c7          	mov    QWORD PTR [rdi+rax*8],rsi
   1a8f5:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1a8f9:	0f 85 ee 00 00 00    	jne    1a9ed <get_scaled_exp_params+0x2978>
   1a8ff:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1a902:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a905:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1a908:	48 89 d0             	mov    rax,rdx
   1a90b:	48 c1 e0 02          	shl    rax,0x2
   1a90f:	48 01 d0             	add    rax,rdx
   1a912:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a91a:	48 01 d0             	add    rax,rdx
   1a91d:	48 89 ca             	mov    rdx,rcx
   1a920:	48 c1 e2 02          	shl    rdx,0x2
   1a924:	48 01 ca             	add    rdx,rcx
   1a927:	48 01 d0             	add    rax,rdx
   1a92a:	48 01 f0             	add    rax,rsi
   1a92d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a935:	48 8d 05 24 04 1d 00 	lea    rax,[rip+0x1d0424]        # 1ead60 <mismatch1nIdH>
   1a93c:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1a93f:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1a943:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1a946:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a949:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1a94c:	48 89 d0             	mov    rax,rdx
   1a94f:	48 c1 e0 02          	shl    rax,0x2
   1a953:	48 01 d0             	add    rax,rdx
   1a956:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a95e:	48 01 d0             	add    rax,rdx
   1a961:	48 89 ca             	mov    rdx,rcx
   1a964:	48 c1 e2 02          	shl    rdx,0x2
   1a968:	48 01 ca             	add    rdx,rcx
   1a96b:	48 01 d0             	add    rax,rdx
   1a96e:	48 01 f0             	add    rax,rsi
   1a971:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a979:	48 8d 05 e0 03 1d 00 	lea    rax,[rip+0x1d03e0]        # 1ead60 <mismatch1nIdH>
   1a980:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1a983:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1a986:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a989:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1a98c:	48 89 d0             	mov    rax,rdx
   1a98f:	48 c1 e0 02          	shl    rax,0x2
   1a993:	48 01 d0             	add    rax,rdx
   1a996:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a99e:	48 01 d0             	add    rax,rdx
   1a9a1:	48 89 ca             	mov    rdx,rcx
   1a9a4:	48 c1 e2 02          	shl    rdx,0x2
   1a9a8:	48 01 ca             	add    rdx,rcx
   1a9ab:	48 01 d0             	add    rax,rdx
   1a9ae:	48 01 f8             	add    rax,rdi
   1a9b1:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1a9b9:	48 8d 05 80 00 1d 00 	lea    rax,[rip+0x1d0080]        # 1eaa40 <mismatch1nI37>
   1a9c0:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1a9c3:	29 c6                	sub    esi,eax
   1a9c5:	89 f0                	mov    eax,esi
   1a9c7:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1a9cb:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1a9d0:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1a9d4:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1a9d8:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1a9dc:	f3 0f 7e 0d 4c 76 01 00 	movq   xmm1,QWORD PTR [rip+0x1764c]        # 32030 <Law_and_Order+0x5f0>
   1a9e4:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1a9e8:	e9 e1 00 00 00       	jmp    1aace <get_scaled_exp_params+0x2a59>
   1a9ed:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1a9f0:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1a9f3:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1a9f6:	48 89 d0             	mov    rax,rdx
   1a9f9:	48 c1 e0 02          	shl    rax,0x2
   1a9fd:	48 01 d0             	add    rax,rdx
   1aa00:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1aa08:	48 01 d0             	add    rax,rdx
   1aa0b:	48 89 ca             	mov    rdx,rcx
   1aa0e:	48 c1 e2 02          	shl    rdx,0x2
   1aa12:	48 01 ca             	add    rdx,rcx
   1aa15:	48 01 d0             	add    rax,rdx
   1aa18:	48 01 f0             	add    rax,rsi
   1aa1b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1aa23:	48 8d 05 36 03 1d 00 	lea    rax,[rip+0x1d0336]        # 1ead60 <mismatch1nIdH>
   1aa2a:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1aa2d:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1aa31:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1aa34:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1aa37:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1aa3a:	48 89 d0             	mov    rax,rdx
   1aa3d:	48 c1 e0 02          	shl    rax,0x2
   1aa41:	48 01 d0             	add    rax,rdx
   1aa44:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1aa4c:	48 01 d0             	add    rax,rdx
   1aa4f:	48 89 ca             	mov    rdx,rcx
   1aa52:	48 c1 e2 02          	shl    rdx,0x2
   1aa56:	48 01 ca             	add    rdx,rcx
   1aa59:	48 01 d0             	add    rax,rdx
   1aa5c:	48 01 f0             	add    rax,rsi
   1aa5f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1aa67:	48 8d 05 f2 02 1d 00 	lea    rax,[rip+0x1d02f2]        # 1ead60 <mismatch1nIdH>
   1aa6e:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1aa71:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1aa74:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1aa77:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1aa7a:	48 89 d0             	mov    rax,rdx
   1aa7d:	48 c1 e0 02          	shl    rax,0x2
   1aa81:	48 01 d0             	add    rax,rdx
   1aa84:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1aa8c:	48 01 d0             	add    rax,rdx
   1aa8f:	48 89 ca             	mov    rdx,rcx
   1aa92:	48 c1 e2 02          	shl    rdx,0x2
   1aa96:	48 01 ca             	add    rdx,rcx
   1aa99:	48 01 d0             	add    rax,rdx
   1aa9c:	48 01 f8             	add    rax,rdi
   1aa9f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1aaa7:	48 8d 05 92 ff 1c 00 	lea    rax,[rip+0x1cff92]        # 1eaa40 <mismatch1nI37>
   1aaae:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1aab1:	29 c6                	sub    esi,eax
   1aab3:	89 f0                	mov    eax,esi
   1aab5:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1aab9:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1aabe:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1aac2:	f3 0f 7e 0d 66 75 01 00 	movq   xmm1,QWORD PTR [rip+0x17566]        # 32030 <Law_and_Order+0x5f0>
   1aaca:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1aace:	f2 0f 10 0d 82 75 01 00 	movsd  xmm1,QWORD PTR [rip+0x17582]        # 32058 <Law_and_Order+0x618>
   1aad6:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1aada:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1aadf:	e8 8c 8f fe ff       	call   3a70 <exp@plt>
   1aae4:	66 48 0f 7e c6       	movq   rsi,xmm0
   1aae9:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
   1aaed:	44 8b 45 a8          	mov    r8d,DWORD PTR [rbp-0x58]
   1aaf1:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1aaf4:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1aaf7:	48 89 d0             	mov    rax,rdx
   1aafa:	48 c1 e0 02          	shl    rax,0x2
   1aafe:	48 01 d0             	add    rax,rdx
   1ab01:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ab09:	48 01 d0             	add    rax,rdx
   1ab0c:	48 89 ca             	mov    rdx,rcx
   1ab0f:	48 c1 e2 02          	shl    rdx,0x2
   1ab13:	48 01 ca             	add    rdx,rcx
   1ab16:	48 01 d0             	add    rax,rdx
   1ab19:	4c 01 c0             	add    rax,r8
   1ab1c:	48 05 f6 02 00 00    	add    rax,0x2f6
   1ab22:	48 89 34 c7          	mov    QWORD PTR [rdi+rax*8],rsi
   1ab26:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1ab2a:	0f 85 ee 00 00 00    	jne    1ac1e <get_scaled_exp_params+0x2ba9>
   1ab30:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1ab33:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1ab36:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1ab39:	48 89 d0             	mov    rax,rdx
   1ab3c:	48 c1 e0 02          	shl    rax,0x2
   1ab40:	48 01 d0             	add    rax,rdx
   1ab43:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ab4b:	48 01 d0             	add    rax,rdx
   1ab4e:	48 89 ca             	mov    rdx,rcx
   1ab51:	48 c1 e2 02          	shl    rdx,0x2
   1ab55:	48 01 ca             	add    rdx,rcx
   1ab58:	48 01 d0             	add    rax,rdx
   1ab5b:	48 01 f0             	add    rax,rsi
   1ab5e:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ab66:	48 8d 05 73 f5 1c 00 	lea    rax,[rip+0x1cf573]        # 1ea0e0 <mismatchHdH>
   1ab6d:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1ab70:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1ab74:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1ab77:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1ab7a:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1ab7d:	48 89 d0             	mov    rax,rdx
   1ab80:	48 c1 e0 02          	shl    rax,0x2
   1ab84:	48 01 d0             	add    rax,rdx
   1ab87:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ab8f:	48 01 d0             	add    rax,rdx
   1ab92:	48 89 ca             	mov    rdx,rcx
   1ab95:	48 c1 e2 02          	shl    rdx,0x2
   1ab99:	48 01 ca             	add    rdx,rcx
   1ab9c:	48 01 d0             	add    rax,rdx
   1ab9f:	48 01 f0             	add    rax,rsi
   1aba2:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1abaa:	48 8d 05 2f f5 1c 00 	lea    rax,[rip+0x1cf52f]        # 1ea0e0 <mismatchHdH>
   1abb1:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1abb4:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1abb7:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1abba:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1abbd:	48 89 d0             	mov    rax,rdx
   1abc0:	48 c1 e0 02          	shl    rax,0x2
   1abc4:	48 01 d0             	add    rax,rdx
   1abc7:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1abcf:	48 01 d0             	add    rax,rdx
   1abd2:	48 89 ca             	mov    rdx,rcx
   1abd5:	48 c1 e2 02          	shl    rdx,0x2
   1abd9:	48 01 ca             	add    rdx,rcx
   1abdc:	48 01 d0             	add    rax,rdx
   1abdf:	48 01 f8             	add    rax,rdi
   1abe2:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1abea:	48 8d 05 cf f1 1c 00 	lea    rax,[rip+0x1cf1cf]        # 1e9dc0 <mismatchH37>
   1abf1:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1abf4:	29 c6                	sub    esi,eax
   1abf6:	89 f0                	mov    eax,esi
   1abf8:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1abfc:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1ac01:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1ac05:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1ac09:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1ac0d:	f3 0f 7e 0d 1b 74 01 00 	movq   xmm1,QWORD PTR [rip+0x1741b]        # 32030 <Law_and_Order+0x5f0>
   1ac15:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1ac19:	e9 e1 00 00 00       	jmp    1acff <get_scaled_exp_params+0x2c8a>
   1ac1e:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1ac21:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1ac24:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1ac27:	48 89 d0             	mov    rax,rdx
   1ac2a:	48 c1 e0 02          	shl    rax,0x2
   1ac2e:	48 01 d0             	add    rax,rdx
   1ac31:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ac39:	48 01 d0             	add    rax,rdx
   1ac3c:	48 89 ca             	mov    rdx,rcx
   1ac3f:	48 c1 e2 02          	shl    rdx,0x2
   1ac43:	48 01 ca             	add    rdx,rcx
   1ac46:	48 01 d0             	add    rax,rdx
   1ac49:	48 01 f0             	add    rax,rsi
   1ac4c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ac54:	48 8d 05 85 f4 1c 00 	lea    rax,[rip+0x1cf485]        # 1ea0e0 <mismatchHdH>
   1ac5b:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1ac5e:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1ac62:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1ac65:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1ac68:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1ac6b:	48 89 d0             	mov    rax,rdx
   1ac6e:	48 c1 e0 02          	shl    rax,0x2
   1ac72:	48 01 d0             	add    rax,rdx
   1ac75:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ac7d:	48 01 d0             	add    rax,rdx
   1ac80:	48 89 ca             	mov    rdx,rcx
   1ac83:	48 c1 e2 02          	shl    rdx,0x2
   1ac87:	48 01 ca             	add    rdx,rcx
   1ac8a:	48 01 d0             	add    rax,rdx
   1ac8d:	48 01 f0             	add    rax,rsi
   1ac90:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ac98:	48 8d 05 41 f4 1c 00 	lea    rax,[rip+0x1cf441]        # 1ea0e0 <mismatchHdH>
   1ac9f:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1aca2:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1aca5:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1aca8:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1acab:	48 89 d0             	mov    rax,rdx
   1acae:	48 c1 e0 02          	shl    rax,0x2
   1acb2:	48 01 d0             	add    rax,rdx
   1acb5:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1acbd:	48 01 d0             	add    rax,rdx
   1acc0:	48 89 ca             	mov    rdx,rcx
   1acc3:	48 c1 e2 02          	shl    rdx,0x2
   1acc7:	48 01 ca             	add    rdx,rcx
   1acca:	48 01 d0             	add    rax,rdx
   1accd:	48 01 f8             	add    rax,rdi
   1acd0:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1acd8:	48 8d 05 e1 f0 1c 00 	lea    rax,[rip+0x1cf0e1]        # 1e9dc0 <mismatchH37>
   1acdf:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1ace2:	29 c6                	sub    esi,eax
   1ace4:	89 f0                	mov    eax,esi
   1ace6:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1acea:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1acef:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1acf3:	f3 0f 7e 0d 35 73 01 00 	movq   xmm1,QWORD PTR [rip+0x17335]        # 32030 <Law_and_Order+0x5f0>
   1acfb:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1acff:	f2 0f 10 0d 51 73 01 00 	movsd  xmm1,QWORD PTR [rip+0x17351]        # 32058 <Law_and_Order+0x618>
   1ad07:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1ad0b:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1ad10:	e8 5b 8d fe ff       	call   3a70 <exp@plt>
   1ad15:	66 48 0f 7e c6       	movq   rsi,xmm0
   1ad1a:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
   1ad1e:	44 8b 45 a8          	mov    r8d,DWORD PTR [rbp-0x58]
   1ad22:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1ad25:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1ad28:	48 89 d0             	mov    rax,rdx
   1ad2b:	48 c1 e0 02          	shl    rax,0x2
   1ad2f:	48 01 d0             	add    rax,rdx
   1ad32:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ad3a:	48 01 d0             	add    rax,rdx
   1ad3d:	48 89 ca             	mov    rdx,rcx
   1ad40:	48 c1 e2 02          	shl    rdx,0x2
   1ad44:	48 01 ca             	add    rdx,rcx
   1ad47:	48 01 d0             	add    rax,rdx
   1ad4a:	4c 01 c0             	add    rax,r8
   1ad4d:	48 05 be 03 00 00    	add    rax,0x3be
   1ad53:	48 89 34 c7          	mov    QWORD PTR [rdi+rax*8],rsi
   1ad57:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1ad5b:	0f 85 ee 00 00 00    	jne    1ae4f <get_scaled_exp_params+0x2dda>
   1ad61:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1ad64:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1ad67:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1ad6a:	48 89 d0             	mov    rax,rdx
   1ad6d:	48 c1 e0 02          	shl    rax,0x2
   1ad71:	48 01 d0             	add    rax,rdx
   1ad74:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ad7c:	48 01 d0             	add    rax,rdx
   1ad7f:	48 89 ca             	mov    rdx,rcx
   1ad82:	48 c1 e2 02          	shl    rdx,0x2
   1ad86:	48 01 ca             	add    rdx,rcx
   1ad89:	48 01 d0             	add    rax,rdx
   1ad8c:	48 01 f0             	add    rax,rsi
   1ad8f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ad97:	48 8d 05 02 06 1d 00 	lea    rax,[rip+0x1d0602]        # 1eb3a0 <mismatch23IdH>
   1ad9e:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1ada1:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1ada5:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1ada8:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1adab:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1adae:	48 89 d0             	mov    rax,rdx
   1adb1:	48 c1 e0 02          	shl    rax,0x2
   1adb5:	48 01 d0             	add    rax,rdx
   1adb8:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1adc0:	48 01 d0             	add    rax,rdx
   1adc3:	48 89 ca             	mov    rdx,rcx
   1adc6:	48 c1 e2 02          	shl    rdx,0x2
   1adca:	48 01 ca             	add    rdx,rcx
   1adcd:	48 01 d0             	add    rax,rdx
   1add0:	48 01 f0             	add    rax,rsi
   1add3:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1addb:	48 8d 05 be 05 1d 00 	lea    rax,[rip+0x1d05be]        # 1eb3a0 <mismatch23IdH>
   1ade2:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1ade5:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1ade8:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1adeb:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1adee:	48 89 d0             	mov    rax,rdx
   1adf1:	48 c1 e0 02          	shl    rax,0x2
   1adf5:	48 01 d0             	add    rax,rdx
   1adf8:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ae00:	48 01 d0             	add    rax,rdx
   1ae03:	48 89 ca             	mov    rdx,rcx
   1ae06:	48 c1 e2 02          	shl    rdx,0x2
   1ae0a:	48 01 ca             	add    rdx,rcx
   1ae0d:	48 01 d0             	add    rax,rdx
   1ae10:	48 01 f8             	add    rax,rdi
   1ae13:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ae1b:	48 8d 05 5e 02 1d 00 	lea    rax,[rip+0x1d025e]        # 1eb080 <mismatch23I37>
   1ae22:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1ae25:	29 c6                	sub    esi,eax
   1ae27:	89 f0                	mov    eax,esi
   1ae29:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1ae2d:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1ae32:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1ae36:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1ae3a:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1ae3e:	f3 0f 7e 0d ea 71 01 00 	movq   xmm1,QWORD PTR [rip+0x171ea]        # 32030 <Law_and_Order+0x5f0>
   1ae46:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1ae4a:	e9 e1 00 00 00       	jmp    1af30 <get_scaled_exp_params+0x2ebb>
   1ae4f:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1ae52:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1ae55:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1ae58:	48 89 d0             	mov    rax,rdx
   1ae5b:	48 c1 e0 02          	shl    rax,0x2
   1ae5f:	48 01 d0             	add    rax,rdx
   1ae62:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ae6a:	48 01 d0             	add    rax,rdx
   1ae6d:	48 89 ca             	mov    rdx,rcx
   1ae70:	48 c1 e2 02          	shl    rdx,0x2
   1ae74:	48 01 ca             	add    rdx,rcx
   1ae77:	48 01 d0             	add    rax,rdx
   1ae7a:	48 01 f0             	add    rax,rsi
   1ae7d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ae85:	48 8d 05 14 05 1d 00 	lea    rax,[rip+0x1d0514]        # 1eb3a0 <mismatch23IdH>
   1ae8c:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1ae8f:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1ae93:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1ae96:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1ae99:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1ae9c:	48 89 d0             	mov    rax,rdx
   1ae9f:	48 c1 e0 02          	shl    rax,0x2
   1aea3:	48 01 d0             	add    rax,rdx
   1aea6:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1aeae:	48 01 d0             	add    rax,rdx
   1aeb1:	48 89 ca             	mov    rdx,rcx
   1aeb4:	48 c1 e2 02          	shl    rdx,0x2
   1aeb8:	48 01 ca             	add    rdx,rcx
   1aebb:	48 01 d0             	add    rax,rdx
   1aebe:	48 01 f0             	add    rax,rsi
   1aec1:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1aec9:	48 8d 05 d0 04 1d 00 	lea    rax,[rip+0x1d04d0]        # 1eb3a0 <mismatch23IdH>
   1aed0:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1aed3:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1aed6:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1aed9:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1aedc:	48 89 d0             	mov    rax,rdx
   1aedf:	48 c1 e0 02          	shl    rax,0x2
   1aee3:	48 01 d0             	add    rax,rdx
   1aee6:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1aeee:	48 01 d0             	add    rax,rdx
   1aef1:	48 89 ca             	mov    rdx,rcx
   1aef4:	48 c1 e2 02          	shl    rdx,0x2
   1aef8:	48 01 ca             	add    rdx,rcx
   1aefb:	48 01 d0             	add    rax,rdx
   1aefe:	48 01 f8             	add    rax,rdi
   1af01:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1af09:	48 8d 05 70 01 1d 00 	lea    rax,[rip+0x1d0170]        # 1eb080 <mismatch23I37>
   1af10:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1af13:	29 c6                	sub    esi,eax
   1af15:	89 f0                	mov    eax,esi
   1af17:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1af1b:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1af20:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1af24:	f3 0f 7e 0d 04 71 01 00 	movq   xmm1,QWORD PTR [rip+0x17104]        # 32030 <Law_and_Order+0x5f0>
   1af2c:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1af30:	f2 0f 10 0d 20 71 01 00 	movsd  xmm1,QWORD PTR [rip+0x17120]        # 32058 <Law_and_Order+0x618>
   1af38:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1af3c:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1af41:	e8 2a 8b fe ff       	call   3a70 <exp@plt>
   1af46:	66 48 0f 7e c6       	movq   rsi,xmm0
   1af4b:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
   1af4f:	44 8b 45 a8          	mov    r8d,DWORD PTR [rbp-0x58]
   1af53:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1af56:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1af59:	48 89 d0             	mov    rax,rdx
   1af5c:	48 c1 e0 02          	shl    rax,0x2
   1af60:	48 01 d0             	add    rax,rdx
   1af63:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1af6b:	48 01 d0             	add    rax,rdx
   1af6e:	48 89 ca             	mov    rdx,rcx
   1af71:	48 c1 e2 02          	shl    rdx,0x2
   1af75:	48 01 ca             	add    rdx,rcx
   1af78:	48 01 d0             	add    rax,rdx
   1af7b:	4c 01 c0             	add    rax,r8
   1af7e:	48 05 2e 02 00 00    	add    rax,0x22e
   1af84:	48 89 34 c7          	mov    QWORD PTR [rdi+rax*8],rsi
   1af88:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   1af8c:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
   1af8f:	85 c0                	test   eax,eax
   1af91:	0f 84 0f 1c 00 00    	je     1cba6 <get_scaled_exp_params+0x4b31>
   1af97:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1af9b:	0f 85 b8 03 00 00    	jne    1b359 <get_scaled_exp_params+0x32e4>
   1afa1:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1afa5:	0f 85 e3 00 00 00    	jne    1b08e <get_scaled_exp_params+0x3019>
   1afab:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1afae:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1afb1:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1afb4:	48 89 d0             	mov    rax,rdx
   1afb7:	48 c1 e0 02          	shl    rax,0x2
   1afbb:	48 01 d0             	add    rax,rdx
   1afbe:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1afc6:	48 01 d0             	add    rax,rdx
   1afc9:	48 89 ca             	mov    rdx,rcx
   1afcc:	48 c1 e2 02          	shl    rdx,0x2
   1afd0:	48 01 ca             	add    rdx,rcx
   1afd3:	48 01 d0             	add    rax,rdx
   1afd6:	48 01 f0             	add    rax,rsi
   1afd9:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1afe1:	48 8d 05 38 f7 1c 00 	lea    rax,[rip+0x1cf738]        # 1ea720 <mismatchMdH>
   1afe8:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1afeb:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1afef:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1aff2:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1aff5:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1aff8:	48 89 d0             	mov    rax,rdx
   1affb:	48 c1 e0 02          	shl    rax,0x2
   1afff:	48 01 d0             	add    rax,rdx
   1b002:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b00a:	48 01 d0             	add    rax,rdx
   1b00d:	48 89 ca             	mov    rdx,rcx
   1b010:	48 c1 e2 02          	shl    rdx,0x2
   1b014:	48 01 ca             	add    rdx,rcx
   1b017:	48 01 d0             	add    rax,rdx
   1b01a:	48 01 f0             	add    rax,rsi
   1b01d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b025:	48 8d 05 f4 f6 1c 00 	lea    rax,[rip+0x1cf6f4]        # 1ea720 <mismatchMdH>
   1b02c:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1b02f:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1b032:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1b035:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1b038:	48 89 d0             	mov    rax,rdx
   1b03b:	48 c1 e0 02          	shl    rax,0x2
   1b03f:	48 01 d0             	add    rax,rdx
   1b042:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b04a:	48 01 d0             	add    rax,rdx
   1b04d:	48 89 ca             	mov    rdx,rcx
   1b050:	48 c1 e2 02          	shl    rdx,0x2
   1b054:	48 01 ca             	add    rdx,rcx
   1b057:	48 01 d0             	add    rax,rdx
   1b05a:	48 01 f8             	add    rax,rdi
   1b05d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b065:	48 8d 05 94 f3 1c 00 	lea    rax,[rip+0x1cf394]        # 1ea400 <mismatchM37>
   1b06c:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1b06f:	29 c6                	sub    esi,eax
   1b071:	89 f0                	mov    eax,esi
   1b073:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1b077:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1b07c:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1b080:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1b084:	85 c0                	test   eax,eax
   1b086:	0f 9f c0             	setg   al
   1b089:	e9 e0 00 00 00       	jmp    1b16e <get_scaled_exp_params+0x30f9>
   1b08e:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1b091:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1b094:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1b097:	48 89 d0             	mov    rax,rdx
   1b09a:	48 c1 e0 02          	shl    rax,0x2
   1b09e:	48 01 d0             	add    rax,rdx
   1b0a1:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b0a9:	48 01 d0             	add    rax,rdx
   1b0ac:	48 89 ca             	mov    rdx,rcx
   1b0af:	48 c1 e2 02          	shl    rdx,0x2
   1b0b3:	48 01 ca             	add    rdx,rcx
   1b0b6:	48 01 d0             	add    rax,rdx
   1b0b9:	48 01 f0             	add    rax,rsi
   1b0bc:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b0c4:	48 8d 05 55 f6 1c 00 	lea    rax,[rip+0x1cf655]        # 1ea720 <mismatchMdH>
   1b0cb:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1b0ce:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1b0d2:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1b0d5:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1b0d8:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1b0db:	48 89 d0             	mov    rax,rdx
   1b0de:	48 c1 e0 02          	shl    rax,0x2
   1b0e2:	48 01 d0             	add    rax,rdx
   1b0e5:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b0ed:	48 01 d0             	add    rax,rdx
   1b0f0:	48 89 ca             	mov    rdx,rcx
   1b0f3:	48 c1 e2 02          	shl    rdx,0x2
   1b0f7:	48 01 ca             	add    rdx,rcx
   1b0fa:	48 01 d0             	add    rax,rdx
   1b0fd:	48 01 f0             	add    rax,rsi
   1b100:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b108:	48 8d 05 11 f6 1c 00 	lea    rax,[rip+0x1cf611]        # 1ea720 <mismatchMdH>
   1b10f:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1b112:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1b115:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1b118:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1b11b:	48 89 d0             	mov    rax,rdx
   1b11e:	48 c1 e0 02          	shl    rax,0x2
   1b122:	48 01 d0             	add    rax,rdx
   1b125:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b12d:	48 01 d0             	add    rax,rdx
   1b130:	48 89 ca             	mov    rdx,rcx
   1b133:	48 c1 e2 02          	shl    rdx,0x2
   1b137:	48 01 ca             	add    rdx,rcx
   1b13a:	48 01 d0             	add    rax,rdx
   1b13d:	48 01 f8             	add    rax,rdi
   1b140:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b148:	48 8d 05 b1 f2 1c 00 	lea    rax,[rip+0x1cf2b1]        # 1ea400 <mismatchM37>
   1b14f:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1b152:	29 c6                	sub    esi,eax
   1b154:	89 f0                	mov    eax,esi
   1b156:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1b15a:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1b15f:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1b163:	66 0f ef c9          	pxor   xmm1,xmm1
   1b167:	66 0f 2f c1          	comisd xmm0,xmm1
   1b16b:	0f 97 c0             	seta   al
   1b16e:	84 c0                	test   al,al
   1b170:	74 09                	je     1b17b <get_scaled_exp_params+0x3106>
   1b172:	66 0f ef c0          	pxor   xmm0,xmm0
   1b176:	e9 c9 0b 00 00       	jmp    1bd44 <get_scaled_exp_params+0x3ccf>
   1b17b:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1b17f:	0f 85 ee 00 00 00    	jne    1b273 <get_scaled_exp_params+0x31fe>
   1b185:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1b188:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1b18b:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1b18e:	48 89 d0             	mov    rax,rdx
   1b191:	48 c1 e0 02          	shl    rax,0x2
   1b195:	48 01 d0             	add    rax,rdx
   1b198:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b1a0:	48 01 d0             	add    rax,rdx
   1b1a3:	48 89 ca             	mov    rdx,rcx
   1b1a6:	48 c1 e2 02          	shl    rdx,0x2
   1b1aa:	48 01 ca             	add    rdx,rcx
   1b1ad:	48 01 d0             	add    rax,rdx
   1b1b0:	48 01 f0             	add    rax,rsi
   1b1b3:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b1bb:	48 8d 05 5e f5 1c 00 	lea    rax,[rip+0x1cf55e]        # 1ea720 <mismatchMdH>
   1b1c2:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1b1c5:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1b1c9:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1b1cc:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1b1cf:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1b1d2:	48 89 d0             	mov    rax,rdx
   1b1d5:	48 c1 e0 02          	shl    rax,0x2
   1b1d9:	48 01 d0             	add    rax,rdx
   1b1dc:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b1e4:	48 01 d0             	add    rax,rdx
   1b1e7:	48 89 ca             	mov    rdx,rcx
   1b1ea:	48 c1 e2 02          	shl    rdx,0x2
   1b1ee:	48 01 ca             	add    rdx,rcx
   1b1f1:	48 01 d0             	add    rax,rdx
   1b1f4:	48 01 f0             	add    rax,rsi
   1b1f7:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b1ff:	48 8d 05 1a f5 1c 00 	lea    rax,[rip+0x1cf51a]        # 1ea720 <mismatchMdH>
   1b206:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1b209:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1b20c:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1b20f:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1b212:	48 89 d0             	mov    rax,rdx
   1b215:	48 c1 e0 02          	shl    rax,0x2
   1b219:	48 01 d0             	add    rax,rdx
   1b21c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b224:	48 01 d0             	add    rax,rdx
   1b227:	48 89 ca             	mov    rdx,rcx
   1b22a:	48 c1 e2 02          	shl    rdx,0x2
   1b22e:	48 01 ca             	add    rdx,rcx
   1b231:	48 01 d0             	add    rax,rdx
   1b234:	48 01 f8             	add    rax,rdi
   1b237:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b23f:	48 8d 05 ba f1 1c 00 	lea    rax,[rip+0x1cf1ba]        # 1ea400 <mismatchM37>
   1b246:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1b249:	29 c6                	sub    esi,eax
   1b24b:	89 f0                	mov    eax,esi
   1b24d:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1b251:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1b256:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1b25a:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1b25e:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1b262:	f3 0f 7e 0d c6 6d 01 00 	movq   xmm1,QWORD PTR [rip+0x16dc6]        # 32030 <Law_and_Order+0x5f0>
   1b26a:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1b26e:	e9 d1 0a 00 00       	jmp    1bd44 <get_scaled_exp_params+0x3ccf>
   1b273:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1b276:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1b279:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1b27c:	48 89 d0             	mov    rax,rdx
   1b27f:	48 c1 e0 02          	shl    rax,0x2
   1b283:	48 01 d0             	add    rax,rdx
   1b286:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b28e:	48 01 d0             	add    rax,rdx
   1b291:	48 89 ca             	mov    rdx,rcx
   1b294:	48 c1 e2 02          	shl    rdx,0x2
   1b298:	48 01 ca             	add    rdx,rcx
   1b29b:	48 01 d0             	add    rax,rdx
   1b29e:	48 01 f0             	add    rax,rsi
   1b2a1:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b2a9:	48 8d 05 70 f4 1c 00 	lea    rax,[rip+0x1cf470]        # 1ea720 <mismatchMdH>
   1b2b0:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1b2b3:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1b2b7:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1b2ba:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1b2bd:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1b2c0:	48 89 d0             	mov    rax,rdx
   1b2c3:	48 c1 e0 02          	shl    rax,0x2
   1b2c7:	48 01 d0             	add    rax,rdx
   1b2ca:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b2d2:	48 01 d0             	add    rax,rdx
   1b2d5:	48 89 ca             	mov    rdx,rcx
   1b2d8:	48 c1 e2 02          	shl    rdx,0x2
   1b2dc:	48 01 ca             	add    rdx,rcx
   1b2df:	48 01 d0             	add    rax,rdx
   1b2e2:	48 01 f0             	add    rax,rsi
   1b2e5:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b2ed:	48 8d 05 2c f4 1c 00 	lea    rax,[rip+0x1cf42c]        # 1ea720 <mismatchMdH>
   1b2f4:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1b2f7:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1b2fa:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1b2fd:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1b300:	48 89 d0             	mov    rax,rdx
   1b303:	48 c1 e0 02          	shl    rax,0x2
   1b307:	48 01 d0             	add    rax,rdx
   1b30a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b312:	48 01 d0             	add    rax,rdx
   1b315:	48 89 ca             	mov    rdx,rcx
   1b318:	48 c1 e2 02          	shl    rdx,0x2
   1b31c:	48 01 ca             	add    rdx,rcx
   1b31f:	48 01 d0             	add    rax,rdx
   1b322:	48 01 f8             	add    rax,rdi
   1b325:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b32d:	48 8d 05 cc f0 1c 00 	lea    rax,[rip+0x1cf0cc]        # 1ea400 <mismatchM37>
   1b334:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1b337:	29 c6                	sub    esi,eax
   1b339:	89 f0                	mov    eax,esi
   1b33b:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1b33f:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1b344:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1b348:	f3 0f 7e 0d e0 6c 01 00 	movq   xmm1,QWORD PTR [rip+0x16ce0]        # 32030 <Law_and_Order+0x5f0>
   1b350:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1b354:	e9 eb 09 00 00       	jmp    1bd44 <get_scaled_exp_params+0x3ccf>
   1b359:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1b35d:	0f 85 ee 00 00 00    	jne    1b451 <get_scaled_exp_params+0x33dc>
   1b363:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1b366:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1b369:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1b36c:	48 89 d0             	mov    rax,rdx
   1b36f:	48 c1 e0 02          	shl    rax,0x2
   1b373:	48 01 d0             	add    rax,rdx
   1b376:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b37e:	48 01 d0             	add    rax,rdx
   1b381:	48 89 ca             	mov    rdx,rcx
   1b384:	48 c1 e2 02          	shl    rdx,0x2
   1b388:	48 01 ca             	add    rdx,rcx
   1b38b:	48 01 d0             	add    rax,rdx
   1b38e:	48 01 f0             	add    rax,rsi
   1b391:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b399:	48 8d 05 80 f3 1c 00 	lea    rax,[rip+0x1cf380]        # 1ea720 <mismatchMdH>
   1b3a0:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1b3a3:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1b3a7:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1b3aa:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1b3ad:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1b3b0:	48 89 d0             	mov    rax,rdx
   1b3b3:	48 c1 e0 02          	shl    rax,0x2
   1b3b7:	48 01 d0             	add    rax,rdx
   1b3ba:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b3c2:	48 01 d0             	add    rax,rdx
   1b3c5:	48 89 ca             	mov    rdx,rcx
   1b3c8:	48 c1 e2 02          	shl    rdx,0x2
   1b3cc:	48 01 ca             	add    rdx,rcx
   1b3cf:	48 01 d0             	add    rax,rdx
   1b3d2:	48 01 f0             	add    rax,rsi
   1b3d5:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b3dd:	48 8d 05 3c f3 1c 00 	lea    rax,[rip+0x1cf33c]        # 1ea720 <mismatchMdH>
   1b3e4:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1b3e7:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1b3ea:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1b3ed:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1b3f0:	48 89 d0             	mov    rax,rdx
   1b3f3:	48 c1 e0 02          	shl    rax,0x2
   1b3f7:	48 01 d0             	add    rax,rdx
   1b3fa:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b402:	48 01 d0             	add    rax,rdx
   1b405:	48 89 ca             	mov    rdx,rcx
   1b408:	48 c1 e2 02          	shl    rdx,0x2
   1b40c:	48 01 ca             	add    rdx,rcx
   1b40f:	48 01 d0             	add    rax,rdx
   1b412:	48 01 f8             	add    rax,rdi
   1b415:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b41d:	48 8d 05 dc ef 1c 00 	lea    rax,[rip+0x1cefdc]        # 1ea400 <mismatchM37>
   1b424:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1b427:	29 c6                	sub    esi,eax
   1b429:	89 f0                	mov    eax,esi
   1b42b:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1b42f:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1b434:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1b438:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1b43c:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1b440:	f3 0f 7e 0d e8 6b 01 00 	movq   xmm1,QWORD PTR [rip+0x16be8]        # 32030 <Law_and_Order+0x5f0>
   1b448:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1b44c:	e9 e1 00 00 00       	jmp    1b532 <get_scaled_exp_params+0x34bd>
   1b451:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1b454:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1b457:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1b45a:	48 89 d0             	mov    rax,rdx
   1b45d:	48 c1 e0 02          	shl    rax,0x2
   1b461:	48 01 d0             	add    rax,rdx
   1b464:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b46c:	48 01 d0             	add    rax,rdx
   1b46f:	48 89 ca             	mov    rdx,rcx
   1b472:	48 c1 e2 02          	shl    rdx,0x2
   1b476:	48 01 ca             	add    rdx,rcx
   1b479:	48 01 d0             	add    rax,rdx
   1b47c:	48 01 f0             	add    rax,rsi
   1b47f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b487:	48 8d 05 92 f2 1c 00 	lea    rax,[rip+0x1cf292]        # 1ea720 <mismatchMdH>
   1b48e:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1b491:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1b495:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1b498:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1b49b:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1b49e:	48 89 d0             	mov    rax,rdx
   1b4a1:	48 c1 e0 02          	shl    rax,0x2
   1b4a5:	48 01 d0             	add    rax,rdx
   1b4a8:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b4b0:	48 01 d0             	add    rax,rdx
   1b4b3:	48 89 ca             	mov    rdx,rcx
   1b4b6:	48 c1 e2 02          	shl    rdx,0x2
   1b4ba:	48 01 ca             	add    rdx,rcx
   1b4bd:	48 01 d0             	add    rax,rdx
   1b4c0:	48 01 f0             	add    rax,rsi
   1b4c3:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b4cb:	48 8d 05 4e f2 1c 00 	lea    rax,[rip+0x1cf24e]        # 1ea720 <mismatchMdH>
   1b4d2:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1b4d5:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1b4d8:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1b4db:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1b4de:	48 89 d0             	mov    rax,rdx
   1b4e1:	48 c1 e0 02          	shl    rax,0x2
   1b4e5:	48 01 d0             	add    rax,rdx
   1b4e8:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b4f0:	48 01 d0             	add    rax,rdx
   1b4f3:	48 89 ca             	mov    rdx,rcx
   1b4f6:	48 c1 e2 02          	shl    rdx,0x2
   1b4fa:	48 01 ca             	add    rdx,rcx
   1b4fd:	48 01 d0             	add    rax,rdx
   1b500:	48 01 f8             	add    rax,rdi
   1b503:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b50b:	48 8d 05 ee ee 1c 00 	lea    rax,[rip+0x1ceeee]        # 1ea400 <mismatchM37>
   1b512:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1b515:	29 c6                	sub    esi,eax
   1b517:	89 f0                	mov    eax,esi
   1b519:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1b51d:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1b522:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1b526:	f3 0f 7e 0d 02 6b 01 00 	movq   xmm1,QWORD PTR [rip+0x16b02]        # 32030 <Law_and_Order+0x5f0>
   1b52e:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1b532:	f2 0f 10 0d 1e 6b 01 00 	movsd  xmm1,QWORD PTR [rip+0x16b1e]        # 32058 <Law_and_Order+0x618>
   1b53a:	f2 0f 5e c1          	divsd  xmm0,xmm1
   1b53e:	66 0f 28 c8          	movapd xmm1,xmm0
   1b542:	f2 0f 10 05 26 6b 01 00 	movsd  xmm0,QWORD PTR [rip+0x16b26]        # 32070 <Law_and_Order+0x630>
   1b54a:	66 0f 2f c1          	comisd xmm0,xmm1
   1b54e:	76 09                	jbe    1b559 <get_scaled_exp_params+0x34e4>
   1b550:	66 0f ef c0          	pxor   xmm0,xmm0
   1b554:	e9 eb 07 00 00       	jmp    1bd44 <get_scaled_exp_params+0x3ccf>
   1b559:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1b55d:	0f 85 ee 00 00 00    	jne    1b651 <get_scaled_exp_params+0x35dc>
   1b563:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1b566:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1b569:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1b56c:	48 89 d0             	mov    rax,rdx
   1b56f:	48 c1 e0 02          	shl    rax,0x2
   1b573:	48 01 d0             	add    rax,rdx
   1b576:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b57e:	48 01 d0             	add    rax,rdx
   1b581:	48 89 ca             	mov    rdx,rcx
   1b584:	48 c1 e2 02          	shl    rdx,0x2
   1b588:	48 01 ca             	add    rdx,rcx
   1b58b:	48 01 d0             	add    rax,rdx
   1b58e:	48 01 f0             	add    rax,rsi
   1b591:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b599:	48 8d 05 80 f1 1c 00 	lea    rax,[rip+0x1cf180]        # 1ea720 <mismatchMdH>
   1b5a0:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1b5a3:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1b5a7:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1b5aa:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1b5ad:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1b5b0:	48 89 d0             	mov    rax,rdx
   1b5b3:	48 c1 e0 02          	shl    rax,0x2
   1b5b7:	48 01 d0             	add    rax,rdx
   1b5ba:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b5c2:	48 01 d0             	add    rax,rdx
   1b5c5:	48 89 ca             	mov    rdx,rcx
   1b5c8:	48 c1 e2 02          	shl    rdx,0x2
   1b5cc:	48 01 ca             	add    rdx,rcx
   1b5cf:	48 01 d0             	add    rax,rdx
   1b5d2:	48 01 f0             	add    rax,rsi
   1b5d5:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b5dd:	48 8d 05 3c f1 1c 00 	lea    rax,[rip+0x1cf13c]        # 1ea720 <mismatchMdH>
   1b5e4:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1b5e7:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1b5ea:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1b5ed:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1b5f0:	48 89 d0             	mov    rax,rdx
   1b5f3:	48 c1 e0 02          	shl    rax,0x2
   1b5f7:	48 01 d0             	add    rax,rdx
   1b5fa:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b602:	48 01 d0             	add    rax,rdx
   1b605:	48 89 ca             	mov    rdx,rcx
   1b608:	48 c1 e2 02          	shl    rdx,0x2
   1b60c:	48 01 ca             	add    rdx,rcx
   1b60f:	48 01 d0             	add    rax,rdx
   1b612:	48 01 f8             	add    rax,rdi
   1b615:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b61d:	48 8d 05 dc ed 1c 00 	lea    rax,[rip+0x1ceddc]        # 1ea400 <mismatchM37>
   1b624:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1b627:	29 c6                	sub    esi,eax
   1b629:	89 f0                	mov    eax,esi
   1b62b:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1b62f:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1b634:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1b638:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1b63c:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1b640:	f3 0f 7e 0d e8 69 01 00 	movq   xmm1,QWORD PTR [rip+0x169e8]        # 32030 <Law_and_Order+0x5f0>
   1b648:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1b64c:	e9 e1 00 00 00       	jmp    1b732 <get_scaled_exp_params+0x36bd>
   1b651:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1b654:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1b657:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1b65a:	48 89 d0             	mov    rax,rdx
   1b65d:	48 c1 e0 02          	shl    rax,0x2
   1b661:	48 01 d0             	add    rax,rdx
   1b664:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b66c:	48 01 d0             	add    rax,rdx
   1b66f:	48 89 ca             	mov    rdx,rcx
   1b672:	48 c1 e2 02          	shl    rdx,0x2
   1b676:	48 01 ca             	add    rdx,rcx
   1b679:	48 01 d0             	add    rax,rdx
   1b67c:	48 01 f0             	add    rax,rsi
   1b67f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b687:	48 8d 05 92 f0 1c 00 	lea    rax,[rip+0x1cf092]        # 1ea720 <mismatchMdH>
   1b68e:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1b691:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1b695:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1b698:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1b69b:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1b69e:	48 89 d0             	mov    rax,rdx
   1b6a1:	48 c1 e0 02          	shl    rax,0x2
   1b6a5:	48 01 d0             	add    rax,rdx
   1b6a8:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b6b0:	48 01 d0             	add    rax,rdx
   1b6b3:	48 89 ca             	mov    rdx,rcx
   1b6b6:	48 c1 e2 02          	shl    rdx,0x2
   1b6ba:	48 01 ca             	add    rdx,rcx
   1b6bd:	48 01 d0             	add    rax,rdx
   1b6c0:	48 01 f0             	add    rax,rsi
   1b6c3:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b6cb:	48 8d 05 4e f0 1c 00 	lea    rax,[rip+0x1cf04e]        # 1ea720 <mismatchMdH>
   1b6d2:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1b6d5:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1b6d8:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1b6db:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1b6de:	48 89 d0             	mov    rax,rdx
   1b6e1:	48 c1 e0 02          	shl    rax,0x2
   1b6e5:	48 01 d0             	add    rax,rdx
   1b6e8:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b6f0:	48 01 d0             	add    rax,rdx
   1b6f3:	48 89 ca             	mov    rdx,rcx
   1b6f6:	48 c1 e2 02          	shl    rdx,0x2
   1b6fa:	48 01 ca             	add    rdx,rcx
   1b6fd:	48 01 d0             	add    rax,rdx
   1b700:	48 01 f8             	add    rax,rdi
   1b703:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b70b:	48 8d 05 ee ec 1c 00 	lea    rax,[rip+0x1cecee]        # 1ea400 <mismatchM37>
   1b712:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1b715:	29 c6                	sub    esi,eax
   1b717:	89 f0                	mov    eax,esi
   1b719:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1b71d:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1b722:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1b726:	f3 0f 7e 0d 02 69 01 00 	movq   xmm1,QWORD PTR [rip+0x16902]        # 32030 <Law_and_Order+0x5f0>
   1b72e:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1b732:	f2 0f 10 0d 1e 69 01 00 	movsd  xmm1,QWORD PTR [rip+0x1691e]        # 32058 <Law_and_Order+0x618>
   1b73a:	f2 0f 5e c1          	divsd  xmm0,xmm1
   1b73e:	66 0f 2f 05 32 69 01 00 	comisd xmm0,QWORD PTR [rip+0x16932]        # 32078 <Law_and_Order+0x638>
   1b746:	0f 86 de 01 00 00    	jbe    1b92a <get_scaled_exp_params+0x38b5>
   1b74c:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1b750:	0f 85 ee 00 00 00    	jne    1b844 <get_scaled_exp_params+0x37cf>
   1b756:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1b759:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1b75c:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1b75f:	48 89 d0             	mov    rax,rdx
   1b762:	48 c1 e0 02          	shl    rax,0x2
   1b766:	48 01 d0             	add    rax,rdx
   1b769:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b771:	48 01 d0             	add    rax,rdx
   1b774:	48 89 ca             	mov    rdx,rcx
   1b777:	48 c1 e2 02          	shl    rdx,0x2
   1b77b:	48 01 ca             	add    rdx,rcx
   1b77e:	48 01 d0             	add    rax,rdx
   1b781:	48 01 f0             	add    rax,rsi
   1b784:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b78c:	48 8d 05 8d ef 1c 00 	lea    rax,[rip+0x1cef8d]        # 1ea720 <mismatchMdH>
   1b793:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1b796:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1b79a:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1b79d:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1b7a0:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1b7a3:	48 89 d0             	mov    rax,rdx
   1b7a6:	48 c1 e0 02          	shl    rax,0x2
   1b7aa:	48 01 d0             	add    rax,rdx
   1b7ad:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b7b5:	48 01 d0             	add    rax,rdx
   1b7b8:	48 89 ca             	mov    rdx,rcx
   1b7bb:	48 c1 e2 02          	shl    rdx,0x2
   1b7bf:	48 01 ca             	add    rdx,rcx
   1b7c2:	48 01 d0             	add    rax,rdx
   1b7c5:	48 01 f0             	add    rax,rsi
   1b7c8:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b7d0:	48 8d 05 49 ef 1c 00 	lea    rax,[rip+0x1cef49]        # 1ea720 <mismatchMdH>
   1b7d7:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1b7da:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1b7dd:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1b7e0:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1b7e3:	48 89 d0             	mov    rax,rdx
   1b7e6:	48 c1 e0 02          	shl    rax,0x2
   1b7ea:	48 01 d0             	add    rax,rdx
   1b7ed:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b7f5:	48 01 d0             	add    rax,rdx
   1b7f8:	48 89 ca             	mov    rdx,rcx
   1b7fb:	48 c1 e2 02          	shl    rdx,0x2
   1b7ff:	48 01 ca             	add    rdx,rcx
   1b802:	48 01 d0             	add    rax,rdx
   1b805:	48 01 f8             	add    rax,rdi
   1b808:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b810:	48 8d 05 e9 eb 1c 00 	lea    rax,[rip+0x1cebe9]        # 1ea400 <mismatchM37>
   1b817:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1b81a:	29 c6                	sub    esi,eax
   1b81c:	89 f0                	mov    eax,esi
   1b81e:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1b822:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1b827:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1b82b:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1b82f:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1b833:	f3 0f 7e 0d f5 67 01 00 	movq   xmm1,QWORD PTR [rip+0x167f5]        # 32030 <Law_and_Order+0x5f0>
   1b83b:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1b83f:	e9 00 05 00 00       	jmp    1bd44 <get_scaled_exp_params+0x3ccf>
   1b844:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1b847:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1b84a:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1b84d:	48 89 d0             	mov    rax,rdx
   1b850:	48 c1 e0 02          	shl    rax,0x2
   1b854:	48 01 d0             	add    rax,rdx
   1b857:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b85f:	48 01 d0             	add    rax,rdx
   1b862:	48 89 ca             	mov    rdx,rcx
   1b865:	48 c1 e2 02          	shl    rdx,0x2
   1b869:	48 01 ca             	add    rdx,rcx
   1b86c:	48 01 d0             	add    rax,rdx
   1b86f:	48 01 f0             	add    rax,rsi
   1b872:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b87a:	48 8d 05 9f ee 1c 00 	lea    rax,[rip+0x1cee9f]        # 1ea720 <mismatchMdH>
   1b881:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1b884:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1b888:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1b88b:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1b88e:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1b891:	48 89 d0             	mov    rax,rdx
   1b894:	48 c1 e0 02          	shl    rax,0x2
   1b898:	48 01 d0             	add    rax,rdx
   1b89b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b8a3:	48 01 d0             	add    rax,rdx
   1b8a6:	48 89 ca             	mov    rdx,rcx
   1b8a9:	48 c1 e2 02          	shl    rdx,0x2
   1b8ad:	48 01 ca             	add    rdx,rcx
   1b8b0:	48 01 d0             	add    rax,rdx
   1b8b3:	48 01 f0             	add    rax,rsi
   1b8b6:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b8be:	48 8d 05 5b ee 1c 00 	lea    rax,[rip+0x1cee5b]        # 1ea720 <mismatchMdH>
   1b8c5:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1b8c8:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1b8cb:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1b8ce:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1b8d1:	48 89 d0             	mov    rax,rdx
   1b8d4:	48 c1 e0 02          	shl    rax,0x2
   1b8d8:	48 01 d0             	add    rax,rdx
   1b8db:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b8e3:	48 01 d0             	add    rax,rdx
   1b8e6:	48 89 ca             	mov    rdx,rcx
   1b8e9:	48 c1 e2 02          	shl    rdx,0x2
   1b8ed:	48 01 ca             	add    rdx,rcx
   1b8f0:	48 01 d0             	add    rax,rdx
   1b8f3:	48 01 f8             	add    rax,rdi
   1b8f6:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b8fe:	48 8d 05 fb ea 1c 00 	lea    rax,[rip+0x1ceafb]        # 1ea400 <mismatchM37>
   1b905:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1b908:	29 c6                	sub    esi,eax
   1b90a:	89 f0                	mov    eax,esi
   1b90c:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1b910:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1b915:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1b919:	f3 0f 7e 0d 0f 67 01 00 	movq   xmm1,QWORD PTR [rip+0x1670f]        # 32030 <Law_and_Order+0x5f0>
   1b921:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1b925:	e9 1a 04 00 00       	jmp    1bd44 <get_scaled_exp_params+0x3ccf>
   1b92a:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1b92e:	0f 85 ee 00 00 00    	jne    1ba22 <get_scaled_exp_params+0x39ad>
   1b934:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1b937:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1b93a:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1b93d:	48 89 d0             	mov    rax,rdx
   1b940:	48 c1 e0 02          	shl    rax,0x2
   1b944:	48 01 d0             	add    rax,rdx
   1b947:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b94f:	48 01 d0             	add    rax,rdx
   1b952:	48 89 ca             	mov    rdx,rcx
   1b955:	48 c1 e2 02          	shl    rdx,0x2
   1b959:	48 01 ca             	add    rdx,rcx
   1b95c:	48 01 d0             	add    rax,rdx
   1b95f:	48 01 f0             	add    rax,rsi
   1b962:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b96a:	48 8d 05 af ed 1c 00 	lea    rax,[rip+0x1cedaf]        # 1ea720 <mismatchMdH>
   1b971:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1b974:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1b978:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1b97b:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1b97e:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1b981:	48 89 d0             	mov    rax,rdx
   1b984:	48 c1 e0 02          	shl    rax,0x2
   1b988:	48 01 d0             	add    rax,rdx
   1b98b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b993:	48 01 d0             	add    rax,rdx
   1b996:	48 89 ca             	mov    rdx,rcx
   1b999:	48 c1 e2 02          	shl    rdx,0x2
   1b99d:	48 01 ca             	add    rdx,rcx
   1b9a0:	48 01 d0             	add    rax,rdx
   1b9a3:	48 01 f0             	add    rax,rsi
   1b9a6:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b9ae:	48 8d 05 6b ed 1c 00 	lea    rax,[rip+0x1ced6b]        # 1ea720 <mismatchMdH>
   1b9b5:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1b9b8:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1b9bb:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1b9be:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1b9c1:	48 89 d0             	mov    rax,rdx
   1b9c4:	48 c1 e0 02          	shl    rax,0x2
   1b9c8:	48 01 d0             	add    rax,rdx
   1b9cb:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b9d3:	48 01 d0             	add    rax,rdx
   1b9d6:	48 89 ca             	mov    rdx,rcx
   1b9d9:	48 c1 e2 02          	shl    rdx,0x2
   1b9dd:	48 01 ca             	add    rdx,rcx
   1b9e0:	48 01 d0             	add    rax,rdx
   1b9e3:	48 01 f8             	add    rax,rdi
   1b9e6:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1b9ee:	48 8d 05 0b ea 1c 00 	lea    rax,[rip+0x1cea0b]        # 1ea400 <mismatchM37>
   1b9f5:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1b9f8:	29 c6                	sub    esi,eax
   1b9fa:	89 f0                	mov    eax,esi
   1b9fc:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1ba00:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1ba05:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1ba09:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1ba0d:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1ba11:	f3 0f 7e 0d 17 66 01 00 	movq   xmm1,QWORD PTR [rip+0x16617]        # 32030 <Law_and_Order+0x5f0>
   1ba19:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1ba1d:	e9 e1 00 00 00       	jmp    1bb03 <get_scaled_exp_params+0x3a8e>
   1ba22:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1ba25:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1ba28:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1ba2b:	48 89 d0             	mov    rax,rdx
   1ba2e:	48 c1 e0 02          	shl    rax,0x2
   1ba32:	48 01 d0             	add    rax,rdx
   1ba35:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ba3d:	48 01 d0             	add    rax,rdx
   1ba40:	48 89 ca             	mov    rdx,rcx
   1ba43:	48 c1 e2 02          	shl    rdx,0x2
   1ba47:	48 01 ca             	add    rdx,rcx
   1ba4a:	48 01 d0             	add    rax,rdx
   1ba4d:	48 01 f0             	add    rax,rsi
   1ba50:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ba58:	48 8d 05 c1 ec 1c 00 	lea    rax,[rip+0x1cecc1]        # 1ea720 <mismatchMdH>
   1ba5f:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1ba62:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1ba66:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1ba69:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1ba6c:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1ba6f:	48 89 d0             	mov    rax,rdx
   1ba72:	48 c1 e0 02          	shl    rax,0x2
   1ba76:	48 01 d0             	add    rax,rdx
   1ba79:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ba81:	48 01 d0             	add    rax,rdx
   1ba84:	48 89 ca             	mov    rdx,rcx
   1ba87:	48 c1 e2 02          	shl    rdx,0x2
   1ba8b:	48 01 ca             	add    rdx,rcx
   1ba8e:	48 01 d0             	add    rax,rdx
   1ba91:	48 01 f0             	add    rax,rsi
   1ba94:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ba9c:	48 8d 05 7d ec 1c 00 	lea    rax,[rip+0x1cec7d]        # 1ea720 <mismatchMdH>
   1baa3:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1baa6:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1baa9:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1baac:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1baaf:	48 89 d0             	mov    rax,rdx
   1bab2:	48 c1 e0 02          	shl    rax,0x2
   1bab6:	48 01 d0             	add    rax,rdx
   1bab9:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1bac1:	48 01 d0             	add    rax,rdx
   1bac4:	48 89 ca             	mov    rdx,rcx
   1bac7:	48 c1 e2 02          	shl    rdx,0x2
   1bacb:	48 01 ca             	add    rdx,rcx
   1bace:	48 01 d0             	add    rax,rdx
   1bad1:	48 01 f8             	add    rax,rdi
   1bad4:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1badc:	48 8d 05 1d e9 1c 00 	lea    rax,[rip+0x1ce91d]        # 1ea400 <mismatchM37>
   1bae3:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1bae6:	29 c6                	sub    esi,eax
   1bae8:	89 f0                	mov    eax,esi
   1baea:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1baee:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1baf3:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1baf7:	f3 0f 7e 0d 31 65 01 00 	movq   xmm1,QWORD PTR [rip+0x16531]        # 32030 <Law_and_Order+0x5f0>
   1baff:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1bb03:	f2 0f 10 0d 4d 65 01 00 	movsd  xmm1,QWORD PTR [rip+0x1654d]        # 32058 <Law_and_Order+0x618>
   1bb0b:	f2 0f 5e c1          	divsd  xmm0,xmm1
   1bb0f:	f2 0f 10 0d 69 65 01 00 	movsd  xmm1,QWORD PTR [rip+0x16569]        # 32080 <Law_and_Order+0x640>
   1bb17:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1bb1b:	e8 d0 7a fe ff       	call   35f0 <sin@plt>
   1bb20:	f2 0f 10 0d e0 64 01 00 	movsd  xmm1,QWORD PTR [rip+0x164e0]        # 32008 <Law_and_Order+0x5c8>
   1bb28:	f2 0f 58 c8          	addsd  xmm1,xmm0
   1bb2c:	f2 0f 10 05 54 65 01 00 	movsd  xmm0,QWORD PTR [rip+0x16554]        # 32088 <Law_and_Order+0x648>
   1bb34:	f2 0f 59 c8          	mulsd  xmm1,xmm0
   1bb38:	f2 0f 11 4d 88       	movsd  QWORD PTR [rbp-0x78],xmm1
   1bb3d:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1bb41:	0f 85 ee 00 00 00    	jne    1bc35 <get_scaled_exp_params+0x3bc0>
   1bb47:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1bb4a:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1bb4d:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1bb50:	48 89 d0             	mov    rax,rdx
   1bb53:	48 c1 e0 02          	shl    rax,0x2
   1bb57:	48 01 d0             	add    rax,rdx
   1bb5a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1bb62:	48 01 d0             	add    rax,rdx
   1bb65:	48 89 ca             	mov    rdx,rcx
   1bb68:	48 c1 e2 02          	shl    rdx,0x2
   1bb6c:	48 01 ca             	add    rdx,rcx
   1bb6f:	48 01 d0             	add    rax,rdx
   1bb72:	48 01 f0             	add    rax,rsi
   1bb75:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1bb7d:	48 8d 05 9c eb 1c 00 	lea    rax,[rip+0x1ceb9c]        # 1ea720 <mismatchMdH>
   1bb84:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1bb87:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1bb8b:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1bb8e:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1bb91:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1bb94:	48 89 d0             	mov    rax,rdx
   1bb97:	48 c1 e0 02          	shl    rax,0x2
   1bb9b:	48 01 d0             	add    rax,rdx
   1bb9e:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1bba6:	48 01 d0             	add    rax,rdx
   1bba9:	48 89 ca             	mov    rdx,rcx
   1bbac:	48 c1 e2 02          	shl    rdx,0x2
   1bbb0:	48 01 ca             	add    rdx,rcx
   1bbb3:	48 01 d0             	add    rax,rdx
   1bbb6:	48 01 f0             	add    rax,rsi
   1bbb9:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1bbc1:	48 8d 05 58 eb 1c 00 	lea    rax,[rip+0x1ceb58]        # 1ea720 <mismatchMdH>
   1bbc8:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1bbcb:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1bbce:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1bbd1:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1bbd4:	48 89 d0             	mov    rax,rdx
   1bbd7:	48 c1 e0 02          	shl    rax,0x2
   1bbdb:	48 01 d0             	add    rax,rdx
   1bbde:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1bbe6:	48 01 d0             	add    rax,rdx
   1bbe9:	48 89 ca             	mov    rdx,rcx
   1bbec:	48 c1 e2 02          	shl    rdx,0x2
   1bbf0:	48 01 ca             	add    rdx,rcx
   1bbf3:	48 01 d0             	add    rax,rdx
   1bbf6:	48 01 f8             	add    rax,rdi
   1bbf9:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1bc01:	48 8d 05 f8 e7 1c 00 	lea    rax,[rip+0x1ce7f8]        # 1ea400 <mismatchM37>
   1bc08:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1bc0b:	29 c6                	sub    esi,eax
   1bc0d:	89 f0                	mov    eax,esi
   1bc0f:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1bc13:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1bc18:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1bc1c:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1bc20:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1bc24:	f3 0f 7e 0d 04 64 01 00 	movq   xmm1,QWORD PTR [rip+0x16404]        # 32030 <Law_and_Order+0x5f0>
   1bc2c:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1bc30:	e9 e1 00 00 00       	jmp    1bd16 <get_scaled_exp_params+0x3ca1>
   1bc35:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1bc38:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1bc3b:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1bc3e:	48 89 d0             	mov    rax,rdx
   1bc41:	48 c1 e0 02          	shl    rax,0x2
   1bc45:	48 01 d0             	add    rax,rdx
   1bc48:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1bc50:	48 01 d0             	add    rax,rdx
   1bc53:	48 89 ca             	mov    rdx,rcx
   1bc56:	48 c1 e2 02          	shl    rdx,0x2
   1bc5a:	48 01 ca             	add    rdx,rcx
   1bc5d:	48 01 d0             	add    rax,rdx
   1bc60:	48 01 f0             	add    rax,rsi
   1bc63:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1bc6b:	48 8d 05 ae ea 1c 00 	lea    rax,[rip+0x1ceaae]        # 1ea720 <mismatchMdH>
   1bc72:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1bc75:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1bc79:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1bc7c:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1bc7f:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1bc82:	48 89 d0             	mov    rax,rdx
   1bc85:	48 c1 e0 02          	shl    rax,0x2
   1bc89:	48 01 d0             	add    rax,rdx
   1bc8c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1bc94:	48 01 d0             	add    rax,rdx
   1bc97:	48 89 ca             	mov    rdx,rcx
   1bc9a:	48 c1 e2 02          	shl    rdx,0x2
   1bc9e:	48 01 ca             	add    rdx,rcx
   1bca1:	48 01 d0             	add    rax,rdx
   1bca4:	48 01 f0             	add    rax,rsi
   1bca7:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1bcaf:	48 8d 05 6a ea 1c 00 	lea    rax,[rip+0x1cea6a]        # 1ea720 <mismatchMdH>
   1bcb6:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1bcb9:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1bcbc:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1bcbf:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1bcc2:	48 89 d0             	mov    rax,rdx
   1bcc5:	48 c1 e0 02          	shl    rax,0x2
   1bcc9:	48 01 d0             	add    rax,rdx
   1bccc:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1bcd4:	48 01 d0             	add    rax,rdx
   1bcd7:	48 89 ca             	mov    rdx,rcx
   1bcda:	48 c1 e2 02          	shl    rdx,0x2
   1bcde:	48 01 ca             	add    rdx,rcx
   1bce1:	48 01 d0             	add    rax,rdx
   1bce4:	48 01 f8             	add    rax,rdi
   1bce7:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1bcef:	48 8d 05 0a e7 1c 00 	lea    rax,[rip+0x1ce70a]        # 1ea400 <mismatchM37>
   1bcf6:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1bcf9:	29 c6                	sub    esi,eax
   1bcfb:	89 f0                	mov    eax,esi
   1bcfd:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1bd01:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1bd06:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1bd0a:	f3 0f 7e 0d 1e 63 01 00 	movq   xmm1,QWORD PTR [rip+0x1631e]        # 32030 <Law_and_Order+0x5f0>
   1bd12:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1bd16:	f2 0f 10 0d 3a 63 01 00 	movsd  xmm1,QWORD PTR [rip+0x1633a]        # 32058 <Law_and_Order+0x618>
   1bd1e:	f2 0f 5e c1          	divsd  xmm0,xmm1
   1bd22:	f2 0f 10 0d 56 63 01 00 	movsd  xmm1,QWORD PTR [rip+0x16356]        # 32080 <Law_and_Order+0x640>
   1bd2a:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1bd2e:	e8 bd 78 fe ff       	call   35f0 <sin@plt>
   1bd33:	f2 0f 10 0d cd 62 01 00 	movsd  xmm1,QWORD PTR [rip+0x162cd]        # 32008 <Law_and_Order+0x5c8>
   1bd3b:	f2 0f 58 c1          	addsd  xmm0,xmm1
   1bd3f:	f2 0f 59 45 88       	mulsd  xmm0,QWORD PTR [rbp-0x78]
   1bd44:	f2 0f 10 0d 0c 63 01 00 	movsd  xmm1,QWORD PTR [rip+0x1630c]        # 32058 <Law_and_Order+0x618>
   1bd4c:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1bd50:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1bd55:	e8 16 7d fe ff       	call   3a70 <exp@plt>
   1bd5a:	66 48 0f 7e c6       	movq   rsi,xmm0
   1bd5f:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
   1bd63:	44 8b 45 a8          	mov    r8d,DWORD PTR [rbp-0x58]
   1bd67:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1bd6a:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1bd6d:	48 89 d0             	mov    rax,rdx
   1bd70:	48 c1 e0 02          	shl    rax,0x2
   1bd74:	48 01 d0             	add    rax,rdx
   1bd77:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1bd7f:	48 01 d0             	add    rax,rdx
   1bd82:	48 89 ca             	mov    rdx,rcx
   1bd85:	48 c1 e2 02          	shl    rdx,0x2
   1bd89:	48 01 ca             	add    rdx,rcx
   1bd8c:	48 01 d0             	add    rax,rdx
   1bd8f:	4c 01 c0             	add    rax,r8
   1bd92:	48 05 86 04 00 00    	add    rax,0x486
   1bd98:	48 89 34 c7          	mov    QWORD PTR [rdi+rax*8],rsi
   1bd9c:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1bda0:	0f 85 b8 03 00 00    	jne    1c15e <get_scaled_exp_params+0x40e9>
   1bda6:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1bdaa:	0f 85 e3 00 00 00    	jne    1be93 <get_scaled_exp_params+0x3e1e>
   1bdb0:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1bdb3:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1bdb6:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1bdb9:	48 89 d0             	mov    rax,rdx
   1bdbc:	48 c1 e0 02          	shl    rax,0x2
   1bdc0:	48 01 d0             	add    rax,rdx
   1bdc3:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1bdcb:	48 01 d0             	add    rax,rdx
   1bdce:	48 89 ca             	mov    rdx,rcx
   1bdd1:	48 c1 e2 02          	shl    rdx,0x2
   1bdd5:	48 01 ca             	add    rdx,rcx
   1bdd8:	48 01 d0             	add    rax,rdx
   1bddb:	48 01 f0             	add    rax,rsi
   1bdde:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1bde6:	48 8d 05 f3 fb 1c 00 	lea    rax,[rip+0x1cfbf3]        # 1eb9e0 <mismatchExtdH>
   1bded:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1bdf0:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1bdf4:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1bdf7:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1bdfa:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1bdfd:	48 89 d0             	mov    rax,rdx
   1be00:	48 c1 e0 02          	shl    rax,0x2
   1be04:	48 01 d0             	add    rax,rdx
   1be07:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1be0f:	48 01 d0             	add    rax,rdx
   1be12:	48 89 ca             	mov    rdx,rcx
   1be15:	48 c1 e2 02          	shl    rdx,0x2
   1be19:	48 01 ca             	add    rdx,rcx
   1be1c:	48 01 d0             	add    rax,rdx
   1be1f:	48 01 f0             	add    rax,rsi
   1be22:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1be2a:	48 8d 05 af fb 1c 00 	lea    rax,[rip+0x1cfbaf]        # 1eb9e0 <mismatchExtdH>
   1be31:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1be34:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1be37:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1be3a:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1be3d:	48 89 d0             	mov    rax,rdx
   1be40:	48 c1 e0 02          	shl    rax,0x2
   1be44:	48 01 d0             	add    rax,rdx
   1be47:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1be4f:	48 01 d0             	add    rax,rdx
   1be52:	48 89 ca             	mov    rdx,rcx
   1be55:	48 c1 e2 02          	shl    rdx,0x2
   1be59:	48 01 ca             	add    rdx,rcx
   1be5c:	48 01 d0             	add    rax,rdx
   1be5f:	48 01 f8             	add    rax,rdi
   1be62:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1be6a:	48 8d 05 4f f8 1c 00 	lea    rax,[rip+0x1cf84f]        # 1eb6c0 <mismatchExt37>
   1be71:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1be74:	29 c6                	sub    esi,eax
   1be76:	89 f0                	mov    eax,esi
   1be78:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1be7c:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1be81:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1be85:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1be89:	85 c0                	test   eax,eax
   1be8b:	0f 9f c0             	setg   al
   1be8e:	e9 e0 00 00 00       	jmp    1bf73 <get_scaled_exp_params+0x3efe>
   1be93:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1be96:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1be99:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1be9c:	48 89 d0             	mov    rax,rdx
   1be9f:	48 c1 e0 02          	shl    rax,0x2
   1bea3:	48 01 d0             	add    rax,rdx
   1bea6:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1beae:	48 01 d0             	add    rax,rdx
   1beb1:	48 89 ca             	mov    rdx,rcx
   1beb4:	48 c1 e2 02          	shl    rdx,0x2
   1beb8:	48 01 ca             	add    rdx,rcx
   1bebb:	48 01 d0             	add    rax,rdx
   1bebe:	48 01 f0             	add    rax,rsi
   1bec1:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1bec9:	48 8d 05 10 fb 1c 00 	lea    rax,[rip+0x1cfb10]        # 1eb9e0 <mismatchExtdH>
   1bed0:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1bed3:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1bed7:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1beda:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1bedd:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1bee0:	48 89 d0             	mov    rax,rdx
   1bee3:	48 c1 e0 02          	shl    rax,0x2
   1bee7:	48 01 d0             	add    rax,rdx
   1beea:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1bef2:	48 01 d0             	add    rax,rdx
   1bef5:	48 89 ca             	mov    rdx,rcx
   1bef8:	48 c1 e2 02          	shl    rdx,0x2
   1befc:	48 01 ca             	add    rdx,rcx
   1beff:	48 01 d0             	add    rax,rdx
   1bf02:	48 01 f0             	add    rax,rsi
   1bf05:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1bf0d:	48 8d 05 cc fa 1c 00 	lea    rax,[rip+0x1cfacc]        # 1eb9e0 <mismatchExtdH>
   1bf14:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1bf17:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1bf1a:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1bf1d:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1bf20:	48 89 d0             	mov    rax,rdx
   1bf23:	48 c1 e0 02          	shl    rax,0x2
   1bf27:	48 01 d0             	add    rax,rdx
   1bf2a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1bf32:	48 01 d0             	add    rax,rdx
   1bf35:	48 89 ca             	mov    rdx,rcx
   1bf38:	48 c1 e2 02          	shl    rdx,0x2
   1bf3c:	48 01 ca             	add    rdx,rcx
   1bf3f:	48 01 d0             	add    rax,rdx
   1bf42:	48 01 f8             	add    rax,rdi
   1bf45:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1bf4d:	48 8d 05 6c f7 1c 00 	lea    rax,[rip+0x1cf76c]        # 1eb6c0 <mismatchExt37>
   1bf54:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1bf57:	29 c6                	sub    esi,eax
   1bf59:	89 f0                	mov    eax,esi
   1bf5b:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1bf5f:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1bf64:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1bf68:	66 0f ef c9          	pxor   xmm1,xmm1
   1bf6c:	66 0f 2f c1          	comisd xmm0,xmm1
   1bf70:	0f 97 c0             	seta   al
   1bf73:	84 c0                	test   al,al
   1bf75:	74 09                	je     1bf80 <get_scaled_exp_params+0x3f0b>
   1bf77:	66 0f ef c0          	pxor   xmm0,xmm0
   1bf7b:	e9 c9 0b 00 00       	jmp    1cb49 <get_scaled_exp_params+0x4ad4>
   1bf80:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1bf84:	0f 85 ee 00 00 00    	jne    1c078 <get_scaled_exp_params+0x4003>
   1bf8a:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1bf8d:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1bf90:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1bf93:	48 89 d0             	mov    rax,rdx
   1bf96:	48 c1 e0 02          	shl    rax,0x2
   1bf9a:	48 01 d0             	add    rax,rdx
   1bf9d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1bfa5:	48 01 d0             	add    rax,rdx
   1bfa8:	48 89 ca             	mov    rdx,rcx
   1bfab:	48 c1 e2 02          	shl    rdx,0x2
   1bfaf:	48 01 ca             	add    rdx,rcx
   1bfb2:	48 01 d0             	add    rax,rdx
   1bfb5:	48 01 f0             	add    rax,rsi
   1bfb8:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1bfc0:	48 8d 05 19 fa 1c 00 	lea    rax,[rip+0x1cfa19]        # 1eb9e0 <mismatchExtdH>
   1bfc7:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1bfca:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1bfce:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1bfd1:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1bfd4:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1bfd7:	48 89 d0             	mov    rax,rdx
   1bfda:	48 c1 e0 02          	shl    rax,0x2
   1bfde:	48 01 d0             	add    rax,rdx
   1bfe1:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1bfe9:	48 01 d0             	add    rax,rdx
   1bfec:	48 89 ca             	mov    rdx,rcx
   1bfef:	48 c1 e2 02          	shl    rdx,0x2
   1bff3:	48 01 ca             	add    rdx,rcx
   1bff6:	48 01 d0             	add    rax,rdx
   1bff9:	48 01 f0             	add    rax,rsi
   1bffc:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c004:	48 8d 05 d5 f9 1c 00 	lea    rax,[rip+0x1cf9d5]        # 1eb9e0 <mismatchExtdH>
   1c00b:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1c00e:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1c011:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1c014:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1c017:	48 89 d0             	mov    rax,rdx
   1c01a:	48 c1 e0 02          	shl    rax,0x2
   1c01e:	48 01 d0             	add    rax,rdx
   1c021:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c029:	48 01 d0             	add    rax,rdx
   1c02c:	48 89 ca             	mov    rdx,rcx
   1c02f:	48 c1 e2 02          	shl    rdx,0x2
   1c033:	48 01 ca             	add    rdx,rcx
   1c036:	48 01 d0             	add    rax,rdx
   1c039:	48 01 f8             	add    rax,rdi
   1c03c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c044:	48 8d 05 75 f6 1c 00 	lea    rax,[rip+0x1cf675]        # 1eb6c0 <mismatchExt37>
   1c04b:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1c04e:	29 c6                	sub    esi,eax
   1c050:	89 f0                	mov    eax,esi
   1c052:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1c056:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1c05b:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1c05f:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1c063:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1c067:	f3 0f 7e 0d c1 5f 01 00 	movq   xmm1,QWORD PTR [rip+0x15fc1]        # 32030 <Law_and_Order+0x5f0>
   1c06f:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1c073:	e9 d1 0a 00 00       	jmp    1cb49 <get_scaled_exp_params+0x4ad4>
   1c078:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1c07b:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1c07e:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1c081:	48 89 d0             	mov    rax,rdx
   1c084:	48 c1 e0 02          	shl    rax,0x2
   1c088:	48 01 d0             	add    rax,rdx
   1c08b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c093:	48 01 d0             	add    rax,rdx
   1c096:	48 89 ca             	mov    rdx,rcx
   1c099:	48 c1 e2 02          	shl    rdx,0x2
   1c09d:	48 01 ca             	add    rdx,rcx
   1c0a0:	48 01 d0             	add    rax,rdx
   1c0a3:	48 01 f0             	add    rax,rsi
   1c0a6:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c0ae:	48 8d 05 2b f9 1c 00 	lea    rax,[rip+0x1cf92b]        # 1eb9e0 <mismatchExtdH>
   1c0b5:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1c0b8:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1c0bc:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1c0bf:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1c0c2:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1c0c5:	48 89 d0             	mov    rax,rdx
   1c0c8:	48 c1 e0 02          	shl    rax,0x2
   1c0cc:	48 01 d0             	add    rax,rdx
   1c0cf:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c0d7:	48 01 d0             	add    rax,rdx
   1c0da:	48 89 ca             	mov    rdx,rcx
   1c0dd:	48 c1 e2 02          	shl    rdx,0x2
   1c0e1:	48 01 ca             	add    rdx,rcx
   1c0e4:	48 01 d0             	add    rax,rdx
   1c0e7:	48 01 f0             	add    rax,rsi
   1c0ea:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c0f2:	48 8d 05 e7 f8 1c 00 	lea    rax,[rip+0x1cf8e7]        # 1eb9e0 <mismatchExtdH>
   1c0f9:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1c0fc:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1c0ff:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1c102:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1c105:	48 89 d0             	mov    rax,rdx
   1c108:	48 c1 e0 02          	shl    rax,0x2
   1c10c:	48 01 d0             	add    rax,rdx
   1c10f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c117:	48 01 d0             	add    rax,rdx
   1c11a:	48 89 ca             	mov    rdx,rcx
   1c11d:	48 c1 e2 02          	shl    rdx,0x2
   1c121:	48 01 ca             	add    rdx,rcx
   1c124:	48 01 d0             	add    rax,rdx
   1c127:	48 01 f8             	add    rax,rdi
   1c12a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c132:	48 8d 05 87 f5 1c 00 	lea    rax,[rip+0x1cf587]        # 1eb6c0 <mismatchExt37>
   1c139:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1c13c:	29 c6                	sub    esi,eax
   1c13e:	89 f0                	mov    eax,esi
   1c140:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1c144:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1c149:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1c14d:	f3 0f 7e 0d db 5e 01 00 	movq   xmm1,QWORD PTR [rip+0x15edb]        # 32030 <Law_and_Order+0x5f0>
   1c155:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1c159:	e9 eb 09 00 00       	jmp    1cb49 <get_scaled_exp_params+0x4ad4>
   1c15e:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1c162:	0f 85 ee 00 00 00    	jne    1c256 <get_scaled_exp_params+0x41e1>
   1c168:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1c16b:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1c16e:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1c171:	48 89 d0             	mov    rax,rdx
   1c174:	48 c1 e0 02          	shl    rax,0x2
   1c178:	48 01 d0             	add    rax,rdx
   1c17b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c183:	48 01 d0             	add    rax,rdx
   1c186:	48 89 ca             	mov    rdx,rcx
   1c189:	48 c1 e2 02          	shl    rdx,0x2
   1c18d:	48 01 ca             	add    rdx,rcx
   1c190:	48 01 d0             	add    rax,rdx
   1c193:	48 01 f0             	add    rax,rsi
   1c196:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c19e:	48 8d 05 3b f8 1c 00 	lea    rax,[rip+0x1cf83b]        # 1eb9e0 <mismatchExtdH>
   1c1a5:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1c1a8:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1c1ac:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1c1af:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1c1b2:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1c1b5:	48 89 d0             	mov    rax,rdx
   1c1b8:	48 c1 e0 02          	shl    rax,0x2
   1c1bc:	48 01 d0             	add    rax,rdx
   1c1bf:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c1c7:	48 01 d0             	add    rax,rdx
   1c1ca:	48 89 ca             	mov    rdx,rcx
   1c1cd:	48 c1 e2 02          	shl    rdx,0x2
   1c1d1:	48 01 ca             	add    rdx,rcx
   1c1d4:	48 01 d0             	add    rax,rdx
   1c1d7:	48 01 f0             	add    rax,rsi
   1c1da:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c1e2:	48 8d 05 f7 f7 1c 00 	lea    rax,[rip+0x1cf7f7]        # 1eb9e0 <mismatchExtdH>
   1c1e9:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1c1ec:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1c1ef:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1c1f2:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1c1f5:	48 89 d0             	mov    rax,rdx
   1c1f8:	48 c1 e0 02          	shl    rax,0x2
   1c1fc:	48 01 d0             	add    rax,rdx
   1c1ff:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c207:	48 01 d0             	add    rax,rdx
   1c20a:	48 89 ca             	mov    rdx,rcx
   1c20d:	48 c1 e2 02          	shl    rdx,0x2
   1c211:	48 01 ca             	add    rdx,rcx
   1c214:	48 01 d0             	add    rax,rdx
   1c217:	48 01 f8             	add    rax,rdi
   1c21a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c222:	48 8d 05 97 f4 1c 00 	lea    rax,[rip+0x1cf497]        # 1eb6c0 <mismatchExt37>
   1c229:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1c22c:	29 c6                	sub    esi,eax
   1c22e:	89 f0                	mov    eax,esi
   1c230:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1c234:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1c239:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1c23d:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1c241:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1c245:	f3 0f 7e 0d e3 5d 01 00 	movq   xmm1,QWORD PTR [rip+0x15de3]        # 32030 <Law_and_Order+0x5f0>
   1c24d:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1c251:	e9 e1 00 00 00       	jmp    1c337 <get_scaled_exp_params+0x42c2>
   1c256:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1c259:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1c25c:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1c25f:	48 89 d0             	mov    rax,rdx
   1c262:	48 c1 e0 02          	shl    rax,0x2
   1c266:	48 01 d0             	add    rax,rdx
   1c269:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c271:	48 01 d0             	add    rax,rdx
   1c274:	48 89 ca             	mov    rdx,rcx
   1c277:	48 c1 e2 02          	shl    rdx,0x2
   1c27b:	48 01 ca             	add    rdx,rcx
   1c27e:	48 01 d0             	add    rax,rdx
   1c281:	48 01 f0             	add    rax,rsi
   1c284:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c28c:	48 8d 05 4d f7 1c 00 	lea    rax,[rip+0x1cf74d]        # 1eb9e0 <mismatchExtdH>
   1c293:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1c296:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1c29a:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1c29d:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1c2a0:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1c2a3:	48 89 d0             	mov    rax,rdx
   1c2a6:	48 c1 e0 02          	shl    rax,0x2
   1c2aa:	48 01 d0             	add    rax,rdx
   1c2ad:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c2b5:	48 01 d0             	add    rax,rdx
   1c2b8:	48 89 ca             	mov    rdx,rcx
   1c2bb:	48 c1 e2 02          	shl    rdx,0x2
   1c2bf:	48 01 ca             	add    rdx,rcx
   1c2c2:	48 01 d0             	add    rax,rdx
   1c2c5:	48 01 f0             	add    rax,rsi
   1c2c8:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c2d0:	48 8d 05 09 f7 1c 00 	lea    rax,[rip+0x1cf709]        # 1eb9e0 <mismatchExtdH>
   1c2d7:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1c2da:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1c2dd:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1c2e0:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1c2e3:	48 89 d0             	mov    rax,rdx
   1c2e6:	48 c1 e0 02          	shl    rax,0x2
   1c2ea:	48 01 d0             	add    rax,rdx
   1c2ed:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c2f5:	48 01 d0             	add    rax,rdx
   1c2f8:	48 89 ca             	mov    rdx,rcx
   1c2fb:	48 c1 e2 02          	shl    rdx,0x2
   1c2ff:	48 01 ca             	add    rdx,rcx
   1c302:	48 01 d0             	add    rax,rdx
   1c305:	48 01 f8             	add    rax,rdi
   1c308:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c310:	48 8d 05 a9 f3 1c 00 	lea    rax,[rip+0x1cf3a9]        # 1eb6c0 <mismatchExt37>
   1c317:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1c31a:	29 c6                	sub    esi,eax
   1c31c:	89 f0                	mov    eax,esi
   1c31e:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1c322:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1c327:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1c32b:	f3 0f 7e 0d fd 5c 01 00 	movq   xmm1,QWORD PTR [rip+0x15cfd]        # 32030 <Law_and_Order+0x5f0>
   1c333:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1c337:	f2 0f 10 0d 19 5d 01 00 	movsd  xmm1,QWORD PTR [rip+0x15d19]        # 32058 <Law_and_Order+0x618>
   1c33f:	f2 0f 5e c1          	divsd  xmm0,xmm1
   1c343:	66 0f 28 c8          	movapd xmm1,xmm0
   1c347:	f2 0f 10 05 21 5d 01 00 	movsd  xmm0,QWORD PTR [rip+0x15d21]        # 32070 <Law_and_Order+0x630>
   1c34f:	66 0f 2f c1          	comisd xmm0,xmm1
   1c353:	76 09                	jbe    1c35e <get_scaled_exp_params+0x42e9>
   1c355:	66 0f ef c0          	pxor   xmm0,xmm0
   1c359:	e9 eb 07 00 00       	jmp    1cb49 <get_scaled_exp_params+0x4ad4>
   1c35e:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1c362:	0f 85 ee 00 00 00    	jne    1c456 <get_scaled_exp_params+0x43e1>
   1c368:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1c36b:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1c36e:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1c371:	48 89 d0             	mov    rax,rdx
   1c374:	48 c1 e0 02          	shl    rax,0x2
   1c378:	48 01 d0             	add    rax,rdx
   1c37b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c383:	48 01 d0             	add    rax,rdx
   1c386:	48 89 ca             	mov    rdx,rcx
   1c389:	48 c1 e2 02          	shl    rdx,0x2
   1c38d:	48 01 ca             	add    rdx,rcx
   1c390:	48 01 d0             	add    rax,rdx
   1c393:	48 01 f0             	add    rax,rsi
   1c396:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c39e:	48 8d 05 3b f6 1c 00 	lea    rax,[rip+0x1cf63b]        # 1eb9e0 <mismatchExtdH>
   1c3a5:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1c3a8:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1c3ac:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1c3af:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1c3b2:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1c3b5:	48 89 d0             	mov    rax,rdx
   1c3b8:	48 c1 e0 02          	shl    rax,0x2
   1c3bc:	48 01 d0             	add    rax,rdx
   1c3bf:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c3c7:	48 01 d0             	add    rax,rdx
   1c3ca:	48 89 ca             	mov    rdx,rcx
   1c3cd:	48 c1 e2 02          	shl    rdx,0x2
   1c3d1:	48 01 ca             	add    rdx,rcx
   1c3d4:	48 01 d0             	add    rax,rdx
   1c3d7:	48 01 f0             	add    rax,rsi
   1c3da:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c3e2:	48 8d 05 f7 f5 1c 00 	lea    rax,[rip+0x1cf5f7]        # 1eb9e0 <mismatchExtdH>
   1c3e9:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1c3ec:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1c3ef:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1c3f2:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1c3f5:	48 89 d0             	mov    rax,rdx
   1c3f8:	48 c1 e0 02          	shl    rax,0x2
   1c3fc:	48 01 d0             	add    rax,rdx
   1c3ff:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c407:	48 01 d0             	add    rax,rdx
   1c40a:	48 89 ca             	mov    rdx,rcx
   1c40d:	48 c1 e2 02          	shl    rdx,0x2
   1c411:	48 01 ca             	add    rdx,rcx
   1c414:	48 01 d0             	add    rax,rdx
   1c417:	48 01 f8             	add    rax,rdi
   1c41a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c422:	48 8d 05 97 f2 1c 00 	lea    rax,[rip+0x1cf297]        # 1eb6c0 <mismatchExt37>
   1c429:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1c42c:	29 c6                	sub    esi,eax
   1c42e:	89 f0                	mov    eax,esi
   1c430:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1c434:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1c439:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1c43d:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1c441:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1c445:	f3 0f 7e 0d e3 5b 01 00 	movq   xmm1,QWORD PTR [rip+0x15be3]        # 32030 <Law_and_Order+0x5f0>
   1c44d:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1c451:	e9 e1 00 00 00       	jmp    1c537 <get_scaled_exp_params+0x44c2>
   1c456:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1c459:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1c45c:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1c45f:	48 89 d0             	mov    rax,rdx
   1c462:	48 c1 e0 02          	shl    rax,0x2
   1c466:	48 01 d0             	add    rax,rdx
   1c469:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c471:	48 01 d0             	add    rax,rdx
   1c474:	48 89 ca             	mov    rdx,rcx
   1c477:	48 c1 e2 02          	shl    rdx,0x2
   1c47b:	48 01 ca             	add    rdx,rcx
   1c47e:	48 01 d0             	add    rax,rdx
   1c481:	48 01 f0             	add    rax,rsi
   1c484:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c48c:	48 8d 05 4d f5 1c 00 	lea    rax,[rip+0x1cf54d]        # 1eb9e0 <mismatchExtdH>
   1c493:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1c496:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1c49a:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1c49d:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1c4a0:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1c4a3:	48 89 d0             	mov    rax,rdx
   1c4a6:	48 c1 e0 02          	shl    rax,0x2
   1c4aa:	48 01 d0             	add    rax,rdx
   1c4ad:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c4b5:	48 01 d0             	add    rax,rdx
   1c4b8:	48 89 ca             	mov    rdx,rcx
   1c4bb:	48 c1 e2 02          	shl    rdx,0x2
   1c4bf:	48 01 ca             	add    rdx,rcx
   1c4c2:	48 01 d0             	add    rax,rdx
   1c4c5:	48 01 f0             	add    rax,rsi
   1c4c8:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c4d0:	48 8d 05 09 f5 1c 00 	lea    rax,[rip+0x1cf509]        # 1eb9e0 <mismatchExtdH>
   1c4d7:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1c4da:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1c4dd:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1c4e0:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1c4e3:	48 89 d0             	mov    rax,rdx
   1c4e6:	48 c1 e0 02          	shl    rax,0x2
   1c4ea:	48 01 d0             	add    rax,rdx
   1c4ed:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c4f5:	48 01 d0             	add    rax,rdx
   1c4f8:	48 89 ca             	mov    rdx,rcx
   1c4fb:	48 c1 e2 02          	shl    rdx,0x2
   1c4ff:	48 01 ca             	add    rdx,rcx
   1c502:	48 01 d0             	add    rax,rdx
   1c505:	48 01 f8             	add    rax,rdi
   1c508:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c510:	48 8d 05 a9 f1 1c 00 	lea    rax,[rip+0x1cf1a9]        # 1eb6c0 <mismatchExt37>
   1c517:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1c51a:	29 c6                	sub    esi,eax
   1c51c:	89 f0                	mov    eax,esi
   1c51e:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1c522:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1c527:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1c52b:	f3 0f 7e 0d fd 5a 01 00 	movq   xmm1,QWORD PTR [rip+0x15afd]        # 32030 <Law_and_Order+0x5f0>
   1c533:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1c537:	f2 0f 10 0d 19 5b 01 00 	movsd  xmm1,QWORD PTR [rip+0x15b19]        # 32058 <Law_and_Order+0x618>
   1c53f:	f2 0f 5e c1          	divsd  xmm0,xmm1
   1c543:	66 0f 2f 05 2d 5b 01 00 	comisd xmm0,QWORD PTR [rip+0x15b2d]        # 32078 <Law_and_Order+0x638>
   1c54b:	0f 86 de 01 00 00    	jbe    1c72f <get_scaled_exp_params+0x46ba>
   1c551:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1c555:	0f 85 ee 00 00 00    	jne    1c649 <get_scaled_exp_params+0x45d4>
   1c55b:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1c55e:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1c561:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1c564:	48 89 d0             	mov    rax,rdx
   1c567:	48 c1 e0 02          	shl    rax,0x2
   1c56b:	48 01 d0             	add    rax,rdx
   1c56e:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c576:	48 01 d0             	add    rax,rdx
   1c579:	48 89 ca             	mov    rdx,rcx
   1c57c:	48 c1 e2 02          	shl    rdx,0x2
   1c580:	48 01 ca             	add    rdx,rcx
   1c583:	48 01 d0             	add    rax,rdx
   1c586:	48 01 f0             	add    rax,rsi
   1c589:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c591:	48 8d 05 48 f4 1c 00 	lea    rax,[rip+0x1cf448]        # 1eb9e0 <mismatchExtdH>
   1c598:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1c59b:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1c59f:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1c5a2:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1c5a5:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1c5a8:	48 89 d0             	mov    rax,rdx
   1c5ab:	48 c1 e0 02          	shl    rax,0x2
   1c5af:	48 01 d0             	add    rax,rdx
   1c5b2:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c5ba:	48 01 d0             	add    rax,rdx
   1c5bd:	48 89 ca             	mov    rdx,rcx
   1c5c0:	48 c1 e2 02          	shl    rdx,0x2
   1c5c4:	48 01 ca             	add    rdx,rcx
   1c5c7:	48 01 d0             	add    rax,rdx
   1c5ca:	48 01 f0             	add    rax,rsi
   1c5cd:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c5d5:	48 8d 05 04 f4 1c 00 	lea    rax,[rip+0x1cf404]        # 1eb9e0 <mismatchExtdH>
   1c5dc:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1c5df:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1c5e2:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1c5e5:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1c5e8:	48 89 d0             	mov    rax,rdx
   1c5eb:	48 c1 e0 02          	shl    rax,0x2
   1c5ef:	48 01 d0             	add    rax,rdx
   1c5f2:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c5fa:	48 01 d0             	add    rax,rdx
   1c5fd:	48 89 ca             	mov    rdx,rcx
   1c600:	48 c1 e2 02          	shl    rdx,0x2
   1c604:	48 01 ca             	add    rdx,rcx
   1c607:	48 01 d0             	add    rax,rdx
   1c60a:	48 01 f8             	add    rax,rdi
   1c60d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c615:	48 8d 05 a4 f0 1c 00 	lea    rax,[rip+0x1cf0a4]        # 1eb6c0 <mismatchExt37>
   1c61c:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1c61f:	29 c6                	sub    esi,eax
   1c621:	89 f0                	mov    eax,esi
   1c623:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1c627:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1c62c:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1c630:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1c634:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1c638:	f3 0f 7e 0d f0 59 01 00 	movq   xmm1,QWORD PTR [rip+0x159f0]        # 32030 <Law_and_Order+0x5f0>
   1c640:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1c644:	e9 00 05 00 00       	jmp    1cb49 <get_scaled_exp_params+0x4ad4>
   1c649:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1c64c:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1c64f:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1c652:	48 89 d0             	mov    rax,rdx
   1c655:	48 c1 e0 02          	shl    rax,0x2
   1c659:	48 01 d0             	add    rax,rdx
   1c65c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c664:	48 01 d0             	add    rax,rdx
   1c667:	48 89 ca             	mov    rdx,rcx
   1c66a:	48 c1 e2 02          	shl    rdx,0x2
   1c66e:	48 01 ca             	add    rdx,rcx
   1c671:	48 01 d0             	add    rax,rdx
   1c674:	48 01 f0             	add    rax,rsi
   1c677:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c67f:	48 8d 05 5a f3 1c 00 	lea    rax,[rip+0x1cf35a]        # 1eb9e0 <mismatchExtdH>
   1c686:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1c689:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1c68d:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1c690:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1c693:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1c696:	48 89 d0             	mov    rax,rdx
   1c699:	48 c1 e0 02          	shl    rax,0x2
   1c69d:	48 01 d0             	add    rax,rdx
   1c6a0:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c6a8:	48 01 d0             	add    rax,rdx
   1c6ab:	48 89 ca             	mov    rdx,rcx
   1c6ae:	48 c1 e2 02          	shl    rdx,0x2
   1c6b2:	48 01 ca             	add    rdx,rcx
   1c6b5:	48 01 d0             	add    rax,rdx
   1c6b8:	48 01 f0             	add    rax,rsi
   1c6bb:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c6c3:	48 8d 05 16 f3 1c 00 	lea    rax,[rip+0x1cf316]        # 1eb9e0 <mismatchExtdH>
   1c6ca:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1c6cd:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1c6d0:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1c6d3:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1c6d6:	48 89 d0             	mov    rax,rdx
   1c6d9:	48 c1 e0 02          	shl    rax,0x2
   1c6dd:	48 01 d0             	add    rax,rdx
   1c6e0:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c6e8:	48 01 d0             	add    rax,rdx
   1c6eb:	48 89 ca             	mov    rdx,rcx
   1c6ee:	48 c1 e2 02          	shl    rdx,0x2
   1c6f2:	48 01 ca             	add    rdx,rcx
   1c6f5:	48 01 d0             	add    rax,rdx
   1c6f8:	48 01 f8             	add    rax,rdi
   1c6fb:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c703:	48 8d 05 b6 ef 1c 00 	lea    rax,[rip+0x1cefb6]        # 1eb6c0 <mismatchExt37>
   1c70a:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1c70d:	29 c6                	sub    esi,eax
   1c70f:	89 f0                	mov    eax,esi
   1c711:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1c715:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1c71a:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1c71e:	f3 0f 7e 0d 0a 59 01 00 	movq   xmm1,QWORD PTR [rip+0x1590a]        # 32030 <Law_and_Order+0x5f0>
   1c726:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1c72a:	e9 1a 04 00 00       	jmp    1cb49 <get_scaled_exp_params+0x4ad4>
   1c72f:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1c733:	0f 85 ee 00 00 00    	jne    1c827 <get_scaled_exp_params+0x47b2>
   1c739:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1c73c:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1c73f:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1c742:	48 89 d0             	mov    rax,rdx
   1c745:	48 c1 e0 02          	shl    rax,0x2
   1c749:	48 01 d0             	add    rax,rdx
   1c74c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c754:	48 01 d0             	add    rax,rdx
   1c757:	48 89 ca             	mov    rdx,rcx
   1c75a:	48 c1 e2 02          	shl    rdx,0x2
   1c75e:	48 01 ca             	add    rdx,rcx
   1c761:	48 01 d0             	add    rax,rdx
   1c764:	48 01 f0             	add    rax,rsi
   1c767:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c76f:	48 8d 05 6a f2 1c 00 	lea    rax,[rip+0x1cf26a]        # 1eb9e0 <mismatchExtdH>
   1c776:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1c779:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1c77d:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1c780:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1c783:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1c786:	48 89 d0             	mov    rax,rdx
   1c789:	48 c1 e0 02          	shl    rax,0x2
   1c78d:	48 01 d0             	add    rax,rdx
   1c790:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c798:	48 01 d0             	add    rax,rdx
   1c79b:	48 89 ca             	mov    rdx,rcx
   1c79e:	48 c1 e2 02          	shl    rdx,0x2
   1c7a2:	48 01 ca             	add    rdx,rcx
   1c7a5:	48 01 d0             	add    rax,rdx
   1c7a8:	48 01 f0             	add    rax,rsi
   1c7ab:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c7b3:	48 8d 05 26 f2 1c 00 	lea    rax,[rip+0x1cf226]        # 1eb9e0 <mismatchExtdH>
   1c7ba:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1c7bd:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1c7c0:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1c7c3:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1c7c6:	48 89 d0             	mov    rax,rdx
   1c7c9:	48 c1 e0 02          	shl    rax,0x2
   1c7cd:	48 01 d0             	add    rax,rdx
   1c7d0:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c7d8:	48 01 d0             	add    rax,rdx
   1c7db:	48 89 ca             	mov    rdx,rcx
   1c7de:	48 c1 e2 02          	shl    rdx,0x2
   1c7e2:	48 01 ca             	add    rdx,rcx
   1c7e5:	48 01 d0             	add    rax,rdx
   1c7e8:	48 01 f8             	add    rax,rdi
   1c7eb:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c7f3:	48 8d 05 c6 ee 1c 00 	lea    rax,[rip+0x1ceec6]        # 1eb6c0 <mismatchExt37>
   1c7fa:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1c7fd:	29 c6                	sub    esi,eax
   1c7ff:	89 f0                	mov    eax,esi
   1c801:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1c805:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1c80a:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1c80e:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1c812:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1c816:	f3 0f 7e 0d 12 58 01 00 	movq   xmm1,QWORD PTR [rip+0x15812]        # 32030 <Law_and_Order+0x5f0>
   1c81e:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1c822:	e9 e1 00 00 00       	jmp    1c908 <get_scaled_exp_params+0x4893>
   1c827:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1c82a:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1c82d:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1c830:	48 89 d0             	mov    rax,rdx
   1c833:	48 c1 e0 02          	shl    rax,0x2
   1c837:	48 01 d0             	add    rax,rdx
   1c83a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c842:	48 01 d0             	add    rax,rdx
   1c845:	48 89 ca             	mov    rdx,rcx
   1c848:	48 c1 e2 02          	shl    rdx,0x2
   1c84c:	48 01 ca             	add    rdx,rcx
   1c84f:	48 01 d0             	add    rax,rdx
   1c852:	48 01 f0             	add    rax,rsi
   1c855:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c85d:	48 8d 05 7c f1 1c 00 	lea    rax,[rip+0x1cf17c]        # 1eb9e0 <mismatchExtdH>
   1c864:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1c867:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1c86b:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1c86e:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1c871:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1c874:	48 89 d0             	mov    rax,rdx
   1c877:	48 c1 e0 02          	shl    rax,0x2
   1c87b:	48 01 d0             	add    rax,rdx
   1c87e:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c886:	48 01 d0             	add    rax,rdx
   1c889:	48 89 ca             	mov    rdx,rcx
   1c88c:	48 c1 e2 02          	shl    rdx,0x2
   1c890:	48 01 ca             	add    rdx,rcx
   1c893:	48 01 d0             	add    rax,rdx
   1c896:	48 01 f0             	add    rax,rsi
   1c899:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c8a1:	48 8d 05 38 f1 1c 00 	lea    rax,[rip+0x1cf138]        # 1eb9e0 <mismatchExtdH>
   1c8a8:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1c8ab:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1c8ae:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1c8b1:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1c8b4:	48 89 d0             	mov    rax,rdx
   1c8b7:	48 c1 e0 02          	shl    rax,0x2
   1c8bb:	48 01 d0             	add    rax,rdx
   1c8be:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c8c6:	48 01 d0             	add    rax,rdx
   1c8c9:	48 89 ca             	mov    rdx,rcx
   1c8cc:	48 c1 e2 02          	shl    rdx,0x2
   1c8d0:	48 01 ca             	add    rdx,rcx
   1c8d3:	48 01 d0             	add    rax,rdx
   1c8d6:	48 01 f8             	add    rax,rdi
   1c8d9:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c8e1:	48 8d 05 d8 ed 1c 00 	lea    rax,[rip+0x1cedd8]        # 1eb6c0 <mismatchExt37>
   1c8e8:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1c8eb:	29 c6                	sub    esi,eax
   1c8ed:	89 f0                	mov    eax,esi
   1c8ef:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1c8f3:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1c8f8:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1c8fc:	f3 0f 7e 0d 2c 57 01 00 	movq   xmm1,QWORD PTR [rip+0x1572c]        # 32030 <Law_and_Order+0x5f0>
   1c904:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1c908:	f2 0f 10 0d 48 57 01 00 	movsd  xmm1,QWORD PTR [rip+0x15748]        # 32058 <Law_and_Order+0x618>
   1c910:	f2 0f 5e c1          	divsd  xmm0,xmm1
   1c914:	f2 0f 10 0d 64 57 01 00 	movsd  xmm1,QWORD PTR [rip+0x15764]        # 32080 <Law_and_Order+0x640>
   1c91c:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1c920:	e8 cb 6c fe ff       	call   35f0 <sin@plt>
   1c925:	f2 0f 10 0d db 56 01 00 	movsd  xmm1,QWORD PTR [rip+0x156db]        # 32008 <Law_and_Order+0x5c8>
   1c92d:	f2 0f 58 c8          	addsd  xmm1,xmm0
   1c931:	f2 0f 10 05 4f 57 01 00 	movsd  xmm0,QWORD PTR [rip+0x1574f]        # 32088 <Law_and_Order+0x648>
   1c939:	f2 0f 59 c8          	mulsd  xmm1,xmm0
   1c93d:	f2 0f 11 4d 88       	movsd  QWORD PTR [rbp-0x78],xmm1
   1c942:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1c946:	0f 85 ee 00 00 00    	jne    1ca3a <get_scaled_exp_params+0x49c5>
   1c94c:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1c94f:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1c952:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1c955:	48 89 d0             	mov    rax,rdx
   1c958:	48 c1 e0 02          	shl    rax,0x2
   1c95c:	48 01 d0             	add    rax,rdx
   1c95f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c967:	48 01 d0             	add    rax,rdx
   1c96a:	48 89 ca             	mov    rdx,rcx
   1c96d:	48 c1 e2 02          	shl    rdx,0x2
   1c971:	48 01 ca             	add    rdx,rcx
   1c974:	48 01 d0             	add    rax,rdx
   1c977:	48 01 f0             	add    rax,rsi
   1c97a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c982:	48 8d 05 57 f0 1c 00 	lea    rax,[rip+0x1cf057]        # 1eb9e0 <mismatchExtdH>
   1c989:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1c98c:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1c990:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1c993:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1c996:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1c999:	48 89 d0             	mov    rax,rdx
   1c99c:	48 c1 e0 02          	shl    rax,0x2
   1c9a0:	48 01 d0             	add    rax,rdx
   1c9a3:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c9ab:	48 01 d0             	add    rax,rdx
   1c9ae:	48 89 ca             	mov    rdx,rcx
   1c9b1:	48 c1 e2 02          	shl    rdx,0x2
   1c9b5:	48 01 ca             	add    rdx,rcx
   1c9b8:	48 01 d0             	add    rax,rdx
   1c9bb:	48 01 f0             	add    rax,rsi
   1c9be:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c9c6:	48 8d 05 13 f0 1c 00 	lea    rax,[rip+0x1cf013]        # 1eb9e0 <mismatchExtdH>
   1c9cd:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1c9d0:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1c9d3:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1c9d6:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1c9d9:	48 89 d0             	mov    rax,rdx
   1c9dc:	48 c1 e0 02          	shl    rax,0x2
   1c9e0:	48 01 d0             	add    rax,rdx
   1c9e3:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1c9eb:	48 01 d0             	add    rax,rdx
   1c9ee:	48 89 ca             	mov    rdx,rcx
   1c9f1:	48 c1 e2 02          	shl    rdx,0x2
   1c9f5:	48 01 ca             	add    rdx,rcx
   1c9f8:	48 01 d0             	add    rax,rdx
   1c9fb:	48 01 f8             	add    rax,rdi
   1c9fe:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ca06:	48 8d 05 b3 ec 1c 00 	lea    rax,[rip+0x1cecb3]        # 1eb6c0 <mismatchExt37>
   1ca0d:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1ca10:	29 c6                	sub    esi,eax
   1ca12:	89 f0                	mov    eax,esi
   1ca14:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1ca18:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1ca1d:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1ca21:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1ca25:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1ca29:	f3 0f 7e 0d ff 55 01 00 	movq   xmm1,QWORD PTR [rip+0x155ff]        # 32030 <Law_and_Order+0x5f0>
   1ca31:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1ca35:	e9 e1 00 00 00       	jmp    1cb1b <get_scaled_exp_params+0x4aa6>
   1ca3a:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1ca3d:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1ca40:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1ca43:	48 89 d0             	mov    rax,rdx
   1ca46:	48 c1 e0 02          	shl    rax,0x2
   1ca4a:	48 01 d0             	add    rax,rdx
   1ca4d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ca55:	48 01 d0             	add    rax,rdx
   1ca58:	48 89 ca             	mov    rdx,rcx
   1ca5b:	48 c1 e2 02          	shl    rdx,0x2
   1ca5f:	48 01 ca             	add    rdx,rcx
   1ca62:	48 01 d0             	add    rax,rdx
   1ca65:	48 01 f0             	add    rax,rsi
   1ca68:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ca70:	48 8d 05 69 ef 1c 00 	lea    rax,[rip+0x1cef69]        # 1eb9e0 <mismatchExtdH>
   1ca77:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1ca7a:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1ca7e:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1ca81:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1ca84:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1ca87:	48 89 d0             	mov    rax,rdx
   1ca8a:	48 c1 e0 02          	shl    rax,0x2
   1ca8e:	48 01 d0             	add    rax,rdx
   1ca91:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ca99:	48 01 d0             	add    rax,rdx
   1ca9c:	48 89 ca             	mov    rdx,rcx
   1ca9f:	48 c1 e2 02          	shl    rdx,0x2
   1caa3:	48 01 ca             	add    rdx,rcx
   1caa6:	48 01 d0             	add    rax,rdx
   1caa9:	48 01 f0             	add    rax,rsi
   1caac:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1cab4:	48 8d 05 25 ef 1c 00 	lea    rax,[rip+0x1cef25]        # 1eb9e0 <mismatchExtdH>
   1cabb:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1cabe:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1cac1:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1cac4:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1cac7:	48 89 d0             	mov    rax,rdx
   1caca:	48 c1 e0 02          	shl    rax,0x2
   1cace:	48 01 d0             	add    rax,rdx
   1cad1:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1cad9:	48 01 d0             	add    rax,rdx
   1cadc:	48 89 ca             	mov    rdx,rcx
   1cadf:	48 c1 e2 02          	shl    rdx,0x2
   1cae3:	48 01 ca             	add    rdx,rcx
   1cae6:	48 01 d0             	add    rax,rdx
   1cae9:	48 01 f8             	add    rax,rdi
   1caec:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1caf4:	48 8d 05 c5 eb 1c 00 	lea    rax,[rip+0x1cebc5]        # 1eb6c0 <mismatchExt37>
   1cafb:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1cafe:	29 c6                	sub    esi,eax
   1cb00:	89 f0                	mov    eax,esi
   1cb02:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1cb06:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1cb0b:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1cb0f:	f3 0f 7e 0d 19 55 01 00 	movq   xmm1,QWORD PTR [rip+0x15519]        # 32030 <Law_and_Order+0x5f0>
   1cb17:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1cb1b:	f2 0f 10 0d 35 55 01 00 	movsd  xmm1,QWORD PTR [rip+0x15535]        # 32058 <Law_and_Order+0x618>
   1cb23:	f2 0f 5e c1          	divsd  xmm0,xmm1
   1cb27:	f2 0f 10 0d 51 55 01 00 	movsd  xmm1,QWORD PTR [rip+0x15551]        # 32080 <Law_and_Order+0x640>
   1cb2f:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1cb33:	e8 b8 6a fe ff       	call   35f0 <sin@plt>
   1cb38:	f2 0f 10 0d c8 54 01 00 	movsd  xmm1,QWORD PTR [rip+0x154c8]        # 32008 <Law_and_Order+0x5c8>
   1cb40:	f2 0f 58 c1          	addsd  xmm0,xmm1
   1cb44:	f2 0f 59 45 88       	mulsd  xmm0,QWORD PTR [rbp-0x78]
   1cb49:	f2 0f 10 0d 07 55 01 00 	movsd  xmm1,QWORD PTR [rip+0x15507]        # 32058 <Law_and_Order+0x618>
   1cb51:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1cb55:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1cb5a:	e8 11 6f fe ff       	call   3a70 <exp@plt>
   1cb5f:	66 48 0f 7e c6       	movq   rsi,xmm0
   1cb64:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
   1cb68:	44 8b 45 a8          	mov    r8d,DWORD PTR [rbp-0x58]
   1cb6c:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1cb6f:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1cb72:	48 89 d0             	mov    rax,rdx
   1cb75:	48 c1 e0 02          	shl    rax,0x2
   1cb79:	48 01 d0             	add    rax,rdx
   1cb7c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1cb84:	48 01 d0             	add    rax,rdx
   1cb87:	48 89 ca             	mov    rdx,rcx
   1cb8a:	48 c1 e2 02          	shl    rdx,0x2
   1cb8e:	48 01 ca             	add    rdx,rcx
   1cb91:	48 01 d0             	add    rax,rdx
   1cb94:	4c 01 c0             	add    rax,r8
   1cb97:	48 05 9e 00 00 00    	add    rax,0x9e
   1cb9d:	48 89 34 c7          	mov    QWORD PTR [rdi+rax*8],rsi
   1cba1:	e9 bf 00 00 00       	jmp    1cc65 <get_scaled_exp_params+0x4bf0>
   1cba6:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
   1cbaa:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1cbad:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1cbb0:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1cbb3:	48 89 d0             	mov    rax,rdx
   1cbb6:	48 c1 e0 02          	shl    rax,0x2
   1cbba:	48 01 d0             	add    rax,rdx
   1cbbd:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1cbc5:	48 01 d0             	add    rax,rdx
   1cbc8:	48 89 ca             	mov    rdx,rcx
   1cbcb:	48 c1 e2 02          	shl    rdx,0x2
   1cbcf:	48 01 ca             	add    rdx,rcx
   1cbd2:	48 01 d0             	add    rax,rdx
   1cbd5:	48 01 f8             	add    rax,rdi
   1cbd8:	48 05 9e 00 00 00    	add    rax,0x9e
   1cbde:	f2 0f 10 05 22 54 01 00 	movsd  xmm0,QWORD PTR [rip+0x15422]        # 32008 <Law_and_Order+0x5c8>
   1cbe6:	f2 0f 11 04 c6       	movsd  QWORD PTR [rsi+rax*8],xmm0
   1cbeb:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
   1cbef:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1cbf2:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1cbf5:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1cbf8:	48 89 d0             	mov    rax,rdx
   1cbfb:	48 c1 e0 02          	shl    rax,0x2
   1cbff:	48 01 d0             	add    rax,rdx
   1cc02:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1cc0a:	48 01 d0             	add    rax,rdx
   1cc0d:	48 89 ca             	mov    rdx,rcx
   1cc10:	48 c1 e2 02          	shl    rdx,0x2
   1cc14:	48 01 ca             	add    rdx,rcx
   1cc17:	48 01 d0             	add    rax,rdx
   1cc1a:	48 01 f8             	add    rax,rdi
   1cc1d:	48 05 9e 00 00 00    	add    rax,0x9e
   1cc23:	f2 0f 10 04 c6       	movsd  xmm0,QWORD PTR [rsi+rax*8]
   1cc28:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
   1cc2c:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1cc2f:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1cc32:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1cc35:	48 89 d0             	mov    rax,rdx
   1cc38:	48 c1 e0 02          	shl    rax,0x2
   1cc3c:	48 01 d0             	add    rax,rdx
   1cc3f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1cc47:	48 01 d0             	add    rax,rdx
   1cc4a:	48 89 ca             	mov    rdx,rcx
   1cc4d:	48 c1 e2 02          	shl    rdx,0x2
   1cc51:	48 01 ca             	add    rdx,rcx
   1cc54:	48 01 d0             	add    rax,rdx
   1cc57:	48 01 f8             	add    rax,rdi
   1cc5a:	48 05 86 04 00 00    	add    rax,0x486
   1cc60:	f2 0f 11 04 c6       	movsd  QWORD PTR [rsi+rax*8],xmm0
   1cc65:	83 45 a8 01          	add    DWORD PTR [rbp-0x58],0x1
   1cc69:	83 7d a8 04          	cmp    DWORD PTR [rbp-0x58],0x4
   1cc6d:	0f 86 51 da ff ff    	jbe    1a6c4 <get_scaled_exp_params+0x264f>
   1cc73:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
   1cc77:	83 7d a4 04          	cmp    DWORD PTR [rbp-0x5c],0x4
   1cc7b:	0f 86 37 da ff ff    	jbe    1a6b8 <get_scaled_exp_params+0x2643>
   1cc81:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
   1cc85:	83 7d a0 07          	cmp    DWORD PTR [rbp-0x60],0x7
   1cc89:	0f 86 1d da ff ff    	jbe    1a6ac <get_scaled_exp_params+0x2637>
   1cc8f:	c7 45 a0 00 00 00 00 	mov    DWORD PTR [rbp-0x60],0x0
   1cc96:	e9 5f 03 00 00       	jmp    1cffa <get_scaled_exp_params+0x4f85>
   1cc9b:	c7 45 a4 00 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x0
   1cca2:	e9 45 03 00 00       	jmp    1cfec <get_scaled_exp_params+0x4f77>
   1cca7:	c7 45 a8 00 00 00 00 	mov    DWORD PTR [rbp-0x58],0x0
   1ccae:	e9 2b 03 00 00       	jmp    1cfde <get_scaled_exp_params+0x4f69>
   1ccb3:	c7 45 ac 00 00 00 00 	mov    DWORD PTR [rbp-0x54],0x0
   1ccba:	e9 11 03 00 00       	jmp    1cfd0 <get_scaled_exp_params+0x4f5b>
   1ccbf:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1ccc3:	0f 85 4c 01 00 00    	jne    1ce15 <get_scaled_exp_params+0x4da0>
   1ccc9:	8b 7d ac             	mov    edi,DWORD PTR [rbp-0x54]
   1cccc:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
   1cccf:	8b 4d a8             	mov    ecx,DWORD PTR [rbp-0x58]
   1ccd2:	8b 75 a0             	mov    esi,DWORD PTR [rbp-0x60]
   1ccd5:	48 89 c2             	mov    rdx,rax
   1ccd8:	48 c1 e2 02          	shl    rdx,0x2
   1ccdc:	48 01 c2             	add    rdx,rax
   1ccdf:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   1cce7:	48 01 c2             	add    rdx,rax
   1ccea:	48 89 f0             	mov    rax,rsi
   1cced:	48 c1 e0 02          	shl    rax,0x2
   1ccf1:	48 01 f0             	add    rax,rsi
   1ccf4:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   1ccfc:	48 01 f0             	add    rax,rsi
   1ccff:	48 c1 e0 03          	shl    rax,0x3
   1cd03:	48 01 c2             	add    rdx,rax
   1cd06:	48 89 c8             	mov    rax,rcx
   1cd09:	48 c1 e0 02          	shl    rax,0x2
   1cd0d:	48 01 c8             	add    rax,rcx
   1cd10:	48 01 d0             	add    rax,rdx
   1cd13:	48 01 f8             	add    rax,rdi
   1cd16:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1cd1e:	48 8d 05 bb 12 1d 00 	lea    rax,[rip+0x1d12bb]        # 1edfe0 <int11_dH>
   1cd25:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1cd28:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1cd2c:	8b 7d ac             	mov    edi,DWORD PTR [rbp-0x54]
   1cd2f:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
   1cd32:	8b 4d a8             	mov    ecx,DWORD PTR [rbp-0x58]
   1cd35:	8b 75 a0             	mov    esi,DWORD PTR [rbp-0x60]
   1cd38:	48 89 c2             	mov    rdx,rax
   1cd3b:	48 c1 e2 02          	shl    rdx,0x2
   1cd3f:	48 01 c2             	add    rdx,rax
   1cd42:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   1cd4a:	48 01 c2             	add    rdx,rax
   1cd4d:	48 89 f0             	mov    rax,rsi
   1cd50:	48 c1 e0 02          	shl    rax,0x2
   1cd54:	48 01 f0             	add    rax,rsi
   1cd57:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   1cd5f:	48 01 f0             	add    rax,rsi
   1cd62:	48 c1 e0 03          	shl    rax,0x3
   1cd66:	48 01 c2             	add    rdx,rax
   1cd69:	48 89 c8             	mov    rax,rcx
   1cd6c:	48 c1 e0 02          	shl    rax,0x2
   1cd70:	48 01 c8             	add    rax,rcx
   1cd73:	48 01 d0             	add    rax,rdx
   1cd76:	48 01 f8             	add    rax,rdi
   1cd79:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1cd81:	48 8d 05 58 12 1d 00 	lea    rax,[rip+0x1d1258]        # 1edfe0 <int11_dH>
   1cd88:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
   1cd8b:	44 8b 45 ac          	mov    r8d,DWORD PTR [rbp-0x54]
   1cd8f:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
   1cd92:	8b 4d a8             	mov    ecx,DWORD PTR [rbp-0x58]
   1cd95:	8b 75 a0             	mov    esi,DWORD PTR [rbp-0x60]
   1cd98:	48 89 c2             	mov    rdx,rax
   1cd9b:	48 c1 e2 02          	shl    rdx,0x2
   1cd9f:	48 01 c2             	add    rdx,rax
   1cda2:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   1cdaa:	48 01 c2             	add    rdx,rax
   1cdad:	48 89 f0             	mov    rax,rsi
   1cdb0:	48 c1 e0 02          	shl    rax,0x2
   1cdb4:	48 01 f0             	add    rax,rsi
   1cdb7:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   1cdbf:	48 01 f0             	add    rax,rsi
   1cdc2:	48 c1 e0 03          	shl    rax,0x3
   1cdc6:	48 01 c2             	add    rdx,rax
   1cdc9:	48 89 c8             	mov    rax,rcx
   1cdcc:	48 c1 e0 02          	shl    rax,0x2
   1cdd0:	48 01 c8             	add    rax,rcx
   1cdd3:	48 01 d0             	add    rax,rdx
   1cdd6:	4c 01 c0             	add    rax,r8
   1cdd9:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1cde1:	48 8d 05 f8 f8 1c 00 	lea    rax,[rip+0x1cf8f8]        # 1ec6e0 <int11_37>
   1cde8:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1cdeb:	29 c7                	sub    edi,eax
   1cded:	89 f8                	mov    eax,edi
   1cdef:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1cdf3:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1cdf8:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1cdfc:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1ce00:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1ce04:	f3 0f 7e 0d 24 52 01 00 	movq   xmm1,QWORD PTR [rip+0x15224]        # 32030 <Law_and_Order+0x5f0>
   1ce0c:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1ce10:	e9 3f 01 00 00       	jmp    1cf54 <get_scaled_exp_params+0x4edf>
   1ce15:	8b 7d ac             	mov    edi,DWORD PTR [rbp-0x54]
   1ce18:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
   1ce1b:	8b 4d a8             	mov    ecx,DWORD PTR [rbp-0x58]
   1ce1e:	8b 75 a0             	mov    esi,DWORD PTR [rbp-0x60]
   1ce21:	48 89 c2             	mov    rdx,rax
   1ce24:	48 c1 e2 02          	shl    rdx,0x2
   1ce28:	48 01 c2             	add    rdx,rax
   1ce2b:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   1ce33:	48 01 c2             	add    rdx,rax
   1ce36:	48 89 f0             	mov    rax,rsi
   1ce39:	48 c1 e0 02          	shl    rax,0x2
   1ce3d:	48 01 f0             	add    rax,rsi
   1ce40:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   1ce48:	48 01 f0             	add    rax,rsi
   1ce4b:	48 c1 e0 03          	shl    rax,0x3
   1ce4f:	48 01 c2             	add    rdx,rax
   1ce52:	48 89 c8             	mov    rax,rcx
   1ce55:	48 c1 e0 02          	shl    rax,0x2
   1ce59:	48 01 c8             	add    rax,rcx
   1ce5c:	48 01 d0             	add    rax,rdx
   1ce5f:	48 01 f8             	add    rax,rdi
   1ce62:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ce6a:	48 8d 05 6f 11 1d 00 	lea    rax,[rip+0x1d116f]        # 1edfe0 <int11_dH>
   1ce71:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1ce74:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1ce78:	8b 7d ac             	mov    edi,DWORD PTR [rbp-0x54]
   1ce7b:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
   1ce7e:	8b 4d a8             	mov    ecx,DWORD PTR [rbp-0x58]
   1ce81:	8b 75 a0             	mov    esi,DWORD PTR [rbp-0x60]
   1ce84:	48 89 c2             	mov    rdx,rax
   1ce87:	48 c1 e2 02          	shl    rdx,0x2
   1ce8b:	48 01 c2             	add    rdx,rax
   1ce8e:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   1ce96:	48 01 c2             	add    rdx,rax
   1ce99:	48 89 f0             	mov    rax,rsi
   1ce9c:	48 c1 e0 02          	shl    rax,0x2
   1cea0:	48 01 f0             	add    rax,rsi
   1cea3:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   1ceab:	48 01 f0             	add    rax,rsi
   1ceae:	48 c1 e0 03          	shl    rax,0x3
   1ceb2:	48 01 c2             	add    rdx,rax
   1ceb5:	48 89 c8             	mov    rax,rcx
   1ceb8:	48 c1 e0 02          	shl    rax,0x2
   1cebc:	48 01 c8             	add    rax,rcx
   1cebf:	48 01 d0             	add    rax,rdx
   1cec2:	48 01 f8             	add    rax,rdi
   1cec5:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1cecd:	48 8d 05 0c 11 1d 00 	lea    rax,[rip+0x1d110c]        # 1edfe0 <int11_dH>
   1ced4:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
   1ced7:	44 8b 45 ac          	mov    r8d,DWORD PTR [rbp-0x54]
   1cedb:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
   1cede:	8b 4d a8             	mov    ecx,DWORD PTR [rbp-0x58]
   1cee1:	8b 75 a0             	mov    esi,DWORD PTR [rbp-0x60]
   1cee4:	48 89 c2             	mov    rdx,rax
   1cee7:	48 c1 e2 02          	shl    rdx,0x2
   1ceeb:	48 01 c2             	add    rdx,rax
   1ceee:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   1cef6:	48 01 c2             	add    rdx,rax
   1cef9:	48 89 f0             	mov    rax,rsi
   1cefc:	48 c1 e0 02          	shl    rax,0x2
   1cf00:	48 01 f0             	add    rax,rsi
   1cf03:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   1cf0b:	48 01 f0             	add    rax,rsi
   1cf0e:	48 c1 e0 03          	shl    rax,0x3
   1cf12:	48 01 c2             	add    rdx,rax
   1cf15:	48 89 c8             	mov    rax,rcx
   1cf18:	48 c1 e0 02          	shl    rax,0x2
   1cf1c:	48 01 c8             	add    rax,rcx
   1cf1f:	48 01 d0             	add    rax,rdx
   1cf22:	4c 01 c0             	add    rax,r8
   1cf25:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1cf2d:	48 8d 05 ac f7 1c 00 	lea    rax,[rip+0x1cf7ac]        # 1ec6e0 <int11_37>
   1cf34:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1cf37:	29 c7                	sub    edi,eax
   1cf39:	89 f8                	mov    eax,edi
   1cf3b:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1cf3f:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1cf44:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1cf48:	f3 0f 7e 0d e0 50 01 00 	movq   xmm1,QWORD PTR [rip+0x150e0]        # 32030 <Law_and_Order+0x5f0>
   1cf50:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1cf54:	f2 0f 10 0d fc 50 01 00 	movsd  xmm1,QWORD PTR [rip+0x150fc]        # 32058 <Law_and_Order+0x618>
   1cf5c:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1cf60:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1cf65:	e8 06 6b fe ff       	call   3a70 <exp@plt>
   1cf6a:	66 48 0f 7e c7       	movq   rdi,xmm0
   1cf6f:	4c 8b 45 c0          	mov    r8,QWORD PTR [rbp-0x40]
   1cf73:	44 8b 4d ac          	mov    r9d,DWORD PTR [rbp-0x54]
   1cf77:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
   1cf7a:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1cf7d:	8b 4d a0             	mov    ecx,DWORD PTR [rbp-0x60]
   1cf80:	48 89 d0             	mov    rax,rdx
   1cf83:	48 c1 e0 02          	shl    rax,0x2
   1cf87:	48 01 d0             	add    rax,rdx
   1cf8a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1cf92:	48 01 d0             	add    rax,rdx
   1cf95:	48 89 f2             	mov    rdx,rsi
   1cf98:	48 c1 e2 02          	shl    rdx,0x2
   1cf9c:	48 01 f2             	add    rdx,rsi
   1cf9f:	48 8d 34 10          	lea    rsi,[rax+rdx*1]
   1cfa3:	48 89 c8             	mov    rax,rcx
   1cfa6:	48 c1 e0 02          	shl    rax,0x2
   1cfaa:	48 01 c8             	add    rax,rcx
   1cfad:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1cfb5:	48 01 d0             	add    rax,rdx
   1cfb8:	48 c1 e0 03          	shl    rax,0x3
   1cfbc:	48 01 f0             	add    rax,rsi
   1cfbf:	4c 01 c8             	add    rax,r9
   1cfc2:	48 05 9e 05 00 00    	add    rax,0x59e
   1cfc8:	49 89 3c c0          	mov    QWORD PTR [r8+rax*8],rdi
   1cfcc:	83 45 ac 01          	add    DWORD PTR [rbp-0x54],0x1
   1cfd0:	83 7d ac 04          	cmp    DWORD PTR [rbp-0x54],0x4
   1cfd4:	0f 86 e5 fc ff ff    	jbe    1ccbf <get_scaled_exp_params+0x4c4a>
   1cfda:	83 45 a8 01          	add    DWORD PTR [rbp-0x58],0x1
   1cfde:	83 7d a8 04          	cmp    DWORD PTR [rbp-0x58],0x4
   1cfe2:	0f 86 cb fc ff ff    	jbe    1ccb3 <get_scaled_exp_params+0x4c3e>
   1cfe8:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
   1cfec:	83 7d a4 07          	cmp    DWORD PTR [rbp-0x5c],0x7
   1cff0:	0f 86 b1 fc ff ff    	jbe    1cca7 <get_scaled_exp_params+0x4c32>
   1cff6:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
   1cffa:	83 7d a0 07          	cmp    DWORD PTR [rbp-0x60],0x7
   1cffe:	0f 86 97 fc ff ff    	jbe    1cc9b <get_scaled_exp_params+0x4c26>
   1d004:	c7 45 a0 00 00 00 00 	mov    DWORD PTR [rbp-0x60],0x0
   1d00b:	e9 ba 03 00 00       	jmp    1d3ca <get_scaled_exp_params+0x5355>
   1d010:	c7 45 a4 00 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x0
   1d017:	e9 a0 03 00 00       	jmp    1d3bc <get_scaled_exp_params+0x5347>
   1d01c:	c7 45 a8 00 00 00 00 	mov    DWORD PTR [rbp-0x58],0x0
   1d023:	e9 86 03 00 00       	jmp    1d3ae <get_scaled_exp_params+0x5339>
   1d028:	c7 45 ac 00 00 00 00 	mov    DWORD PTR [rbp-0x54],0x0
   1d02f:	e9 6c 03 00 00       	jmp    1d3a0 <get_scaled_exp_params+0x532b>
   1d034:	c7 45 b0 00 00 00 00 	mov    DWORD PTR [rbp-0x50],0x0
   1d03b:	e9 52 03 00 00       	jmp    1d392 <get_scaled_exp_params+0x531d>
   1d040:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1d044:	0f 85 69 01 00 00    	jne    1d1b3 <get_scaled_exp_params+0x513e>
   1d04a:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
   1d04d:	48 63 f8             	movsxd rdi,eax
   1d050:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1d053:	8b 4d ac             	mov    ecx,DWORD PTR [rbp-0x54]
   1d056:	44 8b 45 a0          	mov    r8d,DWORD PTR [rbp-0x60]
   1d05a:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
   1d05d:	48 89 f0             	mov    rax,rsi
   1d060:	48 c1 e0 02          	shl    rax,0x2
   1d064:	48 01 f0             	add    rax,rsi
   1d067:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   1d06f:	48 01 f0             	add    rax,rsi
   1d072:	49 69 f0 e8 03 00 00 	imul   rsi,r8,0x3e8
   1d079:	48 01 c6             	add    rsi,rax
   1d07c:	48 89 d0             	mov    rax,rdx
   1d07f:	48 c1 e0 05          	shl    rax,0x5
   1d083:	48 29 d0             	sub    rax,rdx
   1d086:	48 c1 e0 02          	shl    rax,0x2
   1d08a:	48 01 d0             	add    rax,rdx
   1d08d:	48 8d 14 06          	lea    rdx,[rsi+rax*1]
   1d091:	48 89 c8             	mov    rax,rcx
   1d094:	48 c1 e0 02          	shl    rax,0x2
   1d098:	48 01 c8             	add    rax,rcx
   1d09b:	48 01 d0             	add    rax,rdx
   1d09e:	48 01 f8             	add    rax,rdi
   1d0a1:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1d0a9:	48 8d 05 30 a5 1d 00 	lea    rax,[rip+0x1da530]        # 1f75e0 <int21_dH>
   1d0b0:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1d0b3:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1d0b7:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
   1d0ba:	48 63 f8             	movsxd rdi,eax
   1d0bd:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1d0c0:	8b 4d ac             	mov    ecx,DWORD PTR [rbp-0x54]
   1d0c3:	44 8b 45 a0          	mov    r8d,DWORD PTR [rbp-0x60]
   1d0c7:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
   1d0ca:	48 89 f0             	mov    rax,rsi
   1d0cd:	48 c1 e0 02          	shl    rax,0x2
   1d0d1:	48 01 f0             	add    rax,rsi
   1d0d4:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   1d0dc:	48 01 f0             	add    rax,rsi
   1d0df:	49 69 f0 e8 03 00 00 	imul   rsi,r8,0x3e8
   1d0e6:	48 01 c6             	add    rsi,rax
   1d0e9:	48 89 d0             	mov    rax,rdx
   1d0ec:	48 c1 e0 05          	shl    rax,0x5
   1d0f0:	48 29 d0             	sub    rax,rdx
   1d0f3:	48 c1 e0 02          	shl    rax,0x2
   1d0f7:	48 01 d0             	add    rax,rdx
   1d0fa:	48 8d 14 06          	lea    rdx,[rsi+rax*1]
   1d0fe:	48 89 c8             	mov    rax,rcx
   1d101:	48 c1 e0 02          	shl    rax,0x2
   1d105:	48 01 c8             	add    rax,rcx
   1d108:	48 01 d0             	add    rax,rdx
   1d10b:	48 01 f8             	add    rax,rdi
   1d10e:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1d116:	48 8d 05 c3 a4 1d 00 	lea    rax,[rip+0x1da4c3]        # 1f75e0 <int21_dH>
   1d11d:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
   1d120:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
   1d123:	4c 63 c0             	movsxd r8,eax
   1d126:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1d129:	8b 4d ac             	mov    ecx,DWORD PTR [rbp-0x54]
   1d12c:	44 8b 4d a0          	mov    r9d,DWORD PTR [rbp-0x60]
   1d130:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
   1d133:	48 89 f0             	mov    rax,rsi
   1d136:	48 c1 e0 02          	shl    rax,0x2
   1d13a:	48 01 f0             	add    rax,rsi
   1d13d:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   1d145:	48 01 f0             	add    rax,rsi
   1d148:	49 69 f1 e8 03 00 00 	imul   rsi,r9,0x3e8
   1d14f:	48 01 c6             	add    rsi,rax
   1d152:	48 89 d0             	mov    rax,rdx
   1d155:	48 c1 e0 05          	shl    rax,0x5
   1d159:	48 29 d0             	sub    rax,rdx
   1d15c:	48 c1 e0 02          	shl    rax,0x2
   1d160:	48 01 d0             	add    rax,rdx
   1d163:	48 8d 14 06          	lea    rdx,[rsi+rax*1]
   1d167:	48 89 c8             	mov    rax,rcx
   1d16a:	48 c1 e0 02          	shl    rax,0x2
   1d16e:	48 01 c8             	add    rax,rcx
   1d171:	48 01 d0             	add    rax,rdx
   1d174:	4c 01 c0             	add    rax,r8
   1d177:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1d17f:	48 8d 05 5a 27 1d 00 	lea    rax,[rip+0x1d275a]        # 1ef8e0 <int21_37>
   1d186:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1d189:	29 c7                	sub    edi,eax
   1d18b:	89 f8                	mov    eax,edi
   1d18d:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1d191:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1d196:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1d19a:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1d19e:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1d1a2:	f3 0f 7e 0d 86 4e 01 00 	movq   xmm1,QWORD PTR [rip+0x14e86]        # 32030 <Law_and_Order+0x5f0>
   1d1aa:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1d1ae:	e9 5c 01 00 00       	jmp    1d30f <get_scaled_exp_params+0x529a>
   1d1b3:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
   1d1b6:	48 63 f8             	movsxd rdi,eax
   1d1b9:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1d1bc:	8b 4d ac             	mov    ecx,DWORD PTR [rbp-0x54]
   1d1bf:	44 8b 45 a0          	mov    r8d,DWORD PTR [rbp-0x60]
   1d1c3:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
   1d1c6:	48 89 f0             	mov    rax,rsi
   1d1c9:	48 c1 e0 02          	shl    rax,0x2
   1d1cd:	48 01 f0             	add    rax,rsi
   1d1d0:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   1d1d8:	48 01 f0             	add    rax,rsi
   1d1db:	49 69 f0 e8 03 00 00 	imul   rsi,r8,0x3e8
   1d1e2:	48 01 c6             	add    rsi,rax
   1d1e5:	48 89 d0             	mov    rax,rdx
   1d1e8:	48 c1 e0 05          	shl    rax,0x5
   1d1ec:	48 29 d0             	sub    rax,rdx
   1d1ef:	48 c1 e0 02          	shl    rax,0x2
   1d1f3:	48 01 d0             	add    rax,rdx
   1d1f6:	48 8d 14 06          	lea    rdx,[rsi+rax*1]
   1d1fa:	48 89 c8             	mov    rax,rcx
   1d1fd:	48 c1 e0 02          	shl    rax,0x2
   1d201:	48 01 c8             	add    rax,rcx
   1d204:	48 01 d0             	add    rax,rdx
   1d207:	48 01 f8             	add    rax,rdi
   1d20a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1d212:	48 8d 05 c7 a3 1d 00 	lea    rax,[rip+0x1da3c7]        # 1f75e0 <int21_dH>
   1d219:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1d21c:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1d220:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
   1d223:	48 63 f8             	movsxd rdi,eax
   1d226:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1d229:	8b 4d ac             	mov    ecx,DWORD PTR [rbp-0x54]
   1d22c:	44 8b 45 a0          	mov    r8d,DWORD PTR [rbp-0x60]
   1d230:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
   1d233:	48 89 f0             	mov    rax,rsi
   1d236:	48 c1 e0 02          	shl    rax,0x2
   1d23a:	48 01 f0             	add    rax,rsi
   1d23d:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   1d245:	48 01 f0             	add    rax,rsi
   1d248:	49 69 f0 e8 03 00 00 	imul   rsi,r8,0x3e8
   1d24f:	48 01 c6             	add    rsi,rax
   1d252:	48 89 d0             	mov    rax,rdx
   1d255:	48 c1 e0 05          	shl    rax,0x5
   1d259:	48 29 d0             	sub    rax,rdx
   1d25c:	48 c1 e0 02          	shl    rax,0x2
   1d260:	48 01 d0             	add    rax,rdx
   1d263:	48 8d 14 06          	lea    rdx,[rsi+rax*1]
   1d267:	48 89 c8             	mov    rax,rcx
   1d26a:	48 c1 e0 02          	shl    rax,0x2
   1d26e:	48 01 c8             	add    rax,rcx
   1d271:	48 01 d0             	add    rax,rdx
   1d274:	48 01 f8             	add    rax,rdi
   1d277:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1d27f:	48 8d 05 5a a3 1d 00 	lea    rax,[rip+0x1da35a]        # 1f75e0 <int21_dH>
   1d286:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
   1d289:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
   1d28c:	4c 63 c0             	movsxd r8,eax
   1d28f:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1d292:	8b 4d ac             	mov    ecx,DWORD PTR [rbp-0x54]
   1d295:	44 8b 4d a0          	mov    r9d,DWORD PTR [rbp-0x60]
   1d299:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
   1d29c:	48 89 f0             	mov    rax,rsi
   1d29f:	48 c1 e0 02          	shl    rax,0x2
   1d2a3:	48 01 f0             	add    rax,rsi
   1d2a6:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   1d2ae:	48 01 f0             	add    rax,rsi
   1d2b1:	49 69 f1 e8 03 00 00 	imul   rsi,r9,0x3e8
   1d2b8:	48 01 c6             	add    rsi,rax
   1d2bb:	48 89 d0             	mov    rax,rdx
   1d2be:	48 c1 e0 05          	shl    rax,0x5
   1d2c2:	48 29 d0             	sub    rax,rdx
   1d2c5:	48 c1 e0 02          	shl    rax,0x2
   1d2c9:	48 01 d0             	add    rax,rdx
   1d2cc:	48 8d 14 06          	lea    rdx,[rsi+rax*1]
   1d2d0:	48 89 c8             	mov    rax,rcx
   1d2d3:	48 c1 e0 02          	shl    rax,0x2
   1d2d7:	48 01 c8             	add    rax,rcx
   1d2da:	48 01 d0             	add    rax,rdx
   1d2dd:	4c 01 c0             	add    rax,r8
   1d2e0:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1d2e8:	48 8d 05 f1 25 1d 00 	lea    rax,[rip+0x1d25f1]        # 1ef8e0 <int21_37>
   1d2ef:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1d2f2:	29 c7                	sub    edi,eax
   1d2f4:	89 f8                	mov    eax,edi
   1d2f6:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1d2fa:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1d2ff:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1d303:	f3 0f 7e 0d 25 4d 01 00 	movq   xmm1,QWORD PTR [rip+0x14d25]        # 32030 <Law_and_Order+0x5f0>
   1d30b:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1d30f:	f2 0f 10 0d 41 4d 01 00 	movsd  xmm1,QWORD PTR [rip+0x14d41]        # 32058 <Law_and_Order+0x618>
   1d317:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1d31b:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1d320:	e8 4b 67 fe ff       	call   3a70 <exp@plt>
   1d325:	66 48 0f 7e c7       	movq   rdi,xmm0
   1d32a:	4c 8b 45 c0          	mov    r8,QWORD PTR [rbp-0x40]
   1d32e:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
   1d331:	4c 63 c8             	movsxd r9,eax
   1d334:	8b 55 a8             	mov    edx,DWORD PTR [rbp-0x58]
   1d337:	8b 75 ac             	mov    esi,DWORD PTR [rbp-0x54]
   1d33a:	44 8b 55 a0          	mov    r10d,DWORD PTR [rbp-0x60]
   1d33e:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1d341:	48 89 d0             	mov    rax,rdx
   1d344:	48 c1 e0 02          	shl    rax,0x2
   1d348:	48 01 d0             	add    rax,rdx
   1d34b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1d353:	48 01 d0             	add    rax,rdx
   1d356:	48 89 f2             	mov    rdx,rsi
   1d359:	48 c1 e2 02          	shl    rdx,0x2
   1d35d:	48 01 f2             	add    rdx,rsi
   1d360:	48 01 c2             	add    rdx,rax
   1d363:	48 89 c8             	mov    rax,rcx
   1d366:	48 c1 e0 05          	shl    rax,0x5
   1d36a:	48 29 c8             	sub    rax,rcx
   1d36d:	48 c1 e0 02          	shl    rax,0x2
   1d371:	48 01 c8             	add    rax,rcx
   1d374:	48 01 c2             	add    rdx,rax
   1d377:	49 69 c2 e8 03 00 00 	imul   rax,r10,0x3e8
   1d37e:	48 01 d0             	add    rax,rdx
   1d381:	4c 01 c8             	add    rax,r9
   1d384:	48 05 de 0b 00 00    	add    rax,0xbde
   1d38a:	49 89 3c c0          	mov    QWORD PTR [r8+rax*8],rdi
   1d38e:	83 45 b0 01          	add    DWORD PTR [rbp-0x50],0x1
   1d392:	83 7d b0 04          	cmp    DWORD PTR [rbp-0x50],0x4
   1d396:	0f 8e a4 fc ff ff    	jle    1d040 <get_scaled_exp_params+0x4fcb>
   1d39c:	83 45 ac 01          	add    DWORD PTR [rbp-0x54],0x1
   1d3a0:	83 7d ac 04          	cmp    DWORD PTR [rbp-0x54],0x4
   1d3a4:	0f 86 8a fc ff ff    	jbe    1d034 <get_scaled_exp_params+0x4fbf>
   1d3aa:	83 45 a8 01          	add    DWORD PTR [rbp-0x58],0x1
   1d3ae:	83 7d a8 04          	cmp    DWORD PTR [rbp-0x58],0x4
   1d3b2:	0f 86 70 fc ff ff    	jbe    1d028 <get_scaled_exp_params+0x4fb3>
   1d3b8:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
   1d3bc:	83 7d a4 07          	cmp    DWORD PTR [rbp-0x5c],0x7
   1d3c0:	0f 86 56 fc ff ff    	jbe    1d01c <get_scaled_exp_params+0x4fa7>
   1d3c6:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
   1d3ca:	83 7d a0 07          	cmp    DWORD PTR [rbp-0x60],0x7
   1d3ce:	0f 86 3c fc ff ff    	jbe    1d010 <get_scaled_exp_params+0x4f9b>
   1d3d4:	c7 45 a0 00 00 00 00 	mov    DWORD PTR [rbp-0x60],0x0
   1d3db:	e9 52 04 00 00       	jmp    1d832 <get_scaled_exp_params+0x57bd>
   1d3e0:	c7 45 a4 00 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x0
   1d3e7:	e9 38 04 00 00       	jmp    1d824 <get_scaled_exp_params+0x57af>
   1d3ec:	c7 45 a8 00 00 00 00 	mov    DWORD PTR [rbp-0x58],0x0
   1d3f3:	e9 1e 04 00 00       	jmp    1d816 <get_scaled_exp_params+0x57a1>
   1d3f8:	c7 45 ac 00 00 00 00 	mov    DWORD PTR [rbp-0x54],0x0
   1d3ff:	e9 04 04 00 00       	jmp    1d808 <get_scaled_exp_params+0x5793>
   1d404:	c7 45 b4 00 00 00 00 	mov    DWORD PTR [rbp-0x4c],0x0
   1d40b:	e9 ea 03 00 00       	jmp    1d7fa <get_scaled_exp_params+0x5785>
   1d410:	c7 45 b8 00 00 00 00 	mov    DWORD PTR [rbp-0x48],0x0
   1d417:	e9 d0 03 00 00       	jmp    1d7ec <get_scaled_exp_params+0x5777>
   1d41c:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1d420:	0f 85 9f 01 00 00    	jne    1d5c5 <get_scaled_exp_params+0x5550>
   1d426:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
   1d429:	48 63 f8             	movsxd rdi,eax
   1d42c:	8b 75 ac             	mov    esi,DWORD PTR [rbp-0x54]
   1d42f:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
   1d432:	48 63 c8             	movsxd rcx,eax
   1d435:	44 8b 45 a4          	mov    r8d,DWORD PTR [rbp-0x5c]
   1d439:	8b 55 a8             	mov    edx,DWORD PTR [rbp-0x58]
   1d43c:	44 8b 4d a0          	mov    r9d,DWORD PTR [rbp-0x60]
   1d440:	48 89 f0             	mov    rax,rsi
   1d443:	48 c1 e0 02          	shl    rax,0x2
   1d447:	48 01 f0             	add    rax,rsi
   1d44a:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   1d452:	48 01 f0             	add    rax,rsi
   1d455:	49 69 f1 88 13 00 00 	imul   rsi,r9,0x1388
   1d45c:	48 01 c6             	add    rsi,rax
   1d45f:	48 89 c8             	mov    rax,rcx
   1d462:	48 c1 e0 02          	shl    rax,0x2
   1d466:	48 01 c8             	add    rax,rcx
   1d469:	48 8d 0c 06          	lea    rcx,[rsi+rax*1]
   1d46d:	48 89 d0             	mov    rax,rdx
   1d470:	48 c1 e0 05          	shl    rax,0x5
   1d474:	48 29 d0             	sub    rax,rdx
   1d477:	48 c1 e0 02          	shl    rax,0x2
   1d47b:	48 01 d0             	add    rax,rdx
   1d47e:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   1d482:	49 69 c0 71 02 00 00 	imul   rax,r8,0x271
   1d489:	48 01 d0             	add    rax,rdx
   1d48c:	48 01 f8             	add    rax,rdi
   1d48f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1d497:	48 8d 05 42 8f 20 00 	lea    rax,[rip+0x208f42]        # 2263e0 <int22_dH>
   1d49e:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1d4a1:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1d4a5:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
   1d4a8:	48 63 f8             	movsxd rdi,eax
   1d4ab:	8b 75 ac             	mov    esi,DWORD PTR [rbp-0x54]
   1d4ae:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
   1d4b1:	48 63 c8             	movsxd rcx,eax
   1d4b4:	44 8b 45 a4          	mov    r8d,DWORD PTR [rbp-0x5c]
   1d4b8:	8b 55 a8             	mov    edx,DWORD PTR [rbp-0x58]
   1d4bb:	44 8b 4d a0          	mov    r9d,DWORD PTR [rbp-0x60]
   1d4bf:	48 89 f0             	mov    rax,rsi
   1d4c2:	48 c1 e0 02          	shl    rax,0x2
   1d4c6:	48 01 f0             	add    rax,rsi
   1d4c9:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   1d4d1:	48 01 f0             	add    rax,rsi
   1d4d4:	49 69 f1 88 13 00 00 	imul   rsi,r9,0x1388
   1d4db:	48 01 c6             	add    rsi,rax
   1d4de:	48 89 c8             	mov    rax,rcx
   1d4e1:	48 c1 e0 02          	shl    rax,0x2
   1d4e5:	48 01 c8             	add    rax,rcx
   1d4e8:	48 8d 0c 06          	lea    rcx,[rsi+rax*1]
   1d4ec:	48 89 d0             	mov    rax,rdx
   1d4ef:	48 c1 e0 05          	shl    rax,0x5
   1d4f3:	48 29 d0             	sub    rax,rdx
   1d4f6:	48 c1 e0 02          	shl    rax,0x2
   1d4fa:	48 01 d0             	add    rax,rdx
   1d4fd:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   1d501:	49 69 c0 71 02 00 00 	imul   rax,r8,0x271
   1d508:	48 01 d0             	add    rax,rdx
   1d50b:	48 01 f8             	add    rax,rdi
   1d50e:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1d516:	48 8d 05 c3 8e 20 00 	lea    rax,[rip+0x208ec3]        # 2263e0 <int22_dH>
   1d51d:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
   1d520:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
   1d523:	4c 63 c0             	movsxd r8,eax
   1d526:	8b 75 ac             	mov    esi,DWORD PTR [rbp-0x54]
   1d529:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
   1d52c:	48 63 c8             	movsxd rcx,eax
   1d52f:	44 8b 4d a4          	mov    r9d,DWORD PTR [rbp-0x5c]
   1d533:	8b 55 a8             	mov    edx,DWORD PTR [rbp-0x58]
   1d536:	44 8b 55 a0          	mov    r10d,DWORD PTR [rbp-0x60]
   1d53a:	48 89 f0             	mov    rax,rsi
   1d53d:	48 c1 e0 02          	shl    rax,0x2
   1d541:	48 01 f0             	add    rax,rsi
   1d544:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   1d54c:	48 01 f0             	add    rax,rsi
   1d54f:	49 69 f2 88 13 00 00 	imul   rsi,r10,0x1388
   1d556:	48 01 c6             	add    rsi,rax
   1d559:	48 89 c8             	mov    rax,rcx
   1d55c:	48 c1 e0 02          	shl    rax,0x2
   1d560:	48 01 c8             	add    rax,rcx
   1d563:	48 8d 0c 06          	lea    rcx,[rsi+rax*1]
   1d567:	48 89 d0             	mov    rax,rdx
   1d56a:	48 c1 e0 05          	shl    rax,0x5
   1d56e:	48 29 d0             	sub    rax,rdx
   1d571:	48 c1 e0 02          	shl    rax,0x2
   1d575:	48 01 d0             	add    rax,rdx
   1d578:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   1d57c:	49 69 c1 71 02 00 00 	imul   rax,r9,0x271
   1d583:	48 01 d0             	add    rax,rdx
   1d586:	4c 01 c0             	add    rax,r8
   1d589:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1d591:	48 8d 05 48 1d 1e 00 	lea    rax,[rip+0x1e1d48]        # 1ff2e0 <int22_37>
   1d598:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1d59b:	29 c7                	sub    edi,eax
   1d59d:	89 f8                	mov    eax,edi
   1d59f:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1d5a3:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1d5a8:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1d5ac:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1d5b0:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1d5b4:	f3 0f 7e 0d 74 4a 01 00 	movq   xmm1,QWORD PTR [rip+0x14a74]        # 32030 <Law_and_Order+0x5f0>
   1d5bc:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1d5c0:	e9 92 01 00 00       	jmp    1d757 <get_scaled_exp_params+0x56e2>
   1d5c5:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
   1d5c8:	48 63 f8             	movsxd rdi,eax
   1d5cb:	8b 75 ac             	mov    esi,DWORD PTR [rbp-0x54]
   1d5ce:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
   1d5d1:	48 63 c8             	movsxd rcx,eax
   1d5d4:	44 8b 45 a4          	mov    r8d,DWORD PTR [rbp-0x5c]
   1d5d8:	8b 55 a8             	mov    edx,DWORD PTR [rbp-0x58]
   1d5db:	44 8b 4d a0          	mov    r9d,DWORD PTR [rbp-0x60]
   1d5df:	48 89 f0             	mov    rax,rsi
   1d5e2:	48 c1 e0 02          	shl    rax,0x2
   1d5e6:	48 01 f0             	add    rax,rsi
   1d5e9:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   1d5f1:	48 01 f0             	add    rax,rsi
   1d5f4:	49 69 f1 88 13 00 00 	imul   rsi,r9,0x1388
   1d5fb:	48 01 c6             	add    rsi,rax
   1d5fe:	48 89 c8             	mov    rax,rcx
   1d601:	48 c1 e0 02          	shl    rax,0x2
   1d605:	48 01 c8             	add    rax,rcx
   1d608:	48 8d 0c 06          	lea    rcx,[rsi+rax*1]
   1d60c:	48 89 d0             	mov    rax,rdx
   1d60f:	48 c1 e0 05          	shl    rax,0x5
   1d613:	48 29 d0             	sub    rax,rdx
   1d616:	48 c1 e0 02          	shl    rax,0x2
   1d61a:	48 01 d0             	add    rax,rdx
   1d61d:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   1d621:	49 69 c0 71 02 00 00 	imul   rax,r8,0x271
   1d628:	48 01 d0             	add    rax,rdx
   1d62b:	48 01 f8             	add    rax,rdi
   1d62e:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1d636:	48 8d 05 a3 8d 20 00 	lea    rax,[rip+0x208da3]        # 2263e0 <int22_dH>
   1d63d:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1d640:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1d644:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
   1d647:	48 63 f8             	movsxd rdi,eax
   1d64a:	8b 75 ac             	mov    esi,DWORD PTR [rbp-0x54]
   1d64d:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
   1d650:	48 63 c8             	movsxd rcx,eax
   1d653:	44 8b 45 a4          	mov    r8d,DWORD PTR [rbp-0x5c]
   1d657:	8b 55 a8             	mov    edx,DWORD PTR [rbp-0x58]
   1d65a:	44 8b 4d a0          	mov    r9d,DWORD PTR [rbp-0x60]
   1d65e:	48 89 f0             	mov    rax,rsi
   1d661:	48 c1 e0 02          	shl    rax,0x2
   1d665:	48 01 f0             	add    rax,rsi
   1d668:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   1d670:	48 01 f0             	add    rax,rsi
   1d673:	49 69 f1 88 13 00 00 	imul   rsi,r9,0x1388
   1d67a:	48 01 c6             	add    rsi,rax
   1d67d:	48 89 c8             	mov    rax,rcx
   1d680:	48 c1 e0 02          	shl    rax,0x2
   1d684:	48 01 c8             	add    rax,rcx
   1d687:	48 8d 0c 06          	lea    rcx,[rsi+rax*1]
   1d68b:	48 89 d0             	mov    rax,rdx
   1d68e:	48 c1 e0 05          	shl    rax,0x5
   1d692:	48 29 d0             	sub    rax,rdx
   1d695:	48 c1 e0 02          	shl    rax,0x2
   1d699:	48 01 d0             	add    rax,rdx
   1d69c:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   1d6a0:	49 69 c0 71 02 00 00 	imul   rax,r8,0x271
   1d6a7:	48 01 d0             	add    rax,rdx
   1d6aa:	48 01 f8             	add    rax,rdi
   1d6ad:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1d6b5:	48 8d 05 24 8d 20 00 	lea    rax,[rip+0x208d24]        # 2263e0 <int22_dH>
   1d6bc:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
   1d6bf:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
   1d6c2:	4c 63 c0             	movsxd r8,eax
   1d6c5:	8b 75 ac             	mov    esi,DWORD PTR [rbp-0x54]
   1d6c8:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
   1d6cb:	48 63 c8             	movsxd rcx,eax
   1d6ce:	44 8b 4d a4          	mov    r9d,DWORD PTR [rbp-0x5c]
   1d6d2:	8b 55 a8             	mov    edx,DWORD PTR [rbp-0x58]
   1d6d5:	44 8b 55 a0          	mov    r10d,DWORD PTR [rbp-0x60]
   1d6d9:	48 89 f0             	mov    rax,rsi
   1d6dc:	48 c1 e0 02          	shl    rax,0x2
   1d6e0:	48 01 f0             	add    rax,rsi
   1d6e3:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   1d6eb:	48 01 f0             	add    rax,rsi
   1d6ee:	49 69 f2 88 13 00 00 	imul   rsi,r10,0x1388
   1d6f5:	48 01 c6             	add    rsi,rax
   1d6f8:	48 89 c8             	mov    rax,rcx
   1d6fb:	48 c1 e0 02          	shl    rax,0x2
   1d6ff:	48 01 c8             	add    rax,rcx
   1d702:	48 8d 0c 06          	lea    rcx,[rsi+rax*1]
   1d706:	48 89 d0             	mov    rax,rdx
   1d709:	48 c1 e0 05          	shl    rax,0x5
   1d70d:	48 29 d0             	sub    rax,rdx
   1d710:	48 c1 e0 02          	shl    rax,0x2
   1d714:	48 01 d0             	add    rax,rdx
   1d717:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   1d71b:	49 69 c1 71 02 00 00 	imul   rax,r9,0x271
   1d722:	48 01 d0             	add    rax,rdx
   1d725:	4c 01 c0             	add    rax,r8
   1d728:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1d730:	48 8d 05 a9 1b 1e 00 	lea    rax,[rip+0x1e1ba9]        # 1ff2e0 <int22_37>
   1d737:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1d73a:	29 c7                	sub    edi,eax
   1d73c:	89 f8                	mov    eax,edi
   1d73e:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1d742:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1d747:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1d74b:	f3 0f 7e 0d dd 48 01 00 	movq   xmm1,QWORD PTR [rip+0x148dd]        # 32030 <Law_and_Order+0x5f0>
   1d753:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1d757:	f2 0f 10 0d f9 48 01 00 	movsd  xmm1,QWORD PTR [rip+0x148f9]        # 32058 <Law_and_Order+0x618>
   1d75f:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1d763:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1d768:	e8 03 63 fe ff       	call   3a70 <exp@plt>
   1d76d:	66 48 0f 7e c7       	movq   rdi,xmm0
   1d772:	4c 8b 45 c0          	mov    r8,QWORD PTR [rbp-0x40]
   1d776:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
   1d779:	4c 63 c8             	movsxd r9,eax
   1d77c:	8b 75 ac             	mov    esi,DWORD PTR [rbp-0x54]
   1d77f:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
   1d782:	48 63 c8             	movsxd rcx,eax
   1d785:	44 8b 5d a4          	mov    r11d,DWORD PTR [rbp-0x5c]
   1d789:	8b 55 a8             	mov    edx,DWORD PTR [rbp-0x58]
   1d78c:	44 8b 55 a0          	mov    r10d,DWORD PTR [rbp-0x60]
   1d790:	48 89 f0             	mov    rax,rsi
   1d793:	48 c1 e0 02          	shl    rax,0x2
   1d797:	48 01 f0             	add    rax,rsi
   1d79a:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   1d7a2:	48 01 f0             	add    rax,rsi
   1d7a5:	49 69 f3 71 02 00 00 	imul   rsi,r11,0x271
   1d7ac:	48 01 c6             	add    rsi,rax
   1d7af:	48 89 d0             	mov    rax,rdx
   1d7b2:	48 c1 e0 05          	shl    rax,0x5
   1d7b6:	48 29 d0             	sub    rax,rdx
   1d7b9:	48 c1 e0 02          	shl    rax,0x2
   1d7bd:	48 01 d0             	add    rax,rdx
   1d7c0:	48 8d 14 06          	lea    rdx,[rsi+rax*1]
   1d7c4:	48 89 c8             	mov    rax,rcx
   1d7c7:	48 c1 e0 02          	shl    rax,0x2
   1d7cb:	48 01 c8             	add    rax,rcx
   1d7ce:	48 01 c2             	add    rdx,rax
   1d7d1:	49 69 c2 88 13 00 00 	imul   rax,r10,0x1388
   1d7d8:	48 01 d0             	add    rax,rdx
   1d7db:	4c 01 c8             	add    rax,r9
   1d7de:	48 05 1e 2b 00 00    	add    rax,0x2b1e
   1d7e4:	49 89 3c c0          	mov    QWORD PTR [r8+rax*8],rdi
   1d7e8:	83 45 b8 01          	add    DWORD PTR [rbp-0x48],0x1
   1d7ec:	83 7d b8 04          	cmp    DWORD PTR [rbp-0x48],0x4
   1d7f0:	0f 8e 26 fc ff ff    	jle    1d41c <get_scaled_exp_params+0x53a7>
   1d7f6:	83 45 b4 01          	add    DWORD PTR [rbp-0x4c],0x1
   1d7fa:	83 7d b4 04          	cmp    DWORD PTR [rbp-0x4c],0x4
   1d7fe:	0f 8e 0c fc ff ff    	jle    1d410 <get_scaled_exp_params+0x539b>
   1d804:	83 45 ac 01          	add    DWORD PTR [rbp-0x54],0x1
   1d808:	83 7d ac 04          	cmp    DWORD PTR [rbp-0x54],0x4
   1d80c:	0f 86 f2 fb ff ff    	jbe    1d404 <get_scaled_exp_params+0x538f>
   1d812:	83 45 a8 01          	add    DWORD PTR [rbp-0x58],0x1
   1d816:	83 7d a8 04          	cmp    DWORD PTR [rbp-0x58],0x4
   1d81a:	0f 86 d8 fb ff ff    	jbe    1d3f8 <get_scaled_exp_params+0x5383>
   1d820:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
   1d824:	83 7d a4 07          	cmp    DWORD PTR [rbp-0x5c],0x7
   1d828:	0f 86 be fb ff ff    	jbe    1d3ec <get_scaled_exp_params+0x5377>
   1d82e:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
   1d832:	83 7d a0 07          	cmp    DWORD PTR [rbp-0x60],0x7
   1d836:	0f 86 a4 fb ff ff    	jbe    1d3e0 <get_scaled_exp_params+0x536b>
   1d83c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   1d840:	48 05 f0 43 06 00    	add    rax,0x643f0
   1d846:	ba 19 01 00 00       	mov    edx,0x119
   1d84b:	48 8d 35 6e e9 1c 00 	lea    rsi,[rip+0x1ce96e]        # 1ec1c0 <Tetraloops>
   1d852:	48 89 c7             	mov    rdi,rax
   1d855:	e8 86 5e fe ff       	call   36e0 <strncpy@plt>
   1d85a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   1d85e:	48 05 b0 4a 06 00    	add    rax,0x64ab0
   1d864:	ba f1 00 00 00       	mov    edx,0xf1
   1d869:	48 8d 35 10 e7 1c 00 	lea    rsi,[rip+0x1ce710]        # 1ebf80 <Triloops>
   1d870:	48 89 c7             	mov    rdi,rax
   1d873:	e8 68 5e fe ff       	call   36e0 <strncpy@plt>
   1d878:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   1d87c:	48 05 a1 4b 06 00    	add    rax,0x64ba1
   1d882:	ba 69 01 00 00       	mov    edx,0x169
   1d887:	48 8d 35 92 eb 1c 00 	lea    rsi,[rip+0x1ceb92]        # 1ec420 <Hexaloops>
   1d88e:	48 89 c7             	mov    rdi,rax
   1d891:	e8 4a 5e fe ff       	call   36e0 <strncpy@plt>
   1d896:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   1d89a:	48 83 c4 78          	add    rsp,0x78
   1d89e:	5b                   	pop    rbx
   1d89f:	5d                   	pop    rbp
   1d8a0:	c3                   	ret    

000000000001d8a1 <get_exp_params_ali>:
   1d8a1:	f3 0f 1e fa          	endbr64 
   1d8a5:	55                   	push   rbp
   1d8a6:	48 89 e5             	mov    rbp,rsp
   1d8a9:	53                   	push   rbx
   1d8aa:	48 83 ec 78          	sub    rsp,0x78
   1d8ae:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
   1d8b2:	89 75 94             	mov    DWORD PTR [rbp-0x6c],esi
   1d8b5:	f2 0f 11 45 88       	movsd  QWORD PTR [rbp-0x78],xmm0
   1d8ba:	bf 60 67 06 00       	mov    edi,0x66760
   1d8bf:	e8 fd e5 00 00       	call   2bec1 <vrna_alloc>
   1d8c4:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
   1d8c8:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   1d8cc:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
   1d8d0:	48 05 78 5e 06 00    	add    rax,0x65e78
   1d8d6:	48 89 d6             	mov    rsi,rdx
   1d8d9:	ba fd 00 00 00       	mov    edx,0xfd
   1d8de:	48 89 c7             	mov    rdi,rax
   1d8e1:	48 89 d1             	mov    rcx,rdx
   1d8e4:	f3 48 a5             	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   1d8e7:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   1d8eb:	f2 0f 10 40 08       	movsd  xmm0,QWORD PTR [rax+0x8]
   1d8f0:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   1d8f4:	f2 0f 11 80 70 5e 06 00 	movsd  QWORD PTR [rax+0x65e70],xmm0
   1d8fc:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   1d900:	f2 0f 10 00          	movsd  xmm0,QWORD PTR [rax]
   1d904:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   1d908:	f2 0f 11 80 68 5e 06 00 	movsd  QWORD PTR [rax+0x65e68],xmm0
   1d910:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   1d914:	f2 0f 10 45 88       	movsd  xmm0,QWORD PTR [rbp-0x78]
   1d919:	f2 0f 11 80 60 5e 06 00 	movsd  QWORD PTR [rax+0x65e60],xmm0
   1d921:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
   1d924:	48 85 c0             	test   rax,rax
   1d927:	78 07                	js     1d930 <get_exp_params_ali+0x8f>
   1d929:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
   1d92e:	eb 15                	jmp    1d945 <get_exp_params_ali+0xa4>
   1d930:	48 89 c2             	mov    rdx,rax
   1d933:	48 d1 ea             	shr    rdx,1
   1d936:	83 e0 01             	and    eax,0x1
   1d939:	48 09 c2             	or     rdx,rax
   1d93c:	f2 48 0f 2a c2       	cvtsi2sd xmm0,rdx
   1d941:	f2 0f 58 c0          	addsd  xmm0,xmm0
   1d945:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   1d949:	f2 0f 10 48 08       	movsd  xmm1,QWORD PTR [rax+0x8]
   1d94e:	f2 0f 59 c8          	mulsd  xmm1,xmm0
   1d952:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   1d956:	f2 0f 10 10          	movsd  xmm2,QWORD PTR [rax]
   1d95a:	f2 0f 10 05 de 46 01 00 	movsd  xmm0,QWORD PTR [rip+0x146de]        # 32040 <Law_and_Order+0x600>
   1d962:	f2 0f 58 c2          	addsd  xmm0,xmm2
   1d966:	f2 0f 59 c8          	mulsd  xmm1,xmm0
   1d96a:	f2 0f 10 05 de 46 01 00 	movsd  xmm0,QWORD PTR [rip+0x146de]        # 32050 <Law_and_Order+0x610>
   1d972:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1d976:	f2 0f 11 45 c8       	movsd  QWORD PTR [rbp-0x38],xmm0
   1d97b:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   1d97f:	f2 0f 10 45 c8       	movsd  xmm0,QWORD PTR [rbp-0x38]
   1d984:	f2 0f 11 80 58 5e 06 00 	movsd  QWORD PTR [rax+0x65e58],xmm0
   1d98c:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   1d990:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
   1d993:	89 45 bc             	mov    DWORD PTR [rbp-0x44],eax
   1d996:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   1d99a:	f2 0f 10 08          	movsd  xmm1,QWORD PTR [rax]
   1d99e:	f2 0f 10 05 9a 46 01 00 	movsd  xmm0,QWORD PTR [rip+0x1469a]        # 32040 <Law_and_Order+0x600>
   1d9a6:	f2 0f 58 c1          	addsd  xmm0,xmm1
   1d9aa:	f2 0f 10 0d 4e b8 1c 00 	movsd  xmm1,QWORD PTR [rip+0x1cb84e]        # 1e9200 <Tmeasure>
   1d9b2:	f2 0f 5e c1          	divsd  xmm0,xmm1
   1d9b6:	f2 0f 11 45 d0       	movsd  QWORD PTR [rbp-0x30],xmm0
   1d9bb:	f2 0f 10 05 45 b8 1c 00 	movsd  xmm0,QWORD PTR [rip+0x1cb845]        # 1e9208 <lxc37>
   1d9c3:	f2 0f 59 45 d0       	mulsd  xmm0,QWORD PTR [rbp-0x30]
   1d9c8:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   1d9cc:	f2 0f 11 80 c8 3f 06 00 	movsd  QWORD PTR [rax+0x63fc8],xmm0
   1d9d4:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1d9d8:	75 3d                	jne    1da17 <get_exp_params_ali+0x176>
   1d9da:	8b 05 58 b8 1c 00    	mov    eax,DWORD PTR [rip+0x1cb858]        # 1e9238 <DuplexInitdH>
   1d9e0:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1d9e4:	8b 15 4e b8 1c 00    	mov    edx,DWORD PTR [rip+0x1cb84e]        # 1e9238 <DuplexInitdH>
   1d9ea:	8b 05 44 b8 1c 00    	mov    eax,DWORD PTR [rip+0x1cb844]        # 1e9234 <DuplexInit37>
   1d9f0:	29 c2                	sub    edx,eax
   1d9f2:	89 d0                	mov    eax,edx
   1d9f4:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1d9f8:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1d9fd:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1da01:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1da05:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1da09:	f3 0f 7e 0d 1f 46 01 00 	movq   xmm1,QWORD PTR [rip+0x1461f]        # 32030 <Law_and_Order+0x5f0>
   1da11:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1da15:	eb 33                	jmp    1da4a <get_exp_params_ali+0x1a9>
   1da17:	8b 05 1b b8 1c 00    	mov    eax,DWORD PTR [rip+0x1cb81b]        # 1e9238 <DuplexInitdH>
   1da1d:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1da21:	8b 15 11 b8 1c 00    	mov    edx,DWORD PTR [rip+0x1cb811]        # 1e9238 <DuplexInitdH>
   1da27:	8b 05 07 b8 1c 00    	mov    eax,DWORD PTR [rip+0x1cb807]        # 1e9234 <DuplexInit37>
   1da2d:	29 c2                	sub    edx,eax
   1da2f:	89 d0                	mov    eax,edx
   1da31:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1da35:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1da3a:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1da3e:	f3 0f 7e 0d ea 45 01 00 	movq   xmm1,QWORD PTR [rip+0x145ea]        # 32030 <Law_and_Order+0x5f0>
   1da46:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1da4a:	f2 0f 10 0d 06 46 01 00 	movsd  xmm1,QWORD PTR [rip+0x14606]        # 32058 <Law_and_Order+0x618>
   1da52:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1da56:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1da5b:	e8 10 60 fe ff       	call   3a70 <exp@plt>
   1da60:	66 48 0f 7e c0       	movq   rax,xmm0
   1da65:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   1da69:	48 89 82 28 40 06 00 	mov    QWORD PTR [rdx+0x64028],rax
   1da70:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1da74:	75 3d                	jne    1dab3 <get_exp_params_ali+0x212>
   1da76:	8b 05 b4 b7 1c 00    	mov    eax,DWORD PTR [rip+0x1cb7b4]        # 1e9230 <TerminalAUdH>
   1da7c:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1da80:	8b 15 aa b7 1c 00    	mov    edx,DWORD PTR [rip+0x1cb7aa]        # 1e9230 <TerminalAUdH>
   1da86:	8b 05 a0 b7 1c 00    	mov    eax,DWORD PTR [rip+0x1cb7a0]        # 1e922c <TerminalAU37>
   1da8c:	29 c2                	sub    edx,eax
   1da8e:	89 d0                	mov    eax,edx
   1da90:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1da94:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1da99:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1da9d:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1daa1:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1daa5:	f3 0f 7e 0d 83 45 01 00 	movq   xmm1,QWORD PTR [rip+0x14583]        # 32030 <Law_and_Order+0x5f0>
   1daad:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1dab1:	eb 33                	jmp    1dae6 <get_exp_params_ali+0x245>
   1dab3:	8b 05 77 b7 1c 00    	mov    eax,DWORD PTR [rip+0x1cb777]        # 1e9230 <TerminalAUdH>
   1dab9:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1dabd:	8b 15 6d b7 1c 00    	mov    edx,DWORD PTR [rip+0x1cb76d]        # 1e9230 <TerminalAUdH>
   1dac3:	8b 05 63 b7 1c 00    	mov    eax,DWORD PTR [rip+0x1cb763]        # 1e922c <TerminalAU37>
   1dac9:	29 c2                	sub    edx,eax
   1dacb:	89 d0                	mov    eax,edx
   1dacd:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1dad1:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1dad6:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1dada:	f3 0f 7e 0d 4e 45 01 00 	movq   xmm1,QWORD PTR [rip+0x1454e]        # 32030 <Law_and_Order+0x5f0>
   1dae2:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1dae6:	f2 0f 10 0d 6a 45 01 00 	movsd  xmm1,QWORD PTR [rip+0x1456a]        # 32058 <Law_and_Order+0x618>
   1daee:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1daf2:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1daf7:	e8 74 5f fe ff       	call   3a70 <exp@plt>
   1dafc:	66 48 0f 7e c0       	movq   rax,xmm0
   1db01:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   1db05:	48 89 82 20 40 06 00 	mov    QWORD PTR [rdx+0x64020],rax
   1db0c:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1db10:	75 3d                	jne    1db4f <get_exp_params_ali+0x2ae>
   1db12:	8b 05 d8 0e 23 00    	mov    eax,DWORD PTR [rip+0x230ed8]        # 24e9f0 <ML_BASEdH>
   1db18:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1db1c:	8b 15 ce 0e 23 00    	mov    edx,DWORD PTR [rip+0x230ece]        # 24e9f0 <ML_BASEdH>
   1db22:	8b 05 c4 0e 23 00    	mov    eax,DWORD PTR [rip+0x230ec4]        # 24e9ec <ML_BASE37>
   1db28:	29 c2                	sub    edx,eax
   1db2a:	89 d0                	mov    eax,edx
   1db2c:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1db30:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1db35:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1db39:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1db3d:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1db41:	f3 0f 7e 0d e7 44 01 00 	movq   xmm1,QWORD PTR [rip+0x144e7]        # 32030 <Law_and_Order+0x5f0>
   1db49:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1db4d:	eb 33                	jmp    1db82 <get_exp_params_ali+0x2e1>
   1db4f:	8b 05 9b 0e 23 00    	mov    eax,DWORD PTR [rip+0x230e9b]        # 24e9f0 <ML_BASEdH>
   1db55:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1db59:	8b 15 91 0e 23 00    	mov    edx,DWORD PTR [rip+0x230e91]        # 24e9f0 <ML_BASEdH>
   1db5f:	8b 05 87 0e 23 00    	mov    eax,DWORD PTR [rip+0x230e87]        # 24e9ec <ML_BASE37>
   1db65:	29 c2                	sub    edx,eax
   1db67:	89 d0                	mov    eax,edx
   1db69:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1db6d:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1db72:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1db76:	f3 0f 7e 0d b2 44 01 00 	movq   xmm1,QWORD PTR [rip+0x144b2]        # 32030 <Law_and_Order+0x5f0>
   1db7e:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1db82:	f2 0f 10 0d ce 44 01 00 	movsd  xmm1,QWORD PTR [rip+0x144ce]        # 32058 <Law_and_Order+0x618>
   1db8a:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1db8e:	66 0f 28 c8          	movapd xmm1,xmm0
   1db92:	f2 0f 5e 4d c8       	divsd  xmm1,QWORD PTR [rbp-0x38]
   1db97:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
   1db9a:	48 85 c0             	test   rax,rax
   1db9d:	78 07                	js     1dba6 <get_exp_params_ali+0x305>
   1db9f:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
   1dba4:	eb 15                	jmp    1dbbb <get_exp_params_ali+0x31a>
   1dba6:	48 89 c2             	mov    rdx,rax
   1dba9:	48 d1 ea             	shr    rdx,1
   1dbac:	83 e0 01             	and    eax,0x1
   1dbaf:	48 09 c2             	or     rdx,rax
   1dbb2:	f2 48 0f 2a c2       	cvtsi2sd xmm0,rdx
   1dbb7:	f2 0f 58 c0          	addsd  xmm0,xmm0
   1dbbb:	f2 0f 5e c8          	divsd  xmm1,xmm0
   1dbbf:	66 0f 28 c1          	movapd xmm0,xmm1
   1dbc3:	e8 a8 5e fe ff       	call   3a70 <exp@plt>
   1dbc8:	66 48 0f 7e c0       	movq   rax,xmm0
   1dbcd:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   1dbd1:	48 89 82 d0 3f 06 00 	mov    QWORD PTR [rdx+0x63fd0],rax
   1dbd8:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1dbdc:	75 3d                	jne    1dc1b <get_exp_params_ali+0x37a>
   1dbde:	8b 05 38 b6 1c 00    	mov    eax,DWORD PTR [rip+0x1cb638]        # 1e921c <ML_closingdH>
   1dbe4:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1dbe8:	8b 15 2e b6 1c 00    	mov    edx,DWORD PTR [rip+0x1cb62e]        # 1e921c <ML_closingdH>
   1dbee:	8b 05 24 b6 1c 00    	mov    eax,DWORD PTR [rip+0x1cb624]        # 1e9218 <ML_closing37>
   1dbf4:	29 c2                	sub    edx,eax
   1dbf6:	89 d0                	mov    eax,edx
   1dbf8:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1dbfc:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1dc01:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1dc05:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1dc09:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1dc0d:	f3 0f 7e 0d 1b 44 01 00 	movq   xmm1,QWORD PTR [rip+0x1441b]        # 32030 <Law_and_Order+0x5f0>
   1dc15:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1dc19:	eb 33                	jmp    1dc4e <get_exp_params_ali+0x3ad>
   1dc1b:	8b 05 fb b5 1c 00    	mov    eax,DWORD PTR [rip+0x1cb5fb]        # 1e921c <ML_closingdH>
   1dc21:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1dc25:	8b 15 f1 b5 1c 00    	mov    edx,DWORD PTR [rip+0x1cb5f1]        # 1e921c <ML_closingdH>
   1dc2b:	8b 05 e7 b5 1c 00    	mov    eax,DWORD PTR [rip+0x1cb5e7]        # 1e9218 <ML_closing37>
   1dc31:	29 c2                	sub    edx,eax
   1dc33:	89 d0                	mov    eax,edx
   1dc35:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1dc39:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1dc3e:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1dc42:	f3 0f 7e 0d e6 43 01 00 	movq   xmm1,QWORD PTR [rip+0x143e6]        # 32030 <Law_and_Order+0x5f0>
   1dc4a:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1dc4e:	f2 0f 10 0d 02 44 01 00 	movsd  xmm1,QWORD PTR [rip+0x14402]        # 32058 <Law_and_Order+0x618>
   1dc56:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1dc5a:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1dc5f:	e8 0c 5e fe ff       	call   3a70 <exp@plt>
   1dc64:	66 48 0f 7e c0       	movq   rax,xmm0
   1dc69:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   1dc6d:	48 89 82 18 40 06 00 	mov    QWORD PTR [rdx+0x64018],rax
   1dc74:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1dc78:	75 3d                	jne    1dcb7 <get_exp_params_ali+0x416>
   1dc7a:	8b 05 78 0d 23 00    	mov    eax,DWORD PTR [rip+0x230d78]        # 24e9f8 <GQuadLayerMismatchH>
   1dc80:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1dc84:	8b 15 6e 0d 23 00    	mov    edx,DWORD PTR [rip+0x230d6e]        # 24e9f8 <GQuadLayerMismatchH>
   1dc8a:	8b 05 d0 b5 1c 00    	mov    eax,DWORD PTR [rip+0x1cb5d0]        # 1e9260 <GQuadLayerMismatch37>
   1dc90:	29 c2                	sub    edx,eax
   1dc92:	89 d0                	mov    eax,edx
   1dc94:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1dc98:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1dc9d:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1dca1:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1dca5:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1dca9:	f3 0f 7e 0d 7f 43 01 00 	movq   xmm1,QWORD PTR [rip+0x1437f]        # 32030 <Law_and_Order+0x5f0>
   1dcb1:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1dcb5:	eb 33                	jmp    1dcea <get_exp_params_ali+0x449>
   1dcb7:	8b 05 3b 0d 23 00    	mov    eax,DWORD PTR [rip+0x230d3b]        # 24e9f8 <GQuadLayerMismatchH>
   1dcbd:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1dcc1:	8b 15 31 0d 23 00    	mov    edx,DWORD PTR [rip+0x230d31]        # 24e9f8 <GQuadLayerMismatchH>
   1dcc7:	8b 05 93 b5 1c 00    	mov    eax,DWORD PTR [rip+0x1cb593]        # 1e9260 <GQuadLayerMismatch37>
   1dccd:	29 c2                	sub    edx,eax
   1dccf:	89 d0                	mov    eax,edx
   1dcd1:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1dcd5:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1dcda:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1dcde:	f3 0f 7e 0d 4a 43 01 00 	movq   xmm1,QWORD PTR [rip+0x1434a]        # 32030 <Law_and_Order+0x5f0>
   1dce6:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1dcea:	f2 0f 10 0d 66 43 01 00 	movsd  xmm1,QWORD PTR [rip+0x14366]        # 32058 <Law_and_Order+0x618>
   1dcf2:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1dcf6:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1dcfb:	e8 70 5d fe ff       	call   3a70 <exp@plt>
   1dd00:	66 48 0f 7e c0       	movq   rax,xmm0
   1dd05:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   1dd09:	48 89 82 48 5e 06 00 	mov    QWORD PTR [rdx+0x65e48],rax
   1dd10:	8b 15 4e b5 1c 00    	mov    edx,DWORD PTR [rip+0x1cb54e]        # 1e9264 <GQuadLayerMismatchMax>
   1dd16:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   1dd1a:	89 90 50 5e 06 00    	mov    DWORD PTR [rax+0x65e50],edx
   1dd20:	c7 45 a0 02 00 00 00 	mov    DWORD PTR [rbp-0x60],0x2
   1dd27:	e9 57 01 00 00       	jmp    1de83 <get_exp_params_ali+0x5e2>
   1dd2c:	c7 45 a4 03 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x3
   1dd33:	e9 3d 01 00 00       	jmp    1de75 <get_exp_params_ali+0x5d4>
   1dd38:	8b 05 1a b5 1c 00    	mov    eax,DWORD PTR [rip+0x1cb51a]        # 1e9258 <GQuadAlphadH>
   1dd3e:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1dd42:	8b 15 10 b5 1c 00    	mov    edx,DWORD PTR [rip+0x1cb510]        # 1e9258 <GQuadAlphadH>
   1dd48:	8b 05 06 b5 1c 00    	mov    eax,DWORD PTR [rip+0x1cb506]        # 1e9254 <GQuadAlpha37>
   1dd4e:	29 c2                	sub    edx,eax
   1dd50:	89 d0                	mov    eax,edx
   1dd52:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1dd56:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1dd5b:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1dd5f:	f2 0f 11 45 e0       	movsd  QWORD PTR [rbp-0x20],xmm0
   1dd64:	8b 05 8a 0c 23 00    	mov    eax,DWORD PTR [rip+0x230c8a]        # 24e9f4 <GQuadBetadH>
   1dd6a:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1dd6e:	8b 15 80 0c 23 00    	mov    edx,DWORD PTR [rip+0x230c80]        # 24e9f4 <GQuadBetadH>
   1dd74:	8b 05 e2 b4 1c 00    	mov    eax,DWORD PTR [rip+0x1cb4e2]        # 1e925c <GQuadBeta37>
   1dd7a:	29 c2                	sub    edx,eax
   1dd7c:	89 d0                	mov    eax,edx
   1dd7e:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1dd82:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1dd87:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1dd8b:	f2 0f 11 45 e8       	movsd  QWORD PTR [rbp-0x18],xmm0
   1dd90:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1dd93:	83 e8 01             	sub    eax,0x1
   1dd96:	89 c0                	mov    eax,eax
   1dd98:	48 85 c0             	test   rax,rax
   1dd9b:	78 07                	js     1dda4 <get_exp_params_ali+0x503>
   1dd9d:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
   1dda2:	eb 15                	jmp    1ddb9 <get_exp_params_ali+0x518>
   1dda4:	48 89 c2             	mov    rdx,rax
   1dda7:	48 d1 ea             	shr    rdx,1
   1ddaa:	83 e0 01             	and    eax,0x1
   1ddad:	48 09 c2             	or     rdx,rax
   1ddb0:	f2 48 0f 2a c2       	cvtsi2sd xmm0,rdx
   1ddb5:	f2 0f 58 c0          	addsd  xmm0,xmm0
   1ddb9:	f2 0f 59 45 e0       	mulsd  xmm0,QWORD PTR [rbp-0x20]
   1ddbe:	f2 0f 11 45 80       	movsd  QWORD PTR [rbp-0x80],xmm0
   1ddc3:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
   1ddc6:	48 85 c0             	test   rax,rax
   1ddc9:	78 07                	js     1ddd2 <get_exp_params_ali+0x531>
   1ddcb:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
   1ddd0:	eb 15                	jmp    1dde7 <get_exp_params_ali+0x546>
   1ddd2:	48 89 c2             	mov    rdx,rax
   1ddd5:	48 d1 ea             	shr    rdx,1
   1ddd8:	83 e0 01             	and    eax,0x1
   1dddb:	48 09 c2             	or     rdx,rax
   1ddde:	f2 48 0f 2a c2       	cvtsi2sd xmm0,rdx
   1dde3:	f2 0f 58 c0          	addsd  xmm0,xmm0
   1dde7:	f2 0f 10 0d 71 42 01 00 	movsd  xmm1,QWORD PTR [rip+0x14271]        # 32060 <Law_and_Order+0x620>
   1ddef:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1ddf3:	e8 98 59 fe ff       	call   3790 <log@plt>
   1ddf8:	f2 0f 59 45 e8       	mulsd  xmm0,QWORD PTR [rbp-0x18]
   1ddfd:	f2 0f 58 45 80       	addsd  xmm0,QWORD PTR [rbp-0x80]
   1de02:	f2 0f 11 45 d8       	movsd  QWORD PTR [rbp-0x28],xmm0
   1de07:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1de0b:	75 1b                	jne    1de28 <get_exp_params_ali+0x587>
   1de0d:	f2 0f 10 45 d8       	movsd  xmm0,QWORD PTR [rbp-0x28]
   1de12:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1de16:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1de1a:	f3 0f 7e 0d 0e 42 01 00 	movq   xmm1,QWORD PTR [rip+0x1420e]        # 32030 <Law_and_Order+0x5f0>
   1de22:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1de26:	eb 11                	jmp    1de39 <get_exp_params_ali+0x598>
   1de28:	f2 0f 10 45 d8       	movsd  xmm0,QWORD PTR [rbp-0x28]
   1de2d:	f3 0f 7e 0d fb 41 01 00 	movq   xmm1,QWORD PTR [rip+0x141fb]        # 32030 <Law_and_Order+0x5f0>
   1de35:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1de39:	f2 0f 10 0d 17 42 01 00 	movsd  xmm1,QWORD PTR [rip+0x14217]        # 32058 <Law_and_Order+0x618>
   1de41:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1de45:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1de4a:	e8 21 5c fe ff       	call   3a70 <exp@plt>
   1de4f:	66 48 0f 7e c0       	movq   rax,xmm0
   1de54:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   1de58:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1de5b:	8b 75 a0             	mov    esi,DWORD PTR [rbp-0x60]
   1de5e:	48 6b f6 2e          	imul   rsi,rsi,0x2e
   1de62:	48 01 f1             	add    rcx,rsi
   1de65:	48 81 c1 58 ca 00 00 	add    rcx,0xca58
   1de6c:	48 89 44 ca 08       	mov    QWORD PTR [rdx+rcx*8+0x8],rax
   1de71:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
   1de75:	83 7d a4 2d          	cmp    DWORD PTR [rbp-0x5c],0x2d
   1de79:	0f 86 b9 fe ff ff    	jbe    1dd38 <get_exp_params_ali+0x497>
   1de7f:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
   1de83:	83 7d a0 07          	cmp    DWORD PTR [rbp-0x60],0x7
   1de87:	0f 86 9f fe ff ff    	jbe    1dd2c <get_exp_params_ali+0x48b>
   1de8d:	c7 45 a0 00 00 00 00 	mov    DWORD PTR [rbp-0x60],0x0
   1de94:	e9 ff 00 00 00       	jmp    1df98 <get_exp_params_ali+0x6f7>
   1de99:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1de9d:	75 6a                	jne    1df09 <get_exp_params_ali+0x668>
   1de9f:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1dea2:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1deaa:	48 8d 05 4f b6 1c 00 	lea    rax,[rip+0x1cb64f]        # 1e9500 <hairpindH>
   1deb1:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1deb4:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1deb8:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1debb:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1dec3:	48 8d 05 36 b6 1c 00 	lea    rax,[rip+0x1cb636]        # 1e9500 <hairpindH>
   1deca:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   1decd:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1ded0:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   1ded8:	48 8d 05 a1 b5 1c 00 	lea    rax,[rip+0x1cb5a1]        # 1e9480 <hairpin37>
   1dedf:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   1dee2:	29 c2                	sub    edx,eax
   1dee4:	89 d0                	mov    eax,edx
   1dee6:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1deea:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1deef:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1def3:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1def7:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1defb:	f3 0f 7e 0d 2d 41 01 00 	movq   xmm1,QWORD PTR [rip+0x1412d]        # 32030 <Law_and_Order+0x5f0>
   1df03:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1df07:	eb 60                	jmp    1df69 <get_exp_params_ali+0x6c8>
   1df09:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1df0c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1df14:	48 8d 05 e5 b5 1c 00 	lea    rax,[rip+0x1cb5e5]        # 1e9500 <hairpindH>
   1df1b:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1df1e:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1df22:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1df25:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1df2d:	48 8d 05 cc b5 1c 00 	lea    rax,[rip+0x1cb5cc]        # 1e9500 <hairpindH>
   1df34:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   1df37:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1df3a:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   1df42:	48 8d 05 37 b5 1c 00 	lea    rax,[rip+0x1cb537]        # 1e9480 <hairpin37>
   1df49:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   1df4c:	29 c2                	sub    edx,eax
   1df4e:	89 d0                	mov    eax,edx
   1df50:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1df54:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1df59:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1df5d:	f3 0f 7e 0d cb 40 01 00 	movq   xmm1,QWORD PTR [rip+0x140cb]        # 32030 <Law_and_Order+0x5f0>
   1df65:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1df69:	f2 0f 10 0d e7 40 01 00 	movsd  xmm1,QWORD PTR [rip+0x140e7]        # 32058 <Law_and_Order+0x618>
   1df71:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1df75:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1df7a:	e8 f1 5a fe ff       	call   3a70 <exp@plt>
   1df7f:	66 48 0f 7e c0       	movq   rax,xmm0
   1df84:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   1df88:	8b 4d a0             	mov    ecx,DWORD PTR [rbp-0x60]
   1df8b:	48 83 c1 40          	add    rcx,0x40
   1df8f:	48 89 44 ca 08       	mov    QWORD PTR [rdx+rcx*8+0x8],rax
   1df94:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
   1df98:	83 7d a0 1e          	cmp    DWORD PTR [rbp-0x60],0x1e
   1df9c:	0f 86 f7 fe ff ff    	jbe    1de99 <get_exp_params_ali+0x5f8>
   1dfa2:	c7 45 a0 00 00 00 00 	mov    DWORD PTR [rbp-0x60],0x0
   1dfa9:	eb 56                	jmp    1e001 <get_exp_params_ali+0x760>
   1dfab:	f2 0f 10 4d d0       	movsd  xmm1,QWORD PTR [rbp-0x30]
   1dfb0:	f2 0f 10 05 d8 40 01 00 	movsd  xmm0,QWORD PTR [rip+0x140d8]        # 32090 <Law_and_Order+0x650>
   1dfb8:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1dfbc:	f2 0f 11 45 d8       	movsd  QWORD PTR [rbp-0x28],xmm0
   1dfc1:	f2 0f 10 45 d8       	movsd  xmm0,QWORD PTR [rbp-0x28]
   1dfc6:	f3 0f 7e 0d 62 40 01 00 	movq   xmm1,QWORD PTR [rip+0x14062]        # 32030 <Law_and_Order+0x5f0>
   1dfce:	66 0f 57 c8          	xorpd  xmm1,xmm0
   1dfd2:	f2 0f 10 05 7e 40 01 00 	movsd  xmm0,QWORD PTR [rip+0x1407e]        # 32058 <Law_and_Order+0x618>
   1dfda:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1dfde:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1dfe3:	e8 88 5a fe ff       	call   3a70 <exp@plt>
   1dfe8:	66 48 0f 7e c0       	movq   rax,xmm0
   1dfed:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   1dff1:	8b 4d a0             	mov    ecx,DWORD PTR [rbp-0x60]
   1dff4:	48 83 c1 40          	add    rcx,0x40
   1dff8:	48 89 44 ca 08       	mov    QWORD PTR [rdx+rcx*8+0x8],rax
   1dffd:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
   1e001:	83 7d a0 02          	cmp    DWORD PTR [rbp-0x60],0x2
   1e005:	76 a4                	jbe    1dfab <get_exp_params_ali+0x70a>
   1e007:	c7 45 a0 00 00 00 00 	mov    DWORD PTR [rbp-0x60],0x0
   1e00e:	e9 f9 01 00 00       	jmp    1e20c <get_exp_params_ali+0x96b>
   1e013:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1e017:	75 6a                	jne    1e083 <get_exp_params_ali+0x7e2>
   1e019:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1e01c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1e024:	48 8d 05 d5 b5 1c 00 	lea    rax,[rip+0x1cb5d5]        # 1e9600 <bulgedH>
   1e02b:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1e02e:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1e032:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1e035:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1e03d:	48 8d 05 bc b5 1c 00 	lea    rax,[rip+0x1cb5bc]        # 1e9600 <bulgedH>
   1e044:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   1e047:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1e04a:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   1e052:	48 8d 05 27 b5 1c 00 	lea    rax,[rip+0x1cb527]        # 1e9580 <bulge37>
   1e059:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   1e05c:	29 c2                	sub    edx,eax
   1e05e:	89 d0                	mov    eax,edx
   1e060:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1e064:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1e069:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1e06d:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1e071:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1e075:	f3 0f 7e 0d b3 3f 01 00 	movq   xmm1,QWORD PTR [rip+0x13fb3]        # 32030 <Law_and_Order+0x5f0>
   1e07d:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1e081:	eb 60                	jmp    1e0e3 <get_exp_params_ali+0x842>
   1e083:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1e086:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1e08e:	48 8d 05 6b b5 1c 00 	lea    rax,[rip+0x1cb56b]        # 1e9600 <bulgedH>
   1e095:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1e098:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1e09c:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1e09f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1e0a7:	48 8d 05 52 b5 1c 00 	lea    rax,[rip+0x1cb552]        # 1e9600 <bulgedH>
   1e0ae:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   1e0b1:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1e0b4:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   1e0bc:	48 8d 05 bd b4 1c 00 	lea    rax,[rip+0x1cb4bd]        # 1e9580 <bulge37>
   1e0c3:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   1e0c6:	29 c2                	sub    edx,eax
   1e0c8:	89 d0                	mov    eax,edx
   1e0ca:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1e0ce:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1e0d3:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1e0d7:	f3 0f 7e 0d 51 3f 01 00 	movq   xmm1,QWORD PTR [rip+0x13f51]        # 32030 <Law_and_Order+0x5f0>
   1e0df:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1e0e3:	f2 0f 10 0d 6d 3f 01 00 	movsd  xmm1,QWORD PTR [rip+0x13f6d]        # 32058 <Law_and_Order+0x618>
   1e0eb:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1e0ef:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1e0f4:	e8 77 59 fe ff       	call   3a70 <exp@plt>
   1e0f9:	66 48 0f 7e c0       	movq   rax,xmm0
   1e0fe:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   1e102:	8b 4d a0             	mov    ecx,DWORD PTR [rbp-0x60]
   1e105:	48 83 c1 60          	add    rcx,0x60
   1e109:	48 89 04 ca          	mov    QWORD PTR [rdx+rcx*8],rax
   1e10d:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1e111:	75 6a                	jne    1e17d <get_exp_params_ali+0x8dc>
   1e113:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1e116:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1e11e:	48 8d 05 db b5 1c 00 	lea    rax,[rip+0x1cb5db]        # 1e9700 <internal_loopdH>
   1e125:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1e128:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1e12c:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1e12f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1e137:	48 8d 05 c2 b5 1c 00 	lea    rax,[rip+0x1cb5c2]        # 1e9700 <internal_loopdH>
   1e13e:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   1e141:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1e144:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   1e14c:	48 8d 05 2d b5 1c 00 	lea    rax,[rip+0x1cb52d]        # 1e9680 <internal_loop37>
   1e153:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   1e156:	29 c2                	sub    edx,eax
   1e158:	89 d0                	mov    eax,edx
   1e15a:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1e15e:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1e163:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1e167:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1e16b:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1e16f:	f3 0f 7e 0d b9 3e 01 00 	movq   xmm1,QWORD PTR [rip+0x13eb9]        # 32030 <Law_and_Order+0x5f0>
   1e177:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1e17b:	eb 60                	jmp    1e1dd <get_exp_params_ali+0x93c>
   1e17d:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1e180:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1e188:	48 8d 05 71 b5 1c 00 	lea    rax,[rip+0x1cb571]        # 1e9700 <internal_loopdH>
   1e18f:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1e192:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1e196:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1e199:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1e1a1:	48 8d 05 58 b5 1c 00 	lea    rax,[rip+0x1cb558]        # 1e9700 <internal_loopdH>
   1e1a8:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   1e1ab:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1e1ae:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   1e1b6:	48 8d 05 c3 b4 1c 00 	lea    rax,[rip+0x1cb4c3]        # 1e9680 <internal_loop37>
   1e1bd:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   1e1c0:	29 c2                	sub    edx,eax
   1e1c2:	89 d0                	mov    eax,edx
   1e1c4:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1e1c8:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1e1cd:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1e1d1:	f3 0f 7e 0d 57 3e 01 00 	movq   xmm1,QWORD PTR [rip+0x13e57]        # 32030 <Law_and_Order+0x5f0>
   1e1d9:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1e1dd:	f2 0f 10 0d 73 3e 01 00 	movsd  xmm1,QWORD PTR [rip+0x13e73]        # 32058 <Law_and_Order+0x618>
   1e1e5:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1e1e9:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1e1ee:	e8 7d 58 fe ff       	call   3a70 <exp@plt>
   1e1f3:	66 48 0f 7e c0       	movq   rax,xmm0
   1e1f8:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   1e1fc:	8b 4d a0             	mov    ecx,DWORD PTR [rbp-0x60]
   1e1ff:	48 83 c1 7e          	add    rcx,0x7e
   1e203:	48 89 44 ca 08       	mov    QWORD PTR [rdx+rcx*8+0x8],rax
   1e208:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
   1e20c:	83 7d a0 1e          	cmp    DWORD PTR [rbp-0x60],0x1e
   1e210:	0f 86 fd fd ff ff    	jbe    1e013 <get_exp_params_ali+0x772>
   1e216:	8b 05 9c f4 22 00    	mov    eax,DWORD PTR [rip+0x22f49c]        # 24d6b8 <james_rule>
   1e21c:	85 c0                	test   eax,eax
   1e21e:	74 22                	je     1e242 <get_exp_params_ali+0x9a1>
   1e220:	f2 0f 10 05 40 3e 01 00 	movsd  xmm0,QWORD PTR [rip+0x13e40]        # 32068 <Law_and_Order+0x628>
   1e228:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1e22d:	e8 3e 58 fe ff       	call   3a70 <exp@plt>
   1e232:	66 48 0f 7e c0       	movq   rax,xmm0
   1e237:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   1e23b:	48 89 82 08 04 00 00 	mov    QWORD PTR [rdx+0x408],rax
   1e242:	8b 05 30 b4 1c 00    	mov    eax,DWORD PTR [rip+0x1cb430]        # 1e9678 <bulgedH+0x78>
   1e248:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1e24c:	8b 15 26 b4 1c 00    	mov    edx,DWORD PTR [rip+0x1cb426]        # 1e9678 <bulgedH+0x78>
   1e252:	8b 05 a0 b3 1c 00    	mov    eax,DWORD PTR [rip+0x1cb3a0]        # 1e95f8 <bulge37+0x78>
   1e258:	29 c2                	sub    edx,eax
   1e25a:	89 d0                	mov    eax,edx
   1e25c:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1e260:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1e265:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1e269:	f2 0f 11 45 d8       	movsd  QWORD PTR [rbp-0x28],xmm0
   1e26e:	c7 45 a0 1f 00 00 00 	mov    DWORD PTR [rbp-0x60],0x1f
   1e275:	e9 8a 00 00 00       	jmp    1e304 <get_exp_params_ali+0xa63>
   1e27a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   1e27e:	f2 0f 10 a0 c8 3f 06 00 	movsd  xmm4,QWORD PTR [rax+0x63fc8]
   1e286:	f2 0f 11 65 80       	movsd  QWORD PTR [rbp-0x80],xmm4
   1e28b:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1e28e:	48 85 c0             	test   rax,rax
   1e291:	78 07                	js     1e29a <get_exp_params_ali+0x9f9>
   1e293:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
   1e298:	eb 15                	jmp    1e2af <get_exp_params_ali+0xa0e>
   1e29a:	48 89 c2             	mov    rdx,rax
   1e29d:	48 d1 ea             	shr    rdx,1
   1e2a0:	83 e0 01             	and    eax,0x1
   1e2a3:	48 09 c2             	or     rdx,rax
   1e2a6:	f2 48 0f 2a c2       	cvtsi2sd xmm0,rdx
   1e2ab:	f2 0f 58 c0          	addsd  xmm0,xmm0
   1e2af:	f2 0f 10 0d 91 3d 01 00 	movsd  xmm1,QWORD PTR [rip+0x13d91]        # 32048 <Law_and_Order+0x608>
   1e2b7:	f2 0f 5e c1          	divsd  xmm0,xmm1
   1e2bb:	e8 d0 54 fe ff       	call   3790 <log@plt>
   1e2c0:	f2 0f 59 45 80       	mulsd  xmm0,QWORD PTR [rbp-0x80]
   1e2c5:	f2 0f 58 45 d8       	addsd  xmm0,QWORD PTR [rbp-0x28]
   1e2ca:	f3 0f 7e 0d 5e 3d 01 00 	movq   xmm1,QWORD PTR [rip+0x13d5e]        # 32030 <Law_and_Order+0x5f0>
   1e2d2:	66 0f 57 c8          	xorpd  xmm1,xmm0
   1e2d6:	f2 0f 10 05 7a 3d 01 00 	movsd  xmm0,QWORD PTR [rip+0x13d7a]        # 32058 <Law_and_Order+0x618>
   1e2de:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1e2e2:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1e2e7:	e8 84 57 fe ff       	call   3a70 <exp@plt>
   1e2ec:	66 48 0f 7e c0       	movq   rax,xmm0
   1e2f1:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   1e2f5:	8b 4d a0             	mov    ecx,DWORD PTR [rbp-0x60]
   1e2f8:	48 83 c1 60          	add    rcx,0x60
   1e2fc:	48 89 04 ca          	mov    QWORD PTR [rdx+rcx*8],rax
   1e300:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
   1e304:	83 7d a0 1e          	cmp    DWORD PTR [rbp-0x60],0x1e
   1e308:	0f 86 6c ff ff ff    	jbe    1e27a <get_exp_params_ali+0x9d9>
   1e30e:	8b 05 64 b4 1c 00    	mov    eax,DWORD PTR [rip+0x1cb464]        # 1e9778 <internal_loopdH+0x78>
   1e314:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1e318:	8b 15 5a b4 1c 00    	mov    edx,DWORD PTR [rip+0x1cb45a]        # 1e9778 <internal_loopdH+0x78>
   1e31e:	8b 05 d4 b3 1c 00    	mov    eax,DWORD PTR [rip+0x1cb3d4]        # 1e96f8 <internal_loop37+0x78>
   1e324:	29 c2                	sub    edx,eax
   1e326:	89 d0                	mov    eax,edx
   1e328:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1e32c:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1e331:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1e335:	f2 0f 11 45 d8       	movsd  QWORD PTR [rbp-0x28],xmm0
   1e33a:	c7 45 a0 1f 00 00 00 	mov    DWORD PTR [rbp-0x60],0x1f
   1e341:	e9 8b 00 00 00       	jmp    1e3d1 <get_exp_params_ali+0xb30>
   1e346:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   1e34a:	f2 0f 10 b0 c8 3f 06 00 	movsd  xmm6,QWORD PTR [rax+0x63fc8]
   1e352:	f2 0f 11 75 80       	movsd  QWORD PTR [rbp-0x80],xmm6
   1e357:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1e35a:	48 85 c0             	test   rax,rax
   1e35d:	78 07                	js     1e366 <get_exp_params_ali+0xac5>
   1e35f:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
   1e364:	eb 15                	jmp    1e37b <get_exp_params_ali+0xada>
   1e366:	48 89 c2             	mov    rdx,rax
   1e369:	48 d1 ea             	shr    rdx,1
   1e36c:	83 e0 01             	and    eax,0x1
   1e36f:	48 09 c2             	or     rdx,rax
   1e372:	f2 48 0f 2a c2       	cvtsi2sd xmm0,rdx
   1e377:	f2 0f 58 c0          	addsd  xmm0,xmm0
   1e37b:	f2 0f 10 0d c5 3c 01 00 	movsd  xmm1,QWORD PTR [rip+0x13cc5]        # 32048 <Law_and_Order+0x608>
   1e383:	f2 0f 5e c1          	divsd  xmm0,xmm1
   1e387:	e8 04 54 fe ff       	call   3790 <log@plt>
   1e38c:	f2 0f 59 45 80       	mulsd  xmm0,QWORD PTR [rbp-0x80]
   1e391:	f2 0f 58 45 d8       	addsd  xmm0,QWORD PTR [rbp-0x28]
   1e396:	f3 0f 7e 0d 92 3c 01 00 	movq   xmm1,QWORD PTR [rip+0x13c92]        # 32030 <Law_and_Order+0x5f0>
   1e39e:	66 0f 57 c8          	xorpd  xmm1,xmm0
   1e3a2:	f2 0f 10 05 ae 3c 01 00 	movsd  xmm0,QWORD PTR [rip+0x13cae]        # 32058 <Law_and_Order+0x618>
   1e3aa:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1e3ae:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1e3b3:	e8 b8 56 fe ff       	call   3a70 <exp@plt>
   1e3b8:	66 48 0f 7e c0       	movq   rax,xmm0
   1e3bd:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   1e3c1:	8b 4d a0             	mov    ecx,DWORD PTR [rbp-0x60]
   1e3c4:	48 83 c1 7e          	add    rcx,0x7e
   1e3c8:	48 89 44 ca 08       	mov    QWORD PTR [rdx+rcx*8+0x8],rax
   1e3cd:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
   1e3d1:	83 7d a0 1e          	cmp    DWORD PTR [rbp-0x60],0x1e
   1e3d5:	0f 86 6b ff ff ff    	jbe    1e346 <get_exp_params_ali+0xaa5>
   1e3db:	8b 05 47 ae 1c 00    	mov    eax,DWORD PTR [rip+0x1cae47]        # 1e9228 <niniodH>
   1e3e1:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1e3e5:	8b 15 3d ae 1c 00    	mov    edx,DWORD PTR [rip+0x1cae3d]        # 1e9228 <niniodH>
   1e3eb:	8b 05 33 ae 1c 00    	mov    eax,DWORD PTR [rip+0x1cae33]        # 1e9224 <ninio37>
   1e3f1:	29 c2                	sub    edx,eax
   1e3f3:	89 d0                	mov    eax,edx
   1e3f5:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1e3f9:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1e3fe:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1e402:	f2 0f 11 45 d8       	movsd  QWORD PTR [rbp-0x28],xmm0
   1e407:	c7 45 a4 00 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x0
   1e40e:	e9 b7 00 00 00       	jmp    1e4ca <get_exp_params_ali+0xc29>
   1e413:	8b 05 07 ae 1c 00    	mov    eax,DWORD PTR [rip+0x1cae07]        # 1e9220 <MAX_NINIO>
   1e419:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1e41d:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
   1e420:	48 85 c0             	test   rax,rax
   1e423:	78 07                	js     1e42c <get_exp_params_ali+0xb8b>
   1e425:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
   1e42a:	eb 15                	jmp    1e441 <get_exp_params_ali+0xba0>
   1e42c:	48 89 c2             	mov    rdx,rax
   1e42f:	48 d1 ea             	shr    rdx,1
   1e432:	83 e0 01             	and    eax,0x1
   1e435:	48 09 c2             	or     rdx,rax
   1e438:	f2 48 0f 2a c2       	cvtsi2sd xmm0,rdx
   1e43d:	f2 0f 58 c0          	addsd  xmm0,xmm0
   1e441:	f2 0f 59 45 d8       	mulsd  xmm0,QWORD PTR [rbp-0x28]
   1e446:	66 0f 2f c1          	comisd xmm0,xmm1
   1e44a:	76 18                	jbe    1e464 <get_exp_params_ali+0xbc3>
   1e44c:	8b 05 ce ad 1c 00    	mov    eax,DWORD PTR [rip+0x1cadce]        # 1e9220 <MAX_NINIO>
   1e452:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1e456:	f3 0f 7e 0d d2 3b 01 00 	movq   xmm1,QWORD PTR [rip+0x13bd2]        # 32030 <Law_and_Order+0x5f0>
   1e45e:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1e462:	eb 35                	jmp    1e499 <get_exp_params_ali+0xbf8>
   1e464:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
   1e467:	48 85 c0             	test   rax,rax
   1e46a:	78 07                	js     1e473 <get_exp_params_ali+0xbd2>
   1e46c:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
   1e471:	eb 15                	jmp    1e488 <get_exp_params_ali+0xbe7>
   1e473:	48 89 c2             	mov    rdx,rax
   1e476:	48 d1 ea             	shr    rdx,1
   1e479:	83 e0 01             	and    eax,0x1
   1e47c:	48 09 c2             	or     rdx,rax
   1e47f:	f2 48 0f 2a c2       	cvtsi2sd xmm0,rdx
   1e484:	f2 0f 58 c0          	addsd  xmm0,xmm0
   1e488:	f2 0f 59 45 d8       	mulsd  xmm0,QWORD PTR [rbp-0x28]
   1e48d:	f3 0f 7e 0d 9b 3b 01 00 	movq   xmm1,QWORD PTR [rip+0x13b9b]        # 32030 <Law_and_Order+0x5f0>
   1e495:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1e499:	f2 0f 10 0d b7 3b 01 00 	movsd  xmm1,QWORD PTR [rip+0x13bb7]        # 32058 <Law_and_Order+0x618>
   1e4a1:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1e4a5:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1e4aa:	e8 c1 55 fe ff       	call   3a70 <exp@plt>
   1e4af:	66 48 0f 7e c0       	movq   rax,xmm0
   1e4b4:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   1e4b8:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1e4bb:	48 81 c1 9c c7 00 00 	add    rcx,0xc79c
   1e4c2:	48 89 04 ca          	mov    QWORD PTR [rdx+rcx*8],rax
   1e4c6:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
   1e4ca:	83 7d a4 1e          	cmp    DWORD PTR [rbp-0x5c],0x1e
   1e4ce:	0f 86 3f ff ff ff    	jbe    1e413 <get_exp_params_ali+0xb72>
   1e4d4:	c7 45 a0 00 00 00 00 	mov    DWORD PTR [rbp-0x60],0x0
   1e4db:	e9 01 01 00 00       	jmp    1e5e1 <get_exp_params_ali+0xd40>
   1e4e0:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1e4e4:	75 6a                	jne    1e550 <get_exp_params_ali+0xcaf>
   1e4e6:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1e4e9:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1e4f1:	48 8d 05 88 de 1c 00 	lea    rax,[rip+0x1cde88]        # 1ec380 <TetraloopdH>
   1e4f8:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1e4fb:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1e4ff:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1e502:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1e50a:	48 8d 05 6f de 1c 00 	lea    rax,[rip+0x1cde6f]        # 1ec380 <TetraloopdH>
   1e511:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   1e514:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1e517:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   1e51f:	48 8d 05 ba dd 1c 00 	lea    rax,[rip+0x1cddba]        # 1ec2e0 <Tetraloop37>
   1e526:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   1e529:	29 c2                	sub    edx,eax
   1e52b:	89 d0                	mov    eax,edx
   1e52d:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1e531:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1e536:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1e53a:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1e53e:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1e542:	f3 0f 7e 0d e6 3a 01 00 	movq   xmm1,QWORD PTR [rip+0x13ae6]        # 32030 <Law_and_Order+0x5f0>
   1e54a:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1e54e:	eb 60                	jmp    1e5b0 <get_exp_params_ali+0xd0f>
   1e550:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1e553:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1e55b:	48 8d 05 1e de 1c 00 	lea    rax,[rip+0x1cde1e]        # 1ec380 <TetraloopdH>
   1e562:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1e565:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1e569:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1e56c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1e574:	48 8d 05 05 de 1c 00 	lea    rax,[rip+0x1cde05]        # 1ec380 <TetraloopdH>
   1e57b:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   1e57e:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1e581:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   1e589:	48 8d 05 50 dd 1c 00 	lea    rax,[rip+0x1cdd50]        # 1ec2e0 <Tetraloop37>
   1e590:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   1e593:	29 c2                	sub    edx,eax
   1e595:	89 d0                	mov    eax,edx
   1e597:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1e59b:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1e5a0:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1e5a4:	f3 0f 7e 0d 84 3a 01 00 	movq   xmm1,QWORD PTR [rip+0x13a84]        # 32030 <Law_and_Order+0x5f0>
   1e5ac:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1e5b0:	f2 0f 10 0d a0 3a 01 00 	movsd  xmm1,QWORD PTR [rip+0x13aa0]        # 32058 <Law_and_Order+0x618>
   1e5b8:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1e5bc:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1e5c1:	e8 aa 54 fe ff       	call   3a70 <exp@plt>
   1e5c6:	66 48 0f 7e c0       	movq   rax,xmm0
   1e5cb:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   1e5cf:	8b 4d a0             	mov    ecx,DWORD PTR [rbp-0x60]
   1e5d2:	48 81 c1 06 c8 00 00 	add    rcx,0xc806
   1e5d9:	48 89 04 ca          	mov    QWORD PTR [rdx+rcx*8],rax
   1e5dd:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
   1e5e1:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1e5e4:	89 d0                	mov    eax,edx
   1e5e6:	c1 e0 03             	shl    eax,0x3
   1e5e9:	29 d0                	sub    eax,edx
   1e5eb:	89 c3                	mov    ebx,eax
   1e5ed:	48 8d 3d cc db 1c 00 	lea    rdi,[rip+0x1cdbcc]        # 1ec1c0 <Tetraloops>
   1e5f4:	e8 97 50 fe ff       	call   3690 <strlen@plt>
   1e5f9:	48 39 c3             	cmp    rbx,rax
   1e5fc:	0f 82 de fe ff ff    	jb     1e4e0 <get_exp_params_ali+0xc3f>
   1e602:	c7 45 a0 00 00 00 00 	mov    DWORD PTR [rbp-0x60],0x0
   1e609:	e9 01 01 00 00       	jmp    1e70f <get_exp_params_ali+0xe6e>
   1e60e:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1e612:	75 6a                	jne    1e67e <get_exp_params_ali+0xddd>
   1e614:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1e617:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1e61f:	48 8d 05 fa da 1c 00 	lea    rax,[rip+0x1cdafa]        # 1ec120 <TriloopdH>
   1e626:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1e629:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1e62d:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1e630:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1e638:	48 8d 05 e1 da 1c 00 	lea    rax,[rip+0x1cdae1]        # 1ec120 <TriloopdH>
   1e63f:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   1e642:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1e645:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   1e64d:	48 8d 05 2c da 1c 00 	lea    rax,[rip+0x1cda2c]        # 1ec080 <Triloop37>
   1e654:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   1e657:	29 c2                	sub    edx,eax
   1e659:	89 d0                	mov    eax,edx
   1e65b:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1e65f:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1e664:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1e668:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1e66c:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1e670:	f3 0f 7e 0d b8 39 01 00 	movq   xmm1,QWORD PTR [rip+0x139b8]        # 32030 <Law_and_Order+0x5f0>
   1e678:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1e67c:	eb 60                	jmp    1e6de <get_exp_params_ali+0xe3d>
   1e67e:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1e681:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1e689:	48 8d 05 90 da 1c 00 	lea    rax,[rip+0x1cda90]        # 1ec120 <TriloopdH>
   1e690:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1e693:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1e697:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1e69a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1e6a2:	48 8d 05 77 da 1c 00 	lea    rax,[rip+0x1cda77]        # 1ec120 <TriloopdH>
   1e6a9:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   1e6ac:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1e6af:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   1e6b7:	48 8d 05 c2 d9 1c 00 	lea    rax,[rip+0x1cd9c2]        # 1ec080 <Triloop37>
   1e6be:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   1e6c1:	29 c2                	sub    edx,eax
   1e6c3:	89 d0                	mov    eax,edx
   1e6c5:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1e6c9:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1e6ce:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1e6d2:	f3 0f 7e 0d 56 39 01 00 	movq   xmm1,QWORD PTR [rip+0x13956]        # 32030 <Law_and_Order+0x5f0>
   1e6da:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1e6de:	f2 0f 10 0d 72 39 01 00 	movsd  xmm1,QWORD PTR [rip+0x13972]        # 32058 <Law_and_Order+0x618>
   1e6e6:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1e6ea:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1e6ef:	e8 7c 53 fe ff       	call   3a70 <exp@plt>
   1e6f4:	66 48 0f 7e c0       	movq   rax,xmm0
   1e6f9:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   1e6fd:	8b 4d a0             	mov    ecx,DWORD PTR [rbp-0x60]
   1e700:	48 81 c1 2e c8 00 00 	add    rcx,0xc82e
   1e707:	48 89 04 ca          	mov    QWORD PTR [rdx+rcx*8],rax
   1e70b:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
   1e70f:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1e712:	89 d0                	mov    eax,edx
   1e714:	c1 e0 02             	shl    eax,0x2
   1e717:	01 d0                	add    eax,edx
   1e719:	89 c3                	mov    ebx,eax
   1e71b:	48 8d 3d 5e d8 1c 00 	lea    rdi,[rip+0x1cd85e]        # 1ebf80 <Triloops>
   1e722:	e8 69 4f fe ff       	call   3690 <strlen@plt>
   1e727:	48 39 c3             	cmp    rbx,rax
   1e72a:	0f 82 de fe ff ff    	jb     1e60e <get_exp_params_ali+0xd6d>
   1e730:	c7 45 a0 00 00 00 00 	mov    DWORD PTR [rbp-0x60],0x0
   1e737:	e9 01 01 00 00       	jmp    1e83d <get_exp_params_ali+0xf9c>
   1e73c:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1e740:	75 6a                	jne    1e7ac <get_exp_params_ali+0xf0b>
   1e742:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1e745:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1e74d:	48 8d 05 ec de 1c 00 	lea    rax,[rip+0x1cdeec]        # 1ec640 <HexaloopdH>
   1e754:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1e757:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1e75b:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1e75e:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1e766:	48 8d 05 d3 de 1c 00 	lea    rax,[rip+0x1cded3]        # 1ec640 <HexaloopdH>
   1e76d:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   1e770:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1e773:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   1e77b:	48 8d 05 1e de 1c 00 	lea    rax,[rip+0x1cde1e]        # 1ec5a0 <Hexaloop37>
   1e782:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   1e785:	29 c2                	sub    edx,eax
   1e787:	89 d0                	mov    eax,edx
   1e789:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1e78d:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1e792:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1e796:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1e79a:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1e79e:	f3 0f 7e 0d 8a 38 01 00 	movq   xmm1,QWORD PTR [rip+0x1388a]        # 32030 <Law_and_Order+0x5f0>
   1e7a6:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1e7aa:	eb 60                	jmp    1e80c <get_exp_params_ali+0xf6b>
   1e7ac:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1e7af:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1e7b7:	48 8d 05 82 de 1c 00 	lea    rax,[rip+0x1cde82]        # 1ec640 <HexaloopdH>
   1e7be:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1e7c1:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1e7c5:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1e7c8:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1e7d0:	48 8d 05 69 de 1c 00 	lea    rax,[rip+0x1cde69]        # 1ec640 <HexaloopdH>
   1e7d7:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   1e7da:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
   1e7dd:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   1e7e5:	48 8d 05 b4 dd 1c 00 	lea    rax,[rip+0x1cddb4]        # 1ec5a0 <Hexaloop37>
   1e7ec:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   1e7ef:	29 c2                	sub    edx,eax
   1e7f1:	89 d0                	mov    eax,edx
   1e7f3:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1e7f7:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1e7fc:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1e800:	f3 0f 7e 0d 28 38 01 00 	movq   xmm1,QWORD PTR [rip+0x13828]        # 32030 <Law_and_Order+0x5f0>
   1e808:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1e80c:	f2 0f 10 0d 44 38 01 00 	movsd  xmm1,QWORD PTR [rip+0x13844]        # 32058 <Law_and_Order+0x618>
   1e814:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1e818:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1e81d:	e8 4e 52 fe ff       	call   3a70 <exp@plt>
   1e822:	66 48 0f 7e c0       	movq   rax,xmm0
   1e827:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   1e82b:	8b 4d a0             	mov    ecx,DWORD PTR [rbp-0x60]
   1e82e:	48 81 c1 56 c8 00 00 	add    rcx,0xc856
   1e835:	48 89 04 ca          	mov    QWORD PTR [rdx+rcx*8],rax
   1e839:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
   1e83d:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1e840:	89 d0                	mov    eax,edx
   1e842:	c1 e0 03             	shl    eax,0x3
   1e845:	01 d0                	add    eax,edx
   1e847:	89 c3                	mov    ebx,eax
   1e849:	48 8d 3d d0 db 1c 00 	lea    rdi,[rip+0x1cdbd0]        # 1ec420 <Hexaloops>
   1e850:	e8 3b 4e fe ff       	call   3690 <strlen@plt>
   1e855:	48 39 c3             	cmp    rbx,rax
   1e858:	0f 82 de fe ff ff    	jb     1e73c <get_exp_params_ali+0xe9b>
   1e85e:	c7 45 a0 00 00 00 00 	mov    DWORD PTR [rbp-0x60],0x0
   1e865:	e9 a8 00 00 00       	jmp    1e912 <get_exp_params_ali+0x1071>
   1e86a:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1e86e:	75 3d                	jne    1e8ad <get_exp_params_ali+0x100c>
   1e870:	8b 05 9e a9 1c 00    	mov    eax,DWORD PTR [rip+0x1ca99e]        # 1e9214 <ML_interndH>
   1e876:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1e87a:	8b 15 94 a9 1c 00    	mov    edx,DWORD PTR [rip+0x1ca994]        # 1e9214 <ML_interndH>
   1e880:	8b 05 8a a9 1c 00    	mov    eax,DWORD PTR [rip+0x1ca98a]        # 1e9210 <ML_intern37>
   1e886:	29 c2                	sub    edx,eax
   1e888:	89 d0                	mov    eax,edx
   1e88a:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1e88e:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1e893:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1e897:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1e89b:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1e89f:	f3 0f 7e 0d 89 37 01 00 	movq   xmm1,QWORD PTR [rip+0x13789]        # 32030 <Law_and_Order+0x5f0>
   1e8a7:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1e8ab:	eb 33                	jmp    1e8e0 <get_exp_params_ali+0x103f>
   1e8ad:	8b 05 61 a9 1c 00    	mov    eax,DWORD PTR [rip+0x1ca961]        # 1e9214 <ML_interndH>
   1e8b3:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1e8b7:	8b 15 57 a9 1c 00    	mov    edx,DWORD PTR [rip+0x1ca957]        # 1e9214 <ML_interndH>
   1e8bd:	8b 05 4d a9 1c 00    	mov    eax,DWORD PTR [rip+0x1ca94d]        # 1e9210 <ML_intern37>
   1e8c3:	29 c2                	sub    edx,eax
   1e8c5:	89 d0                	mov    eax,edx
   1e8c7:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1e8cb:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1e8d0:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1e8d4:	f3 0f 7e 0d 54 37 01 00 	movq   xmm1,QWORD PTR [rip+0x13754]        # 32030 <Law_and_Order+0x5f0>
   1e8dc:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1e8e0:	f2 0f 10 0d 70 37 01 00 	movsd  xmm1,QWORD PTR [rip+0x13770]        # 32058 <Law_and_Order+0x618>
   1e8e8:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1e8ec:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1e8f1:	e8 7a 51 fe ff       	call   3a70 <exp@plt>
   1e8f6:	66 48 0f 7e c0       	movq   rax,xmm0
   1e8fb:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   1e8ff:	8b 4d a0             	mov    ecx,DWORD PTR [rbp-0x60]
   1e902:	48 81 c1 fa c7 00 00 	add    rcx,0xc7fa
   1e909:	48 89 44 ca 08       	mov    QWORD PTR [rdx+rcx*8+0x8],rax
   1e90e:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
   1e912:	83 7d a0 07          	cmp    DWORD PTR [rbp-0x60],0x7
   1e916:	0f 86 4e ff ff ff    	jbe    1e86a <get_exp_params_ali+0xfc9>
   1e91c:	c7 45 a0 00 00 00 00 	mov    DWORD PTR [rbp-0x60],0x0
   1e923:	e9 93 13 00 00       	jmp    1fcbb <get_exp_params_ali+0x241a>
   1e928:	c7 45 a4 00 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x0
   1e92f:	e9 79 13 00 00       	jmp    1fcad <get_exp_params_ali+0x240c>
   1e934:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   1e938:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
   1e93b:	85 c0                	test   eax,eax
   1e93d:	0f 84 f8 12 00 00    	je     1fc3b <get_exp_params_ali+0x239a>
   1e943:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1e947:	0f 85 74 02 00 00    	jne    1ebc1 <get_exp_params_ali+0x1320>
   1e94d:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1e951:	0f 85 92 00 00 00    	jne    1e9e9 <get_exp_params_ali+0x1148>
   1e957:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1e95a:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1e95d:	48 89 d0             	mov    rax,rdx
   1e960:	48 c1 e0 02          	shl    rax,0x2
   1e964:	48 01 d0             	add    rax,rdx
   1e967:	48 01 c8             	add    rax,rcx
   1e96a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1e972:	48 8d 05 c7 d4 1c 00 	lea    rax,[rip+0x1cd4c7]        # 1ebe40 <dangle5_dH>
   1e979:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1e97c:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1e980:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1e983:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1e986:	48 89 d0             	mov    rax,rdx
   1e989:	48 c1 e0 02          	shl    rax,0x2
   1e98d:	48 01 d0             	add    rax,rdx
   1e990:	48 01 c8             	add    rax,rcx
   1e993:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1e99b:	48 8d 05 9e d4 1c 00 	lea    rax,[rip+0x1cd49e]        # 1ebe40 <dangle5_dH>
   1e9a2:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1e9a5:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1e9a8:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1e9ab:	48 89 d0             	mov    rax,rdx
   1e9ae:	48 c1 e0 02          	shl    rax,0x2
   1e9b2:	48 01 d0             	add    rax,rdx
   1e9b5:	48 01 f0             	add    rax,rsi
   1e9b8:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1e9c0:	48 8d 05 39 d3 1c 00 	lea    rax,[rip+0x1cd339]        # 1ebd00 <dangle5_37>
   1e9c7:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1e9ca:	29 c1                	sub    ecx,eax
   1e9cc:	89 c8                	mov    eax,ecx
   1e9ce:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1e9d2:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1e9d7:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1e9db:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1e9df:	85 c0                	test   eax,eax
   1e9e1:	0f 9f c0             	setg   al
   1e9e4:	e9 8f 00 00 00       	jmp    1ea78 <get_exp_params_ali+0x11d7>
   1e9e9:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1e9ec:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1e9ef:	48 89 d0             	mov    rax,rdx
   1e9f2:	48 c1 e0 02          	shl    rax,0x2
   1e9f6:	48 01 d0             	add    rax,rdx
   1e9f9:	48 01 c8             	add    rax,rcx
   1e9fc:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ea04:	48 8d 05 35 d4 1c 00 	lea    rax,[rip+0x1cd435]        # 1ebe40 <dangle5_dH>
   1ea0b:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1ea0e:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1ea12:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1ea15:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1ea18:	48 89 d0             	mov    rax,rdx
   1ea1b:	48 c1 e0 02          	shl    rax,0x2
   1ea1f:	48 01 d0             	add    rax,rdx
   1ea22:	48 01 c8             	add    rax,rcx
   1ea25:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ea2d:	48 8d 05 0c d4 1c 00 	lea    rax,[rip+0x1cd40c]        # 1ebe40 <dangle5_dH>
   1ea34:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1ea37:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1ea3a:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1ea3d:	48 89 d0             	mov    rax,rdx
   1ea40:	48 c1 e0 02          	shl    rax,0x2
   1ea44:	48 01 d0             	add    rax,rdx
   1ea47:	48 01 f0             	add    rax,rsi
   1ea4a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ea52:	48 8d 05 a7 d2 1c 00 	lea    rax,[rip+0x1cd2a7]        # 1ebd00 <dangle5_37>
   1ea59:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1ea5c:	29 c1                	sub    ecx,eax
   1ea5e:	89 c8                	mov    eax,ecx
   1ea60:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1ea64:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1ea69:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1ea6d:	66 0f ef c9          	pxor   xmm1,xmm1
   1ea71:	66 0f 2f c1          	comisd xmm0,xmm1
   1ea75:	0f 97 c0             	seta   al
   1ea78:	84 c0                	test   al,al
   1ea7a:	74 09                	je     1ea85 <get_exp_params_ali+0x11e4>
   1ea7c:	66 0f ef c0          	pxor   xmm0,xmm0
   1ea80:	e9 fd 07 00 00       	jmp    1f282 <get_exp_params_ali+0x19e1>
   1ea85:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1ea89:	0f 85 9d 00 00 00    	jne    1eb2c <get_exp_params_ali+0x128b>
   1ea8f:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1ea92:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1ea95:	48 89 d0             	mov    rax,rdx
   1ea98:	48 c1 e0 02          	shl    rax,0x2
   1ea9c:	48 01 d0             	add    rax,rdx
   1ea9f:	48 01 c8             	add    rax,rcx
   1eaa2:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1eaaa:	48 8d 05 8f d3 1c 00 	lea    rax,[rip+0x1cd38f]        # 1ebe40 <dangle5_dH>
   1eab1:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1eab4:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1eab8:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1eabb:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1eabe:	48 89 d0             	mov    rax,rdx
   1eac1:	48 c1 e0 02          	shl    rax,0x2
   1eac5:	48 01 d0             	add    rax,rdx
   1eac8:	48 01 c8             	add    rax,rcx
   1eacb:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ead3:	48 8d 05 66 d3 1c 00 	lea    rax,[rip+0x1cd366]        # 1ebe40 <dangle5_dH>
   1eada:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1eadd:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1eae0:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1eae3:	48 89 d0             	mov    rax,rdx
   1eae6:	48 c1 e0 02          	shl    rax,0x2
   1eaea:	48 01 d0             	add    rax,rdx
   1eaed:	48 01 f0             	add    rax,rsi
   1eaf0:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1eaf8:	48 8d 05 01 d2 1c 00 	lea    rax,[rip+0x1cd201]        # 1ebd00 <dangle5_37>
   1eaff:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1eb02:	29 c1                	sub    ecx,eax
   1eb04:	89 c8                	mov    eax,ecx
   1eb06:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1eb0a:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1eb0f:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1eb13:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1eb17:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1eb1b:	f3 0f 7e 0d 0d 35 01 00 	movq   xmm1,QWORD PTR [rip+0x1350d]        # 32030 <Law_and_Order+0x5f0>
   1eb23:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1eb27:	e9 56 07 00 00       	jmp    1f282 <get_exp_params_ali+0x19e1>
   1eb2c:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1eb2f:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1eb32:	48 89 d0             	mov    rax,rdx
   1eb35:	48 c1 e0 02          	shl    rax,0x2
   1eb39:	48 01 d0             	add    rax,rdx
   1eb3c:	48 01 c8             	add    rax,rcx
   1eb3f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1eb47:	48 8d 05 f2 d2 1c 00 	lea    rax,[rip+0x1cd2f2]        # 1ebe40 <dangle5_dH>
   1eb4e:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1eb51:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1eb55:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1eb58:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1eb5b:	48 89 d0             	mov    rax,rdx
   1eb5e:	48 c1 e0 02          	shl    rax,0x2
   1eb62:	48 01 d0             	add    rax,rdx
   1eb65:	48 01 c8             	add    rax,rcx
   1eb68:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1eb70:	48 8d 05 c9 d2 1c 00 	lea    rax,[rip+0x1cd2c9]        # 1ebe40 <dangle5_dH>
   1eb77:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1eb7a:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1eb7d:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1eb80:	48 89 d0             	mov    rax,rdx
   1eb83:	48 c1 e0 02          	shl    rax,0x2
   1eb87:	48 01 d0             	add    rax,rdx
   1eb8a:	48 01 f0             	add    rax,rsi
   1eb8d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1eb95:	48 8d 05 64 d1 1c 00 	lea    rax,[rip+0x1cd164]        # 1ebd00 <dangle5_37>
   1eb9c:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1eb9f:	29 c1                	sub    ecx,eax
   1eba1:	89 c8                	mov    eax,ecx
   1eba3:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1eba7:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1ebac:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1ebb0:	f3 0f 7e 0d 78 34 01 00 	movq   xmm1,QWORD PTR [rip+0x13478]        # 32030 <Law_and_Order+0x5f0>
   1ebb8:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1ebbc:	e9 c1 06 00 00       	jmp    1f282 <get_exp_params_ali+0x19e1>
   1ebc1:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1ebc5:	0f 85 9d 00 00 00    	jne    1ec68 <get_exp_params_ali+0x13c7>
   1ebcb:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1ebce:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1ebd1:	48 89 d0             	mov    rax,rdx
   1ebd4:	48 c1 e0 02          	shl    rax,0x2
   1ebd8:	48 01 d0             	add    rax,rdx
   1ebdb:	48 01 c8             	add    rax,rcx
   1ebde:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ebe6:	48 8d 05 53 d2 1c 00 	lea    rax,[rip+0x1cd253]        # 1ebe40 <dangle5_dH>
   1ebed:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1ebf0:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1ebf4:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1ebf7:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1ebfa:	48 89 d0             	mov    rax,rdx
   1ebfd:	48 c1 e0 02          	shl    rax,0x2
   1ec01:	48 01 d0             	add    rax,rdx
   1ec04:	48 01 c8             	add    rax,rcx
   1ec07:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ec0f:	48 8d 05 2a d2 1c 00 	lea    rax,[rip+0x1cd22a]        # 1ebe40 <dangle5_dH>
   1ec16:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1ec19:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1ec1c:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1ec1f:	48 89 d0             	mov    rax,rdx
   1ec22:	48 c1 e0 02          	shl    rax,0x2
   1ec26:	48 01 d0             	add    rax,rdx
   1ec29:	48 01 f0             	add    rax,rsi
   1ec2c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ec34:	48 8d 05 c5 d0 1c 00 	lea    rax,[rip+0x1cd0c5]        # 1ebd00 <dangle5_37>
   1ec3b:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1ec3e:	29 c1                	sub    ecx,eax
   1ec40:	89 c8                	mov    eax,ecx
   1ec42:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1ec46:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1ec4b:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1ec4f:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1ec53:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1ec57:	f3 0f 7e 0d d1 33 01 00 	movq   xmm1,QWORD PTR [rip+0x133d1]        # 32030 <Law_and_Order+0x5f0>
   1ec5f:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1ec63:	e9 90 00 00 00       	jmp    1ecf8 <get_exp_params_ali+0x1457>
   1ec68:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1ec6b:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1ec6e:	48 89 d0             	mov    rax,rdx
   1ec71:	48 c1 e0 02          	shl    rax,0x2
   1ec75:	48 01 d0             	add    rax,rdx
   1ec78:	48 01 c8             	add    rax,rcx
   1ec7b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ec83:	48 8d 05 b6 d1 1c 00 	lea    rax,[rip+0x1cd1b6]        # 1ebe40 <dangle5_dH>
   1ec8a:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1ec8d:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1ec91:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1ec94:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1ec97:	48 89 d0             	mov    rax,rdx
   1ec9a:	48 c1 e0 02          	shl    rax,0x2
   1ec9e:	48 01 d0             	add    rax,rdx
   1eca1:	48 01 c8             	add    rax,rcx
   1eca4:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ecac:	48 8d 05 8d d1 1c 00 	lea    rax,[rip+0x1cd18d]        # 1ebe40 <dangle5_dH>
   1ecb3:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1ecb6:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1ecb9:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1ecbc:	48 89 d0             	mov    rax,rdx
   1ecbf:	48 c1 e0 02          	shl    rax,0x2
   1ecc3:	48 01 d0             	add    rax,rdx
   1ecc6:	48 01 f0             	add    rax,rsi
   1ecc9:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ecd1:	48 8d 05 28 d0 1c 00 	lea    rax,[rip+0x1cd028]        # 1ebd00 <dangle5_37>
   1ecd8:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1ecdb:	29 c1                	sub    ecx,eax
   1ecdd:	89 c8                	mov    eax,ecx
   1ecdf:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1ece3:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1ece8:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1ecec:	f3 0f 7e 0d 3c 33 01 00 	movq   xmm1,QWORD PTR [rip+0x1333c]        # 32030 <Law_and_Order+0x5f0>
   1ecf4:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1ecf8:	f2 0f 10 0d 58 33 01 00 	movsd  xmm1,QWORD PTR [rip+0x13358]        # 32058 <Law_and_Order+0x618>
   1ed00:	f2 0f 5e c1          	divsd  xmm0,xmm1
   1ed04:	66 0f 28 c8          	movapd xmm1,xmm0
   1ed08:	f2 0f 10 05 60 33 01 00 	movsd  xmm0,QWORD PTR [rip+0x13360]        # 32070 <Law_and_Order+0x630>
   1ed10:	66 0f 2f c1          	comisd xmm0,xmm1
   1ed14:	76 09                	jbe    1ed1f <get_exp_params_ali+0x147e>
   1ed16:	66 0f ef c0          	pxor   xmm0,xmm0
   1ed1a:	e9 63 05 00 00       	jmp    1f282 <get_exp_params_ali+0x19e1>
   1ed1f:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1ed23:	0f 85 9d 00 00 00    	jne    1edc6 <get_exp_params_ali+0x1525>
   1ed29:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1ed2c:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1ed2f:	48 89 d0             	mov    rax,rdx
   1ed32:	48 c1 e0 02          	shl    rax,0x2
   1ed36:	48 01 d0             	add    rax,rdx
   1ed39:	48 01 c8             	add    rax,rcx
   1ed3c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ed44:	48 8d 05 f5 d0 1c 00 	lea    rax,[rip+0x1cd0f5]        # 1ebe40 <dangle5_dH>
   1ed4b:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1ed4e:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1ed52:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1ed55:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1ed58:	48 89 d0             	mov    rax,rdx
   1ed5b:	48 c1 e0 02          	shl    rax,0x2
   1ed5f:	48 01 d0             	add    rax,rdx
   1ed62:	48 01 c8             	add    rax,rcx
   1ed65:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ed6d:	48 8d 05 cc d0 1c 00 	lea    rax,[rip+0x1cd0cc]        # 1ebe40 <dangle5_dH>
   1ed74:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1ed77:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1ed7a:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1ed7d:	48 89 d0             	mov    rax,rdx
   1ed80:	48 c1 e0 02          	shl    rax,0x2
   1ed84:	48 01 d0             	add    rax,rdx
   1ed87:	48 01 f0             	add    rax,rsi
   1ed8a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ed92:	48 8d 05 67 cf 1c 00 	lea    rax,[rip+0x1ccf67]        # 1ebd00 <dangle5_37>
   1ed99:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1ed9c:	29 c1                	sub    ecx,eax
   1ed9e:	89 c8                	mov    eax,ecx
   1eda0:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1eda4:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1eda9:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1edad:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1edb1:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1edb5:	f3 0f 7e 0d 73 32 01 00 	movq   xmm1,QWORD PTR [rip+0x13273]        # 32030 <Law_and_Order+0x5f0>
   1edbd:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1edc1:	e9 90 00 00 00       	jmp    1ee56 <get_exp_params_ali+0x15b5>
   1edc6:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1edc9:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1edcc:	48 89 d0             	mov    rax,rdx
   1edcf:	48 c1 e0 02          	shl    rax,0x2
   1edd3:	48 01 d0             	add    rax,rdx
   1edd6:	48 01 c8             	add    rax,rcx
   1edd9:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ede1:	48 8d 05 58 d0 1c 00 	lea    rax,[rip+0x1cd058]        # 1ebe40 <dangle5_dH>
   1ede8:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1edeb:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1edef:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1edf2:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1edf5:	48 89 d0             	mov    rax,rdx
   1edf8:	48 c1 e0 02          	shl    rax,0x2
   1edfc:	48 01 d0             	add    rax,rdx
   1edff:	48 01 c8             	add    rax,rcx
   1ee02:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ee0a:	48 8d 05 2f d0 1c 00 	lea    rax,[rip+0x1cd02f]        # 1ebe40 <dangle5_dH>
   1ee11:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1ee14:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1ee17:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1ee1a:	48 89 d0             	mov    rax,rdx
   1ee1d:	48 c1 e0 02          	shl    rax,0x2
   1ee21:	48 01 d0             	add    rax,rdx
   1ee24:	48 01 f0             	add    rax,rsi
   1ee27:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ee2f:	48 8d 05 ca ce 1c 00 	lea    rax,[rip+0x1cceca]        # 1ebd00 <dangle5_37>
   1ee36:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1ee39:	29 c1                	sub    ecx,eax
   1ee3b:	89 c8                	mov    eax,ecx
   1ee3d:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1ee41:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1ee46:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1ee4a:	f3 0f 7e 0d de 31 01 00 	movq   xmm1,QWORD PTR [rip+0x131de]        # 32030 <Law_and_Order+0x5f0>
   1ee52:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1ee56:	f2 0f 10 0d fa 31 01 00 	movsd  xmm1,QWORD PTR [rip+0x131fa]        # 32058 <Law_and_Order+0x618>
   1ee5e:	f2 0f 5e c1          	divsd  xmm0,xmm1
   1ee62:	66 0f 2f 05 0e 32 01 00 	comisd xmm0,QWORD PTR [rip+0x1320e]        # 32078 <Law_and_Order+0x638>
   1ee6a:	0f 86 3c 01 00 00    	jbe    1efac <get_exp_params_ali+0x170b>
   1ee70:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1ee74:	0f 85 9d 00 00 00    	jne    1ef17 <get_exp_params_ali+0x1676>
   1ee7a:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1ee7d:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1ee80:	48 89 d0             	mov    rax,rdx
   1ee83:	48 c1 e0 02          	shl    rax,0x2
   1ee87:	48 01 d0             	add    rax,rdx
   1ee8a:	48 01 c8             	add    rax,rcx
   1ee8d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ee95:	48 8d 05 a4 cf 1c 00 	lea    rax,[rip+0x1ccfa4]        # 1ebe40 <dangle5_dH>
   1ee9c:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1ee9f:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1eea3:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1eea6:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1eea9:	48 89 d0             	mov    rax,rdx
   1eeac:	48 c1 e0 02          	shl    rax,0x2
   1eeb0:	48 01 d0             	add    rax,rdx
   1eeb3:	48 01 c8             	add    rax,rcx
   1eeb6:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1eebe:	48 8d 05 7b cf 1c 00 	lea    rax,[rip+0x1ccf7b]        # 1ebe40 <dangle5_dH>
   1eec5:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1eec8:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1eecb:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1eece:	48 89 d0             	mov    rax,rdx
   1eed1:	48 c1 e0 02          	shl    rax,0x2
   1eed5:	48 01 d0             	add    rax,rdx
   1eed8:	48 01 f0             	add    rax,rsi
   1eedb:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1eee3:	48 8d 05 16 ce 1c 00 	lea    rax,[rip+0x1cce16]        # 1ebd00 <dangle5_37>
   1eeea:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1eeed:	29 c1                	sub    ecx,eax
   1eeef:	89 c8                	mov    eax,ecx
   1eef1:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1eef5:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1eefa:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1eefe:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1ef02:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1ef06:	f3 0f 7e 0d 22 31 01 00 	movq   xmm1,QWORD PTR [rip+0x13122]        # 32030 <Law_and_Order+0x5f0>
   1ef0e:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1ef12:	e9 6b 03 00 00       	jmp    1f282 <get_exp_params_ali+0x19e1>
   1ef17:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1ef1a:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1ef1d:	48 89 d0             	mov    rax,rdx
   1ef20:	48 c1 e0 02          	shl    rax,0x2
   1ef24:	48 01 d0             	add    rax,rdx
   1ef27:	48 01 c8             	add    rax,rcx
   1ef2a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ef32:	48 8d 05 07 cf 1c 00 	lea    rax,[rip+0x1ccf07]        # 1ebe40 <dangle5_dH>
   1ef39:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1ef3c:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1ef40:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1ef43:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1ef46:	48 89 d0             	mov    rax,rdx
   1ef49:	48 c1 e0 02          	shl    rax,0x2
   1ef4d:	48 01 d0             	add    rax,rdx
   1ef50:	48 01 c8             	add    rax,rcx
   1ef53:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ef5b:	48 8d 05 de ce 1c 00 	lea    rax,[rip+0x1ccede]        # 1ebe40 <dangle5_dH>
   1ef62:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1ef65:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1ef68:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1ef6b:	48 89 d0             	mov    rax,rdx
   1ef6e:	48 c1 e0 02          	shl    rax,0x2
   1ef72:	48 01 d0             	add    rax,rdx
   1ef75:	48 01 f0             	add    rax,rsi
   1ef78:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ef80:	48 8d 05 79 cd 1c 00 	lea    rax,[rip+0x1ccd79]        # 1ebd00 <dangle5_37>
   1ef87:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1ef8a:	29 c1                	sub    ecx,eax
   1ef8c:	89 c8                	mov    eax,ecx
   1ef8e:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1ef92:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1ef97:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1ef9b:	f3 0f 7e 0d 8d 30 01 00 	movq   xmm1,QWORD PTR [rip+0x1308d]        # 32030 <Law_and_Order+0x5f0>
   1efa3:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1efa7:	e9 d6 02 00 00       	jmp    1f282 <get_exp_params_ali+0x19e1>
   1efac:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1efb0:	0f 85 9d 00 00 00    	jne    1f053 <get_exp_params_ali+0x17b2>
   1efb6:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1efb9:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1efbc:	48 89 d0             	mov    rax,rdx
   1efbf:	48 c1 e0 02          	shl    rax,0x2
   1efc3:	48 01 d0             	add    rax,rdx
   1efc6:	48 01 c8             	add    rax,rcx
   1efc9:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1efd1:	48 8d 05 68 ce 1c 00 	lea    rax,[rip+0x1cce68]        # 1ebe40 <dangle5_dH>
   1efd8:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1efdb:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1efdf:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1efe2:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1efe5:	48 89 d0             	mov    rax,rdx
   1efe8:	48 c1 e0 02          	shl    rax,0x2
   1efec:	48 01 d0             	add    rax,rdx
   1efef:	48 01 c8             	add    rax,rcx
   1eff2:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1effa:	48 8d 05 3f ce 1c 00 	lea    rax,[rip+0x1cce3f]        # 1ebe40 <dangle5_dH>
   1f001:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1f004:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1f007:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f00a:	48 89 d0             	mov    rax,rdx
   1f00d:	48 c1 e0 02          	shl    rax,0x2
   1f011:	48 01 d0             	add    rax,rdx
   1f014:	48 01 f0             	add    rax,rsi
   1f017:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f01f:	48 8d 05 da cc 1c 00 	lea    rax,[rip+0x1cccda]        # 1ebd00 <dangle5_37>
   1f026:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1f029:	29 c1                	sub    ecx,eax
   1f02b:	89 c8                	mov    eax,ecx
   1f02d:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1f031:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1f036:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1f03a:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1f03e:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1f042:	f3 0f 7e 0d e6 2f 01 00 	movq   xmm1,QWORD PTR [rip+0x12fe6]        # 32030 <Law_and_Order+0x5f0>
   1f04a:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1f04e:	e9 90 00 00 00       	jmp    1f0e3 <get_exp_params_ali+0x1842>
   1f053:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1f056:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f059:	48 89 d0             	mov    rax,rdx
   1f05c:	48 c1 e0 02          	shl    rax,0x2
   1f060:	48 01 d0             	add    rax,rdx
   1f063:	48 01 c8             	add    rax,rcx
   1f066:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f06e:	48 8d 05 cb cd 1c 00 	lea    rax,[rip+0x1ccdcb]        # 1ebe40 <dangle5_dH>
   1f075:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1f078:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1f07c:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1f07f:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f082:	48 89 d0             	mov    rax,rdx
   1f085:	48 c1 e0 02          	shl    rax,0x2
   1f089:	48 01 d0             	add    rax,rdx
   1f08c:	48 01 c8             	add    rax,rcx
   1f08f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f097:	48 8d 05 a2 cd 1c 00 	lea    rax,[rip+0x1ccda2]        # 1ebe40 <dangle5_dH>
   1f09e:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1f0a1:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1f0a4:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f0a7:	48 89 d0             	mov    rax,rdx
   1f0aa:	48 c1 e0 02          	shl    rax,0x2
   1f0ae:	48 01 d0             	add    rax,rdx
   1f0b1:	48 01 f0             	add    rax,rsi
   1f0b4:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f0bc:	48 8d 05 3d cc 1c 00 	lea    rax,[rip+0x1ccc3d]        # 1ebd00 <dangle5_37>
   1f0c3:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1f0c6:	29 c1                	sub    ecx,eax
   1f0c8:	89 c8                	mov    eax,ecx
   1f0ca:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1f0ce:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1f0d3:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1f0d7:	f3 0f 7e 0d 51 2f 01 00 	movq   xmm1,QWORD PTR [rip+0x12f51]        # 32030 <Law_and_Order+0x5f0>
   1f0df:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1f0e3:	f2 0f 10 0d 6d 2f 01 00 	movsd  xmm1,QWORD PTR [rip+0x12f6d]        # 32058 <Law_and_Order+0x618>
   1f0eb:	f2 0f 5e c1          	divsd  xmm0,xmm1
   1f0ef:	f2 0f 10 0d 89 2f 01 00 	movsd  xmm1,QWORD PTR [rip+0x12f89]        # 32080 <Law_and_Order+0x640>
   1f0f7:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1f0fb:	e8 f0 44 fe ff       	call   35f0 <sin@plt>
   1f100:	f2 0f 10 0d 00 2f 01 00 	movsd  xmm1,QWORD PTR [rip+0x12f00]        # 32008 <Law_and_Order+0x5c8>
   1f108:	f2 0f 58 c8          	addsd  xmm1,xmm0
   1f10c:	f2 0f 10 05 74 2f 01 00 	movsd  xmm0,QWORD PTR [rip+0x12f74]        # 32088 <Law_and_Order+0x648>
   1f114:	f2 0f 59 c8          	mulsd  xmm1,xmm0
   1f118:	f2 0f 11 4d 80       	movsd  QWORD PTR [rbp-0x80],xmm1
   1f11d:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1f121:	0f 85 9d 00 00 00    	jne    1f1c4 <get_exp_params_ali+0x1923>
   1f127:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1f12a:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f12d:	48 89 d0             	mov    rax,rdx
   1f130:	48 c1 e0 02          	shl    rax,0x2
   1f134:	48 01 d0             	add    rax,rdx
   1f137:	48 01 c8             	add    rax,rcx
   1f13a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f142:	48 8d 05 f7 cc 1c 00 	lea    rax,[rip+0x1cccf7]        # 1ebe40 <dangle5_dH>
   1f149:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1f14c:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1f150:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1f153:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f156:	48 89 d0             	mov    rax,rdx
   1f159:	48 c1 e0 02          	shl    rax,0x2
   1f15d:	48 01 d0             	add    rax,rdx
   1f160:	48 01 c8             	add    rax,rcx
   1f163:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f16b:	48 8d 05 ce cc 1c 00 	lea    rax,[rip+0x1cccce]        # 1ebe40 <dangle5_dH>
   1f172:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1f175:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1f178:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f17b:	48 89 d0             	mov    rax,rdx
   1f17e:	48 c1 e0 02          	shl    rax,0x2
   1f182:	48 01 d0             	add    rax,rdx
   1f185:	48 01 f0             	add    rax,rsi
   1f188:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f190:	48 8d 05 69 cb 1c 00 	lea    rax,[rip+0x1ccb69]        # 1ebd00 <dangle5_37>
   1f197:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1f19a:	29 c1                	sub    ecx,eax
   1f19c:	89 c8                	mov    eax,ecx
   1f19e:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1f1a2:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1f1a7:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1f1ab:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1f1af:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1f1b3:	f3 0f 7e 0d 75 2e 01 00 	movq   xmm1,QWORD PTR [rip+0x12e75]        # 32030 <Law_and_Order+0x5f0>
   1f1bb:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1f1bf:	e9 90 00 00 00       	jmp    1f254 <get_exp_params_ali+0x19b3>
   1f1c4:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1f1c7:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f1ca:	48 89 d0             	mov    rax,rdx
   1f1cd:	48 c1 e0 02          	shl    rax,0x2
   1f1d1:	48 01 d0             	add    rax,rdx
   1f1d4:	48 01 c8             	add    rax,rcx
   1f1d7:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f1df:	48 8d 05 5a cc 1c 00 	lea    rax,[rip+0x1ccc5a]        # 1ebe40 <dangle5_dH>
   1f1e6:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1f1e9:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1f1ed:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1f1f0:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f1f3:	48 89 d0             	mov    rax,rdx
   1f1f6:	48 c1 e0 02          	shl    rax,0x2
   1f1fa:	48 01 d0             	add    rax,rdx
   1f1fd:	48 01 c8             	add    rax,rcx
   1f200:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f208:	48 8d 05 31 cc 1c 00 	lea    rax,[rip+0x1ccc31]        # 1ebe40 <dangle5_dH>
   1f20f:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1f212:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1f215:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f218:	48 89 d0             	mov    rax,rdx
   1f21b:	48 c1 e0 02          	shl    rax,0x2
   1f21f:	48 01 d0             	add    rax,rdx
   1f222:	48 01 f0             	add    rax,rsi
   1f225:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f22d:	48 8d 05 cc ca 1c 00 	lea    rax,[rip+0x1ccacc]        # 1ebd00 <dangle5_37>
   1f234:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1f237:	29 c1                	sub    ecx,eax
   1f239:	89 c8                	mov    eax,ecx
   1f23b:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1f23f:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1f244:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1f248:	f3 0f 7e 0d e0 2d 01 00 	movq   xmm1,QWORD PTR [rip+0x12de0]        # 32030 <Law_and_Order+0x5f0>
   1f250:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1f254:	f2 0f 10 0d fc 2d 01 00 	movsd  xmm1,QWORD PTR [rip+0x12dfc]        # 32058 <Law_and_Order+0x618>
   1f25c:	f2 0f 5e c1          	divsd  xmm0,xmm1
   1f260:	f2 0f 10 0d 18 2e 01 00 	movsd  xmm1,QWORD PTR [rip+0x12e18]        # 32080 <Law_and_Order+0x640>
   1f268:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1f26c:	e8 7f 43 fe ff       	call   35f0 <sin@plt>
   1f271:	f2 0f 10 0d 8f 2d 01 00 	movsd  xmm1,QWORD PTR [rip+0x12d8f]        # 32008 <Law_and_Order+0x5c8>
   1f279:	f2 0f 58 c1          	addsd  xmm0,xmm1
   1f27d:	f2 0f 59 45 80       	mulsd  xmm0,QWORD PTR [rbp-0x80]
   1f282:	f2 0f 10 0d ce 2d 01 00 	movsd  xmm1,QWORD PTR [rip+0x12dce]        # 32058 <Law_and_Order+0x618>
   1f28a:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1f28e:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1f293:	e8 d8 47 fe ff       	call   3a70 <exp@plt>
   1f298:	66 48 0f 7e c1       	movq   rcx,xmm0
   1f29d:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
   1f2a1:	8b 7d a4             	mov    edi,DWORD PTR [rbp-0x5c]
   1f2a4:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f2a7:	48 89 d0             	mov    rax,rdx
   1f2aa:	48 c1 e0 02          	shl    rax,0x2
   1f2ae:	48 01 d0             	add    rax,rdx
   1f2b1:	48 01 f8             	add    rax,rdi
   1f2b4:	48 05 4e 05 00 00    	add    rax,0x54e
   1f2ba:	48 89 0c c6          	mov    QWORD PTR [rsi+rax*8],rcx
   1f2be:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1f2c2:	0f 85 74 02 00 00    	jne    1f53c <get_exp_params_ali+0x1c9b>
   1f2c8:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1f2cc:	0f 85 92 00 00 00    	jne    1f364 <get_exp_params_ali+0x1ac3>
   1f2d2:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1f2d5:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f2d8:	48 89 d0             	mov    rax,rdx
   1f2db:	48 c1 e0 02          	shl    rax,0x2
   1f2df:	48 01 d0             	add    rax,rdx
   1f2e2:	48 01 c8             	add    rax,rcx
   1f2e5:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f2ed:	48 8d 05 ec cb 1c 00 	lea    rax,[rip+0x1ccbec]        # 1ebee0 <dangle3_dH>
   1f2f4:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1f2f7:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1f2fb:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1f2fe:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f301:	48 89 d0             	mov    rax,rdx
   1f304:	48 c1 e0 02          	shl    rax,0x2
   1f308:	48 01 d0             	add    rax,rdx
   1f30b:	48 01 c8             	add    rax,rcx
   1f30e:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f316:	48 8d 05 c3 cb 1c 00 	lea    rax,[rip+0x1ccbc3]        # 1ebee0 <dangle3_dH>
   1f31d:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1f320:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1f323:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f326:	48 89 d0             	mov    rax,rdx
   1f329:	48 c1 e0 02          	shl    rax,0x2
   1f32d:	48 01 d0             	add    rax,rdx
   1f330:	48 01 f0             	add    rax,rsi
   1f333:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f33b:	48 8d 05 5e ca 1c 00 	lea    rax,[rip+0x1cca5e]        # 1ebda0 <dangle3_37>
   1f342:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1f345:	29 c1                	sub    ecx,eax
   1f347:	89 c8                	mov    eax,ecx
   1f349:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1f34d:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1f352:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1f356:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1f35a:	85 c0                	test   eax,eax
   1f35c:	0f 9f c0             	setg   al
   1f35f:	e9 8f 00 00 00       	jmp    1f3f3 <get_exp_params_ali+0x1b52>
   1f364:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1f367:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f36a:	48 89 d0             	mov    rax,rdx
   1f36d:	48 c1 e0 02          	shl    rax,0x2
   1f371:	48 01 d0             	add    rax,rdx
   1f374:	48 01 c8             	add    rax,rcx
   1f377:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f37f:	48 8d 05 5a cb 1c 00 	lea    rax,[rip+0x1ccb5a]        # 1ebee0 <dangle3_dH>
   1f386:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1f389:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1f38d:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1f390:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f393:	48 89 d0             	mov    rax,rdx
   1f396:	48 c1 e0 02          	shl    rax,0x2
   1f39a:	48 01 d0             	add    rax,rdx
   1f39d:	48 01 c8             	add    rax,rcx
   1f3a0:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f3a8:	48 8d 05 31 cb 1c 00 	lea    rax,[rip+0x1ccb31]        # 1ebee0 <dangle3_dH>
   1f3af:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1f3b2:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1f3b5:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f3b8:	48 89 d0             	mov    rax,rdx
   1f3bb:	48 c1 e0 02          	shl    rax,0x2
   1f3bf:	48 01 d0             	add    rax,rdx
   1f3c2:	48 01 f0             	add    rax,rsi
   1f3c5:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f3cd:	48 8d 05 cc c9 1c 00 	lea    rax,[rip+0x1cc9cc]        # 1ebda0 <dangle3_37>
   1f3d4:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1f3d7:	29 c1                	sub    ecx,eax
   1f3d9:	89 c8                	mov    eax,ecx
   1f3db:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1f3df:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1f3e4:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1f3e8:	66 0f ef c9          	pxor   xmm1,xmm1
   1f3ec:	66 0f 2f c1          	comisd xmm0,xmm1
   1f3f0:	0f 97 c0             	seta   al
   1f3f3:	84 c0                	test   al,al
   1f3f5:	74 09                	je     1f400 <get_exp_params_ali+0x1b5f>
   1f3f7:	66 0f ef c0          	pxor   xmm0,xmm0
   1f3fb:	e9 fd 07 00 00       	jmp    1fbfd <get_exp_params_ali+0x235c>
   1f400:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1f404:	0f 85 9d 00 00 00    	jne    1f4a7 <get_exp_params_ali+0x1c06>
   1f40a:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1f40d:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f410:	48 89 d0             	mov    rax,rdx
   1f413:	48 c1 e0 02          	shl    rax,0x2
   1f417:	48 01 d0             	add    rax,rdx
   1f41a:	48 01 c8             	add    rax,rcx
   1f41d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f425:	48 8d 05 b4 ca 1c 00 	lea    rax,[rip+0x1ccab4]        # 1ebee0 <dangle3_dH>
   1f42c:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1f42f:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1f433:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1f436:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f439:	48 89 d0             	mov    rax,rdx
   1f43c:	48 c1 e0 02          	shl    rax,0x2
   1f440:	48 01 d0             	add    rax,rdx
   1f443:	48 01 c8             	add    rax,rcx
   1f446:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f44e:	48 8d 05 8b ca 1c 00 	lea    rax,[rip+0x1cca8b]        # 1ebee0 <dangle3_dH>
   1f455:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1f458:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1f45b:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f45e:	48 89 d0             	mov    rax,rdx
   1f461:	48 c1 e0 02          	shl    rax,0x2
   1f465:	48 01 d0             	add    rax,rdx
   1f468:	48 01 f0             	add    rax,rsi
   1f46b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f473:	48 8d 05 26 c9 1c 00 	lea    rax,[rip+0x1cc926]        # 1ebda0 <dangle3_37>
   1f47a:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1f47d:	29 c1                	sub    ecx,eax
   1f47f:	89 c8                	mov    eax,ecx
   1f481:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1f485:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1f48a:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1f48e:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1f492:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1f496:	f3 0f 7e 0d 92 2b 01 00 	movq   xmm1,QWORD PTR [rip+0x12b92]        # 32030 <Law_and_Order+0x5f0>
   1f49e:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1f4a2:	e9 56 07 00 00       	jmp    1fbfd <get_exp_params_ali+0x235c>
   1f4a7:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1f4aa:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f4ad:	48 89 d0             	mov    rax,rdx
   1f4b0:	48 c1 e0 02          	shl    rax,0x2
   1f4b4:	48 01 d0             	add    rax,rdx
   1f4b7:	48 01 c8             	add    rax,rcx
   1f4ba:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f4c2:	48 8d 05 17 ca 1c 00 	lea    rax,[rip+0x1cca17]        # 1ebee0 <dangle3_dH>
   1f4c9:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1f4cc:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1f4d0:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1f4d3:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f4d6:	48 89 d0             	mov    rax,rdx
   1f4d9:	48 c1 e0 02          	shl    rax,0x2
   1f4dd:	48 01 d0             	add    rax,rdx
   1f4e0:	48 01 c8             	add    rax,rcx
   1f4e3:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f4eb:	48 8d 05 ee c9 1c 00 	lea    rax,[rip+0x1cc9ee]        # 1ebee0 <dangle3_dH>
   1f4f2:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1f4f5:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1f4f8:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f4fb:	48 89 d0             	mov    rax,rdx
   1f4fe:	48 c1 e0 02          	shl    rax,0x2
   1f502:	48 01 d0             	add    rax,rdx
   1f505:	48 01 f0             	add    rax,rsi
   1f508:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f510:	48 8d 05 89 c8 1c 00 	lea    rax,[rip+0x1cc889]        # 1ebda0 <dangle3_37>
   1f517:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1f51a:	29 c1                	sub    ecx,eax
   1f51c:	89 c8                	mov    eax,ecx
   1f51e:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1f522:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1f527:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1f52b:	f3 0f 7e 0d fd 2a 01 00 	movq   xmm1,QWORD PTR [rip+0x12afd]        # 32030 <Law_and_Order+0x5f0>
   1f533:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1f537:	e9 c1 06 00 00       	jmp    1fbfd <get_exp_params_ali+0x235c>
   1f53c:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1f540:	0f 85 9d 00 00 00    	jne    1f5e3 <get_exp_params_ali+0x1d42>
   1f546:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1f549:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f54c:	48 89 d0             	mov    rax,rdx
   1f54f:	48 c1 e0 02          	shl    rax,0x2
   1f553:	48 01 d0             	add    rax,rdx
   1f556:	48 01 c8             	add    rax,rcx
   1f559:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f561:	48 8d 05 78 c9 1c 00 	lea    rax,[rip+0x1cc978]        # 1ebee0 <dangle3_dH>
   1f568:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1f56b:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1f56f:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1f572:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f575:	48 89 d0             	mov    rax,rdx
   1f578:	48 c1 e0 02          	shl    rax,0x2
   1f57c:	48 01 d0             	add    rax,rdx
   1f57f:	48 01 c8             	add    rax,rcx
   1f582:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f58a:	48 8d 05 4f c9 1c 00 	lea    rax,[rip+0x1cc94f]        # 1ebee0 <dangle3_dH>
   1f591:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1f594:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1f597:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f59a:	48 89 d0             	mov    rax,rdx
   1f59d:	48 c1 e0 02          	shl    rax,0x2
   1f5a1:	48 01 d0             	add    rax,rdx
   1f5a4:	48 01 f0             	add    rax,rsi
   1f5a7:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f5af:	48 8d 05 ea c7 1c 00 	lea    rax,[rip+0x1cc7ea]        # 1ebda0 <dangle3_37>
   1f5b6:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1f5b9:	29 c1                	sub    ecx,eax
   1f5bb:	89 c8                	mov    eax,ecx
   1f5bd:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1f5c1:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1f5c6:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1f5ca:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1f5ce:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1f5d2:	f3 0f 7e 0d 56 2a 01 00 	movq   xmm1,QWORD PTR [rip+0x12a56]        # 32030 <Law_and_Order+0x5f0>
   1f5da:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1f5de:	e9 90 00 00 00       	jmp    1f673 <get_exp_params_ali+0x1dd2>
   1f5e3:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1f5e6:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f5e9:	48 89 d0             	mov    rax,rdx
   1f5ec:	48 c1 e0 02          	shl    rax,0x2
   1f5f0:	48 01 d0             	add    rax,rdx
   1f5f3:	48 01 c8             	add    rax,rcx
   1f5f6:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f5fe:	48 8d 05 db c8 1c 00 	lea    rax,[rip+0x1cc8db]        # 1ebee0 <dangle3_dH>
   1f605:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1f608:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1f60c:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1f60f:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f612:	48 89 d0             	mov    rax,rdx
   1f615:	48 c1 e0 02          	shl    rax,0x2
   1f619:	48 01 d0             	add    rax,rdx
   1f61c:	48 01 c8             	add    rax,rcx
   1f61f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f627:	48 8d 05 b2 c8 1c 00 	lea    rax,[rip+0x1cc8b2]        # 1ebee0 <dangle3_dH>
   1f62e:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1f631:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1f634:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f637:	48 89 d0             	mov    rax,rdx
   1f63a:	48 c1 e0 02          	shl    rax,0x2
   1f63e:	48 01 d0             	add    rax,rdx
   1f641:	48 01 f0             	add    rax,rsi
   1f644:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f64c:	48 8d 05 4d c7 1c 00 	lea    rax,[rip+0x1cc74d]        # 1ebda0 <dangle3_37>
   1f653:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1f656:	29 c1                	sub    ecx,eax
   1f658:	89 c8                	mov    eax,ecx
   1f65a:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1f65e:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1f663:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1f667:	f3 0f 7e 0d c1 29 01 00 	movq   xmm1,QWORD PTR [rip+0x129c1]        # 32030 <Law_and_Order+0x5f0>
   1f66f:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1f673:	f2 0f 10 0d dd 29 01 00 	movsd  xmm1,QWORD PTR [rip+0x129dd]        # 32058 <Law_and_Order+0x618>
   1f67b:	f2 0f 5e c1          	divsd  xmm0,xmm1
   1f67f:	66 0f 28 c8          	movapd xmm1,xmm0
   1f683:	f2 0f 10 05 e5 29 01 00 	movsd  xmm0,QWORD PTR [rip+0x129e5]        # 32070 <Law_and_Order+0x630>
   1f68b:	66 0f 2f c1          	comisd xmm0,xmm1
   1f68f:	76 09                	jbe    1f69a <get_exp_params_ali+0x1df9>
   1f691:	66 0f ef c0          	pxor   xmm0,xmm0
   1f695:	e9 63 05 00 00       	jmp    1fbfd <get_exp_params_ali+0x235c>
   1f69a:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1f69e:	0f 85 9d 00 00 00    	jne    1f741 <get_exp_params_ali+0x1ea0>
   1f6a4:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1f6a7:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f6aa:	48 89 d0             	mov    rax,rdx
   1f6ad:	48 c1 e0 02          	shl    rax,0x2
   1f6b1:	48 01 d0             	add    rax,rdx
   1f6b4:	48 01 c8             	add    rax,rcx
   1f6b7:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f6bf:	48 8d 05 1a c8 1c 00 	lea    rax,[rip+0x1cc81a]        # 1ebee0 <dangle3_dH>
   1f6c6:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1f6c9:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1f6cd:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1f6d0:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f6d3:	48 89 d0             	mov    rax,rdx
   1f6d6:	48 c1 e0 02          	shl    rax,0x2
   1f6da:	48 01 d0             	add    rax,rdx
   1f6dd:	48 01 c8             	add    rax,rcx
   1f6e0:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f6e8:	48 8d 05 f1 c7 1c 00 	lea    rax,[rip+0x1cc7f1]        # 1ebee0 <dangle3_dH>
   1f6ef:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1f6f2:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1f6f5:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f6f8:	48 89 d0             	mov    rax,rdx
   1f6fb:	48 c1 e0 02          	shl    rax,0x2
   1f6ff:	48 01 d0             	add    rax,rdx
   1f702:	48 01 f0             	add    rax,rsi
   1f705:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f70d:	48 8d 05 8c c6 1c 00 	lea    rax,[rip+0x1cc68c]        # 1ebda0 <dangle3_37>
   1f714:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1f717:	29 c1                	sub    ecx,eax
   1f719:	89 c8                	mov    eax,ecx
   1f71b:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1f71f:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1f724:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1f728:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1f72c:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1f730:	f3 0f 7e 0d f8 28 01 00 	movq   xmm1,QWORD PTR [rip+0x128f8]        # 32030 <Law_and_Order+0x5f0>
   1f738:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1f73c:	e9 90 00 00 00       	jmp    1f7d1 <get_exp_params_ali+0x1f30>
   1f741:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1f744:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f747:	48 89 d0             	mov    rax,rdx
   1f74a:	48 c1 e0 02          	shl    rax,0x2
   1f74e:	48 01 d0             	add    rax,rdx
   1f751:	48 01 c8             	add    rax,rcx
   1f754:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f75c:	48 8d 05 7d c7 1c 00 	lea    rax,[rip+0x1cc77d]        # 1ebee0 <dangle3_dH>
   1f763:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1f766:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1f76a:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1f76d:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f770:	48 89 d0             	mov    rax,rdx
   1f773:	48 c1 e0 02          	shl    rax,0x2
   1f777:	48 01 d0             	add    rax,rdx
   1f77a:	48 01 c8             	add    rax,rcx
   1f77d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f785:	48 8d 05 54 c7 1c 00 	lea    rax,[rip+0x1cc754]        # 1ebee0 <dangle3_dH>
   1f78c:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1f78f:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1f792:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f795:	48 89 d0             	mov    rax,rdx
   1f798:	48 c1 e0 02          	shl    rax,0x2
   1f79c:	48 01 d0             	add    rax,rdx
   1f79f:	48 01 f0             	add    rax,rsi
   1f7a2:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f7aa:	48 8d 05 ef c5 1c 00 	lea    rax,[rip+0x1cc5ef]        # 1ebda0 <dangle3_37>
   1f7b1:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1f7b4:	29 c1                	sub    ecx,eax
   1f7b6:	89 c8                	mov    eax,ecx
   1f7b8:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1f7bc:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1f7c1:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1f7c5:	f3 0f 7e 0d 63 28 01 00 	movq   xmm1,QWORD PTR [rip+0x12863]        # 32030 <Law_and_Order+0x5f0>
   1f7cd:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1f7d1:	f2 0f 10 0d 7f 28 01 00 	movsd  xmm1,QWORD PTR [rip+0x1287f]        # 32058 <Law_and_Order+0x618>
   1f7d9:	f2 0f 5e c1          	divsd  xmm0,xmm1
   1f7dd:	66 0f 2f 05 93 28 01 00 	comisd xmm0,QWORD PTR [rip+0x12893]        # 32078 <Law_and_Order+0x638>
   1f7e5:	0f 86 3c 01 00 00    	jbe    1f927 <get_exp_params_ali+0x2086>
   1f7eb:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1f7ef:	0f 85 9d 00 00 00    	jne    1f892 <get_exp_params_ali+0x1ff1>
   1f7f5:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1f7f8:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f7fb:	48 89 d0             	mov    rax,rdx
   1f7fe:	48 c1 e0 02          	shl    rax,0x2
   1f802:	48 01 d0             	add    rax,rdx
   1f805:	48 01 c8             	add    rax,rcx
   1f808:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f810:	48 8d 05 c9 c6 1c 00 	lea    rax,[rip+0x1cc6c9]        # 1ebee0 <dangle3_dH>
   1f817:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1f81a:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1f81e:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1f821:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f824:	48 89 d0             	mov    rax,rdx
   1f827:	48 c1 e0 02          	shl    rax,0x2
   1f82b:	48 01 d0             	add    rax,rdx
   1f82e:	48 01 c8             	add    rax,rcx
   1f831:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f839:	48 8d 05 a0 c6 1c 00 	lea    rax,[rip+0x1cc6a0]        # 1ebee0 <dangle3_dH>
   1f840:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1f843:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1f846:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f849:	48 89 d0             	mov    rax,rdx
   1f84c:	48 c1 e0 02          	shl    rax,0x2
   1f850:	48 01 d0             	add    rax,rdx
   1f853:	48 01 f0             	add    rax,rsi
   1f856:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f85e:	48 8d 05 3b c5 1c 00 	lea    rax,[rip+0x1cc53b]        # 1ebda0 <dangle3_37>
   1f865:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1f868:	29 c1                	sub    ecx,eax
   1f86a:	89 c8                	mov    eax,ecx
   1f86c:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1f870:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1f875:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1f879:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1f87d:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1f881:	f3 0f 7e 0d a7 27 01 00 	movq   xmm1,QWORD PTR [rip+0x127a7]        # 32030 <Law_and_Order+0x5f0>
   1f889:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1f88d:	e9 6b 03 00 00       	jmp    1fbfd <get_exp_params_ali+0x235c>
   1f892:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1f895:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f898:	48 89 d0             	mov    rax,rdx
   1f89b:	48 c1 e0 02          	shl    rax,0x2
   1f89f:	48 01 d0             	add    rax,rdx
   1f8a2:	48 01 c8             	add    rax,rcx
   1f8a5:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f8ad:	48 8d 05 2c c6 1c 00 	lea    rax,[rip+0x1cc62c]        # 1ebee0 <dangle3_dH>
   1f8b4:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1f8b7:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1f8bb:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1f8be:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f8c1:	48 89 d0             	mov    rax,rdx
   1f8c4:	48 c1 e0 02          	shl    rax,0x2
   1f8c8:	48 01 d0             	add    rax,rdx
   1f8cb:	48 01 c8             	add    rax,rcx
   1f8ce:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f8d6:	48 8d 05 03 c6 1c 00 	lea    rax,[rip+0x1cc603]        # 1ebee0 <dangle3_dH>
   1f8dd:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1f8e0:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1f8e3:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f8e6:	48 89 d0             	mov    rax,rdx
   1f8e9:	48 c1 e0 02          	shl    rax,0x2
   1f8ed:	48 01 d0             	add    rax,rdx
   1f8f0:	48 01 f0             	add    rax,rsi
   1f8f3:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f8fb:	48 8d 05 9e c4 1c 00 	lea    rax,[rip+0x1cc49e]        # 1ebda0 <dangle3_37>
   1f902:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1f905:	29 c1                	sub    ecx,eax
   1f907:	89 c8                	mov    eax,ecx
   1f909:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1f90d:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1f912:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1f916:	f3 0f 7e 0d 12 27 01 00 	movq   xmm1,QWORD PTR [rip+0x12712]        # 32030 <Law_and_Order+0x5f0>
   1f91e:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1f922:	e9 d6 02 00 00       	jmp    1fbfd <get_exp_params_ali+0x235c>
   1f927:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1f92b:	0f 85 9d 00 00 00    	jne    1f9ce <get_exp_params_ali+0x212d>
   1f931:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1f934:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f937:	48 89 d0             	mov    rax,rdx
   1f93a:	48 c1 e0 02          	shl    rax,0x2
   1f93e:	48 01 d0             	add    rax,rdx
   1f941:	48 01 c8             	add    rax,rcx
   1f944:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f94c:	48 8d 05 8d c5 1c 00 	lea    rax,[rip+0x1cc58d]        # 1ebee0 <dangle3_dH>
   1f953:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1f956:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1f95a:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1f95d:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f960:	48 89 d0             	mov    rax,rdx
   1f963:	48 c1 e0 02          	shl    rax,0x2
   1f967:	48 01 d0             	add    rax,rdx
   1f96a:	48 01 c8             	add    rax,rcx
   1f96d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f975:	48 8d 05 64 c5 1c 00 	lea    rax,[rip+0x1cc564]        # 1ebee0 <dangle3_dH>
   1f97c:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1f97f:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1f982:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f985:	48 89 d0             	mov    rax,rdx
   1f988:	48 c1 e0 02          	shl    rax,0x2
   1f98c:	48 01 d0             	add    rax,rdx
   1f98f:	48 01 f0             	add    rax,rsi
   1f992:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f99a:	48 8d 05 ff c3 1c 00 	lea    rax,[rip+0x1cc3ff]        # 1ebda0 <dangle3_37>
   1f9a1:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1f9a4:	29 c1                	sub    ecx,eax
   1f9a6:	89 c8                	mov    eax,ecx
   1f9a8:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1f9ac:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1f9b1:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1f9b5:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1f9b9:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1f9bd:	f3 0f 7e 0d 6b 26 01 00 	movq   xmm1,QWORD PTR [rip+0x1266b]        # 32030 <Law_and_Order+0x5f0>
   1f9c5:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1f9c9:	e9 90 00 00 00       	jmp    1fa5e <get_exp_params_ali+0x21bd>
   1f9ce:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1f9d1:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f9d4:	48 89 d0             	mov    rax,rdx
   1f9d7:	48 c1 e0 02          	shl    rax,0x2
   1f9db:	48 01 d0             	add    rax,rdx
   1f9de:	48 01 c8             	add    rax,rcx
   1f9e1:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1f9e9:	48 8d 05 f0 c4 1c 00 	lea    rax,[rip+0x1cc4f0]        # 1ebee0 <dangle3_dH>
   1f9f0:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1f9f3:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1f9f7:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1f9fa:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1f9fd:	48 89 d0             	mov    rax,rdx
   1fa00:	48 c1 e0 02          	shl    rax,0x2
   1fa04:	48 01 d0             	add    rax,rdx
   1fa07:	48 01 c8             	add    rax,rcx
   1fa0a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1fa12:	48 8d 05 c7 c4 1c 00 	lea    rax,[rip+0x1cc4c7]        # 1ebee0 <dangle3_dH>
   1fa19:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1fa1c:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1fa1f:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1fa22:	48 89 d0             	mov    rax,rdx
   1fa25:	48 c1 e0 02          	shl    rax,0x2
   1fa29:	48 01 d0             	add    rax,rdx
   1fa2c:	48 01 f0             	add    rax,rsi
   1fa2f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1fa37:	48 8d 05 62 c3 1c 00 	lea    rax,[rip+0x1cc362]        # 1ebda0 <dangle3_37>
   1fa3e:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1fa41:	29 c1                	sub    ecx,eax
   1fa43:	89 c8                	mov    eax,ecx
   1fa45:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1fa49:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1fa4e:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1fa52:	f3 0f 7e 0d d6 25 01 00 	movq   xmm1,QWORD PTR [rip+0x125d6]        # 32030 <Law_and_Order+0x5f0>
   1fa5a:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1fa5e:	f2 0f 10 0d f2 25 01 00 	movsd  xmm1,QWORD PTR [rip+0x125f2]        # 32058 <Law_and_Order+0x618>
   1fa66:	f2 0f 5e c1          	divsd  xmm0,xmm1
   1fa6a:	f2 0f 10 0d 0e 26 01 00 	movsd  xmm1,QWORD PTR [rip+0x1260e]        # 32080 <Law_and_Order+0x640>
   1fa72:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1fa76:	e8 75 3b fe ff       	call   35f0 <sin@plt>
   1fa7b:	f2 0f 10 0d 85 25 01 00 	movsd  xmm1,QWORD PTR [rip+0x12585]        # 32008 <Law_and_Order+0x5c8>
   1fa83:	f2 0f 58 c8          	addsd  xmm1,xmm0
   1fa87:	f2 0f 10 05 f9 25 01 00 	movsd  xmm0,QWORD PTR [rip+0x125f9]        # 32088 <Law_and_Order+0x648>
   1fa8f:	f2 0f 59 c8          	mulsd  xmm1,xmm0
   1fa93:	f2 0f 11 4d 80       	movsd  QWORD PTR [rbp-0x80],xmm1
   1fa98:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1fa9c:	0f 85 9d 00 00 00    	jne    1fb3f <get_exp_params_ali+0x229e>
   1faa2:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1faa5:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1faa8:	48 89 d0             	mov    rax,rdx
   1faab:	48 c1 e0 02          	shl    rax,0x2
   1faaf:	48 01 d0             	add    rax,rdx
   1fab2:	48 01 c8             	add    rax,rcx
   1fab5:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1fabd:	48 8d 05 1c c4 1c 00 	lea    rax,[rip+0x1cc41c]        # 1ebee0 <dangle3_dH>
   1fac4:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1fac7:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1facb:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1face:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1fad1:	48 89 d0             	mov    rax,rdx
   1fad4:	48 c1 e0 02          	shl    rax,0x2
   1fad8:	48 01 d0             	add    rax,rdx
   1fadb:	48 01 c8             	add    rax,rcx
   1fade:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1fae6:	48 8d 05 f3 c3 1c 00 	lea    rax,[rip+0x1cc3f3]        # 1ebee0 <dangle3_dH>
   1faed:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1faf0:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1faf3:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1faf6:	48 89 d0             	mov    rax,rdx
   1faf9:	48 c1 e0 02          	shl    rax,0x2
   1fafd:	48 01 d0             	add    rax,rdx
   1fb00:	48 01 f0             	add    rax,rsi
   1fb03:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1fb0b:	48 8d 05 8e c2 1c 00 	lea    rax,[rip+0x1cc28e]        # 1ebda0 <dangle3_37>
   1fb12:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1fb15:	29 c1                	sub    ecx,eax
   1fb17:	89 c8                	mov    eax,ecx
   1fb19:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1fb1d:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1fb22:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1fb26:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1fb2a:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1fb2e:	f3 0f 7e 0d fa 24 01 00 	movq   xmm1,QWORD PTR [rip+0x124fa]        # 32030 <Law_and_Order+0x5f0>
   1fb36:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1fb3a:	e9 90 00 00 00       	jmp    1fbcf <get_exp_params_ali+0x232e>
   1fb3f:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1fb42:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1fb45:	48 89 d0             	mov    rax,rdx
   1fb48:	48 c1 e0 02          	shl    rax,0x2
   1fb4c:	48 01 d0             	add    rax,rdx
   1fb4f:	48 01 c8             	add    rax,rcx
   1fb52:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1fb5a:	48 8d 05 7f c3 1c 00 	lea    rax,[rip+0x1cc37f]        # 1ebee0 <dangle3_dH>
   1fb61:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1fb64:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1fb68:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1fb6b:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1fb6e:	48 89 d0             	mov    rax,rdx
   1fb71:	48 c1 e0 02          	shl    rax,0x2
   1fb75:	48 01 d0             	add    rax,rdx
   1fb78:	48 01 c8             	add    rax,rcx
   1fb7b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1fb83:	48 8d 05 56 c3 1c 00 	lea    rax,[rip+0x1cc356]        # 1ebee0 <dangle3_dH>
   1fb8a:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   1fb8d:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1fb90:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1fb93:	48 89 d0             	mov    rax,rdx
   1fb96:	48 c1 e0 02          	shl    rax,0x2
   1fb9a:	48 01 d0             	add    rax,rdx
   1fb9d:	48 01 f0             	add    rax,rsi
   1fba0:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1fba8:	48 8d 05 f1 c1 1c 00 	lea    rax,[rip+0x1cc1f1]        # 1ebda0 <dangle3_37>
   1fbaf:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1fbb2:	29 c1                	sub    ecx,eax
   1fbb4:	89 c8                	mov    eax,ecx
   1fbb6:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1fbba:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1fbbf:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1fbc3:	f3 0f 7e 0d 65 24 01 00 	movq   xmm1,QWORD PTR [rip+0x12465]        # 32030 <Law_and_Order+0x5f0>
   1fbcb:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1fbcf:	f2 0f 10 0d 81 24 01 00 	movsd  xmm1,QWORD PTR [rip+0x12481]        # 32058 <Law_and_Order+0x618>
   1fbd7:	f2 0f 5e c1          	divsd  xmm0,xmm1
   1fbdb:	f2 0f 10 0d 9d 24 01 00 	movsd  xmm1,QWORD PTR [rip+0x1249d]        # 32080 <Law_and_Order+0x640>
   1fbe3:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1fbe7:	e8 04 3a fe ff       	call   35f0 <sin@plt>
   1fbec:	f2 0f 10 0d 14 24 01 00 	movsd  xmm1,QWORD PTR [rip+0x12414]        # 32008 <Law_and_Order+0x5c8>
   1fbf4:	f2 0f 58 c1          	addsd  xmm0,xmm1
   1fbf8:	f2 0f 59 45 80       	mulsd  xmm0,QWORD PTR [rbp-0x80]
   1fbfd:	f2 0f 10 0d 53 24 01 00 	movsd  xmm1,QWORD PTR [rip+0x12453]        # 32058 <Law_and_Order+0x618>
   1fc05:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1fc09:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1fc0e:	e8 5d 3e fe ff       	call   3a70 <exp@plt>
   1fc13:	66 48 0f 7e c1       	movq   rcx,xmm0
   1fc18:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
   1fc1c:	8b 7d a4             	mov    edi,DWORD PTR [rbp-0x5c]
   1fc1f:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1fc22:	48 89 d0             	mov    rax,rdx
   1fc25:	48 c1 e0 02          	shl    rax,0x2
   1fc29:	48 01 d0             	add    rax,rdx
   1fc2c:	48 01 f8             	add    rax,rdi
   1fc2f:	48 05 76 05 00 00    	add    rax,0x576
   1fc35:	48 89 0c c6          	mov    QWORD PTR [rsi+rax*8],rcx
   1fc39:	eb 6e                	jmp    1fca9 <get_exp_params_ali+0x2408>
   1fc3b:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
   1fc3f:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1fc42:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1fc45:	48 89 d0             	mov    rax,rdx
   1fc48:	48 c1 e0 02          	shl    rax,0x2
   1fc4c:	48 01 d0             	add    rax,rdx
   1fc4f:	48 01 f0             	add    rax,rsi
   1fc52:	48 05 4e 05 00 00    	add    rax,0x54e
   1fc58:	f2 0f 10 05 a8 23 01 00 	movsd  xmm0,QWORD PTR [rip+0x123a8]        # 32008 <Law_and_Order+0x5c8>
   1fc60:	f2 0f 11 04 c1       	movsd  QWORD PTR [rcx+rax*8],xmm0
   1fc65:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
   1fc69:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1fc6c:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1fc6f:	48 89 d0             	mov    rax,rdx
   1fc72:	48 c1 e0 02          	shl    rax,0x2
   1fc76:	48 01 d0             	add    rax,rdx
   1fc79:	48 01 f0             	add    rax,rsi
   1fc7c:	48 05 4e 05 00 00    	add    rax,0x54e
   1fc82:	f2 0f 10 04 c1       	movsd  xmm0,QWORD PTR [rcx+rax*8]
   1fc87:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
   1fc8b:	8b 75 a4             	mov    esi,DWORD PTR [rbp-0x5c]
   1fc8e:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1fc91:	48 89 d0             	mov    rax,rdx
   1fc94:	48 c1 e0 02          	shl    rax,0x2
   1fc98:	48 01 d0             	add    rax,rdx
   1fc9b:	48 01 f0             	add    rax,rsi
   1fc9e:	48 05 76 05 00 00    	add    rax,0x576
   1fca4:	f2 0f 11 04 c1       	movsd  QWORD PTR [rcx+rax*8],xmm0
   1fca9:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
   1fcad:	83 7d a4 04          	cmp    DWORD PTR [rbp-0x5c],0x4
   1fcb1:	0f 86 7d ec ff ff    	jbe    1e934 <get_exp_params_ali+0x1093>
   1fcb7:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
   1fcbb:	83 7d a0 07          	cmp    DWORD PTR [rbp-0x60],0x7
   1fcbf:	0f 86 63 ec ff ff    	jbe    1e928 <get_exp_params_ali+0x1087>
   1fcc5:	c7 45 a0 00 00 00 00 	mov    DWORD PTR [rbp-0x60],0x0
   1fccc:	e9 5f 01 00 00       	jmp    1fe30 <get_exp_params_ali+0x258f>
   1fcd1:	c7 45 a4 00 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x0
   1fcd8:	e9 45 01 00 00       	jmp    1fe22 <get_exp_params_ali+0x2581>
   1fcdd:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1fce1:	0f 85 88 00 00 00    	jne    1fd6f <get_exp_params_ali+0x24ce>
   1fce7:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
   1fcea:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1fced:	48 c1 e2 03          	shl    rdx,0x3
   1fcf1:	48 01 d0             	add    rax,rdx
   1fcf4:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1fcfc:	48 8d 05 7d 96 1c 00 	lea    rax,[rip+0x1c967d]        # 1e9380 <stackdH>
   1fd03:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1fd06:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1fd0a:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
   1fd0d:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1fd10:	48 c1 e2 03          	shl    rdx,0x3
   1fd14:	48 01 d0             	add    rax,rdx
   1fd17:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1fd1f:	48 8d 05 5a 96 1c 00 	lea    rax,[rip+0x1c965a]        # 1e9380 <stackdH>
   1fd26:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   1fd29:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
   1fd2c:	8b 4d a0             	mov    ecx,DWORD PTR [rbp-0x60]
   1fd2f:	48 c1 e1 03          	shl    rcx,0x3
   1fd33:	48 01 c8             	add    rax,rcx
   1fd36:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   1fd3e:	48 8d 05 3b 95 1c 00 	lea    rax,[rip+0x1c953b]        # 1e9280 <stack37>
   1fd45:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   1fd48:	29 c2                	sub    edx,eax
   1fd4a:	89 d0                	mov    eax,edx
   1fd4c:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1fd50:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1fd55:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1fd59:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1fd5d:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1fd61:	f3 0f 7e 0d c7 22 01 00 	movq   xmm1,QWORD PTR [rip+0x122c7]        # 32030 <Law_and_Order+0x5f0>
   1fd69:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1fd6d:	eb 7e                	jmp    1fded <get_exp_params_ali+0x254c>
   1fd6f:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
   1fd72:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1fd75:	48 c1 e2 03          	shl    rdx,0x3
   1fd79:	48 01 d0             	add    rax,rdx
   1fd7c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1fd84:	48 8d 05 f5 95 1c 00 	lea    rax,[rip+0x1c95f5]        # 1e9380 <stackdH>
   1fd8b:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1fd8e:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1fd92:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
   1fd95:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1fd98:	48 c1 e2 03          	shl    rdx,0x3
   1fd9c:	48 01 d0             	add    rax,rdx
   1fd9f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1fda7:	48 8d 05 d2 95 1c 00 	lea    rax,[rip+0x1c95d2]        # 1e9380 <stackdH>
   1fdae:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   1fdb1:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
   1fdb4:	8b 4d a0             	mov    ecx,DWORD PTR [rbp-0x60]
   1fdb7:	48 c1 e1 03          	shl    rcx,0x3
   1fdbb:	48 01 c8             	add    rax,rcx
   1fdbe:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   1fdc6:	48 8d 05 b3 94 1c 00 	lea    rax,[rip+0x1c94b3]        # 1e9280 <stack37>
   1fdcd:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   1fdd0:	29 c2                	sub    edx,eax
   1fdd2:	89 d0                	mov    eax,edx
   1fdd4:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1fdd8:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1fddd:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1fde1:	f3 0f 7e 0d 47 22 01 00 	movq   xmm1,QWORD PTR [rip+0x12247]        # 32030 <Law_and_Order+0x5f0>
   1fde9:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1fded:	f2 0f 10 0d 63 22 01 00 	movsd  xmm1,QWORD PTR [rip+0x12263]        # 32058 <Law_and_Order+0x618>
   1fdf5:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   1fdf9:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   1fdfe:	e8 6d 3c fe ff       	call   3a70 <exp@plt>
   1fe03:	66 48 0f 7e c0       	movq   rax,xmm0
   1fe08:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   1fe0c:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1fe0f:	8b 75 a0             	mov    esi,DWORD PTR [rbp-0x60]
   1fe12:	48 c1 e6 03          	shl    rsi,0x3
   1fe16:	48 01 f1             	add    rcx,rsi
   1fe19:	48 89 44 ca 08       	mov    QWORD PTR [rdx+rcx*8+0x8],rax
   1fe1e:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
   1fe22:	83 7d a4 07          	cmp    DWORD PTR [rbp-0x5c],0x7
   1fe26:	0f 86 b1 fe ff ff    	jbe    1fcdd <get_exp_params_ali+0x243c>
   1fe2c:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
   1fe30:	83 7d a0 07          	cmp    DWORD PTR [rbp-0x60],0x7
   1fe34:	0f 86 97 fe ff ff    	jbe    1fcd1 <get_exp_params_ali+0x2430>
   1fe3a:	c7 45 a0 00 00 00 00 	mov    DWORD PTR [rbp-0x60],0x0
   1fe41:	e9 d9 25 00 00       	jmp    2241f <get_exp_params_ali+0x4b7e>
   1fe46:	c7 45 a4 00 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x0
   1fe4d:	e9 bf 25 00 00       	jmp    22411 <get_exp_params_ali+0x4b70>
   1fe52:	c7 45 a8 00 00 00 00 	mov    DWORD PTR [rbp-0x58],0x0
   1fe59:	e9 a5 25 00 00       	jmp    22403 <get_exp_params_ali+0x4b62>
   1fe5e:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   1fe62:	0f 85 ee 00 00 00    	jne    1ff56 <get_exp_params_ali+0x26b5>
   1fe68:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1fe6b:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1fe6e:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1fe71:	48 89 d0             	mov    rax,rdx
   1fe74:	48 c1 e0 02          	shl    rax,0x2
   1fe78:	48 01 d0             	add    rax,rdx
   1fe7b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1fe83:	48 01 d0             	add    rax,rdx
   1fe86:	48 89 ca             	mov    rdx,rcx
   1fe89:	48 c1 e2 02          	shl    rdx,0x2
   1fe8d:	48 01 ca             	add    rdx,rcx
   1fe90:	48 01 d0             	add    rax,rdx
   1fe93:	48 01 f0             	add    rax,rsi
   1fe96:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1fe9e:	48 8d 05 fb 9b 1c 00 	lea    rax,[rip+0x1c9bfb]        # 1e9aa0 <mismatchIdH>
   1fea5:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1fea8:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1feac:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1feaf:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1feb2:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1feb5:	48 89 d0             	mov    rax,rdx
   1feb8:	48 c1 e0 02          	shl    rax,0x2
   1febc:	48 01 d0             	add    rax,rdx
   1febf:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1fec7:	48 01 d0             	add    rax,rdx
   1feca:	48 89 ca             	mov    rdx,rcx
   1fecd:	48 c1 e2 02          	shl    rdx,0x2
   1fed1:	48 01 ca             	add    rdx,rcx
   1fed4:	48 01 d0             	add    rax,rdx
   1fed7:	48 01 f0             	add    rax,rsi
   1feda:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1fee2:	48 8d 05 b7 9b 1c 00 	lea    rax,[rip+0x1c9bb7]        # 1e9aa0 <mismatchIdH>
   1fee9:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1feec:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1feef:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1fef2:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1fef5:	48 89 d0             	mov    rax,rdx
   1fef8:	48 c1 e0 02          	shl    rax,0x2
   1fefc:	48 01 d0             	add    rax,rdx
   1feff:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ff07:	48 01 d0             	add    rax,rdx
   1ff0a:	48 89 ca             	mov    rdx,rcx
   1ff0d:	48 c1 e2 02          	shl    rdx,0x2
   1ff11:	48 01 ca             	add    rdx,rcx
   1ff14:	48 01 d0             	add    rax,rdx
   1ff17:	48 01 f8             	add    rax,rdi
   1ff1a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ff22:	48 8d 05 57 98 1c 00 	lea    rax,[rip+0x1c9857]        # 1e9780 <mismatchI37>
   1ff29:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1ff2c:	29 c6                	sub    esi,eax
   1ff2e:	89 f0                	mov    eax,esi
   1ff30:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   1ff34:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   1ff39:	f2 0f 5c c1          	subsd  xmm0,xmm1
   1ff3d:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   1ff41:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1ff45:	f3 0f 7e 0d e3 20 01 00 	movq   xmm1,QWORD PTR [rip+0x120e3]        # 32030 <Law_and_Order+0x5f0>
   1ff4d:	66 0f 57 c1          	xorpd  xmm0,xmm1
   1ff51:	e9 e1 00 00 00       	jmp    20037 <get_exp_params_ali+0x2796>
   1ff56:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1ff59:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1ff5c:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1ff5f:	48 89 d0             	mov    rax,rdx
   1ff62:	48 c1 e0 02          	shl    rax,0x2
   1ff66:	48 01 d0             	add    rax,rdx
   1ff69:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ff71:	48 01 d0             	add    rax,rdx
   1ff74:	48 89 ca             	mov    rdx,rcx
   1ff77:	48 c1 e2 02          	shl    rdx,0x2
   1ff7b:	48 01 ca             	add    rdx,rcx
   1ff7e:	48 01 d0             	add    rax,rdx
   1ff81:	48 01 f0             	add    rax,rsi
   1ff84:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ff8c:	48 8d 05 0d 9b 1c 00 	lea    rax,[rip+0x1c9b0d]        # 1e9aa0 <mismatchIdH>
   1ff93:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   1ff96:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   1ff9a:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   1ff9d:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1ffa0:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1ffa3:	48 89 d0             	mov    rax,rdx
   1ffa6:	48 c1 e0 02          	shl    rax,0x2
   1ffaa:	48 01 d0             	add    rax,rdx
   1ffad:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ffb5:	48 01 d0             	add    rax,rdx
   1ffb8:	48 89 ca             	mov    rdx,rcx
   1ffbb:	48 c1 e2 02          	shl    rdx,0x2
   1ffbf:	48 01 ca             	add    rdx,rcx
   1ffc2:	48 01 d0             	add    rax,rdx
   1ffc5:	48 01 f0             	add    rax,rsi
   1ffc8:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1ffd0:	48 8d 05 c9 9a 1c 00 	lea    rax,[rip+0x1c9ac9]        # 1e9aa0 <mismatchIdH>
   1ffd7:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   1ffda:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   1ffdd:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   1ffe0:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   1ffe3:	48 89 d0             	mov    rax,rdx
   1ffe6:	48 c1 e0 02          	shl    rax,0x2
   1ffea:	48 01 d0             	add    rax,rdx
   1ffed:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   1fff5:	48 01 d0             	add    rax,rdx
   1fff8:	48 89 ca             	mov    rdx,rcx
   1fffb:	48 c1 e2 02          	shl    rdx,0x2
   1ffff:	48 01 ca             	add    rdx,rcx
   20002:	48 01 d0             	add    rax,rdx
   20005:	48 01 f8             	add    rax,rdi
   20008:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20010:	48 8d 05 69 97 1c 00 	lea    rax,[rip+0x1c9769]        # 1e9780 <mismatchI37>
   20017:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   2001a:	29 c6                	sub    esi,eax
   2001c:	89 f0                	mov    eax,esi
   2001e:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   20022:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   20027:	f2 0f 5c c1          	subsd  xmm0,xmm1
   2002b:	f3 0f 7e 0d fd 1f 01 00 	movq   xmm1,QWORD PTR [rip+0x11ffd]        # 32030 <Law_and_Order+0x5f0>
   20033:	66 0f 57 c1          	xorpd  xmm0,xmm1
   20037:	f2 0f 10 0d 19 20 01 00 	movsd  xmm1,QWORD PTR [rip+0x12019]        # 32058 <Law_and_Order+0x618>
   2003f:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   20043:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   20048:	e8 23 3a fe ff       	call   3a70 <exp@plt>
   2004d:	66 48 0f 7e c6       	movq   rsi,xmm0
   20052:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
   20056:	44 8b 45 a8          	mov    r8d,DWORD PTR [rbp-0x58]
   2005a:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   2005d:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20060:	48 89 d0             	mov    rax,rdx
   20063:	48 c1 e0 02          	shl    rax,0x2
   20067:	48 01 d0             	add    rax,rdx
   2006a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20072:	48 01 d0             	add    rax,rdx
   20075:	48 89 ca             	mov    rdx,rcx
   20078:	48 c1 e2 02          	shl    rdx,0x2
   2007c:	48 01 ca             	add    rdx,rcx
   2007f:	48 01 d0             	add    rax,rdx
   20082:	4c 01 c0             	add    rax,r8
   20085:	48 05 66 01 00 00    	add    rax,0x166
   2008b:	48 89 34 c7          	mov    QWORD PTR [rdi+rax*8],rsi
   2008f:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   20093:	0f 85 ee 00 00 00    	jne    20187 <get_exp_params_ali+0x28e6>
   20099:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   2009c:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   2009f:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   200a2:	48 89 d0             	mov    rax,rdx
   200a5:	48 c1 e0 02          	shl    rax,0x2
   200a9:	48 01 d0             	add    rax,rdx
   200ac:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   200b4:	48 01 d0             	add    rax,rdx
   200b7:	48 89 ca             	mov    rdx,rcx
   200ba:	48 c1 e2 02          	shl    rdx,0x2
   200be:	48 01 ca             	add    rdx,rcx
   200c1:	48 01 d0             	add    rax,rdx
   200c4:	48 01 f0             	add    rax,rsi
   200c7:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   200cf:	48 8d 05 8a ac 1c 00 	lea    rax,[rip+0x1cac8a]        # 1ead60 <mismatch1nIdH>
   200d6:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   200d9:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   200dd:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   200e0:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   200e3:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   200e6:	48 89 d0             	mov    rax,rdx
   200e9:	48 c1 e0 02          	shl    rax,0x2
   200ed:	48 01 d0             	add    rax,rdx
   200f0:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   200f8:	48 01 d0             	add    rax,rdx
   200fb:	48 89 ca             	mov    rdx,rcx
   200fe:	48 c1 e2 02          	shl    rdx,0x2
   20102:	48 01 ca             	add    rdx,rcx
   20105:	48 01 d0             	add    rax,rdx
   20108:	48 01 f0             	add    rax,rsi
   2010b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20113:	48 8d 05 46 ac 1c 00 	lea    rax,[rip+0x1cac46]        # 1ead60 <mismatch1nIdH>
   2011a:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   2011d:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   20120:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20123:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20126:	48 89 d0             	mov    rax,rdx
   20129:	48 c1 e0 02          	shl    rax,0x2
   2012d:	48 01 d0             	add    rax,rdx
   20130:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20138:	48 01 d0             	add    rax,rdx
   2013b:	48 89 ca             	mov    rdx,rcx
   2013e:	48 c1 e2 02          	shl    rdx,0x2
   20142:	48 01 ca             	add    rdx,rcx
   20145:	48 01 d0             	add    rax,rdx
   20148:	48 01 f8             	add    rax,rdi
   2014b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20153:	48 8d 05 e6 a8 1c 00 	lea    rax,[rip+0x1ca8e6]        # 1eaa40 <mismatch1nI37>
   2015a:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   2015d:	29 c6                	sub    esi,eax
   2015f:	89 f0                	mov    eax,esi
   20161:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   20165:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   2016a:	f2 0f 5c c1          	subsd  xmm0,xmm1
   2016e:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   20172:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   20176:	f3 0f 7e 0d b2 1e 01 00 	movq   xmm1,QWORD PTR [rip+0x11eb2]        # 32030 <Law_and_Order+0x5f0>
   2017e:	66 0f 57 c1          	xorpd  xmm0,xmm1
   20182:	e9 e1 00 00 00       	jmp    20268 <get_exp_params_ali+0x29c7>
   20187:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   2018a:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   2018d:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20190:	48 89 d0             	mov    rax,rdx
   20193:	48 c1 e0 02          	shl    rax,0x2
   20197:	48 01 d0             	add    rax,rdx
   2019a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   201a2:	48 01 d0             	add    rax,rdx
   201a5:	48 89 ca             	mov    rdx,rcx
   201a8:	48 c1 e2 02          	shl    rdx,0x2
   201ac:	48 01 ca             	add    rdx,rcx
   201af:	48 01 d0             	add    rax,rdx
   201b2:	48 01 f0             	add    rax,rsi
   201b5:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   201bd:	48 8d 05 9c ab 1c 00 	lea    rax,[rip+0x1cab9c]        # 1ead60 <mismatch1nIdH>
   201c4:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   201c7:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   201cb:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   201ce:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   201d1:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   201d4:	48 89 d0             	mov    rax,rdx
   201d7:	48 c1 e0 02          	shl    rax,0x2
   201db:	48 01 d0             	add    rax,rdx
   201de:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   201e6:	48 01 d0             	add    rax,rdx
   201e9:	48 89 ca             	mov    rdx,rcx
   201ec:	48 c1 e2 02          	shl    rdx,0x2
   201f0:	48 01 ca             	add    rdx,rcx
   201f3:	48 01 d0             	add    rax,rdx
   201f6:	48 01 f0             	add    rax,rsi
   201f9:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20201:	48 8d 05 58 ab 1c 00 	lea    rax,[rip+0x1cab58]        # 1ead60 <mismatch1nIdH>
   20208:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   2020b:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   2020e:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20211:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20214:	48 89 d0             	mov    rax,rdx
   20217:	48 c1 e0 02          	shl    rax,0x2
   2021b:	48 01 d0             	add    rax,rdx
   2021e:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20226:	48 01 d0             	add    rax,rdx
   20229:	48 89 ca             	mov    rdx,rcx
   2022c:	48 c1 e2 02          	shl    rdx,0x2
   20230:	48 01 ca             	add    rdx,rcx
   20233:	48 01 d0             	add    rax,rdx
   20236:	48 01 f8             	add    rax,rdi
   20239:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20241:	48 8d 05 f8 a7 1c 00 	lea    rax,[rip+0x1ca7f8]        # 1eaa40 <mismatch1nI37>
   20248:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   2024b:	29 c6                	sub    esi,eax
   2024d:	89 f0                	mov    eax,esi
   2024f:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   20253:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   20258:	f2 0f 5c c1          	subsd  xmm0,xmm1
   2025c:	f3 0f 7e 0d cc 1d 01 00 	movq   xmm1,QWORD PTR [rip+0x11dcc]        # 32030 <Law_and_Order+0x5f0>
   20264:	66 0f 57 c1          	xorpd  xmm0,xmm1
   20268:	f2 0f 10 0d e8 1d 01 00 	movsd  xmm1,QWORD PTR [rip+0x11de8]        # 32058 <Law_and_Order+0x618>
   20270:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   20274:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   20279:	e8 f2 37 fe ff       	call   3a70 <exp@plt>
   2027e:	66 48 0f 7e c6       	movq   rsi,xmm0
   20283:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
   20287:	44 8b 45 a8          	mov    r8d,DWORD PTR [rbp-0x58]
   2028b:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   2028e:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20291:	48 89 d0             	mov    rax,rdx
   20294:	48 c1 e0 02          	shl    rax,0x2
   20298:	48 01 d0             	add    rax,rdx
   2029b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   202a3:	48 01 d0             	add    rax,rdx
   202a6:	48 89 ca             	mov    rdx,rcx
   202a9:	48 c1 e2 02          	shl    rdx,0x2
   202ad:	48 01 ca             	add    rdx,rcx
   202b0:	48 01 d0             	add    rax,rdx
   202b3:	4c 01 c0             	add    rax,r8
   202b6:	48 05 f6 02 00 00    	add    rax,0x2f6
   202bc:	48 89 34 c7          	mov    QWORD PTR [rdi+rax*8],rsi
   202c0:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   202c4:	0f 85 ee 00 00 00    	jne    203b8 <get_exp_params_ali+0x2b17>
   202ca:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   202cd:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   202d0:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   202d3:	48 89 d0             	mov    rax,rdx
   202d6:	48 c1 e0 02          	shl    rax,0x2
   202da:	48 01 d0             	add    rax,rdx
   202dd:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   202e5:	48 01 d0             	add    rax,rdx
   202e8:	48 89 ca             	mov    rdx,rcx
   202eb:	48 c1 e2 02          	shl    rdx,0x2
   202ef:	48 01 ca             	add    rdx,rcx
   202f2:	48 01 d0             	add    rax,rdx
   202f5:	48 01 f0             	add    rax,rsi
   202f8:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20300:	48 8d 05 d9 9d 1c 00 	lea    rax,[rip+0x1c9dd9]        # 1ea0e0 <mismatchHdH>
   20307:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   2030a:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   2030e:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   20311:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20314:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20317:	48 89 d0             	mov    rax,rdx
   2031a:	48 c1 e0 02          	shl    rax,0x2
   2031e:	48 01 d0             	add    rax,rdx
   20321:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20329:	48 01 d0             	add    rax,rdx
   2032c:	48 89 ca             	mov    rdx,rcx
   2032f:	48 c1 e2 02          	shl    rdx,0x2
   20333:	48 01 ca             	add    rdx,rcx
   20336:	48 01 d0             	add    rax,rdx
   20339:	48 01 f0             	add    rax,rsi
   2033c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20344:	48 8d 05 95 9d 1c 00 	lea    rax,[rip+0x1c9d95]        # 1ea0e0 <mismatchHdH>
   2034b:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   2034e:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   20351:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20354:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20357:	48 89 d0             	mov    rax,rdx
   2035a:	48 c1 e0 02          	shl    rax,0x2
   2035e:	48 01 d0             	add    rax,rdx
   20361:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20369:	48 01 d0             	add    rax,rdx
   2036c:	48 89 ca             	mov    rdx,rcx
   2036f:	48 c1 e2 02          	shl    rdx,0x2
   20373:	48 01 ca             	add    rdx,rcx
   20376:	48 01 d0             	add    rax,rdx
   20379:	48 01 f8             	add    rax,rdi
   2037c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20384:	48 8d 05 35 9a 1c 00 	lea    rax,[rip+0x1c9a35]        # 1e9dc0 <mismatchH37>
   2038b:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   2038e:	29 c6                	sub    esi,eax
   20390:	89 f0                	mov    eax,esi
   20392:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   20396:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   2039b:	f2 0f 5c c1          	subsd  xmm0,xmm1
   2039f:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   203a3:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   203a7:	f3 0f 7e 0d 81 1c 01 00 	movq   xmm1,QWORD PTR [rip+0x11c81]        # 32030 <Law_and_Order+0x5f0>
   203af:	66 0f 57 c1          	xorpd  xmm0,xmm1
   203b3:	e9 e1 00 00 00       	jmp    20499 <get_exp_params_ali+0x2bf8>
   203b8:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   203bb:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   203be:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   203c1:	48 89 d0             	mov    rax,rdx
   203c4:	48 c1 e0 02          	shl    rax,0x2
   203c8:	48 01 d0             	add    rax,rdx
   203cb:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   203d3:	48 01 d0             	add    rax,rdx
   203d6:	48 89 ca             	mov    rdx,rcx
   203d9:	48 c1 e2 02          	shl    rdx,0x2
   203dd:	48 01 ca             	add    rdx,rcx
   203e0:	48 01 d0             	add    rax,rdx
   203e3:	48 01 f0             	add    rax,rsi
   203e6:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   203ee:	48 8d 05 eb 9c 1c 00 	lea    rax,[rip+0x1c9ceb]        # 1ea0e0 <mismatchHdH>
   203f5:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   203f8:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   203fc:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   203ff:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20402:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20405:	48 89 d0             	mov    rax,rdx
   20408:	48 c1 e0 02          	shl    rax,0x2
   2040c:	48 01 d0             	add    rax,rdx
   2040f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20417:	48 01 d0             	add    rax,rdx
   2041a:	48 89 ca             	mov    rdx,rcx
   2041d:	48 c1 e2 02          	shl    rdx,0x2
   20421:	48 01 ca             	add    rdx,rcx
   20424:	48 01 d0             	add    rax,rdx
   20427:	48 01 f0             	add    rax,rsi
   2042a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20432:	48 8d 05 a7 9c 1c 00 	lea    rax,[rip+0x1c9ca7]        # 1ea0e0 <mismatchHdH>
   20439:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   2043c:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   2043f:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20442:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20445:	48 89 d0             	mov    rax,rdx
   20448:	48 c1 e0 02          	shl    rax,0x2
   2044c:	48 01 d0             	add    rax,rdx
   2044f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20457:	48 01 d0             	add    rax,rdx
   2045a:	48 89 ca             	mov    rdx,rcx
   2045d:	48 c1 e2 02          	shl    rdx,0x2
   20461:	48 01 ca             	add    rdx,rcx
   20464:	48 01 d0             	add    rax,rdx
   20467:	48 01 f8             	add    rax,rdi
   2046a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20472:	48 8d 05 47 99 1c 00 	lea    rax,[rip+0x1c9947]        # 1e9dc0 <mismatchH37>
   20479:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   2047c:	29 c6                	sub    esi,eax
   2047e:	89 f0                	mov    eax,esi
   20480:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   20484:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   20489:	f2 0f 5c c1          	subsd  xmm0,xmm1
   2048d:	f3 0f 7e 0d 9b 1b 01 00 	movq   xmm1,QWORD PTR [rip+0x11b9b]        # 32030 <Law_and_Order+0x5f0>
   20495:	66 0f 57 c1          	xorpd  xmm0,xmm1
   20499:	f2 0f 10 0d b7 1b 01 00 	movsd  xmm1,QWORD PTR [rip+0x11bb7]        # 32058 <Law_and_Order+0x618>
   204a1:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   204a5:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   204aa:	e8 c1 35 fe ff       	call   3a70 <exp@plt>
   204af:	66 48 0f 7e c6       	movq   rsi,xmm0
   204b4:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
   204b8:	44 8b 45 a8          	mov    r8d,DWORD PTR [rbp-0x58]
   204bc:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   204bf:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   204c2:	48 89 d0             	mov    rax,rdx
   204c5:	48 c1 e0 02          	shl    rax,0x2
   204c9:	48 01 d0             	add    rax,rdx
   204cc:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   204d4:	48 01 d0             	add    rax,rdx
   204d7:	48 89 ca             	mov    rdx,rcx
   204da:	48 c1 e2 02          	shl    rdx,0x2
   204de:	48 01 ca             	add    rdx,rcx
   204e1:	48 01 d0             	add    rax,rdx
   204e4:	4c 01 c0             	add    rax,r8
   204e7:	48 05 be 03 00 00    	add    rax,0x3be
   204ed:	48 89 34 c7          	mov    QWORD PTR [rdi+rax*8],rsi
   204f1:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   204f5:	0f 85 ee 00 00 00    	jne    205e9 <get_exp_params_ali+0x2d48>
   204fb:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   204fe:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20501:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20504:	48 89 d0             	mov    rax,rdx
   20507:	48 c1 e0 02          	shl    rax,0x2
   2050b:	48 01 d0             	add    rax,rdx
   2050e:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20516:	48 01 d0             	add    rax,rdx
   20519:	48 89 ca             	mov    rdx,rcx
   2051c:	48 c1 e2 02          	shl    rdx,0x2
   20520:	48 01 ca             	add    rdx,rcx
   20523:	48 01 d0             	add    rax,rdx
   20526:	48 01 f0             	add    rax,rsi
   20529:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20531:	48 8d 05 68 ae 1c 00 	lea    rax,[rip+0x1cae68]        # 1eb3a0 <mismatch23IdH>
   20538:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   2053b:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   2053f:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   20542:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20545:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20548:	48 89 d0             	mov    rax,rdx
   2054b:	48 c1 e0 02          	shl    rax,0x2
   2054f:	48 01 d0             	add    rax,rdx
   20552:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2055a:	48 01 d0             	add    rax,rdx
   2055d:	48 89 ca             	mov    rdx,rcx
   20560:	48 c1 e2 02          	shl    rdx,0x2
   20564:	48 01 ca             	add    rdx,rcx
   20567:	48 01 d0             	add    rax,rdx
   2056a:	48 01 f0             	add    rax,rsi
   2056d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20575:	48 8d 05 24 ae 1c 00 	lea    rax,[rip+0x1cae24]        # 1eb3a0 <mismatch23IdH>
   2057c:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   2057f:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   20582:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20585:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20588:	48 89 d0             	mov    rax,rdx
   2058b:	48 c1 e0 02          	shl    rax,0x2
   2058f:	48 01 d0             	add    rax,rdx
   20592:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2059a:	48 01 d0             	add    rax,rdx
   2059d:	48 89 ca             	mov    rdx,rcx
   205a0:	48 c1 e2 02          	shl    rdx,0x2
   205a4:	48 01 ca             	add    rdx,rcx
   205a7:	48 01 d0             	add    rax,rdx
   205aa:	48 01 f8             	add    rax,rdi
   205ad:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   205b5:	48 8d 05 c4 aa 1c 00 	lea    rax,[rip+0x1caac4]        # 1eb080 <mismatch23I37>
   205bc:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   205bf:	29 c6                	sub    esi,eax
   205c1:	89 f0                	mov    eax,esi
   205c3:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   205c7:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   205cc:	f2 0f 5c c1          	subsd  xmm0,xmm1
   205d0:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   205d4:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   205d8:	f3 0f 7e 0d 50 1a 01 00 	movq   xmm1,QWORD PTR [rip+0x11a50]        # 32030 <Law_and_Order+0x5f0>
   205e0:	66 0f 57 c1          	xorpd  xmm0,xmm1
   205e4:	e9 e1 00 00 00       	jmp    206ca <get_exp_params_ali+0x2e29>
   205e9:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   205ec:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   205ef:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   205f2:	48 89 d0             	mov    rax,rdx
   205f5:	48 c1 e0 02          	shl    rax,0x2
   205f9:	48 01 d0             	add    rax,rdx
   205fc:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20604:	48 01 d0             	add    rax,rdx
   20607:	48 89 ca             	mov    rdx,rcx
   2060a:	48 c1 e2 02          	shl    rdx,0x2
   2060e:	48 01 ca             	add    rdx,rcx
   20611:	48 01 d0             	add    rax,rdx
   20614:	48 01 f0             	add    rax,rsi
   20617:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2061f:	48 8d 05 7a ad 1c 00 	lea    rax,[rip+0x1cad7a]        # 1eb3a0 <mismatch23IdH>
   20626:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   20629:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   2062d:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   20630:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20633:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20636:	48 89 d0             	mov    rax,rdx
   20639:	48 c1 e0 02          	shl    rax,0x2
   2063d:	48 01 d0             	add    rax,rdx
   20640:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20648:	48 01 d0             	add    rax,rdx
   2064b:	48 89 ca             	mov    rdx,rcx
   2064e:	48 c1 e2 02          	shl    rdx,0x2
   20652:	48 01 ca             	add    rdx,rcx
   20655:	48 01 d0             	add    rax,rdx
   20658:	48 01 f0             	add    rax,rsi
   2065b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20663:	48 8d 05 36 ad 1c 00 	lea    rax,[rip+0x1cad36]        # 1eb3a0 <mismatch23IdH>
   2066a:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   2066d:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   20670:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20673:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20676:	48 89 d0             	mov    rax,rdx
   20679:	48 c1 e0 02          	shl    rax,0x2
   2067d:	48 01 d0             	add    rax,rdx
   20680:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20688:	48 01 d0             	add    rax,rdx
   2068b:	48 89 ca             	mov    rdx,rcx
   2068e:	48 c1 e2 02          	shl    rdx,0x2
   20692:	48 01 ca             	add    rdx,rcx
   20695:	48 01 d0             	add    rax,rdx
   20698:	48 01 f8             	add    rax,rdi
   2069b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   206a3:	48 8d 05 d6 a9 1c 00 	lea    rax,[rip+0x1ca9d6]        # 1eb080 <mismatch23I37>
   206aa:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   206ad:	29 c6                	sub    esi,eax
   206af:	89 f0                	mov    eax,esi
   206b1:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   206b5:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   206ba:	f2 0f 5c c1          	subsd  xmm0,xmm1
   206be:	f3 0f 7e 0d 6a 19 01 00 	movq   xmm1,QWORD PTR [rip+0x1196a]        # 32030 <Law_and_Order+0x5f0>
   206c6:	66 0f 57 c1          	xorpd  xmm0,xmm1
   206ca:	f2 0f 10 0d 86 19 01 00 	movsd  xmm1,QWORD PTR [rip+0x11986]        # 32058 <Law_and_Order+0x618>
   206d2:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   206d6:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   206db:	e8 90 33 fe ff       	call   3a70 <exp@plt>
   206e0:	66 48 0f 7e c6       	movq   rsi,xmm0
   206e5:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
   206e9:	44 8b 45 a8          	mov    r8d,DWORD PTR [rbp-0x58]
   206ed:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   206f0:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   206f3:	48 89 d0             	mov    rax,rdx
   206f6:	48 c1 e0 02          	shl    rax,0x2
   206fa:	48 01 d0             	add    rax,rdx
   206fd:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20705:	48 01 d0             	add    rax,rdx
   20708:	48 89 ca             	mov    rdx,rcx
   2070b:	48 c1 e2 02          	shl    rdx,0x2
   2070f:	48 01 ca             	add    rdx,rcx
   20712:	48 01 d0             	add    rax,rdx
   20715:	4c 01 c0             	add    rax,r8
   20718:	48 05 2e 02 00 00    	add    rax,0x22e
   2071e:	48 89 34 c7          	mov    QWORD PTR [rdi+rax*8],rsi
   20722:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   20726:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
   20729:	85 c0                	test   eax,eax
   2072b:	0f 84 0f 1c 00 00    	je     22340 <get_exp_params_ali+0x4a9f>
   20731:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   20735:	0f 85 b8 03 00 00    	jne    20af3 <get_exp_params_ali+0x3252>
   2073b:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   2073f:	0f 85 e3 00 00 00    	jne    20828 <get_exp_params_ali+0x2f87>
   20745:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   20748:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   2074b:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   2074e:	48 89 d0             	mov    rax,rdx
   20751:	48 c1 e0 02          	shl    rax,0x2
   20755:	48 01 d0             	add    rax,rdx
   20758:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20760:	48 01 d0             	add    rax,rdx
   20763:	48 89 ca             	mov    rdx,rcx
   20766:	48 c1 e2 02          	shl    rdx,0x2
   2076a:	48 01 ca             	add    rdx,rcx
   2076d:	48 01 d0             	add    rax,rdx
   20770:	48 01 f0             	add    rax,rsi
   20773:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2077b:	48 8d 05 9e 9f 1c 00 	lea    rax,[rip+0x1c9f9e]        # 1ea720 <mismatchMdH>
   20782:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   20785:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   20789:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   2078c:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   2078f:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20792:	48 89 d0             	mov    rax,rdx
   20795:	48 c1 e0 02          	shl    rax,0x2
   20799:	48 01 d0             	add    rax,rdx
   2079c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   207a4:	48 01 d0             	add    rax,rdx
   207a7:	48 89 ca             	mov    rdx,rcx
   207aa:	48 c1 e2 02          	shl    rdx,0x2
   207ae:	48 01 ca             	add    rdx,rcx
   207b1:	48 01 d0             	add    rax,rdx
   207b4:	48 01 f0             	add    rax,rsi
   207b7:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   207bf:	48 8d 05 5a 9f 1c 00 	lea    rax,[rip+0x1c9f5a]        # 1ea720 <mismatchMdH>
   207c6:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   207c9:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   207cc:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   207cf:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   207d2:	48 89 d0             	mov    rax,rdx
   207d5:	48 c1 e0 02          	shl    rax,0x2
   207d9:	48 01 d0             	add    rax,rdx
   207dc:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   207e4:	48 01 d0             	add    rax,rdx
   207e7:	48 89 ca             	mov    rdx,rcx
   207ea:	48 c1 e2 02          	shl    rdx,0x2
   207ee:	48 01 ca             	add    rdx,rcx
   207f1:	48 01 d0             	add    rax,rdx
   207f4:	48 01 f8             	add    rax,rdi
   207f7:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   207ff:	48 8d 05 fa 9b 1c 00 	lea    rax,[rip+0x1c9bfa]        # 1ea400 <mismatchM37>
   20806:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   20809:	29 c6                	sub    esi,eax
   2080b:	89 f0                	mov    eax,esi
   2080d:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   20811:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   20816:	f2 0f 5c c1          	subsd  xmm0,xmm1
   2081a:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   2081e:	85 c0                	test   eax,eax
   20820:	0f 9f c0             	setg   al
   20823:	e9 e0 00 00 00       	jmp    20908 <get_exp_params_ali+0x3067>
   20828:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   2082b:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   2082e:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20831:	48 89 d0             	mov    rax,rdx
   20834:	48 c1 e0 02          	shl    rax,0x2
   20838:	48 01 d0             	add    rax,rdx
   2083b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20843:	48 01 d0             	add    rax,rdx
   20846:	48 89 ca             	mov    rdx,rcx
   20849:	48 c1 e2 02          	shl    rdx,0x2
   2084d:	48 01 ca             	add    rdx,rcx
   20850:	48 01 d0             	add    rax,rdx
   20853:	48 01 f0             	add    rax,rsi
   20856:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2085e:	48 8d 05 bb 9e 1c 00 	lea    rax,[rip+0x1c9ebb]        # 1ea720 <mismatchMdH>
   20865:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   20868:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   2086c:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   2086f:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20872:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20875:	48 89 d0             	mov    rax,rdx
   20878:	48 c1 e0 02          	shl    rax,0x2
   2087c:	48 01 d0             	add    rax,rdx
   2087f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20887:	48 01 d0             	add    rax,rdx
   2088a:	48 89 ca             	mov    rdx,rcx
   2088d:	48 c1 e2 02          	shl    rdx,0x2
   20891:	48 01 ca             	add    rdx,rcx
   20894:	48 01 d0             	add    rax,rdx
   20897:	48 01 f0             	add    rax,rsi
   2089a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   208a2:	48 8d 05 77 9e 1c 00 	lea    rax,[rip+0x1c9e77]        # 1ea720 <mismatchMdH>
   208a9:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   208ac:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   208af:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   208b2:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   208b5:	48 89 d0             	mov    rax,rdx
   208b8:	48 c1 e0 02          	shl    rax,0x2
   208bc:	48 01 d0             	add    rax,rdx
   208bf:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   208c7:	48 01 d0             	add    rax,rdx
   208ca:	48 89 ca             	mov    rdx,rcx
   208cd:	48 c1 e2 02          	shl    rdx,0x2
   208d1:	48 01 ca             	add    rdx,rcx
   208d4:	48 01 d0             	add    rax,rdx
   208d7:	48 01 f8             	add    rax,rdi
   208da:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   208e2:	48 8d 05 17 9b 1c 00 	lea    rax,[rip+0x1c9b17]        # 1ea400 <mismatchM37>
   208e9:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   208ec:	29 c6                	sub    esi,eax
   208ee:	89 f0                	mov    eax,esi
   208f0:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   208f4:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   208f9:	f2 0f 5c c1          	subsd  xmm0,xmm1
   208fd:	66 0f ef c9          	pxor   xmm1,xmm1
   20901:	66 0f 2f c1          	comisd xmm0,xmm1
   20905:	0f 97 c0             	seta   al
   20908:	84 c0                	test   al,al
   2090a:	74 09                	je     20915 <get_exp_params_ali+0x3074>
   2090c:	66 0f ef c0          	pxor   xmm0,xmm0
   20910:	e9 c9 0b 00 00       	jmp    214de <get_exp_params_ali+0x3c3d>
   20915:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   20919:	0f 85 ee 00 00 00    	jne    20a0d <get_exp_params_ali+0x316c>
   2091f:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   20922:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20925:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20928:	48 89 d0             	mov    rax,rdx
   2092b:	48 c1 e0 02          	shl    rax,0x2
   2092f:	48 01 d0             	add    rax,rdx
   20932:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2093a:	48 01 d0             	add    rax,rdx
   2093d:	48 89 ca             	mov    rdx,rcx
   20940:	48 c1 e2 02          	shl    rdx,0x2
   20944:	48 01 ca             	add    rdx,rcx
   20947:	48 01 d0             	add    rax,rdx
   2094a:	48 01 f0             	add    rax,rsi
   2094d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20955:	48 8d 05 c4 9d 1c 00 	lea    rax,[rip+0x1c9dc4]        # 1ea720 <mismatchMdH>
   2095c:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   2095f:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   20963:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   20966:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20969:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   2096c:	48 89 d0             	mov    rax,rdx
   2096f:	48 c1 e0 02          	shl    rax,0x2
   20973:	48 01 d0             	add    rax,rdx
   20976:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2097e:	48 01 d0             	add    rax,rdx
   20981:	48 89 ca             	mov    rdx,rcx
   20984:	48 c1 e2 02          	shl    rdx,0x2
   20988:	48 01 ca             	add    rdx,rcx
   2098b:	48 01 d0             	add    rax,rdx
   2098e:	48 01 f0             	add    rax,rsi
   20991:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20999:	48 8d 05 80 9d 1c 00 	lea    rax,[rip+0x1c9d80]        # 1ea720 <mismatchMdH>
   209a0:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   209a3:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   209a6:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   209a9:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   209ac:	48 89 d0             	mov    rax,rdx
   209af:	48 c1 e0 02          	shl    rax,0x2
   209b3:	48 01 d0             	add    rax,rdx
   209b6:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   209be:	48 01 d0             	add    rax,rdx
   209c1:	48 89 ca             	mov    rdx,rcx
   209c4:	48 c1 e2 02          	shl    rdx,0x2
   209c8:	48 01 ca             	add    rdx,rcx
   209cb:	48 01 d0             	add    rax,rdx
   209ce:	48 01 f8             	add    rax,rdi
   209d1:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   209d9:	48 8d 05 20 9a 1c 00 	lea    rax,[rip+0x1c9a20]        # 1ea400 <mismatchM37>
   209e0:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   209e3:	29 c6                	sub    esi,eax
   209e5:	89 f0                	mov    eax,esi
   209e7:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   209eb:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   209f0:	f2 0f 5c c1          	subsd  xmm0,xmm1
   209f4:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   209f8:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   209fc:	f3 0f 7e 0d 2c 16 01 00 	movq   xmm1,QWORD PTR [rip+0x1162c]        # 32030 <Law_and_Order+0x5f0>
   20a04:	66 0f 57 c1          	xorpd  xmm0,xmm1
   20a08:	e9 d1 0a 00 00       	jmp    214de <get_exp_params_ali+0x3c3d>
   20a0d:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   20a10:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20a13:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20a16:	48 89 d0             	mov    rax,rdx
   20a19:	48 c1 e0 02          	shl    rax,0x2
   20a1d:	48 01 d0             	add    rax,rdx
   20a20:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20a28:	48 01 d0             	add    rax,rdx
   20a2b:	48 89 ca             	mov    rdx,rcx
   20a2e:	48 c1 e2 02          	shl    rdx,0x2
   20a32:	48 01 ca             	add    rdx,rcx
   20a35:	48 01 d0             	add    rax,rdx
   20a38:	48 01 f0             	add    rax,rsi
   20a3b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20a43:	48 8d 05 d6 9c 1c 00 	lea    rax,[rip+0x1c9cd6]        # 1ea720 <mismatchMdH>
   20a4a:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   20a4d:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   20a51:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   20a54:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20a57:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20a5a:	48 89 d0             	mov    rax,rdx
   20a5d:	48 c1 e0 02          	shl    rax,0x2
   20a61:	48 01 d0             	add    rax,rdx
   20a64:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20a6c:	48 01 d0             	add    rax,rdx
   20a6f:	48 89 ca             	mov    rdx,rcx
   20a72:	48 c1 e2 02          	shl    rdx,0x2
   20a76:	48 01 ca             	add    rdx,rcx
   20a79:	48 01 d0             	add    rax,rdx
   20a7c:	48 01 f0             	add    rax,rsi
   20a7f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20a87:	48 8d 05 92 9c 1c 00 	lea    rax,[rip+0x1c9c92]        # 1ea720 <mismatchMdH>
   20a8e:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   20a91:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   20a94:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20a97:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20a9a:	48 89 d0             	mov    rax,rdx
   20a9d:	48 c1 e0 02          	shl    rax,0x2
   20aa1:	48 01 d0             	add    rax,rdx
   20aa4:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20aac:	48 01 d0             	add    rax,rdx
   20aaf:	48 89 ca             	mov    rdx,rcx
   20ab2:	48 c1 e2 02          	shl    rdx,0x2
   20ab6:	48 01 ca             	add    rdx,rcx
   20ab9:	48 01 d0             	add    rax,rdx
   20abc:	48 01 f8             	add    rax,rdi
   20abf:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20ac7:	48 8d 05 32 99 1c 00 	lea    rax,[rip+0x1c9932]        # 1ea400 <mismatchM37>
   20ace:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   20ad1:	29 c6                	sub    esi,eax
   20ad3:	89 f0                	mov    eax,esi
   20ad5:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   20ad9:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   20ade:	f2 0f 5c c1          	subsd  xmm0,xmm1
   20ae2:	f3 0f 7e 0d 46 15 01 00 	movq   xmm1,QWORD PTR [rip+0x11546]        # 32030 <Law_and_Order+0x5f0>
   20aea:	66 0f 57 c1          	xorpd  xmm0,xmm1
   20aee:	e9 eb 09 00 00       	jmp    214de <get_exp_params_ali+0x3c3d>
   20af3:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   20af7:	0f 85 ee 00 00 00    	jne    20beb <get_exp_params_ali+0x334a>
   20afd:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   20b00:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20b03:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20b06:	48 89 d0             	mov    rax,rdx
   20b09:	48 c1 e0 02          	shl    rax,0x2
   20b0d:	48 01 d0             	add    rax,rdx
   20b10:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20b18:	48 01 d0             	add    rax,rdx
   20b1b:	48 89 ca             	mov    rdx,rcx
   20b1e:	48 c1 e2 02          	shl    rdx,0x2
   20b22:	48 01 ca             	add    rdx,rcx
   20b25:	48 01 d0             	add    rax,rdx
   20b28:	48 01 f0             	add    rax,rsi
   20b2b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20b33:	48 8d 05 e6 9b 1c 00 	lea    rax,[rip+0x1c9be6]        # 1ea720 <mismatchMdH>
   20b3a:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   20b3d:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   20b41:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   20b44:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20b47:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20b4a:	48 89 d0             	mov    rax,rdx
   20b4d:	48 c1 e0 02          	shl    rax,0x2
   20b51:	48 01 d0             	add    rax,rdx
   20b54:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20b5c:	48 01 d0             	add    rax,rdx
   20b5f:	48 89 ca             	mov    rdx,rcx
   20b62:	48 c1 e2 02          	shl    rdx,0x2
   20b66:	48 01 ca             	add    rdx,rcx
   20b69:	48 01 d0             	add    rax,rdx
   20b6c:	48 01 f0             	add    rax,rsi
   20b6f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20b77:	48 8d 05 a2 9b 1c 00 	lea    rax,[rip+0x1c9ba2]        # 1ea720 <mismatchMdH>
   20b7e:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   20b81:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   20b84:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20b87:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20b8a:	48 89 d0             	mov    rax,rdx
   20b8d:	48 c1 e0 02          	shl    rax,0x2
   20b91:	48 01 d0             	add    rax,rdx
   20b94:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20b9c:	48 01 d0             	add    rax,rdx
   20b9f:	48 89 ca             	mov    rdx,rcx
   20ba2:	48 c1 e2 02          	shl    rdx,0x2
   20ba6:	48 01 ca             	add    rdx,rcx
   20ba9:	48 01 d0             	add    rax,rdx
   20bac:	48 01 f8             	add    rax,rdi
   20baf:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20bb7:	48 8d 05 42 98 1c 00 	lea    rax,[rip+0x1c9842]        # 1ea400 <mismatchM37>
   20bbe:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   20bc1:	29 c6                	sub    esi,eax
   20bc3:	89 f0                	mov    eax,esi
   20bc5:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   20bc9:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   20bce:	f2 0f 5c c1          	subsd  xmm0,xmm1
   20bd2:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   20bd6:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   20bda:	f3 0f 7e 0d 4e 14 01 00 	movq   xmm1,QWORD PTR [rip+0x1144e]        # 32030 <Law_and_Order+0x5f0>
   20be2:	66 0f 57 c1          	xorpd  xmm0,xmm1
   20be6:	e9 e1 00 00 00       	jmp    20ccc <get_exp_params_ali+0x342b>
   20beb:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   20bee:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20bf1:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20bf4:	48 89 d0             	mov    rax,rdx
   20bf7:	48 c1 e0 02          	shl    rax,0x2
   20bfb:	48 01 d0             	add    rax,rdx
   20bfe:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20c06:	48 01 d0             	add    rax,rdx
   20c09:	48 89 ca             	mov    rdx,rcx
   20c0c:	48 c1 e2 02          	shl    rdx,0x2
   20c10:	48 01 ca             	add    rdx,rcx
   20c13:	48 01 d0             	add    rax,rdx
   20c16:	48 01 f0             	add    rax,rsi
   20c19:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20c21:	48 8d 05 f8 9a 1c 00 	lea    rax,[rip+0x1c9af8]        # 1ea720 <mismatchMdH>
   20c28:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   20c2b:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   20c2f:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   20c32:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20c35:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20c38:	48 89 d0             	mov    rax,rdx
   20c3b:	48 c1 e0 02          	shl    rax,0x2
   20c3f:	48 01 d0             	add    rax,rdx
   20c42:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20c4a:	48 01 d0             	add    rax,rdx
   20c4d:	48 89 ca             	mov    rdx,rcx
   20c50:	48 c1 e2 02          	shl    rdx,0x2
   20c54:	48 01 ca             	add    rdx,rcx
   20c57:	48 01 d0             	add    rax,rdx
   20c5a:	48 01 f0             	add    rax,rsi
   20c5d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20c65:	48 8d 05 b4 9a 1c 00 	lea    rax,[rip+0x1c9ab4]        # 1ea720 <mismatchMdH>
   20c6c:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   20c6f:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   20c72:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20c75:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20c78:	48 89 d0             	mov    rax,rdx
   20c7b:	48 c1 e0 02          	shl    rax,0x2
   20c7f:	48 01 d0             	add    rax,rdx
   20c82:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20c8a:	48 01 d0             	add    rax,rdx
   20c8d:	48 89 ca             	mov    rdx,rcx
   20c90:	48 c1 e2 02          	shl    rdx,0x2
   20c94:	48 01 ca             	add    rdx,rcx
   20c97:	48 01 d0             	add    rax,rdx
   20c9a:	48 01 f8             	add    rax,rdi
   20c9d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20ca5:	48 8d 05 54 97 1c 00 	lea    rax,[rip+0x1c9754]        # 1ea400 <mismatchM37>
   20cac:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   20caf:	29 c6                	sub    esi,eax
   20cb1:	89 f0                	mov    eax,esi
   20cb3:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   20cb7:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   20cbc:	f2 0f 5c c1          	subsd  xmm0,xmm1
   20cc0:	f3 0f 7e 0d 68 13 01 00 	movq   xmm1,QWORD PTR [rip+0x11368]        # 32030 <Law_and_Order+0x5f0>
   20cc8:	66 0f 57 c1          	xorpd  xmm0,xmm1
   20ccc:	f2 0f 10 0d 84 13 01 00 	movsd  xmm1,QWORD PTR [rip+0x11384]        # 32058 <Law_and_Order+0x618>
   20cd4:	f2 0f 5e c1          	divsd  xmm0,xmm1
   20cd8:	66 0f 28 c8          	movapd xmm1,xmm0
   20cdc:	f2 0f 10 05 8c 13 01 00 	movsd  xmm0,QWORD PTR [rip+0x1138c]        # 32070 <Law_and_Order+0x630>
   20ce4:	66 0f 2f c1          	comisd xmm0,xmm1
   20ce8:	76 09                	jbe    20cf3 <get_exp_params_ali+0x3452>
   20cea:	66 0f ef c0          	pxor   xmm0,xmm0
   20cee:	e9 eb 07 00 00       	jmp    214de <get_exp_params_ali+0x3c3d>
   20cf3:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   20cf7:	0f 85 ee 00 00 00    	jne    20deb <get_exp_params_ali+0x354a>
   20cfd:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   20d00:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20d03:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20d06:	48 89 d0             	mov    rax,rdx
   20d09:	48 c1 e0 02          	shl    rax,0x2
   20d0d:	48 01 d0             	add    rax,rdx
   20d10:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20d18:	48 01 d0             	add    rax,rdx
   20d1b:	48 89 ca             	mov    rdx,rcx
   20d1e:	48 c1 e2 02          	shl    rdx,0x2
   20d22:	48 01 ca             	add    rdx,rcx
   20d25:	48 01 d0             	add    rax,rdx
   20d28:	48 01 f0             	add    rax,rsi
   20d2b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20d33:	48 8d 05 e6 99 1c 00 	lea    rax,[rip+0x1c99e6]        # 1ea720 <mismatchMdH>
   20d3a:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   20d3d:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   20d41:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   20d44:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20d47:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20d4a:	48 89 d0             	mov    rax,rdx
   20d4d:	48 c1 e0 02          	shl    rax,0x2
   20d51:	48 01 d0             	add    rax,rdx
   20d54:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20d5c:	48 01 d0             	add    rax,rdx
   20d5f:	48 89 ca             	mov    rdx,rcx
   20d62:	48 c1 e2 02          	shl    rdx,0x2
   20d66:	48 01 ca             	add    rdx,rcx
   20d69:	48 01 d0             	add    rax,rdx
   20d6c:	48 01 f0             	add    rax,rsi
   20d6f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20d77:	48 8d 05 a2 99 1c 00 	lea    rax,[rip+0x1c99a2]        # 1ea720 <mismatchMdH>
   20d7e:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   20d81:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   20d84:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20d87:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20d8a:	48 89 d0             	mov    rax,rdx
   20d8d:	48 c1 e0 02          	shl    rax,0x2
   20d91:	48 01 d0             	add    rax,rdx
   20d94:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20d9c:	48 01 d0             	add    rax,rdx
   20d9f:	48 89 ca             	mov    rdx,rcx
   20da2:	48 c1 e2 02          	shl    rdx,0x2
   20da6:	48 01 ca             	add    rdx,rcx
   20da9:	48 01 d0             	add    rax,rdx
   20dac:	48 01 f8             	add    rax,rdi
   20daf:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20db7:	48 8d 05 42 96 1c 00 	lea    rax,[rip+0x1c9642]        # 1ea400 <mismatchM37>
   20dbe:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   20dc1:	29 c6                	sub    esi,eax
   20dc3:	89 f0                	mov    eax,esi
   20dc5:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   20dc9:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   20dce:	f2 0f 5c c1          	subsd  xmm0,xmm1
   20dd2:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   20dd6:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   20dda:	f3 0f 7e 0d 4e 12 01 00 	movq   xmm1,QWORD PTR [rip+0x1124e]        # 32030 <Law_and_Order+0x5f0>
   20de2:	66 0f 57 c1          	xorpd  xmm0,xmm1
   20de6:	e9 e1 00 00 00       	jmp    20ecc <get_exp_params_ali+0x362b>
   20deb:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   20dee:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20df1:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20df4:	48 89 d0             	mov    rax,rdx
   20df7:	48 c1 e0 02          	shl    rax,0x2
   20dfb:	48 01 d0             	add    rax,rdx
   20dfe:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20e06:	48 01 d0             	add    rax,rdx
   20e09:	48 89 ca             	mov    rdx,rcx
   20e0c:	48 c1 e2 02          	shl    rdx,0x2
   20e10:	48 01 ca             	add    rdx,rcx
   20e13:	48 01 d0             	add    rax,rdx
   20e16:	48 01 f0             	add    rax,rsi
   20e19:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20e21:	48 8d 05 f8 98 1c 00 	lea    rax,[rip+0x1c98f8]        # 1ea720 <mismatchMdH>
   20e28:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   20e2b:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   20e2f:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   20e32:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20e35:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20e38:	48 89 d0             	mov    rax,rdx
   20e3b:	48 c1 e0 02          	shl    rax,0x2
   20e3f:	48 01 d0             	add    rax,rdx
   20e42:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20e4a:	48 01 d0             	add    rax,rdx
   20e4d:	48 89 ca             	mov    rdx,rcx
   20e50:	48 c1 e2 02          	shl    rdx,0x2
   20e54:	48 01 ca             	add    rdx,rcx
   20e57:	48 01 d0             	add    rax,rdx
   20e5a:	48 01 f0             	add    rax,rsi
   20e5d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20e65:	48 8d 05 b4 98 1c 00 	lea    rax,[rip+0x1c98b4]        # 1ea720 <mismatchMdH>
   20e6c:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   20e6f:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   20e72:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20e75:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20e78:	48 89 d0             	mov    rax,rdx
   20e7b:	48 c1 e0 02          	shl    rax,0x2
   20e7f:	48 01 d0             	add    rax,rdx
   20e82:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20e8a:	48 01 d0             	add    rax,rdx
   20e8d:	48 89 ca             	mov    rdx,rcx
   20e90:	48 c1 e2 02          	shl    rdx,0x2
   20e94:	48 01 ca             	add    rdx,rcx
   20e97:	48 01 d0             	add    rax,rdx
   20e9a:	48 01 f8             	add    rax,rdi
   20e9d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20ea5:	48 8d 05 54 95 1c 00 	lea    rax,[rip+0x1c9554]        # 1ea400 <mismatchM37>
   20eac:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   20eaf:	29 c6                	sub    esi,eax
   20eb1:	89 f0                	mov    eax,esi
   20eb3:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   20eb7:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   20ebc:	f2 0f 5c c1          	subsd  xmm0,xmm1
   20ec0:	f3 0f 7e 0d 68 11 01 00 	movq   xmm1,QWORD PTR [rip+0x11168]        # 32030 <Law_and_Order+0x5f0>
   20ec8:	66 0f 57 c1          	xorpd  xmm0,xmm1
   20ecc:	f2 0f 10 0d 84 11 01 00 	movsd  xmm1,QWORD PTR [rip+0x11184]        # 32058 <Law_and_Order+0x618>
   20ed4:	f2 0f 5e c1          	divsd  xmm0,xmm1
   20ed8:	66 0f 2f 05 98 11 01 00 	comisd xmm0,QWORD PTR [rip+0x11198]        # 32078 <Law_and_Order+0x638>
   20ee0:	0f 86 de 01 00 00    	jbe    210c4 <get_exp_params_ali+0x3823>
   20ee6:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   20eea:	0f 85 ee 00 00 00    	jne    20fde <get_exp_params_ali+0x373d>
   20ef0:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   20ef3:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20ef6:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20ef9:	48 89 d0             	mov    rax,rdx
   20efc:	48 c1 e0 02          	shl    rax,0x2
   20f00:	48 01 d0             	add    rax,rdx
   20f03:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20f0b:	48 01 d0             	add    rax,rdx
   20f0e:	48 89 ca             	mov    rdx,rcx
   20f11:	48 c1 e2 02          	shl    rdx,0x2
   20f15:	48 01 ca             	add    rdx,rcx
   20f18:	48 01 d0             	add    rax,rdx
   20f1b:	48 01 f0             	add    rax,rsi
   20f1e:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20f26:	48 8d 05 f3 97 1c 00 	lea    rax,[rip+0x1c97f3]        # 1ea720 <mismatchMdH>
   20f2d:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   20f30:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   20f34:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   20f37:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20f3a:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20f3d:	48 89 d0             	mov    rax,rdx
   20f40:	48 c1 e0 02          	shl    rax,0x2
   20f44:	48 01 d0             	add    rax,rdx
   20f47:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20f4f:	48 01 d0             	add    rax,rdx
   20f52:	48 89 ca             	mov    rdx,rcx
   20f55:	48 c1 e2 02          	shl    rdx,0x2
   20f59:	48 01 ca             	add    rdx,rcx
   20f5c:	48 01 d0             	add    rax,rdx
   20f5f:	48 01 f0             	add    rax,rsi
   20f62:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20f6a:	48 8d 05 af 97 1c 00 	lea    rax,[rip+0x1c97af]        # 1ea720 <mismatchMdH>
   20f71:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   20f74:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   20f77:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20f7a:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20f7d:	48 89 d0             	mov    rax,rdx
   20f80:	48 c1 e0 02          	shl    rax,0x2
   20f84:	48 01 d0             	add    rax,rdx
   20f87:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20f8f:	48 01 d0             	add    rax,rdx
   20f92:	48 89 ca             	mov    rdx,rcx
   20f95:	48 c1 e2 02          	shl    rdx,0x2
   20f99:	48 01 ca             	add    rdx,rcx
   20f9c:	48 01 d0             	add    rax,rdx
   20f9f:	48 01 f8             	add    rax,rdi
   20fa2:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20faa:	48 8d 05 4f 94 1c 00 	lea    rax,[rip+0x1c944f]        # 1ea400 <mismatchM37>
   20fb1:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   20fb4:	29 c6                	sub    esi,eax
   20fb6:	89 f0                	mov    eax,esi
   20fb8:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   20fbc:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   20fc1:	f2 0f 5c c1          	subsd  xmm0,xmm1
   20fc5:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   20fc9:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   20fcd:	f3 0f 7e 0d 5b 10 01 00 	movq   xmm1,QWORD PTR [rip+0x1105b]        # 32030 <Law_and_Order+0x5f0>
   20fd5:	66 0f 57 c1          	xorpd  xmm0,xmm1
   20fd9:	e9 00 05 00 00       	jmp    214de <get_exp_params_ali+0x3c3d>
   20fde:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   20fe1:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   20fe4:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   20fe7:	48 89 d0             	mov    rax,rdx
   20fea:	48 c1 e0 02          	shl    rax,0x2
   20fee:	48 01 d0             	add    rax,rdx
   20ff1:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   20ff9:	48 01 d0             	add    rax,rdx
   20ffc:	48 89 ca             	mov    rdx,rcx
   20fff:	48 c1 e2 02          	shl    rdx,0x2
   21003:	48 01 ca             	add    rdx,rcx
   21006:	48 01 d0             	add    rax,rdx
   21009:	48 01 f0             	add    rax,rsi
   2100c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21014:	48 8d 05 05 97 1c 00 	lea    rax,[rip+0x1c9705]        # 1ea720 <mismatchMdH>
   2101b:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   2101e:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   21022:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   21025:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21028:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   2102b:	48 89 d0             	mov    rax,rdx
   2102e:	48 c1 e0 02          	shl    rax,0x2
   21032:	48 01 d0             	add    rax,rdx
   21035:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2103d:	48 01 d0             	add    rax,rdx
   21040:	48 89 ca             	mov    rdx,rcx
   21043:	48 c1 e2 02          	shl    rdx,0x2
   21047:	48 01 ca             	add    rdx,rcx
   2104a:	48 01 d0             	add    rax,rdx
   2104d:	48 01 f0             	add    rax,rsi
   21050:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21058:	48 8d 05 c1 96 1c 00 	lea    rax,[rip+0x1c96c1]        # 1ea720 <mismatchMdH>
   2105f:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   21062:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   21065:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21068:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   2106b:	48 89 d0             	mov    rax,rdx
   2106e:	48 c1 e0 02          	shl    rax,0x2
   21072:	48 01 d0             	add    rax,rdx
   21075:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2107d:	48 01 d0             	add    rax,rdx
   21080:	48 89 ca             	mov    rdx,rcx
   21083:	48 c1 e2 02          	shl    rdx,0x2
   21087:	48 01 ca             	add    rdx,rcx
   2108a:	48 01 d0             	add    rax,rdx
   2108d:	48 01 f8             	add    rax,rdi
   21090:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21098:	48 8d 05 61 93 1c 00 	lea    rax,[rip+0x1c9361]        # 1ea400 <mismatchM37>
   2109f:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   210a2:	29 c6                	sub    esi,eax
   210a4:	89 f0                	mov    eax,esi
   210a6:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   210aa:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   210af:	f2 0f 5c c1          	subsd  xmm0,xmm1
   210b3:	f3 0f 7e 0d 75 0f 01 00 	movq   xmm1,QWORD PTR [rip+0x10f75]        # 32030 <Law_and_Order+0x5f0>
   210bb:	66 0f 57 c1          	xorpd  xmm0,xmm1
   210bf:	e9 1a 04 00 00       	jmp    214de <get_exp_params_ali+0x3c3d>
   210c4:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   210c8:	0f 85 ee 00 00 00    	jne    211bc <get_exp_params_ali+0x391b>
   210ce:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   210d1:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   210d4:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   210d7:	48 89 d0             	mov    rax,rdx
   210da:	48 c1 e0 02          	shl    rax,0x2
   210de:	48 01 d0             	add    rax,rdx
   210e1:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   210e9:	48 01 d0             	add    rax,rdx
   210ec:	48 89 ca             	mov    rdx,rcx
   210ef:	48 c1 e2 02          	shl    rdx,0x2
   210f3:	48 01 ca             	add    rdx,rcx
   210f6:	48 01 d0             	add    rax,rdx
   210f9:	48 01 f0             	add    rax,rsi
   210fc:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21104:	48 8d 05 15 96 1c 00 	lea    rax,[rip+0x1c9615]        # 1ea720 <mismatchMdH>
   2110b:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   2110e:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   21112:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   21115:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21118:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   2111b:	48 89 d0             	mov    rax,rdx
   2111e:	48 c1 e0 02          	shl    rax,0x2
   21122:	48 01 d0             	add    rax,rdx
   21125:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2112d:	48 01 d0             	add    rax,rdx
   21130:	48 89 ca             	mov    rdx,rcx
   21133:	48 c1 e2 02          	shl    rdx,0x2
   21137:	48 01 ca             	add    rdx,rcx
   2113a:	48 01 d0             	add    rax,rdx
   2113d:	48 01 f0             	add    rax,rsi
   21140:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21148:	48 8d 05 d1 95 1c 00 	lea    rax,[rip+0x1c95d1]        # 1ea720 <mismatchMdH>
   2114f:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   21152:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   21155:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21158:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   2115b:	48 89 d0             	mov    rax,rdx
   2115e:	48 c1 e0 02          	shl    rax,0x2
   21162:	48 01 d0             	add    rax,rdx
   21165:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2116d:	48 01 d0             	add    rax,rdx
   21170:	48 89 ca             	mov    rdx,rcx
   21173:	48 c1 e2 02          	shl    rdx,0x2
   21177:	48 01 ca             	add    rdx,rcx
   2117a:	48 01 d0             	add    rax,rdx
   2117d:	48 01 f8             	add    rax,rdi
   21180:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21188:	48 8d 05 71 92 1c 00 	lea    rax,[rip+0x1c9271]        # 1ea400 <mismatchM37>
   2118f:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   21192:	29 c6                	sub    esi,eax
   21194:	89 f0                	mov    eax,esi
   21196:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   2119a:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   2119f:	f2 0f 5c c1          	subsd  xmm0,xmm1
   211a3:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   211a7:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   211ab:	f3 0f 7e 0d 7d 0e 01 00 	movq   xmm1,QWORD PTR [rip+0x10e7d]        # 32030 <Law_and_Order+0x5f0>
   211b3:	66 0f 57 c1          	xorpd  xmm0,xmm1
   211b7:	e9 e1 00 00 00       	jmp    2129d <get_exp_params_ali+0x39fc>
   211bc:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   211bf:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   211c2:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   211c5:	48 89 d0             	mov    rax,rdx
   211c8:	48 c1 e0 02          	shl    rax,0x2
   211cc:	48 01 d0             	add    rax,rdx
   211cf:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   211d7:	48 01 d0             	add    rax,rdx
   211da:	48 89 ca             	mov    rdx,rcx
   211dd:	48 c1 e2 02          	shl    rdx,0x2
   211e1:	48 01 ca             	add    rdx,rcx
   211e4:	48 01 d0             	add    rax,rdx
   211e7:	48 01 f0             	add    rax,rsi
   211ea:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   211f2:	48 8d 05 27 95 1c 00 	lea    rax,[rip+0x1c9527]        # 1ea720 <mismatchMdH>
   211f9:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   211fc:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   21200:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   21203:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21206:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   21209:	48 89 d0             	mov    rax,rdx
   2120c:	48 c1 e0 02          	shl    rax,0x2
   21210:	48 01 d0             	add    rax,rdx
   21213:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2121b:	48 01 d0             	add    rax,rdx
   2121e:	48 89 ca             	mov    rdx,rcx
   21221:	48 c1 e2 02          	shl    rdx,0x2
   21225:	48 01 ca             	add    rdx,rcx
   21228:	48 01 d0             	add    rax,rdx
   2122b:	48 01 f0             	add    rax,rsi
   2122e:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21236:	48 8d 05 e3 94 1c 00 	lea    rax,[rip+0x1c94e3]        # 1ea720 <mismatchMdH>
   2123d:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   21240:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   21243:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21246:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   21249:	48 89 d0             	mov    rax,rdx
   2124c:	48 c1 e0 02          	shl    rax,0x2
   21250:	48 01 d0             	add    rax,rdx
   21253:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2125b:	48 01 d0             	add    rax,rdx
   2125e:	48 89 ca             	mov    rdx,rcx
   21261:	48 c1 e2 02          	shl    rdx,0x2
   21265:	48 01 ca             	add    rdx,rcx
   21268:	48 01 d0             	add    rax,rdx
   2126b:	48 01 f8             	add    rax,rdi
   2126e:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21276:	48 8d 05 83 91 1c 00 	lea    rax,[rip+0x1c9183]        # 1ea400 <mismatchM37>
   2127d:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   21280:	29 c6                	sub    esi,eax
   21282:	89 f0                	mov    eax,esi
   21284:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   21288:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   2128d:	f2 0f 5c c1          	subsd  xmm0,xmm1
   21291:	f3 0f 7e 0d 97 0d 01 00 	movq   xmm1,QWORD PTR [rip+0x10d97]        # 32030 <Law_and_Order+0x5f0>
   21299:	66 0f 57 c1          	xorpd  xmm0,xmm1
   2129d:	f2 0f 10 0d b3 0d 01 00 	movsd  xmm1,QWORD PTR [rip+0x10db3]        # 32058 <Law_and_Order+0x618>
   212a5:	f2 0f 5e c1          	divsd  xmm0,xmm1
   212a9:	f2 0f 10 0d cf 0d 01 00 	movsd  xmm1,QWORD PTR [rip+0x10dcf]        # 32080 <Law_and_Order+0x640>
   212b1:	f2 0f 5c c1          	subsd  xmm0,xmm1
   212b5:	e8 36 23 fe ff       	call   35f0 <sin@plt>
   212ba:	f2 0f 10 0d 46 0d 01 00 	movsd  xmm1,QWORD PTR [rip+0x10d46]        # 32008 <Law_and_Order+0x5c8>
   212c2:	f2 0f 58 c8          	addsd  xmm1,xmm0
   212c6:	f2 0f 10 05 ba 0d 01 00 	movsd  xmm0,QWORD PTR [rip+0x10dba]        # 32088 <Law_and_Order+0x648>
   212ce:	f2 0f 59 c8          	mulsd  xmm1,xmm0
   212d2:	f2 0f 11 4d 80       	movsd  QWORD PTR [rbp-0x80],xmm1
   212d7:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   212db:	0f 85 ee 00 00 00    	jne    213cf <get_exp_params_ali+0x3b2e>
   212e1:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   212e4:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   212e7:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   212ea:	48 89 d0             	mov    rax,rdx
   212ed:	48 c1 e0 02          	shl    rax,0x2
   212f1:	48 01 d0             	add    rax,rdx
   212f4:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   212fc:	48 01 d0             	add    rax,rdx
   212ff:	48 89 ca             	mov    rdx,rcx
   21302:	48 c1 e2 02          	shl    rdx,0x2
   21306:	48 01 ca             	add    rdx,rcx
   21309:	48 01 d0             	add    rax,rdx
   2130c:	48 01 f0             	add    rax,rsi
   2130f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21317:	48 8d 05 02 94 1c 00 	lea    rax,[rip+0x1c9402]        # 1ea720 <mismatchMdH>
   2131e:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   21321:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   21325:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   21328:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   2132b:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   2132e:	48 89 d0             	mov    rax,rdx
   21331:	48 c1 e0 02          	shl    rax,0x2
   21335:	48 01 d0             	add    rax,rdx
   21338:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21340:	48 01 d0             	add    rax,rdx
   21343:	48 89 ca             	mov    rdx,rcx
   21346:	48 c1 e2 02          	shl    rdx,0x2
   2134a:	48 01 ca             	add    rdx,rcx
   2134d:	48 01 d0             	add    rax,rdx
   21350:	48 01 f0             	add    rax,rsi
   21353:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2135b:	48 8d 05 be 93 1c 00 	lea    rax,[rip+0x1c93be]        # 1ea720 <mismatchMdH>
   21362:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   21365:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   21368:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   2136b:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   2136e:	48 89 d0             	mov    rax,rdx
   21371:	48 c1 e0 02          	shl    rax,0x2
   21375:	48 01 d0             	add    rax,rdx
   21378:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21380:	48 01 d0             	add    rax,rdx
   21383:	48 89 ca             	mov    rdx,rcx
   21386:	48 c1 e2 02          	shl    rdx,0x2
   2138a:	48 01 ca             	add    rdx,rcx
   2138d:	48 01 d0             	add    rax,rdx
   21390:	48 01 f8             	add    rax,rdi
   21393:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2139b:	48 8d 05 5e 90 1c 00 	lea    rax,[rip+0x1c905e]        # 1ea400 <mismatchM37>
   213a2:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   213a5:	29 c6                	sub    esi,eax
   213a7:	89 f0                	mov    eax,esi
   213a9:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   213ad:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   213b2:	f2 0f 5c c1          	subsd  xmm0,xmm1
   213b6:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   213ba:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   213be:	f3 0f 7e 0d 6a 0c 01 00 	movq   xmm1,QWORD PTR [rip+0x10c6a]        # 32030 <Law_and_Order+0x5f0>
   213c6:	66 0f 57 c1          	xorpd  xmm0,xmm1
   213ca:	e9 e1 00 00 00       	jmp    214b0 <get_exp_params_ali+0x3c0f>
   213cf:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   213d2:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   213d5:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   213d8:	48 89 d0             	mov    rax,rdx
   213db:	48 c1 e0 02          	shl    rax,0x2
   213df:	48 01 d0             	add    rax,rdx
   213e2:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   213ea:	48 01 d0             	add    rax,rdx
   213ed:	48 89 ca             	mov    rdx,rcx
   213f0:	48 c1 e2 02          	shl    rdx,0x2
   213f4:	48 01 ca             	add    rdx,rcx
   213f7:	48 01 d0             	add    rax,rdx
   213fa:	48 01 f0             	add    rax,rsi
   213fd:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21405:	48 8d 05 14 93 1c 00 	lea    rax,[rip+0x1c9314]        # 1ea720 <mismatchMdH>
   2140c:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   2140f:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   21413:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   21416:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21419:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   2141c:	48 89 d0             	mov    rax,rdx
   2141f:	48 c1 e0 02          	shl    rax,0x2
   21423:	48 01 d0             	add    rax,rdx
   21426:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2142e:	48 01 d0             	add    rax,rdx
   21431:	48 89 ca             	mov    rdx,rcx
   21434:	48 c1 e2 02          	shl    rdx,0x2
   21438:	48 01 ca             	add    rdx,rcx
   2143b:	48 01 d0             	add    rax,rdx
   2143e:	48 01 f0             	add    rax,rsi
   21441:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21449:	48 8d 05 d0 92 1c 00 	lea    rax,[rip+0x1c92d0]        # 1ea720 <mismatchMdH>
   21450:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   21453:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   21456:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21459:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   2145c:	48 89 d0             	mov    rax,rdx
   2145f:	48 c1 e0 02          	shl    rax,0x2
   21463:	48 01 d0             	add    rax,rdx
   21466:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2146e:	48 01 d0             	add    rax,rdx
   21471:	48 89 ca             	mov    rdx,rcx
   21474:	48 c1 e2 02          	shl    rdx,0x2
   21478:	48 01 ca             	add    rdx,rcx
   2147b:	48 01 d0             	add    rax,rdx
   2147e:	48 01 f8             	add    rax,rdi
   21481:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21489:	48 8d 05 70 8f 1c 00 	lea    rax,[rip+0x1c8f70]        # 1ea400 <mismatchM37>
   21490:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   21493:	29 c6                	sub    esi,eax
   21495:	89 f0                	mov    eax,esi
   21497:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   2149b:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   214a0:	f2 0f 5c c1          	subsd  xmm0,xmm1
   214a4:	f3 0f 7e 0d 84 0b 01 00 	movq   xmm1,QWORD PTR [rip+0x10b84]        # 32030 <Law_and_Order+0x5f0>
   214ac:	66 0f 57 c1          	xorpd  xmm0,xmm1
   214b0:	f2 0f 10 0d a0 0b 01 00 	movsd  xmm1,QWORD PTR [rip+0x10ba0]        # 32058 <Law_and_Order+0x618>
   214b8:	f2 0f 5e c1          	divsd  xmm0,xmm1
   214bc:	f2 0f 10 0d bc 0b 01 00 	movsd  xmm1,QWORD PTR [rip+0x10bbc]        # 32080 <Law_and_Order+0x640>
   214c4:	f2 0f 5c c1          	subsd  xmm0,xmm1
   214c8:	e8 23 21 fe ff       	call   35f0 <sin@plt>
   214cd:	f2 0f 10 0d 33 0b 01 00 	movsd  xmm1,QWORD PTR [rip+0x10b33]        # 32008 <Law_and_Order+0x5c8>
   214d5:	f2 0f 58 c1          	addsd  xmm0,xmm1
   214d9:	f2 0f 59 45 80       	mulsd  xmm0,QWORD PTR [rbp-0x80]
   214de:	f2 0f 10 0d 72 0b 01 00 	movsd  xmm1,QWORD PTR [rip+0x10b72]        # 32058 <Law_and_Order+0x618>
   214e6:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   214ea:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   214ef:	e8 7c 25 fe ff       	call   3a70 <exp@plt>
   214f4:	66 48 0f 7e c6       	movq   rsi,xmm0
   214f9:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
   214fd:	44 8b 45 a8          	mov    r8d,DWORD PTR [rbp-0x58]
   21501:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21504:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   21507:	48 89 d0             	mov    rax,rdx
   2150a:	48 c1 e0 02          	shl    rax,0x2
   2150e:	48 01 d0             	add    rax,rdx
   21511:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21519:	48 01 d0             	add    rax,rdx
   2151c:	48 89 ca             	mov    rdx,rcx
   2151f:	48 c1 e2 02          	shl    rdx,0x2
   21523:	48 01 ca             	add    rdx,rcx
   21526:	48 01 d0             	add    rax,rdx
   21529:	4c 01 c0             	add    rax,r8
   2152c:	48 05 86 04 00 00    	add    rax,0x486
   21532:	48 89 34 c7          	mov    QWORD PTR [rdi+rax*8],rsi
   21536:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   2153a:	0f 85 b8 03 00 00    	jne    218f8 <get_exp_params_ali+0x4057>
   21540:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   21544:	0f 85 e3 00 00 00    	jne    2162d <get_exp_params_ali+0x3d8c>
   2154a:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   2154d:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21550:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   21553:	48 89 d0             	mov    rax,rdx
   21556:	48 c1 e0 02          	shl    rax,0x2
   2155a:	48 01 d0             	add    rax,rdx
   2155d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21565:	48 01 d0             	add    rax,rdx
   21568:	48 89 ca             	mov    rdx,rcx
   2156b:	48 c1 e2 02          	shl    rdx,0x2
   2156f:	48 01 ca             	add    rdx,rcx
   21572:	48 01 d0             	add    rax,rdx
   21575:	48 01 f0             	add    rax,rsi
   21578:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21580:	48 8d 05 59 a4 1c 00 	lea    rax,[rip+0x1ca459]        # 1eb9e0 <mismatchExtdH>
   21587:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   2158a:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   2158e:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   21591:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21594:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   21597:	48 89 d0             	mov    rax,rdx
   2159a:	48 c1 e0 02          	shl    rax,0x2
   2159e:	48 01 d0             	add    rax,rdx
   215a1:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   215a9:	48 01 d0             	add    rax,rdx
   215ac:	48 89 ca             	mov    rdx,rcx
   215af:	48 c1 e2 02          	shl    rdx,0x2
   215b3:	48 01 ca             	add    rdx,rcx
   215b6:	48 01 d0             	add    rax,rdx
   215b9:	48 01 f0             	add    rax,rsi
   215bc:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   215c4:	48 8d 05 15 a4 1c 00 	lea    rax,[rip+0x1ca415]        # 1eb9e0 <mismatchExtdH>
   215cb:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   215ce:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   215d1:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   215d4:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   215d7:	48 89 d0             	mov    rax,rdx
   215da:	48 c1 e0 02          	shl    rax,0x2
   215de:	48 01 d0             	add    rax,rdx
   215e1:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   215e9:	48 01 d0             	add    rax,rdx
   215ec:	48 89 ca             	mov    rdx,rcx
   215ef:	48 c1 e2 02          	shl    rdx,0x2
   215f3:	48 01 ca             	add    rdx,rcx
   215f6:	48 01 d0             	add    rax,rdx
   215f9:	48 01 f8             	add    rax,rdi
   215fc:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21604:	48 8d 05 b5 a0 1c 00 	lea    rax,[rip+0x1ca0b5]        # 1eb6c0 <mismatchExt37>
   2160b:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   2160e:	29 c6                	sub    esi,eax
   21610:	89 f0                	mov    eax,esi
   21612:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   21616:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   2161b:	f2 0f 5c c1          	subsd  xmm0,xmm1
   2161f:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   21623:	85 c0                	test   eax,eax
   21625:	0f 9f c0             	setg   al
   21628:	e9 e0 00 00 00       	jmp    2170d <get_exp_params_ali+0x3e6c>
   2162d:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   21630:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21633:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   21636:	48 89 d0             	mov    rax,rdx
   21639:	48 c1 e0 02          	shl    rax,0x2
   2163d:	48 01 d0             	add    rax,rdx
   21640:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21648:	48 01 d0             	add    rax,rdx
   2164b:	48 89 ca             	mov    rdx,rcx
   2164e:	48 c1 e2 02          	shl    rdx,0x2
   21652:	48 01 ca             	add    rdx,rcx
   21655:	48 01 d0             	add    rax,rdx
   21658:	48 01 f0             	add    rax,rsi
   2165b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21663:	48 8d 05 76 a3 1c 00 	lea    rax,[rip+0x1ca376]        # 1eb9e0 <mismatchExtdH>
   2166a:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   2166d:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   21671:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   21674:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21677:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   2167a:	48 89 d0             	mov    rax,rdx
   2167d:	48 c1 e0 02          	shl    rax,0x2
   21681:	48 01 d0             	add    rax,rdx
   21684:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2168c:	48 01 d0             	add    rax,rdx
   2168f:	48 89 ca             	mov    rdx,rcx
   21692:	48 c1 e2 02          	shl    rdx,0x2
   21696:	48 01 ca             	add    rdx,rcx
   21699:	48 01 d0             	add    rax,rdx
   2169c:	48 01 f0             	add    rax,rsi
   2169f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   216a7:	48 8d 05 32 a3 1c 00 	lea    rax,[rip+0x1ca332]        # 1eb9e0 <mismatchExtdH>
   216ae:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   216b1:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   216b4:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   216b7:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   216ba:	48 89 d0             	mov    rax,rdx
   216bd:	48 c1 e0 02          	shl    rax,0x2
   216c1:	48 01 d0             	add    rax,rdx
   216c4:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   216cc:	48 01 d0             	add    rax,rdx
   216cf:	48 89 ca             	mov    rdx,rcx
   216d2:	48 c1 e2 02          	shl    rdx,0x2
   216d6:	48 01 ca             	add    rdx,rcx
   216d9:	48 01 d0             	add    rax,rdx
   216dc:	48 01 f8             	add    rax,rdi
   216df:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   216e7:	48 8d 05 d2 9f 1c 00 	lea    rax,[rip+0x1c9fd2]        # 1eb6c0 <mismatchExt37>
   216ee:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   216f1:	29 c6                	sub    esi,eax
   216f3:	89 f0                	mov    eax,esi
   216f5:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   216f9:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   216fe:	f2 0f 5c c1          	subsd  xmm0,xmm1
   21702:	66 0f ef c9          	pxor   xmm1,xmm1
   21706:	66 0f 2f c1          	comisd xmm0,xmm1
   2170a:	0f 97 c0             	seta   al
   2170d:	84 c0                	test   al,al
   2170f:	74 09                	je     2171a <get_exp_params_ali+0x3e79>
   21711:	66 0f ef c0          	pxor   xmm0,xmm0
   21715:	e9 c9 0b 00 00       	jmp    222e3 <get_exp_params_ali+0x4a42>
   2171a:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   2171e:	0f 85 ee 00 00 00    	jne    21812 <get_exp_params_ali+0x3f71>
   21724:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   21727:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   2172a:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   2172d:	48 89 d0             	mov    rax,rdx
   21730:	48 c1 e0 02          	shl    rax,0x2
   21734:	48 01 d0             	add    rax,rdx
   21737:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2173f:	48 01 d0             	add    rax,rdx
   21742:	48 89 ca             	mov    rdx,rcx
   21745:	48 c1 e2 02          	shl    rdx,0x2
   21749:	48 01 ca             	add    rdx,rcx
   2174c:	48 01 d0             	add    rax,rdx
   2174f:	48 01 f0             	add    rax,rsi
   21752:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2175a:	48 8d 05 7f a2 1c 00 	lea    rax,[rip+0x1ca27f]        # 1eb9e0 <mismatchExtdH>
   21761:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   21764:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   21768:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   2176b:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   2176e:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   21771:	48 89 d0             	mov    rax,rdx
   21774:	48 c1 e0 02          	shl    rax,0x2
   21778:	48 01 d0             	add    rax,rdx
   2177b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21783:	48 01 d0             	add    rax,rdx
   21786:	48 89 ca             	mov    rdx,rcx
   21789:	48 c1 e2 02          	shl    rdx,0x2
   2178d:	48 01 ca             	add    rdx,rcx
   21790:	48 01 d0             	add    rax,rdx
   21793:	48 01 f0             	add    rax,rsi
   21796:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2179e:	48 8d 05 3b a2 1c 00 	lea    rax,[rip+0x1ca23b]        # 1eb9e0 <mismatchExtdH>
   217a5:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   217a8:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   217ab:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   217ae:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   217b1:	48 89 d0             	mov    rax,rdx
   217b4:	48 c1 e0 02          	shl    rax,0x2
   217b8:	48 01 d0             	add    rax,rdx
   217bb:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   217c3:	48 01 d0             	add    rax,rdx
   217c6:	48 89 ca             	mov    rdx,rcx
   217c9:	48 c1 e2 02          	shl    rdx,0x2
   217cd:	48 01 ca             	add    rdx,rcx
   217d0:	48 01 d0             	add    rax,rdx
   217d3:	48 01 f8             	add    rax,rdi
   217d6:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   217de:	48 8d 05 db 9e 1c 00 	lea    rax,[rip+0x1c9edb]        # 1eb6c0 <mismatchExt37>
   217e5:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   217e8:	29 c6                	sub    esi,eax
   217ea:	89 f0                	mov    eax,esi
   217ec:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   217f0:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   217f5:	f2 0f 5c c1          	subsd  xmm0,xmm1
   217f9:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   217fd:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   21801:	f3 0f 7e 0d 27 08 01 00 	movq   xmm1,QWORD PTR [rip+0x10827]        # 32030 <Law_and_Order+0x5f0>
   21809:	66 0f 57 c1          	xorpd  xmm0,xmm1
   2180d:	e9 d1 0a 00 00       	jmp    222e3 <get_exp_params_ali+0x4a42>
   21812:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   21815:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21818:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   2181b:	48 89 d0             	mov    rax,rdx
   2181e:	48 c1 e0 02          	shl    rax,0x2
   21822:	48 01 d0             	add    rax,rdx
   21825:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2182d:	48 01 d0             	add    rax,rdx
   21830:	48 89 ca             	mov    rdx,rcx
   21833:	48 c1 e2 02          	shl    rdx,0x2
   21837:	48 01 ca             	add    rdx,rcx
   2183a:	48 01 d0             	add    rax,rdx
   2183d:	48 01 f0             	add    rax,rsi
   21840:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21848:	48 8d 05 91 a1 1c 00 	lea    rax,[rip+0x1ca191]        # 1eb9e0 <mismatchExtdH>
   2184f:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   21852:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   21856:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   21859:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   2185c:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   2185f:	48 89 d0             	mov    rax,rdx
   21862:	48 c1 e0 02          	shl    rax,0x2
   21866:	48 01 d0             	add    rax,rdx
   21869:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21871:	48 01 d0             	add    rax,rdx
   21874:	48 89 ca             	mov    rdx,rcx
   21877:	48 c1 e2 02          	shl    rdx,0x2
   2187b:	48 01 ca             	add    rdx,rcx
   2187e:	48 01 d0             	add    rax,rdx
   21881:	48 01 f0             	add    rax,rsi
   21884:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2188c:	48 8d 05 4d a1 1c 00 	lea    rax,[rip+0x1ca14d]        # 1eb9e0 <mismatchExtdH>
   21893:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   21896:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   21899:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   2189c:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   2189f:	48 89 d0             	mov    rax,rdx
   218a2:	48 c1 e0 02          	shl    rax,0x2
   218a6:	48 01 d0             	add    rax,rdx
   218a9:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   218b1:	48 01 d0             	add    rax,rdx
   218b4:	48 89 ca             	mov    rdx,rcx
   218b7:	48 c1 e2 02          	shl    rdx,0x2
   218bb:	48 01 ca             	add    rdx,rcx
   218be:	48 01 d0             	add    rax,rdx
   218c1:	48 01 f8             	add    rax,rdi
   218c4:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   218cc:	48 8d 05 ed 9d 1c 00 	lea    rax,[rip+0x1c9ded]        # 1eb6c0 <mismatchExt37>
   218d3:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   218d6:	29 c6                	sub    esi,eax
   218d8:	89 f0                	mov    eax,esi
   218da:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   218de:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   218e3:	f2 0f 5c c1          	subsd  xmm0,xmm1
   218e7:	f3 0f 7e 0d 41 07 01 00 	movq   xmm1,QWORD PTR [rip+0x10741]        # 32030 <Law_and_Order+0x5f0>
   218ef:	66 0f 57 c1          	xorpd  xmm0,xmm1
   218f3:	e9 eb 09 00 00       	jmp    222e3 <get_exp_params_ali+0x4a42>
   218f8:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   218fc:	0f 85 ee 00 00 00    	jne    219f0 <get_exp_params_ali+0x414f>
   21902:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   21905:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21908:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   2190b:	48 89 d0             	mov    rax,rdx
   2190e:	48 c1 e0 02          	shl    rax,0x2
   21912:	48 01 d0             	add    rax,rdx
   21915:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2191d:	48 01 d0             	add    rax,rdx
   21920:	48 89 ca             	mov    rdx,rcx
   21923:	48 c1 e2 02          	shl    rdx,0x2
   21927:	48 01 ca             	add    rdx,rcx
   2192a:	48 01 d0             	add    rax,rdx
   2192d:	48 01 f0             	add    rax,rsi
   21930:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21938:	48 8d 05 a1 a0 1c 00 	lea    rax,[rip+0x1ca0a1]        # 1eb9e0 <mismatchExtdH>
   2193f:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   21942:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   21946:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   21949:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   2194c:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   2194f:	48 89 d0             	mov    rax,rdx
   21952:	48 c1 e0 02          	shl    rax,0x2
   21956:	48 01 d0             	add    rax,rdx
   21959:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21961:	48 01 d0             	add    rax,rdx
   21964:	48 89 ca             	mov    rdx,rcx
   21967:	48 c1 e2 02          	shl    rdx,0x2
   2196b:	48 01 ca             	add    rdx,rcx
   2196e:	48 01 d0             	add    rax,rdx
   21971:	48 01 f0             	add    rax,rsi
   21974:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2197c:	48 8d 05 5d a0 1c 00 	lea    rax,[rip+0x1ca05d]        # 1eb9e0 <mismatchExtdH>
   21983:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   21986:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   21989:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   2198c:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   2198f:	48 89 d0             	mov    rax,rdx
   21992:	48 c1 e0 02          	shl    rax,0x2
   21996:	48 01 d0             	add    rax,rdx
   21999:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   219a1:	48 01 d0             	add    rax,rdx
   219a4:	48 89 ca             	mov    rdx,rcx
   219a7:	48 c1 e2 02          	shl    rdx,0x2
   219ab:	48 01 ca             	add    rdx,rcx
   219ae:	48 01 d0             	add    rax,rdx
   219b1:	48 01 f8             	add    rax,rdi
   219b4:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   219bc:	48 8d 05 fd 9c 1c 00 	lea    rax,[rip+0x1c9cfd]        # 1eb6c0 <mismatchExt37>
   219c3:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   219c6:	29 c6                	sub    esi,eax
   219c8:	89 f0                	mov    eax,esi
   219ca:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   219ce:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   219d3:	f2 0f 5c c1          	subsd  xmm0,xmm1
   219d7:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   219db:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   219df:	f3 0f 7e 0d 49 06 01 00 	movq   xmm1,QWORD PTR [rip+0x10649]        # 32030 <Law_and_Order+0x5f0>
   219e7:	66 0f 57 c1          	xorpd  xmm0,xmm1
   219eb:	e9 e1 00 00 00       	jmp    21ad1 <get_exp_params_ali+0x4230>
   219f0:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   219f3:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   219f6:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   219f9:	48 89 d0             	mov    rax,rdx
   219fc:	48 c1 e0 02          	shl    rax,0x2
   21a00:	48 01 d0             	add    rax,rdx
   21a03:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21a0b:	48 01 d0             	add    rax,rdx
   21a0e:	48 89 ca             	mov    rdx,rcx
   21a11:	48 c1 e2 02          	shl    rdx,0x2
   21a15:	48 01 ca             	add    rdx,rcx
   21a18:	48 01 d0             	add    rax,rdx
   21a1b:	48 01 f0             	add    rax,rsi
   21a1e:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21a26:	48 8d 05 b3 9f 1c 00 	lea    rax,[rip+0x1c9fb3]        # 1eb9e0 <mismatchExtdH>
   21a2d:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   21a30:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   21a34:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   21a37:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21a3a:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   21a3d:	48 89 d0             	mov    rax,rdx
   21a40:	48 c1 e0 02          	shl    rax,0x2
   21a44:	48 01 d0             	add    rax,rdx
   21a47:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21a4f:	48 01 d0             	add    rax,rdx
   21a52:	48 89 ca             	mov    rdx,rcx
   21a55:	48 c1 e2 02          	shl    rdx,0x2
   21a59:	48 01 ca             	add    rdx,rcx
   21a5c:	48 01 d0             	add    rax,rdx
   21a5f:	48 01 f0             	add    rax,rsi
   21a62:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21a6a:	48 8d 05 6f 9f 1c 00 	lea    rax,[rip+0x1c9f6f]        # 1eb9e0 <mismatchExtdH>
   21a71:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   21a74:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   21a77:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21a7a:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   21a7d:	48 89 d0             	mov    rax,rdx
   21a80:	48 c1 e0 02          	shl    rax,0x2
   21a84:	48 01 d0             	add    rax,rdx
   21a87:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21a8f:	48 01 d0             	add    rax,rdx
   21a92:	48 89 ca             	mov    rdx,rcx
   21a95:	48 c1 e2 02          	shl    rdx,0x2
   21a99:	48 01 ca             	add    rdx,rcx
   21a9c:	48 01 d0             	add    rax,rdx
   21a9f:	48 01 f8             	add    rax,rdi
   21aa2:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21aaa:	48 8d 05 0f 9c 1c 00 	lea    rax,[rip+0x1c9c0f]        # 1eb6c0 <mismatchExt37>
   21ab1:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   21ab4:	29 c6                	sub    esi,eax
   21ab6:	89 f0                	mov    eax,esi
   21ab8:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   21abc:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   21ac1:	f2 0f 5c c1          	subsd  xmm0,xmm1
   21ac5:	f3 0f 7e 0d 63 05 01 00 	movq   xmm1,QWORD PTR [rip+0x10563]        # 32030 <Law_and_Order+0x5f0>
   21acd:	66 0f 57 c1          	xorpd  xmm0,xmm1
   21ad1:	f2 0f 10 0d 7f 05 01 00 	movsd  xmm1,QWORD PTR [rip+0x1057f]        # 32058 <Law_and_Order+0x618>
   21ad9:	f2 0f 5e c1          	divsd  xmm0,xmm1
   21add:	66 0f 28 c8          	movapd xmm1,xmm0
   21ae1:	f2 0f 10 05 87 05 01 00 	movsd  xmm0,QWORD PTR [rip+0x10587]        # 32070 <Law_and_Order+0x630>
   21ae9:	66 0f 2f c1          	comisd xmm0,xmm1
   21aed:	76 09                	jbe    21af8 <get_exp_params_ali+0x4257>
   21aef:	66 0f ef c0          	pxor   xmm0,xmm0
   21af3:	e9 eb 07 00 00       	jmp    222e3 <get_exp_params_ali+0x4a42>
   21af8:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   21afc:	0f 85 ee 00 00 00    	jne    21bf0 <get_exp_params_ali+0x434f>
   21b02:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   21b05:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21b08:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   21b0b:	48 89 d0             	mov    rax,rdx
   21b0e:	48 c1 e0 02          	shl    rax,0x2
   21b12:	48 01 d0             	add    rax,rdx
   21b15:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21b1d:	48 01 d0             	add    rax,rdx
   21b20:	48 89 ca             	mov    rdx,rcx
   21b23:	48 c1 e2 02          	shl    rdx,0x2
   21b27:	48 01 ca             	add    rdx,rcx
   21b2a:	48 01 d0             	add    rax,rdx
   21b2d:	48 01 f0             	add    rax,rsi
   21b30:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21b38:	48 8d 05 a1 9e 1c 00 	lea    rax,[rip+0x1c9ea1]        # 1eb9e0 <mismatchExtdH>
   21b3f:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   21b42:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   21b46:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   21b49:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21b4c:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   21b4f:	48 89 d0             	mov    rax,rdx
   21b52:	48 c1 e0 02          	shl    rax,0x2
   21b56:	48 01 d0             	add    rax,rdx
   21b59:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21b61:	48 01 d0             	add    rax,rdx
   21b64:	48 89 ca             	mov    rdx,rcx
   21b67:	48 c1 e2 02          	shl    rdx,0x2
   21b6b:	48 01 ca             	add    rdx,rcx
   21b6e:	48 01 d0             	add    rax,rdx
   21b71:	48 01 f0             	add    rax,rsi
   21b74:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21b7c:	48 8d 05 5d 9e 1c 00 	lea    rax,[rip+0x1c9e5d]        # 1eb9e0 <mismatchExtdH>
   21b83:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   21b86:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   21b89:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21b8c:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   21b8f:	48 89 d0             	mov    rax,rdx
   21b92:	48 c1 e0 02          	shl    rax,0x2
   21b96:	48 01 d0             	add    rax,rdx
   21b99:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21ba1:	48 01 d0             	add    rax,rdx
   21ba4:	48 89 ca             	mov    rdx,rcx
   21ba7:	48 c1 e2 02          	shl    rdx,0x2
   21bab:	48 01 ca             	add    rdx,rcx
   21bae:	48 01 d0             	add    rax,rdx
   21bb1:	48 01 f8             	add    rax,rdi
   21bb4:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21bbc:	48 8d 05 fd 9a 1c 00 	lea    rax,[rip+0x1c9afd]        # 1eb6c0 <mismatchExt37>
   21bc3:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   21bc6:	29 c6                	sub    esi,eax
   21bc8:	89 f0                	mov    eax,esi
   21bca:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   21bce:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   21bd3:	f2 0f 5c c1          	subsd  xmm0,xmm1
   21bd7:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   21bdb:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   21bdf:	f3 0f 7e 0d 49 04 01 00 	movq   xmm1,QWORD PTR [rip+0x10449]        # 32030 <Law_and_Order+0x5f0>
   21be7:	66 0f 57 c1          	xorpd  xmm0,xmm1
   21beb:	e9 e1 00 00 00       	jmp    21cd1 <get_exp_params_ali+0x4430>
   21bf0:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   21bf3:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21bf6:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   21bf9:	48 89 d0             	mov    rax,rdx
   21bfc:	48 c1 e0 02          	shl    rax,0x2
   21c00:	48 01 d0             	add    rax,rdx
   21c03:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21c0b:	48 01 d0             	add    rax,rdx
   21c0e:	48 89 ca             	mov    rdx,rcx
   21c11:	48 c1 e2 02          	shl    rdx,0x2
   21c15:	48 01 ca             	add    rdx,rcx
   21c18:	48 01 d0             	add    rax,rdx
   21c1b:	48 01 f0             	add    rax,rsi
   21c1e:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21c26:	48 8d 05 b3 9d 1c 00 	lea    rax,[rip+0x1c9db3]        # 1eb9e0 <mismatchExtdH>
   21c2d:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   21c30:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   21c34:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   21c37:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21c3a:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   21c3d:	48 89 d0             	mov    rax,rdx
   21c40:	48 c1 e0 02          	shl    rax,0x2
   21c44:	48 01 d0             	add    rax,rdx
   21c47:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21c4f:	48 01 d0             	add    rax,rdx
   21c52:	48 89 ca             	mov    rdx,rcx
   21c55:	48 c1 e2 02          	shl    rdx,0x2
   21c59:	48 01 ca             	add    rdx,rcx
   21c5c:	48 01 d0             	add    rax,rdx
   21c5f:	48 01 f0             	add    rax,rsi
   21c62:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21c6a:	48 8d 05 6f 9d 1c 00 	lea    rax,[rip+0x1c9d6f]        # 1eb9e0 <mismatchExtdH>
   21c71:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   21c74:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   21c77:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21c7a:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   21c7d:	48 89 d0             	mov    rax,rdx
   21c80:	48 c1 e0 02          	shl    rax,0x2
   21c84:	48 01 d0             	add    rax,rdx
   21c87:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21c8f:	48 01 d0             	add    rax,rdx
   21c92:	48 89 ca             	mov    rdx,rcx
   21c95:	48 c1 e2 02          	shl    rdx,0x2
   21c99:	48 01 ca             	add    rdx,rcx
   21c9c:	48 01 d0             	add    rax,rdx
   21c9f:	48 01 f8             	add    rax,rdi
   21ca2:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21caa:	48 8d 05 0f 9a 1c 00 	lea    rax,[rip+0x1c9a0f]        # 1eb6c0 <mismatchExt37>
   21cb1:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   21cb4:	29 c6                	sub    esi,eax
   21cb6:	89 f0                	mov    eax,esi
   21cb8:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   21cbc:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   21cc1:	f2 0f 5c c1          	subsd  xmm0,xmm1
   21cc5:	f3 0f 7e 0d 63 03 01 00 	movq   xmm1,QWORD PTR [rip+0x10363]        # 32030 <Law_and_Order+0x5f0>
   21ccd:	66 0f 57 c1          	xorpd  xmm0,xmm1
   21cd1:	f2 0f 10 0d 7f 03 01 00 	movsd  xmm1,QWORD PTR [rip+0x1037f]        # 32058 <Law_and_Order+0x618>
   21cd9:	f2 0f 5e c1          	divsd  xmm0,xmm1
   21cdd:	66 0f 2f 05 93 03 01 00 	comisd xmm0,QWORD PTR [rip+0x10393]        # 32078 <Law_and_Order+0x638>
   21ce5:	0f 86 de 01 00 00    	jbe    21ec9 <get_exp_params_ali+0x4628>
   21ceb:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   21cef:	0f 85 ee 00 00 00    	jne    21de3 <get_exp_params_ali+0x4542>
   21cf5:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   21cf8:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21cfb:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   21cfe:	48 89 d0             	mov    rax,rdx
   21d01:	48 c1 e0 02          	shl    rax,0x2
   21d05:	48 01 d0             	add    rax,rdx
   21d08:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21d10:	48 01 d0             	add    rax,rdx
   21d13:	48 89 ca             	mov    rdx,rcx
   21d16:	48 c1 e2 02          	shl    rdx,0x2
   21d1a:	48 01 ca             	add    rdx,rcx
   21d1d:	48 01 d0             	add    rax,rdx
   21d20:	48 01 f0             	add    rax,rsi
   21d23:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21d2b:	48 8d 05 ae 9c 1c 00 	lea    rax,[rip+0x1c9cae]        # 1eb9e0 <mismatchExtdH>
   21d32:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   21d35:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   21d39:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   21d3c:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21d3f:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   21d42:	48 89 d0             	mov    rax,rdx
   21d45:	48 c1 e0 02          	shl    rax,0x2
   21d49:	48 01 d0             	add    rax,rdx
   21d4c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21d54:	48 01 d0             	add    rax,rdx
   21d57:	48 89 ca             	mov    rdx,rcx
   21d5a:	48 c1 e2 02          	shl    rdx,0x2
   21d5e:	48 01 ca             	add    rdx,rcx
   21d61:	48 01 d0             	add    rax,rdx
   21d64:	48 01 f0             	add    rax,rsi
   21d67:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21d6f:	48 8d 05 6a 9c 1c 00 	lea    rax,[rip+0x1c9c6a]        # 1eb9e0 <mismatchExtdH>
   21d76:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   21d79:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   21d7c:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21d7f:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   21d82:	48 89 d0             	mov    rax,rdx
   21d85:	48 c1 e0 02          	shl    rax,0x2
   21d89:	48 01 d0             	add    rax,rdx
   21d8c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21d94:	48 01 d0             	add    rax,rdx
   21d97:	48 89 ca             	mov    rdx,rcx
   21d9a:	48 c1 e2 02          	shl    rdx,0x2
   21d9e:	48 01 ca             	add    rdx,rcx
   21da1:	48 01 d0             	add    rax,rdx
   21da4:	48 01 f8             	add    rax,rdi
   21da7:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21daf:	48 8d 05 0a 99 1c 00 	lea    rax,[rip+0x1c990a]        # 1eb6c0 <mismatchExt37>
   21db6:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   21db9:	29 c6                	sub    esi,eax
   21dbb:	89 f0                	mov    eax,esi
   21dbd:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   21dc1:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   21dc6:	f2 0f 5c c1          	subsd  xmm0,xmm1
   21dca:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   21dce:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   21dd2:	f3 0f 7e 0d 56 02 01 00 	movq   xmm1,QWORD PTR [rip+0x10256]        # 32030 <Law_and_Order+0x5f0>
   21dda:	66 0f 57 c1          	xorpd  xmm0,xmm1
   21dde:	e9 00 05 00 00       	jmp    222e3 <get_exp_params_ali+0x4a42>
   21de3:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   21de6:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21de9:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   21dec:	48 89 d0             	mov    rax,rdx
   21def:	48 c1 e0 02          	shl    rax,0x2
   21df3:	48 01 d0             	add    rax,rdx
   21df6:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21dfe:	48 01 d0             	add    rax,rdx
   21e01:	48 89 ca             	mov    rdx,rcx
   21e04:	48 c1 e2 02          	shl    rdx,0x2
   21e08:	48 01 ca             	add    rdx,rcx
   21e0b:	48 01 d0             	add    rax,rdx
   21e0e:	48 01 f0             	add    rax,rsi
   21e11:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21e19:	48 8d 05 c0 9b 1c 00 	lea    rax,[rip+0x1c9bc0]        # 1eb9e0 <mismatchExtdH>
   21e20:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   21e23:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   21e27:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   21e2a:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21e2d:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   21e30:	48 89 d0             	mov    rax,rdx
   21e33:	48 c1 e0 02          	shl    rax,0x2
   21e37:	48 01 d0             	add    rax,rdx
   21e3a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21e42:	48 01 d0             	add    rax,rdx
   21e45:	48 89 ca             	mov    rdx,rcx
   21e48:	48 c1 e2 02          	shl    rdx,0x2
   21e4c:	48 01 ca             	add    rdx,rcx
   21e4f:	48 01 d0             	add    rax,rdx
   21e52:	48 01 f0             	add    rax,rsi
   21e55:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21e5d:	48 8d 05 7c 9b 1c 00 	lea    rax,[rip+0x1c9b7c]        # 1eb9e0 <mismatchExtdH>
   21e64:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   21e67:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   21e6a:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21e6d:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   21e70:	48 89 d0             	mov    rax,rdx
   21e73:	48 c1 e0 02          	shl    rax,0x2
   21e77:	48 01 d0             	add    rax,rdx
   21e7a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21e82:	48 01 d0             	add    rax,rdx
   21e85:	48 89 ca             	mov    rdx,rcx
   21e88:	48 c1 e2 02          	shl    rdx,0x2
   21e8c:	48 01 ca             	add    rdx,rcx
   21e8f:	48 01 d0             	add    rax,rdx
   21e92:	48 01 f8             	add    rax,rdi
   21e95:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21e9d:	48 8d 05 1c 98 1c 00 	lea    rax,[rip+0x1c981c]        # 1eb6c0 <mismatchExt37>
   21ea4:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   21ea7:	29 c6                	sub    esi,eax
   21ea9:	89 f0                	mov    eax,esi
   21eab:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   21eaf:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   21eb4:	f2 0f 5c c1          	subsd  xmm0,xmm1
   21eb8:	f3 0f 7e 0d 70 01 01 00 	movq   xmm1,QWORD PTR [rip+0x10170]        # 32030 <Law_and_Order+0x5f0>
   21ec0:	66 0f 57 c1          	xorpd  xmm0,xmm1
   21ec4:	e9 1a 04 00 00       	jmp    222e3 <get_exp_params_ali+0x4a42>
   21ec9:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   21ecd:	0f 85 ee 00 00 00    	jne    21fc1 <get_exp_params_ali+0x4720>
   21ed3:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   21ed6:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21ed9:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   21edc:	48 89 d0             	mov    rax,rdx
   21edf:	48 c1 e0 02          	shl    rax,0x2
   21ee3:	48 01 d0             	add    rax,rdx
   21ee6:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21eee:	48 01 d0             	add    rax,rdx
   21ef1:	48 89 ca             	mov    rdx,rcx
   21ef4:	48 c1 e2 02          	shl    rdx,0x2
   21ef8:	48 01 ca             	add    rdx,rcx
   21efb:	48 01 d0             	add    rax,rdx
   21efe:	48 01 f0             	add    rax,rsi
   21f01:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21f09:	48 8d 05 d0 9a 1c 00 	lea    rax,[rip+0x1c9ad0]        # 1eb9e0 <mismatchExtdH>
   21f10:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   21f13:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   21f17:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   21f1a:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21f1d:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   21f20:	48 89 d0             	mov    rax,rdx
   21f23:	48 c1 e0 02          	shl    rax,0x2
   21f27:	48 01 d0             	add    rax,rdx
   21f2a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21f32:	48 01 d0             	add    rax,rdx
   21f35:	48 89 ca             	mov    rdx,rcx
   21f38:	48 c1 e2 02          	shl    rdx,0x2
   21f3c:	48 01 ca             	add    rdx,rcx
   21f3f:	48 01 d0             	add    rax,rdx
   21f42:	48 01 f0             	add    rax,rsi
   21f45:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21f4d:	48 8d 05 8c 9a 1c 00 	lea    rax,[rip+0x1c9a8c]        # 1eb9e0 <mismatchExtdH>
   21f54:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   21f57:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   21f5a:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21f5d:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   21f60:	48 89 d0             	mov    rax,rdx
   21f63:	48 c1 e0 02          	shl    rax,0x2
   21f67:	48 01 d0             	add    rax,rdx
   21f6a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21f72:	48 01 d0             	add    rax,rdx
   21f75:	48 89 ca             	mov    rdx,rcx
   21f78:	48 c1 e2 02          	shl    rdx,0x2
   21f7c:	48 01 ca             	add    rdx,rcx
   21f7f:	48 01 d0             	add    rax,rdx
   21f82:	48 01 f8             	add    rax,rdi
   21f85:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21f8d:	48 8d 05 2c 97 1c 00 	lea    rax,[rip+0x1c972c]        # 1eb6c0 <mismatchExt37>
   21f94:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   21f97:	29 c6                	sub    esi,eax
   21f99:	89 f0                	mov    eax,esi
   21f9b:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   21f9f:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   21fa4:	f2 0f 5c c1          	subsd  xmm0,xmm1
   21fa8:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   21fac:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   21fb0:	f3 0f 7e 0d 78 00 01 00 	movq   xmm1,QWORD PTR [rip+0x10078]        # 32030 <Law_and_Order+0x5f0>
   21fb8:	66 0f 57 c1          	xorpd  xmm0,xmm1
   21fbc:	e9 e1 00 00 00       	jmp    220a2 <get_exp_params_ali+0x4801>
   21fc1:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   21fc4:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   21fc7:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   21fca:	48 89 d0             	mov    rax,rdx
   21fcd:	48 c1 e0 02          	shl    rax,0x2
   21fd1:	48 01 d0             	add    rax,rdx
   21fd4:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21fdc:	48 01 d0             	add    rax,rdx
   21fdf:	48 89 ca             	mov    rdx,rcx
   21fe2:	48 c1 e2 02          	shl    rdx,0x2
   21fe6:	48 01 ca             	add    rdx,rcx
   21fe9:	48 01 d0             	add    rax,rdx
   21fec:	48 01 f0             	add    rax,rsi
   21fef:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   21ff7:	48 8d 05 e2 99 1c 00 	lea    rax,[rip+0x1c99e2]        # 1eb9e0 <mismatchExtdH>
   21ffe:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   22001:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   22005:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   22008:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   2200b:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   2200e:	48 89 d0             	mov    rax,rdx
   22011:	48 c1 e0 02          	shl    rax,0x2
   22015:	48 01 d0             	add    rax,rdx
   22018:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   22020:	48 01 d0             	add    rax,rdx
   22023:	48 89 ca             	mov    rdx,rcx
   22026:	48 c1 e2 02          	shl    rdx,0x2
   2202a:	48 01 ca             	add    rdx,rcx
   2202d:	48 01 d0             	add    rax,rdx
   22030:	48 01 f0             	add    rax,rsi
   22033:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2203b:	48 8d 05 9e 99 1c 00 	lea    rax,[rip+0x1c999e]        # 1eb9e0 <mismatchExtdH>
   22042:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   22045:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   22048:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   2204b:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   2204e:	48 89 d0             	mov    rax,rdx
   22051:	48 c1 e0 02          	shl    rax,0x2
   22055:	48 01 d0             	add    rax,rdx
   22058:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   22060:	48 01 d0             	add    rax,rdx
   22063:	48 89 ca             	mov    rdx,rcx
   22066:	48 c1 e2 02          	shl    rdx,0x2
   2206a:	48 01 ca             	add    rdx,rcx
   2206d:	48 01 d0             	add    rax,rdx
   22070:	48 01 f8             	add    rax,rdi
   22073:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2207b:	48 8d 05 3e 96 1c 00 	lea    rax,[rip+0x1c963e]        # 1eb6c0 <mismatchExt37>
   22082:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   22085:	29 c6                	sub    esi,eax
   22087:	89 f0                	mov    eax,esi
   22089:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   2208d:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   22092:	f2 0f 5c c1          	subsd  xmm0,xmm1
   22096:	f3 0f 7e 0d 92 ff 00 00 	movq   xmm1,QWORD PTR [rip+0xff92]        # 32030 <Law_and_Order+0x5f0>
   2209e:	66 0f 57 c1          	xorpd  xmm0,xmm1
   220a2:	f2 0f 10 0d ae ff 00 00 	movsd  xmm1,QWORD PTR [rip+0xffae]        # 32058 <Law_and_Order+0x618>
   220aa:	f2 0f 5e c1          	divsd  xmm0,xmm1
   220ae:	f2 0f 10 0d ca ff 00 00 	movsd  xmm1,QWORD PTR [rip+0xffca]        # 32080 <Law_and_Order+0x640>
   220b6:	f2 0f 5c c1          	subsd  xmm0,xmm1
   220ba:	e8 31 15 fe ff       	call   35f0 <sin@plt>
   220bf:	f2 0f 10 0d 41 ff 00 00 	movsd  xmm1,QWORD PTR [rip+0xff41]        # 32008 <Law_and_Order+0x5c8>
   220c7:	f2 0f 58 c8          	addsd  xmm1,xmm0
   220cb:	f2 0f 10 05 b5 ff 00 00 	movsd  xmm0,QWORD PTR [rip+0xffb5]        # 32088 <Law_and_Order+0x648>
   220d3:	f2 0f 59 c8          	mulsd  xmm1,xmm0
   220d7:	f2 0f 11 4d 80       	movsd  QWORD PTR [rbp-0x80],xmm1
   220dc:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   220e0:	0f 85 ee 00 00 00    	jne    221d4 <get_exp_params_ali+0x4933>
   220e6:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   220e9:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   220ec:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   220ef:	48 89 d0             	mov    rax,rdx
   220f2:	48 c1 e0 02          	shl    rax,0x2
   220f6:	48 01 d0             	add    rax,rdx
   220f9:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   22101:	48 01 d0             	add    rax,rdx
   22104:	48 89 ca             	mov    rdx,rcx
   22107:	48 c1 e2 02          	shl    rdx,0x2
   2210b:	48 01 ca             	add    rdx,rcx
   2210e:	48 01 d0             	add    rax,rdx
   22111:	48 01 f0             	add    rax,rsi
   22114:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2211c:	48 8d 05 bd 98 1c 00 	lea    rax,[rip+0x1c98bd]        # 1eb9e0 <mismatchExtdH>
   22123:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   22126:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   2212a:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   2212d:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   22130:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   22133:	48 89 d0             	mov    rax,rdx
   22136:	48 c1 e0 02          	shl    rax,0x2
   2213a:	48 01 d0             	add    rax,rdx
   2213d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   22145:	48 01 d0             	add    rax,rdx
   22148:	48 89 ca             	mov    rdx,rcx
   2214b:	48 c1 e2 02          	shl    rdx,0x2
   2214f:	48 01 ca             	add    rdx,rcx
   22152:	48 01 d0             	add    rax,rdx
   22155:	48 01 f0             	add    rax,rsi
   22158:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   22160:	48 8d 05 79 98 1c 00 	lea    rax,[rip+0x1c9879]        # 1eb9e0 <mismatchExtdH>
   22167:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   2216a:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   2216d:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   22170:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   22173:	48 89 d0             	mov    rax,rdx
   22176:	48 c1 e0 02          	shl    rax,0x2
   2217a:	48 01 d0             	add    rax,rdx
   2217d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   22185:	48 01 d0             	add    rax,rdx
   22188:	48 89 ca             	mov    rdx,rcx
   2218b:	48 c1 e2 02          	shl    rdx,0x2
   2218f:	48 01 ca             	add    rdx,rcx
   22192:	48 01 d0             	add    rax,rdx
   22195:	48 01 f8             	add    rax,rdi
   22198:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   221a0:	48 8d 05 19 95 1c 00 	lea    rax,[rip+0x1c9519]        # 1eb6c0 <mismatchExt37>
   221a7:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   221aa:	29 c6                	sub    esi,eax
   221ac:	89 f0                	mov    eax,esi
   221ae:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   221b2:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   221b7:	f2 0f 5c c1          	subsd  xmm0,xmm1
   221bb:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   221bf:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   221c3:	f3 0f 7e 0d 65 fe 00 00 	movq   xmm1,QWORD PTR [rip+0xfe65]        # 32030 <Law_and_Order+0x5f0>
   221cb:	66 0f 57 c1          	xorpd  xmm0,xmm1
   221cf:	e9 e1 00 00 00       	jmp    222b5 <get_exp_params_ali+0x4a14>
   221d4:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   221d7:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   221da:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   221dd:	48 89 d0             	mov    rax,rdx
   221e0:	48 c1 e0 02          	shl    rax,0x2
   221e4:	48 01 d0             	add    rax,rdx
   221e7:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   221ef:	48 01 d0             	add    rax,rdx
   221f2:	48 89 ca             	mov    rdx,rcx
   221f5:	48 c1 e2 02          	shl    rdx,0x2
   221f9:	48 01 ca             	add    rdx,rcx
   221fc:	48 01 d0             	add    rax,rdx
   221ff:	48 01 f0             	add    rax,rsi
   22202:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2220a:	48 8d 05 cf 97 1c 00 	lea    rax,[rip+0x1c97cf]        # 1eb9e0 <mismatchExtdH>
   22211:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   22214:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   22218:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   2221b:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   2221e:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   22221:	48 89 d0             	mov    rax,rdx
   22224:	48 c1 e0 02          	shl    rax,0x2
   22228:	48 01 d0             	add    rax,rdx
   2222b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   22233:	48 01 d0             	add    rax,rdx
   22236:	48 89 ca             	mov    rdx,rcx
   22239:	48 c1 e2 02          	shl    rdx,0x2
   2223d:	48 01 ca             	add    rdx,rcx
   22240:	48 01 d0             	add    rax,rdx
   22243:	48 01 f0             	add    rax,rsi
   22246:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2224e:	48 8d 05 8b 97 1c 00 	lea    rax,[rip+0x1c978b]        # 1eb9e0 <mismatchExtdH>
   22255:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   22258:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   2225b:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   2225e:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   22261:	48 89 d0             	mov    rax,rdx
   22264:	48 c1 e0 02          	shl    rax,0x2
   22268:	48 01 d0             	add    rax,rdx
   2226b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   22273:	48 01 d0             	add    rax,rdx
   22276:	48 89 ca             	mov    rdx,rcx
   22279:	48 c1 e2 02          	shl    rdx,0x2
   2227d:	48 01 ca             	add    rdx,rcx
   22280:	48 01 d0             	add    rax,rdx
   22283:	48 01 f8             	add    rax,rdi
   22286:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2228e:	48 8d 05 2b 94 1c 00 	lea    rax,[rip+0x1c942b]        # 1eb6c0 <mismatchExt37>
   22295:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   22298:	29 c6                	sub    esi,eax
   2229a:	89 f0                	mov    eax,esi
   2229c:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   222a0:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   222a5:	f2 0f 5c c1          	subsd  xmm0,xmm1
   222a9:	f3 0f 7e 0d 7f fd 00 00 	movq   xmm1,QWORD PTR [rip+0xfd7f]        # 32030 <Law_and_Order+0x5f0>
   222b1:	66 0f 57 c1          	xorpd  xmm0,xmm1
   222b5:	f2 0f 10 0d 9b fd 00 00 	movsd  xmm1,QWORD PTR [rip+0xfd9b]        # 32058 <Law_and_Order+0x618>
   222bd:	f2 0f 5e c1          	divsd  xmm0,xmm1
   222c1:	f2 0f 10 0d b7 fd 00 00 	movsd  xmm1,QWORD PTR [rip+0xfdb7]        # 32080 <Law_and_Order+0x640>
   222c9:	f2 0f 5c c1          	subsd  xmm0,xmm1
   222cd:	e8 1e 13 fe ff       	call   35f0 <sin@plt>
   222d2:	f2 0f 10 0d 2e fd 00 00 	movsd  xmm1,QWORD PTR [rip+0xfd2e]        # 32008 <Law_and_Order+0x5c8>
   222da:	f2 0f 58 c1          	addsd  xmm0,xmm1
   222de:	f2 0f 59 45 80       	mulsd  xmm0,QWORD PTR [rbp-0x80]
   222e3:	f2 0f 10 0d 6d fd 00 00 	movsd  xmm1,QWORD PTR [rip+0xfd6d]        # 32058 <Law_and_Order+0x618>
   222eb:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   222ef:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   222f4:	e8 77 17 fe ff       	call   3a70 <exp@plt>
   222f9:	66 48 0f 7e c6       	movq   rsi,xmm0
   222fe:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
   22302:	44 8b 45 a8          	mov    r8d,DWORD PTR [rbp-0x58]
   22306:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   22309:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   2230c:	48 89 d0             	mov    rax,rdx
   2230f:	48 c1 e0 02          	shl    rax,0x2
   22313:	48 01 d0             	add    rax,rdx
   22316:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2231e:	48 01 d0             	add    rax,rdx
   22321:	48 89 ca             	mov    rdx,rcx
   22324:	48 c1 e2 02          	shl    rdx,0x2
   22328:	48 01 ca             	add    rdx,rcx
   2232b:	48 01 d0             	add    rax,rdx
   2232e:	4c 01 c0             	add    rax,r8
   22331:	48 05 9e 00 00 00    	add    rax,0x9e
   22337:	48 89 34 c7          	mov    QWORD PTR [rdi+rax*8],rsi
   2233b:	e9 bf 00 00 00       	jmp    223ff <get_exp_params_ali+0x4b5e>
   22340:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
   22344:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   22347:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   2234a:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   2234d:	48 89 d0             	mov    rax,rdx
   22350:	48 c1 e0 02          	shl    rax,0x2
   22354:	48 01 d0             	add    rax,rdx
   22357:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2235f:	48 01 d0             	add    rax,rdx
   22362:	48 89 ca             	mov    rdx,rcx
   22365:	48 c1 e2 02          	shl    rdx,0x2
   22369:	48 01 ca             	add    rdx,rcx
   2236c:	48 01 d0             	add    rax,rdx
   2236f:	48 01 f8             	add    rax,rdi
   22372:	48 05 9e 00 00 00    	add    rax,0x9e
   22378:	f2 0f 10 05 88 fc 00 00 	movsd  xmm0,QWORD PTR [rip+0xfc88]        # 32008 <Law_and_Order+0x5c8>
   22380:	f2 0f 11 04 c6       	movsd  QWORD PTR [rsi+rax*8],xmm0
   22385:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
   22389:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   2238c:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   2238f:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   22392:	48 89 d0             	mov    rax,rdx
   22395:	48 c1 e0 02          	shl    rax,0x2
   22399:	48 01 d0             	add    rax,rdx
   2239c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   223a4:	48 01 d0             	add    rax,rdx
   223a7:	48 89 ca             	mov    rdx,rcx
   223aa:	48 c1 e2 02          	shl    rdx,0x2
   223ae:	48 01 ca             	add    rdx,rcx
   223b1:	48 01 d0             	add    rax,rdx
   223b4:	48 01 f8             	add    rax,rdi
   223b7:	48 05 9e 00 00 00    	add    rax,0x9e
   223bd:	f2 0f 10 04 c6       	movsd  xmm0,QWORD PTR [rsi+rax*8]
   223c2:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
   223c6:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
   223c9:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
   223cc:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   223cf:	48 89 d0             	mov    rax,rdx
   223d2:	48 c1 e0 02          	shl    rax,0x2
   223d6:	48 01 d0             	add    rax,rdx
   223d9:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   223e1:	48 01 d0             	add    rax,rdx
   223e4:	48 89 ca             	mov    rdx,rcx
   223e7:	48 c1 e2 02          	shl    rdx,0x2
   223eb:	48 01 ca             	add    rdx,rcx
   223ee:	48 01 d0             	add    rax,rdx
   223f1:	48 01 f8             	add    rax,rdi
   223f4:	48 05 86 04 00 00    	add    rax,0x486
   223fa:	f2 0f 11 04 c6       	movsd  QWORD PTR [rsi+rax*8],xmm0
   223ff:	83 45 a8 01          	add    DWORD PTR [rbp-0x58],0x1
   22403:	83 7d a8 04          	cmp    DWORD PTR [rbp-0x58],0x4
   22407:	0f 86 51 da ff ff    	jbe    1fe5e <get_exp_params_ali+0x25bd>
   2240d:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
   22411:	83 7d a4 04          	cmp    DWORD PTR [rbp-0x5c],0x4
   22415:	0f 86 37 da ff ff    	jbe    1fe52 <get_exp_params_ali+0x25b1>
   2241b:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
   2241f:	83 7d a0 07          	cmp    DWORD PTR [rbp-0x60],0x7
   22423:	0f 86 1d da ff ff    	jbe    1fe46 <get_exp_params_ali+0x25a5>
   22429:	c7 45 a0 00 00 00 00 	mov    DWORD PTR [rbp-0x60],0x0
   22430:	e9 5f 03 00 00       	jmp    22794 <get_exp_params_ali+0x4ef3>
   22435:	c7 45 a4 00 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x0
   2243c:	e9 45 03 00 00       	jmp    22786 <get_exp_params_ali+0x4ee5>
   22441:	c7 45 a8 00 00 00 00 	mov    DWORD PTR [rbp-0x58],0x0
   22448:	e9 2b 03 00 00       	jmp    22778 <get_exp_params_ali+0x4ed7>
   2244d:	c7 45 ac 00 00 00 00 	mov    DWORD PTR [rbp-0x54],0x0
   22454:	e9 11 03 00 00       	jmp    2276a <get_exp_params_ali+0x4ec9>
   22459:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   2245d:	0f 85 4c 01 00 00    	jne    225af <get_exp_params_ali+0x4d0e>
   22463:	8b 7d ac             	mov    edi,DWORD PTR [rbp-0x54]
   22466:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
   22469:	8b 4d a8             	mov    ecx,DWORD PTR [rbp-0x58]
   2246c:	8b 75 a0             	mov    esi,DWORD PTR [rbp-0x60]
   2246f:	48 89 c2             	mov    rdx,rax
   22472:	48 c1 e2 02          	shl    rdx,0x2
   22476:	48 01 c2             	add    rdx,rax
   22479:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   22481:	48 01 c2             	add    rdx,rax
   22484:	48 89 f0             	mov    rax,rsi
   22487:	48 c1 e0 02          	shl    rax,0x2
   2248b:	48 01 f0             	add    rax,rsi
   2248e:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   22496:	48 01 f0             	add    rax,rsi
   22499:	48 c1 e0 03          	shl    rax,0x3
   2249d:	48 01 c2             	add    rdx,rax
   224a0:	48 89 c8             	mov    rax,rcx
   224a3:	48 c1 e0 02          	shl    rax,0x2
   224a7:	48 01 c8             	add    rax,rcx
   224aa:	48 01 d0             	add    rax,rdx
   224ad:	48 01 f8             	add    rax,rdi
   224b0:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   224b8:	48 8d 05 21 bb 1c 00 	lea    rax,[rip+0x1cbb21]        # 1edfe0 <int11_dH>
   224bf:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   224c2:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   224c6:	8b 7d ac             	mov    edi,DWORD PTR [rbp-0x54]
   224c9:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
   224cc:	8b 4d a8             	mov    ecx,DWORD PTR [rbp-0x58]
   224cf:	8b 75 a0             	mov    esi,DWORD PTR [rbp-0x60]
   224d2:	48 89 c2             	mov    rdx,rax
   224d5:	48 c1 e2 02          	shl    rdx,0x2
   224d9:	48 01 c2             	add    rdx,rax
   224dc:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   224e4:	48 01 c2             	add    rdx,rax
   224e7:	48 89 f0             	mov    rax,rsi
   224ea:	48 c1 e0 02          	shl    rax,0x2
   224ee:	48 01 f0             	add    rax,rsi
   224f1:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   224f9:	48 01 f0             	add    rax,rsi
   224fc:	48 c1 e0 03          	shl    rax,0x3
   22500:	48 01 c2             	add    rdx,rax
   22503:	48 89 c8             	mov    rax,rcx
   22506:	48 c1 e0 02          	shl    rax,0x2
   2250a:	48 01 c8             	add    rax,rcx
   2250d:	48 01 d0             	add    rax,rdx
   22510:	48 01 f8             	add    rax,rdi
   22513:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2251b:	48 8d 05 be ba 1c 00 	lea    rax,[rip+0x1cbabe]        # 1edfe0 <int11_dH>
   22522:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
   22525:	44 8b 45 ac          	mov    r8d,DWORD PTR [rbp-0x54]
   22529:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
   2252c:	8b 4d a8             	mov    ecx,DWORD PTR [rbp-0x58]
   2252f:	8b 75 a0             	mov    esi,DWORD PTR [rbp-0x60]
   22532:	48 89 c2             	mov    rdx,rax
   22535:	48 c1 e2 02          	shl    rdx,0x2
   22539:	48 01 c2             	add    rdx,rax
   2253c:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   22544:	48 01 c2             	add    rdx,rax
   22547:	48 89 f0             	mov    rax,rsi
   2254a:	48 c1 e0 02          	shl    rax,0x2
   2254e:	48 01 f0             	add    rax,rsi
   22551:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   22559:	48 01 f0             	add    rax,rsi
   2255c:	48 c1 e0 03          	shl    rax,0x3
   22560:	48 01 c2             	add    rdx,rax
   22563:	48 89 c8             	mov    rax,rcx
   22566:	48 c1 e0 02          	shl    rax,0x2
   2256a:	48 01 c8             	add    rax,rcx
   2256d:	48 01 d0             	add    rax,rdx
   22570:	4c 01 c0             	add    rax,r8
   22573:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2257b:	48 8d 05 5e a1 1c 00 	lea    rax,[rip+0x1ca15e]        # 1ec6e0 <int11_37>
   22582:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   22585:	29 c7                	sub    edi,eax
   22587:	89 f8                	mov    eax,edi
   22589:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   2258d:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   22592:	f2 0f 5c c1          	subsd  xmm0,xmm1
   22596:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   2259a:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   2259e:	f3 0f 7e 0d 8a fa 00 00 	movq   xmm1,QWORD PTR [rip+0xfa8a]        # 32030 <Law_and_Order+0x5f0>
   225a6:	66 0f 57 c1          	xorpd  xmm0,xmm1
   225aa:	e9 3f 01 00 00       	jmp    226ee <get_exp_params_ali+0x4e4d>
   225af:	8b 7d ac             	mov    edi,DWORD PTR [rbp-0x54]
   225b2:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
   225b5:	8b 4d a8             	mov    ecx,DWORD PTR [rbp-0x58]
   225b8:	8b 75 a0             	mov    esi,DWORD PTR [rbp-0x60]
   225bb:	48 89 c2             	mov    rdx,rax
   225be:	48 c1 e2 02          	shl    rdx,0x2
   225c2:	48 01 c2             	add    rdx,rax
   225c5:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   225cd:	48 01 c2             	add    rdx,rax
   225d0:	48 89 f0             	mov    rax,rsi
   225d3:	48 c1 e0 02          	shl    rax,0x2
   225d7:	48 01 f0             	add    rax,rsi
   225da:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   225e2:	48 01 f0             	add    rax,rsi
   225e5:	48 c1 e0 03          	shl    rax,0x3
   225e9:	48 01 c2             	add    rdx,rax
   225ec:	48 89 c8             	mov    rax,rcx
   225ef:	48 c1 e0 02          	shl    rax,0x2
   225f3:	48 01 c8             	add    rax,rcx
   225f6:	48 01 d0             	add    rax,rdx
   225f9:	48 01 f8             	add    rax,rdi
   225fc:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   22604:	48 8d 05 d5 b9 1c 00 	lea    rax,[rip+0x1cb9d5]        # 1edfe0 <int11_dH>
   2260b:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   2260e:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   22612:	8b 7d ac             	mov    edi,DWORD PTR [rbp-0x54]
   22615:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
   22618:	8b 4d a8             	mov    ecx,DWORD PTR [rbp-0x58]
   2261b:	8b 75 a0             	mov    esi,DWORD PTR [rbp-0x60]
   2261e:	48 89 c2             	mov    rdx,rax
   22621:	48 c1 e2 02          	shl    rdx,0x2
   22625:	48 01 c2             	add    rdx,rax
   22628:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   22630:	48 01 c2             	add    rdx,rax
   22633:	48 89 f0             	mov    rax,rsi
   22636:	48 c1 e0 02          	shl    rax,0x2
   2263a:	48 01 f0             	add    rax,rsi
   2263d:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   22645:	48 01 f0             	add    rax,rsi
   22648:	48 c1 e0 03          	shl    rax,0x3
   2264c:	48 01 c2             	add    rdx,rax
   2264f:	48 89 c8             	mov    rax,rcx
   22652:	48 c1 e0 02          	shl    rax,0x2
   22656:	48 01 c8             	add    rax,rcx
   22659:	48 01 d0             	add    rax,rdx
   2265c:	48 01 f8             	add    rax,rdi
   2265f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   22667:	48 8d 05 72 b9 1c 00 	lea    rax,[rip+0x1cb972]        # 1edfe0 <int11_dH>
   2266e:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
   22671:	44 8b 45 ac          	mov    r8d,DWORD PTR [rbp-0x54]
   22675:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
   22678:	8b 4d a8             	mov    ecx,DWORD PTR [rbp-0x58]
   2267b:	8b 75 a0             	mov    esi,DWORD PTR [rbp-0x60]
   2267e:	48 89 c2             	mov    rdx,rax
   22681:	48 c1 e2 02          	shl    rdx,0x2
   22685:	48 01 c2             	add    rdx,rax
   22688:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   22690:	48 01 c2             	add    rdx,rax
   22693:	48 89 f0             	mov    rax,rsi
   22696:	48 c1 e0 02          	shl    rax,0x2
   2269a:	48 01 f0             	add    rax,rsi
   2269d:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   226a5:	48 01 f0             	add    rax,rsi
   226a8:	48 c1 e0 03          	shl    rax,0x3
   226ac:	48 01 c2             	add    rdx,rax
   226af:	48 89 c8             	mov    rax,rcx
   226b2:	48 c1 e0 02          	shl    rax,0x2
   226b6:	48 01 c8             	add    rax,rcx
   226b9:	48 01 d0             	add    rax,rdx
   226bc:	4c 01 c0             	add    rax,r8
   226bf:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   226c7:	48 8d 05 12 a0 1c 00 	lea    rax,[rip+0x1ca012]        # 1ec6e0 <int11_37>
   226ce:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   226d1:	29 c7                	sub    edi,eax
   226d3:	89 f8                	mov    eax,edi
   226d5:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   226d9:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   226de:	f2 0f 5c c1          	subsd  xmm0,xmm1
   226e2:	f3 0f 7e 0d 46 f9 00 00 	movq   xmm1,QWORD PTR [rip+0xf946]        # 32030 <Law_and_Order+0x5f0>
   226ea:	66 0f 57 c1          	xorpd  xmm0,xmm1
   226ee:	f2 0f 10 0d 62 f9 00 00 	movsd  xmm1,QWORD PTR [rip+0xf962]        # 32058 <Law_and_Order+0x618>
   226f6:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   226fa:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   226ff:	e8 6c 13 fe ff       	call   3a70 <exp@plt>
   22704:	66 48 0f 7e c7       	movq   rdi,xmm0
   22709:	4c 8b 45 c0          	mov    r8,QWORD PTR [rbp-0x40]
   2270d:	44 8b 4d ac          	mov    r9d,DWORD PTR [rbp-0x54]
   22711:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
   22714:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   22717:	8b 4d a0             	mov    ecx,DWORD PTR [rbp-0x60]
   2271a:	48 89 d0             	mov    rax,rdx
   2271d:	48 c1 e0 02          	shl    rax,0x2
   22721:	48 01 d0             	add    rax,rdx
   22724:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2272c:	48 01 d0             	add    rax,rdx
   2272f:	48 89 f2             	mov    rdx,rsi
   22732:	48 c1 e2 02          	shl    rdx,0x2
   22736:	48 01 f2             	add    rdx,rsi
   22739:	48 8d 34 10          	lea    rsi,[rax+rdx*1]
   2273d:	48 89 c8             	mov    rax,rcx
   22740:	48 c1 e0 02          	shl    rax,0x2
   22744:	48 01 c8             	add    rax,rcx
   22747:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2274f:	48 01 d0             	add    rax,rdx
   22752:	48 c1 e0 03          	shl    rax,0x3
   22756:	48 01 f0             	add    rax,rsi
   22759:	4c 01 c8             	add    rax,r9
   2275c:	48 05 9e 05 00 00    	add    rax,0x59e
   22762:	49 89 3c c0          	mov    QWORD PTR [r8+rax*8],rdi
   22766:	83 45 ac 01          	add    DWORD PTR [rbp-0x54],0x1
   2276a:	83 7d ac 04          	cmp    DWORD PTR [rbp-0x54],0x4
   2276e:	0f 86 e5 fc ff ff    	jbe    22459 <get_exp_params_ali+0x4bb8>
   22774:	83 45 a8 01          	add    DWORD PTR [rbp-0x58],0x1
   22778:	83 7d a8 04          	cmp    DWORD PTR [rbp-0x58],0x4
   2277c:	0f 86 cb fc ff ff    	jbe    2244d <get_exp_params_ali+0x4bac>
   22782:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
   22786:	83 7d a4 07          	cmp    DWORD PTR [rbp-0x5c],0x7
   2278a:	0f 86 b1 fc ff ff    	jbe    22441 <get_exp_params_ali+0x4ba0>
   22790:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
   22794:	83 7d a0 07          	cmp    DWORD PTR [rbp-0x60],0x7
   22798:	0f 86 97 fc ff ff    	jbe    22435 <get_exp_params_ali+0x4b94>
   2279e:	c7 45 a0 00 00 00 00 	mov    DWORD PTR [rbp-0x60],0x0
   227a5:	e9 ba 03 00 00       	jmp    22b64 <get_exp_params_ali+0x52c3>
   227aa:	c7 45 a4 00 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x0
   227b1:	e9 a0 03 00 00       	jmp    22b56 <get_exp_params_ali+0x52b5>
   227b6:	c7 45 a8 00 00 00 00 	mov    DWORD PTR [rbp-0x58],0x0
   227bd:	e9 86 03 00 00       	jmp    22b48 <get_exp_params_ali+0x52a7>
   227c2:	c7 45 ac 00 00 00 00 	mov    DWORD PTR [rbp-0x54],0x0
   227c9:	e9 6c 03 00 00       	jmp    22b3a <get_exp_params_ali+0x5299>
   227ce:	c7 45 b0 00 00 00 00 	mov    DWORD PTR [rbp-0x50],0x0
   227d5:	e9 52 03 00 00       	jmp    22b2c <get_exp_params_ali+0x528b>
   227da:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   227de:	0f 85 69 01 00 00    	jne    2294d <get_exp_params_ali+0x50ac>
   227e4:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
   227e7:	48 63 f8             	movsxd rdi,eax
   227ea:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   227ed:	8b 4d ac             	mov    ecx,DWORD PTR [rbp-0x54]
   227f0:	44 8b 45 a0          	mov    r8d,DWORD PTR [rbp-0x60]
   227f4:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
   227f7:	48 89 f0             	mov    rax,rsi
   227fa:	48 c1 e0 02          	shl    rax,0x2
   227fe:	48 01 f0             	add    rax,rsi
   22801:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   22809:	48 01 f0             	add    rax,rsi
   2280c:	49 69 f0 e8 03 00 00 	imul   rsi,r8,0x3e8
   22813:	48 01 c6             	add    rsi,rax
   22816:	48 89 d0             	mov    rax,rdx
   22819:	48 c1 e0 05          	shl    rax,0x5
   2281d:	48 29 d0             	sub    rax,rdx
   22820:	48 c1 e0 02          	shl    rax,0x2
   22824:	48 01 d0             	add    rax,rdx
   22827:	48 8d 14 06          	lea    rdx,[rsi+rax*1]
   2282b:	48 89 c8             	mov    rax,rcx
   2282e:	48 c1 e0 02          	shl    rax,0x2
   22832:	48 01 c8             	add    rax,rcx
   22835:	48 01 d0             	add    rax,rdx
   22838:	48 01 f8             	add    rax,rdi
   2283b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   22843:	48 8d 05 96 4d 1d 00 	lea    rax,[rip+0x1d4d96]        # 1f75e0 <int21_dH>
   2284a:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   2284d:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   22851:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
   22854:	48 63 f8             	movsxd rdi,eax
   22857:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   2285a:	8b 4d ac             	mov    ecx,DWORD PTR [rbp-0x54]
   2285d:	44 8b 45 a0          	mov    r8d,DWORD PTR [rbp-0x60]
   22861:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
   22864:	48 89 f0             	mov    rax,rsi
   22867:	48 c1 e0 02          	shl    rax,0x2
   2286b:	48 01 f0             	add    rax,rsi
   2286e:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   22876:	48 01 f0             	add    rax,rsi
   22879:	49 69 f0 e8 03 00 00 	imul   rsi,r8,0x3e8
   22880:	48 01 c6             	add    rsi,rax
   22883:	48 89 d0             	mov    rax,rdx
   22886:	48 c1 e0 05          	shl    rax,0x5
   2288a:	48 29 d0             	sub    rax,rdx
   2288d:	48 c1 e0 02          	shl    rax,0x2
   22891:	48 01 d0             	add    rax,rdx
   22894:	48 8d 14 06          	lea    rdx,[rsi+rax*1]
   22898:	48 89 c8             	mov    rax,rcx
   2289b:	48 c1 e0 02          	shl    rax,0x2
   2289f:	48 01 c8             	add    rax,rcx
   228a2:	48 01 d0             	add    rax,rdx
   228a5:	48 01 f8             	add    rax,rdi
   228a8:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   228b0:	48 8d 05 29 4d 1d 00 	lea    rax,[rip+0x1d4d29]        # 1f75e0 <int21_dH>
   228b7:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
   228ba:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
   228bd:	4c 63 c0             	movsxd r8,eax
   228c0:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   228c3:	8b 4d ac             	mov    ecx,DWORD PTR [rbp-0x54]
   228c6:	44 8b 4d a0          	mov    r9d,DWORD PTR [rbp-0x60]
   228ca:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
   228cd:	48 89 f0             	mov    rax,rsi
   228d0:	48 c1 e0 02          	shl    rax,0x2
   228d4:	48 01 f0             	add    rax,rsi
   228d7:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   228df:	48 01 f0             	add    rax,rsi
   228e2:	49 69 f1 e8 03 00 00 	imul   rsi,r9,0x3e8
   228e9:	48 01 c6             	add    rsi,rax
   228ec:	48 89 d0             	mov    rax,rdx
   228ef:	48 c1 e0 05          	shl    rax,0x5
   228f3:	48 29 d0             	sub    rax,rdx
   228f6:	48 c1 e0 02          	shl    rax,0x2
   228fa:	48 01 d0             	add    rax,rdx
   228fd:	48 8d 14 06          	lea    rdx,[rsi+rax*1]
   22901:	48 89 c8             	mov    rax,rcx
   22904:	48 c1 e0 02          	shl    rax,0x2
   22908:	48 01 c8             	add    rax,rcx
   2290b:	48 01 d0             	add    rax,rdx
   2290e:	4c 01 c0             	add    rax,r8
   22911:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   22919:	48 8d 05 c0 cf 1c 00 	lea    rax,[rip+0x1ccfc0]        # 1ef8e0 <int21_37>
   22920:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   22923:	29 c7                	sub    edi,eax
   22925:	89 f8                	mov    eax,edi
   22927:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   2292b:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   22930:	f2 0f 5c c1          	subsd  xmm0,xmm1
   22934:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   22938:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   2293c:	f3 0f 7e 0d ec f6 00 00 	movq   xmm1,QWORD PTR [rip+0xf6ec]        # 32030 <Law_and_Order+0x5f0>
   22944:	66 0f 57 c1          	xorpd  xmm0,xmm1
   22948:	e9 5c 01 00 00       	jmp    22aa9 <get_exp_params_ali+0x5208>
   2294d:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
   22950:	48 63 f8             	movsxd rdi,eax
   22953:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   22956:	8b 4d ac             	mov    ecx,DWORD PTR [rbp-0x54]
   22959:	44 8b 45 a0          	mov    r8d,DWORD PTR [rbp-0x60]
   2295d:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
   22960:	48 89 f0             	mov    rax,rsi
   22963:	48 c1 e0 02          	shl    rax,0x2
   22967:	48 01 f0             	add    rax,rsi
   2296a:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   22972:	48 01 f0             	add    rax,rsi
   22975:	49 69 f0 e8 03 00 00 	imul   rsi,r8,0x3e8
   2297c:	48 01 c6             	add    rsi,rax
   2297f:	48 89 d0             	mov    rax,rdx
   22982:	48 c1 e0 05          	shl    rax,0x5
   22986:	48 29 d0             	sub    rax,rdx
   22989:	48 c1 e0 02          	shl    rax,0x2
   2298d:	48 01 d0             	add    rax,rdx
   22990:	48 8d 14 06          	lea    rdx,[rsi+rax*1]
   22994:	48 89 c8             	mov    rax,rcx
   22997:	48 c1 e0 02          	shl    rax,0x2
   2299b:	48 01 c8             	add    rax,rcx
   2299e:	48 01 d0             	add    rax,rdx
   229a1:	48 01 f8             	add    rax,rdi
   229a4:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   229ac:	48 8d 05 2d 4c 1d 00 	lea    rax,[rip+0x1d4c2d]        # 1f75e0 <int21_dH>
   229b3:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   229b6:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   229ba:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
   229bd:	48 63 f8             	movsxd rdi,eax
   229c0:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   229c3:	8b 4d ac             	mov    ecx,DWORD PTR [rbp-0x54]
   229c6:	44 8b 45 a0          	mov    r8d,DWORD PTR [rbp-0x60]
   229ca:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
   229cd:	48 89 f0             	mov    rax,rsi
   229d0:	48 c1 e0 02          	shl    rax,0x2
   229d4:	48 01 f0             	add    rax,rsi
   229d7:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   229df:	48 01 f0             	add    rax,rsi
   229e2:	49 69 f0 e8 03 00 00 	imul   rsi,r8,0x3e8
   229e9:	48 01 c6             	add    rsi,rax
   229ec:	48 89 d0             	mov    rax,rdx
   229ef:	48 c1 e0 05          	shl    rax,0x5
   229f3:	48 29 d0             	sub    rax,rdx
   229f6:	48 c1 e0 02          	shl    rax,0x2
   229fa:	48 01 d0             	add    rax,rdx
   229fd:	48 8d 14 06          	lea    rdx,[rsi+rax*1]
   22a01:	48 89 c8             	mov    rax,rcx
   22a04:	48 c1 e0 02          	shl    rax,0x2
   22a08:	48 01 c8             	add    rax,rcx
   22a0b:	48 01 d0             	add    rax,rdx
   22a0e:	48 01 f8             	add    rax,rdi
   22a11:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   22a19:	48 8d 05 c0 4b 1d 00 	lea    rax,[rip+0x1d4bc0]        # 1f75e0 <int21_dH>
   22a20:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
   22a23:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
   22a26:	4c 63 c0             	movsxd r8,eax
   22a29:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
   22a2c:	8b 4d ac             	mov    ecx,DWORD PTR [rbp-0x54]
   22a2f:	44 8b 4d a0          	mov    r9d,DWORD PTR [rbp-0x60]
   22a33:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
   22a36:	48 89 f0             	mov    rax,rsi
   22a39:	48 c1 e0 02          	shl    rax,0x2
   22a3d:	48 01 f0             	add    rax,rsi
   22a40:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   22a48:	48 01 f0             	add    rax,rsi
   22a4b:	49 69 f1 e8 03 00 00 	imul   rsi,r9,0x3e8
   22a52:	48 01 c6             	add    rsi,rax
   22a55:	48 89 d0             	mov    rax,rdx
   22a58:	48 c1 e0 05          	shl    rax,0x5
   22a5c:	48 29 d0             	sub    rax,rdx
   22a5f:	48 c1 e0 02          	shl    rax,0x2
   22a63:	48 01 d0             	add    rax,rdx
   22a66:	48 8d 14 06          	lea    rdx,[rsi+rax*1]
   22a6a:	48 89 c8             	mov    rax,rcx
   22a6d:	48 c1 e0 02          	shl    rax,0x2
   22a71:	48 01 c8             	add    rax,rcx
   22a74:	48 01 d0             	add    rax,rdx
   22a77:	4c 01 c0             	add    rax,r8
   22a7a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   22a82:	48 8d 05 57 ce 1c 00 	lea    rax,[rip+0x1cce57]        # 1ef8e0 <int21_37>
   22a89:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   22a8c:	29 c7                	sub    edi,eax
   22a8e:	89 f8                	mov    eax,edi
   22a90:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   22a94:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   22a99:	f2 0f 5c c1          	subsd  xmm0,xmm1
   22a9d:	f3 0f 7e 0d 8b f5 00 00 	movq   xmm1,QWORD PTR [rip+0xf58b]        # 32030 <Law_and_Order+0x5f0>
   22aa5:	66 0f 57 c1          	xorpd  xmm0,xmm1
   22aa9:	f2 0f 10 0d a7 f5 00 00 	movsd  xmm1,QWORD PTR [rip+0xf5a7]        # 32058 <Law_and_Order+0x618>
   22ab1:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   22ab5:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   22aba:	e8 b1 0f fe ff       	call   3a70 <exp@plt>
   22abf:	66 48 0f 7e c7       	movq   rdi,xmm0
   22ac4:	4c 8b 45 c0          	mov    r8,QWORD PTR [rbp-0x40]
   22ac8:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
   22acb:	4c 63 c8             	movsxd r9,eax
   22ace:	8b 55 a8             	mov    edx,DWORD PTR [rbp-0x58]
   22ad1:	8b 75 ac             	mov    esi,DWORD PTR [rbp-0x54]
   22ad4:	44 8b 55 a0          	mov    r10d,DWORD PTR [rbp-0x60]
   22ad8:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
   22adb:	48 89 d0             	mov    rax,rdx
   22ade:	48 c1 e0 02          	shl    rax,0x2
   22ae2:	48 01 d0             	add    rax,rdx
   22ae5:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   22aed:	48 01 d0             	add    rax,rdx
   22af0:	48 89 f2             	mov    rdx,rsi
   22af3:	48 c1 e2 02          	shl    rdx,0x2
   22af7:	48 01 f2             	add    rdx,rsi
   22afa:	48 01 c2             	add    rdx,rax
   22afd:	48 89 c8             	mov    rax,rcx
   22b00:	48 c1 e0 05          	shl    rax,0x5
   22b04:	48 29 c8             	sub    rax,rcx
   22b07:	48 c1 e0 02          	shl    rax,0x2
   22b0b:	48 01 c8             	add    rax,rcx
   22b0e:	48 01 c2             	add    rdx,rax
   22b11:	49 69 c2 e8 03 00 00 	imul   rax,r10,0x3e8
   22b18:	48 01 d0             	add    rax,rdx
   22b1b:	4c 01 c8             	add    rax,r9
   22b1e:	48 05 de 0b 00 00    	add    rax,0xbde
   22b24:	49 89 3c c0          	mov    QWORD PTR [r8+rax*8],rdi
   22b28:	83 45 b0 01          	add    DWORD PTR [rbp-0x50],0x1
   22b2c:	83 7d b0 04          	cmp    DWORD PTR [rbp-0x50],0x4
   22b30:	0f 8e a4 fc ff ff    	jle    227da <get_exp_params_ali+0x4f39>
   22b36:	83 45 ac 01          	add    DWORD PTR [rbp-0x54],0x1
   22b3a:	83 7d ac 04          	cmp    DWORD PTR [rbp-0x54],0x4
   22b3e:	0f 86 8a fc ff ff    	jbe    227ce <get_exp_params_ali+0x4f2d>
   22b44:	83 45 a8 01          	add    DWORD PTR [rbp-0x58],0x1
   22b48:	83 7d a8 04          	cmp    DWORD PTR [rbp-0x58],0x4
   22b4c:	0f 86 70 fc ff ff    	jbe    227c2 <get_exp_params_ali+0x4f21>
   22b52:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
   22b56:	83 7d a4 07          	cmp    DWORD PTR [rbp-0x5c],0x7
   22b5a:	0f 86 56 fc ff ff    	jbe    227b6 <get_exp_params_ali+0x4f15>
   22b60:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
   22b64:	83 7d a0 07          	cmp    DWORD PTR [rbp-0x60],0x7
   22b68:	0f 86 3c fc ff ff    	jbe    227aa <get_exp_params_ali+0x4f09>
   22b6e:	c7 45 a0 00 00 00 00 	mov    DWORD PTR [rbp-0x60],0x0
   22b75:	e9 52 04 00 00       	jmp    22fcc <get_exp_params_ali+0x572b>
   22b7a:	c7 45 a4 00 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x0
   22b81:	e9 38 04 00 00       	jmp    22fbe <get_exp_params_ali+0x571d>
   22b86:	c7 45 a8 00 00 00 00 	mov    DWORD PTR [rbp-0x58],0x0
   22b8d:	e9 1e 04 00 00       	jmp    22fb0 <get_exp_params_ali+0x570f>
   22b92:	c7 45 ac 00 00 00 00 	mov    DWORD PTR [rbp-0x54],0x0
   22b99:	e9 04 04 00 00       	jmp    22fa2 <get_exp_params_ali+0x5701>
   22b9e:	c7 45 b4 00 00 00 00 	mov    DWORD PTR [rbp-0x4c],0x0
   22ba5:	e9 ea 03 00 00       	jmp    22f94 <get_exp_params_ali+0x56f3>
   22baa:	c7 45 b8 00 00 00 00 	mov    DWORD PTR [rbp-0x48],0x0
   22bb1:	e9 d0 03 00 00       	jmp    22f86 <get_exp_params_ali+0x56e5>
   22bb6:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   22bba:	0f 85 9f 01 00 00    	jne    22d5f <get_exp_params_ali+0x54be>
   22bc0:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
   22bc3:	48 63 f8             	movsxd rdi,eax
   22bc6:	8b 75 ac             	mov    esi,DWORD PTR [rbp-0x54]
   22bc9:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
   22bcc:	48 63 c8             	movsxd rcx,eax
   22bcf:	44 8b 45 a4          	mov    r8d,DWORD PTR [rbp-0x5c]
   22bd3:	8b 55 a8             	mov    edx,DWORD PTR [rbp-0x58]
   22bd6:	44 8b 4d a0          	mov    r9d,DWORD PTR [rbp-0x60]
   22bda:	48 89 f0             	mov    rax,rsi
   22bdd:	48 c1 e0 02          	shl    rax,0x2
   22be1:	48 01 f0             	add    rax,rsi
   22be4:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   22bec:	48 01 f0             	add    rax,rsi
   22bef:	49 69 f1 88 13 00 00 	imul   rsi,r9,0x1388
   22bf6:	48 01 c6             	add    rsi,rax
   22bf9:	48 89 c8             	mov    rax,rcx
   22bfc:	48 c1 e0 02          	shl    rax,0x2
   22c00:	48 01 c8             	add    rax,rcx
   22c03:	48 8d 0c 06          	lea    rcx,[rsi+rax*1]
   22c07:	48 89 d0             	mov    rax,rdx
   22c0a:	48 c1 e0 05          	shl    rax,0x5
   22c0e:	48 29 d0             	sub    rax,rdx
   22c11:	48 c1 e0 02          	shl    rax,0x2
   22c15:	48 01 d0             	add    rax,rdx
   22c18:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   22c1c:	49 69 c0 71 02 00 00 	imul   rax,r8,0x271
   22c23:	48 01 d0             	add    rax,rdx
   22c26:	48 01 f8             	add    rax,rdi
   22c29:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   22c31:	48 8d 05 a8 37 20 00 	lea    rax,[rip+0x2037a8]        # 2263e0 <int22_dH>
   22c38:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   22c3b:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   22c3f:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
   22c42:	48 63 f8             	movsxd rdi,eax
   22c45:	8b 75 ac             	mov    esi,DWORD PTR [rbp-0x54]
   22c48:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
   22c4b:	48 63 c8             	movsxd rcx,eax
   22c4e:	44 8b 45 a4          	mov    r8d,DWORD PTR [rbp-0x5c]
   22c52:	8b 55 a8             	mov    edx,DWORD PTR [rbp-0x58]
   22c55:	44 8b 4d a0          	mov    r9d,DWORD PTR [rbp-0x60]
   22c59:	48 89 f0             	mov    rax,rsi
   22c5c:	48 c1 e0 02          	shl    rax,0x2
   22c60:	48 01 f0             	add    rax,rsi
   22c63:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   22c6b:	48 01 f0             	add    rax,rsi
   22c6e:	49 69 f1 88 13 00 00 	imul   rsi,r9,0x1388
   22c75:	48 01 c6             	add    rsi,rax
   22c78:	48 89 c8             	mov    rax,rcx
   22c7b:	48 c1 e0 02          	shl    rax,0x2
   22c7f:	48 01 c8             	add    rax,rcx
   22c82:	48 8d 0c 06          	lea    rcx,[rsi+rax*1]
   22c86:	48 89 d0             	mov    rax,rdx
   22c89:	48 c1 e0 05          	shl    rax,0x5
   22c8d:	48 29 d0             	sub    rax,rdx
   22c90:	48 c1 e0 02          	shl    rax,0x2
   22c94:	48 01 d0             	add    rax,rdx
   22c97:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   22c9b:	49 69 c0 71 02 00 00 	imul   rax,r8,0x271
   22ca2:	48 01 d0             	add    rax,rdx
   22ca5:	48 01 f8             	add    rax,rdi
   22ca8:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   22cb0:	48 8d 05 29 37 20 00 	lea    rax,[rip+0x203729]        # 2263e0 <int22_dH>
   22cb7:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
   22cba:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
   22cbd:	4c 63 c0             	movsxd r8,eax
   22cc0:	8b 75 ac             	mov    esi,DWORD PTR [rbp-0x54]
   22cc3:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
   22cc6:	48 63 c8             	movsxd rcx,eax
   22cc9:	44 8b 4d a4          	mov    r9d,DWORD PTR [rbp-0x5c]
   22ccd:	8b 55 a8             	mov    edx,DWORD PTR [rbp-0x58]
   22cd0:	44 8b 55 a0          	mov    r10d,DWORD PTR [rbp-0x60]
   22cd4:	48 89 f0             	mov    rax,rsi
   22cd7:	48 c1 e0 02          	shl    rax,0x2
   22cdb:	48 01 f0             	add    rax,rsi
   22cde:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   22ce6:	48 01 f0             	add    rax,rsi
   22ce9:	49 69 f2 88 13 00 00 	imul   rsi,r10,0x1388
   22cf0:	48 01 c6             	add    rsi,rax
   22cf3:	48 89 c8             	mov    rax,rcx
   22cf6:	48 c1 e0 02          	shl    rax,0x2
   22cfa:	48 01 c8             	add    rax,rcx
   22cfd:	48 8d 0c 06          	lea    rcx,[rsi+rax*1]
   22d01:	48 89 d0             	mov    rax,rdx
   22d04:	48 c1 e0 05          	shl    rax,0x5
   22d08:	48 29 d0             	sub    rax,rdx
   22d0b:	48 c1 e0 02          	shl    rax,0x2
   22d0f:	48 01 d0             	add    rax,rdx
   22d12:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   22d16:	49 69 c1 71 02 00 00 	imul   rax,r9,0x271
   22d1d:	48 01 d0             	add    rax,rdx
   22d20:	4c 01 c0             	add    rax,r8
   22d23:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   22d2b:	48 8d 05 ae c5 1d 00 	lea    rax,[rip+0x1dc5ae]        # 1ff2e0 <int22_37>
   22d32:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   22d35:	29 c7                	sub    edi,eax
   22d37:	89 f8                	mov    eax,edi
   22d39:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   22d3d:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   22d42:	f2 0f 5c c1          	subsd  xmm0,xmm1
   22d46:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   22d4a:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   22d4e:	f3 0f 7e 0d da f2 00 00 	movq   xmm1,QWORD PTR [rip+0xf2da]        # 32030 <Law_and_Order+0x5f0>
   22d56:	66 0f 57 c1          	xorpd  xmm0,xmm1
   22d5a:	e9 92 01 00 00       	jmp    22ef1 <get_exp_params_ali+0x5650>
   22d5f:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
   22d62:	48 63 f8             	movsxd rdi,eax
   22d65:	8b 75 ac             	mov    esi,DWORD PTR [rbp-0x54]
   22d68:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
   22d6b:	48 63 c8             	movsxd rcx,eax
   22d6e:	44 8b 45 a4          	mov    r8d,DWORD PTR [rbp-0x5c]
   22d72:	8b 55 a8             	mov    edx,DWORD PTR [rbp-0x58]
   22d75:	44 8b 4d a0          	mov    r9d,DWORD PTR [rbp-0x60]
   22d79:	48 89 f0             	mov    rax,rsi
   22d7c:	48 c1 e0 02          	shl    rax,0x2
   22d80:	48 01 f0             	add    rax,rsi
   22d83:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   22d8b:	48 01 f0             	add    rax,rsi
   22d8e:	49 69 f1 88 13 00 00 	imul   rsi,r9,0x1388
   22d95:	48 01 c6             	add    rsi,rax
   22d98:	48 89 c8             	mov    rax,rcx
   22d9b:	48 c1 e0 02          	shl    rax,0x2
   22d9f:	48 01 c8             	add    rax,rcx
   22da2:	48 8d 0c 06          	lea    rcx,[rsi+rax*1]
   22da6:	48 89 d0             	mov    rax,rdx
   22da9:	48 c1 e0 05          	shl    rax,0x5
   22dad:	48 29 d0             	sub    rax,rdx
   22db0:	48 c1 e0 02          	shl    rax,0x2
   22db4:	48 01 d0             	add    rax,rdx
   22db7:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   22dbb:	49 69 c0 71 02 00 00 	imul   rax,r8,0x271
   22dc2:	48 01 d0             	add    rax,rdx
   22dc5:	48 01 f8             	add    rax,rdi
   22dc8:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   22dd0:	48 8d 05 09 36 20 00 	lea    rax,[rip+0x203609]        # 2263e0 <int22_dH>
   22dd7:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   22dda:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   22dde:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
   22de1:	48 63 f8             	movsxd rdi,eax
   22de4:	8b 75 ac             	mov    esi,DWORD PTR [rbp-0x54]
   22de7:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
   22dea:	48 63 c8             	movsxd rcx,eax
   22ded:	44 8b 45 a4          	mov    r8d,DWORD PTR [rbp-0x5c]
   22df1:	8b 55 a8             	mov    edx,DWORD PTR [rbp-0x58]
   22df4:	44 8b 4d a0          	mov    r9d,DWORD PTR [rbp-0x60]
   22df8:	48 89 f0             	mov    rax,rsi
   22dfb:	48 c1 e0 02          	shl    rax,0x2
   22dff:	48 01 f0             	add    rax,rsi
   22e02:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   22e0a:	48 01 f0             	add    rax,rsi
   22e0d:	49 69 f1 88 13 00 00 	imul   rsi,r9,0x1388
   22e14:	48 01 c6             	add    rsi,rax
   22e17:	48 89 c8             	mov    rax,rcx
   22e1a:	48 c1 e0 02          	shl    rax,0x2
   22e1e:	48 01 c8             	add    rax,rcx
   22e21:	48 8d 0c 06          	lea    rcx,[rsi+rax*1]
   22e25:	48 89 d0             	mov    rax,rdx
   22e28:	48 c1 e0 05          	shl    rax,0x5
   22e2c:	48 29 d0             	sub    rax,rdx
   22e2f:	48 c1 e0 02          	shl    rax,0x2
   22e33:	48 01 d0             	add    rax,rdx
   22e36:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   22e3a:	49 69 c0 71 02 00 00 	imul   rax,r8,0x271
   22e41:	48 01 d0             	add    rax,rdx
   22e44:	48 01 f8             	add    rax,rdi
   22e47:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   22e4f:	48 8d 05 8a 35 20 00 	lea    rax,[rip+0x20358a]        # 2263e0 <int22_dH>
   22e56:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
   22e59:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
   22e5c:	4c 63 c0             	movsxd r8,eax
   22e5f:	8b 75 ac             	mov    esi,DWORD PTR [rbp-0x54]
   22e62:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
   22e65:	48 63 c8             	movsxd rcx,eax
   22e68:	44 8b 4d a4          	mov    r9d,DWORD PTR [rbp-0x5c]
   22e6c:	8b 55 a8             	mov    edx,DWORD PTR [rbp-0x58]
   22e6f:	44 8b 55 a0          	mov    r10d,DWORD PTR [rbp-0x60]
   22e73:	48 89 f0             	mov    rax,rsi
   22e76:	48 c1 e0 02          	shl    rax,0x2
   22e7a:	48 01 f0             	add    rax,rsi
   22e7d:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   22e85:	48 01 f0             	add    rax,rsi
   22e88:	49 69 f2 88 13 00 00 	imul   rsi,r10,0x1388
   22e8f:	48 01 c6             	add    rsi,rax
   22e92:	48 89 c8             	mov    rax,rcx
   22e95:	48 c1 e0 02          	shl    rax,0x2
   22e99:	48 01 c8             	add    rax,rcx
   22e9c:	48 8d 0c 06          	lea    rcx,[rsi+rax*1]
   22ea0:	48 89 d0             	mov    rax,rdx
   22ea3:	48 c1 e0 05          	shl    rax,0x5
   22ea7:	48 29 d0             	sub    rax,rdx
   22eaa:	48 c1 e0 02          	shl    rax,0x2
   22eae:	48 01 d0             	add    rax,rdx
   22eb1:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   22eb5:	49 69 c1 71 02 00 00 	imul   rax,r9,0x271
   22ebc:	48 01 d0             	add    rax,rdx
   22ebf:	4c 01 c0             	add    rax,r8
   22ec2:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   22eca:	48 8d 05 0f c4 1d 00 	lea    rax,[rip+0x1dc40f]        # 1ff2e0 <int22_37>
   22ed1:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   22ed4:	29 c7                	sub    edi,eax
   22ed6:	89 f8                	mov    eax,edi
   22ed8:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   22edc:	f2 0f 59 4d d0       	mulsd  xmm1,QWORD PTR [rbp-0x30]
   22ee1:	f2 0f 5c c1          	subsd  xmm0,xmm1
   22ee5:	f3 0f 7e 0d 43 f1 00 00 	movq   xmm1,QWORD PTR [rip+0xf143]        # 32030 <Law_and_Order+0x5f0>
   22eed:	66 0f 57 c1          	xorpd  xmm0,xmm1
   22ef1:	f2 0f 10 0d 5f f1 00 00 	movsd  xmm1,QWORD PTR [rip+0xf15f]        # 32058 <Law_and_Order+0x618>
   22ef9:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   22efd:	f2 0f 5e 45 c8       	divsd  xmm0,QWORD PTR [rbp-0x38]
   22f02:	e8 69 0b fe ff       	call   3a70 <exp@plt>
   22f07:	66 48 0f 7e c7       	movq   rdi,xmm0
   22f0c:	4c 8b 45 c0          	mov    r8,QWORD PTR [rbp-0x40]
   22f10:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
   22f13:	4c 63 c8             	movsxd r9,eax
   22f16:	8b 75 ac             	mov    esi,DWORD PTR [rbp-0x54]
   22f19:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
   22f1c:	48 63 c8             	movsxd rcx,eax
   22f1f:	44 8b 5d a4          	mov    r11d,DWORD PTR [rbp-0x5c]
   22f23:	8b 55 a8             	mov    edx,DWORD PTR [rbp-0x58]
   22f26:	44 8b 55 a0          	mov    r10d,DWORD PTR [rbp-0x60]
   22f2a:	48 89 f0             	mov    rax,rsi
   22f2d:	48 c1 e0 02          	shl    rax,0x2
   22f31:	48 01 f0             	add    rax,rsi
   22f34:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   22f3c:	48 01 f0             	add    rax,rsi
   22f3f:	49 69 f3 71 02 00 00 	imul   rsi,r11,0x271
   22f46:	48 01 c6             	add    rsi,rax
   22f49:	48 89 d0             	mov    rax,rdx
   22f4c:	48 c1 e0 05          	shl    rax,0x5
   22f50:	48 29 d0             	sub    rax,rdx
   22f53:	48 c1 e0 02          	shl    rax,0x2
   22f57:	48 01 d0             	add    rax,rdx
   22f5a:	48 8d 14 06          	lea    rdx,[rsi+rax*1]
   22f5e:	48 89 c8             	mov    rax,rcx
   22f61:	48 c1 e0 02          	shl    rax,0x2
   22f65:	48 01 c8             	add    rax,rcx
   22f68:	48 01 c2             	add    rdx,rax
   22f6b:	49 69 c2 88 13 00 00 	imul   rax,r10,0x1388
   22f72:	48 01 d0             	add    rax,rdx
   22f75:	4c 01 c8             	add    rax,r9
   22f78:	48 05 1e 2b 00 00    	add    rax,0x2b1e
   22f7e:	49 89 3c c0          	mov    QWORD PTR [r8+rax*8],rdi
   22f82:	83 45 b8 01          	add    DWORD PTR [rbp-0x48],0x1
   22f86:	83 7d b8 04          	cmp    DWORD PTR [rbp-0x48],0x4
   22f8a:	0f 8e 26 fc ff ff    	jle    22bb6 <get_exp_params_ali+0x5315>
   22f90:	83 45 b4 01          	add    DWORD PTR [rbp-0x4c],0x1
   22f94:	83 7d b4 04          	cmp    DWORD PTR [rbp-0x4c],0x4
   22f98:	0f 8e 0c fc ff ff    	jle    22baa <get_exp_params_ali+0x5309>
   22f9e:	83 45 ac 01          	add    DWORD PTR [rbp-0x54],0x1
   22fa2:	83 7d ac 04          	cmp    DWORD PTR [rbp-0x54],0x4
   22fa6:	0f 86 f2 fb ff ff    	jbe    22b9e <get_exp_params_ali+0x52fd>
   22fac:	83 45 a8 01          	add    DWORD PTR [rbp-0x58],0x1
   22fb0:	83 7d a8 04          	cmp    DWORD PTR [rbp-0x58],0x4
   22fb4:	0f 86 d8 fb ff ff    	jbe    22b92 <get_exp_params_ali+0x52f1>
   22fba:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
   22fbe:	83 7d a4 07          	cmp    DWORD PTR [rbp-0x5c],0x7
   22fc2:	0f 86 be fb ff ff    	jbe    22b86 <get_exp_params_ali+0x52e5>
   22fc8:	83 45 a0 01          	add    DWORD PTR [rbp-0x60],0x1
   22fcc:	83 7d a0 07          	cmp    DWORD PTR [rbp-0x60],0x7
   22fd0:	0f 86 a4 fb ff ff    	jbe    22b7a <get_exp_params_ali+0x52d9>
   22fd6:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   22fda:	48 05 f0 43 06 00    	add    rax,0x643f0
   22fe0:	ba 19 01 00 00       	mov    edx,0x119
   22fe5:	48 8d 35 d4 91 1c 00 	lea    rsi,[rip+0x1c91d4]        # 1ec1c0 <Tetraloops>
   22fec:	48 89 c7             	mov    rdi,rax
   22fef:	e8 ec 06 fe ff       	call   36e0 <strncpy@plt>
   22ff4:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   22ff8:	48 05 b0 4a 06 00    	add    rax,0x64ab0
   22ffe:	ba f1 00 00 00       	mov    edx,0xf1
   23003:	48 8d 35 76 8f 1c 00 	lea    rsi,[rip+0x1c8f76]        # 1ebf80 <Triloops>
   2300a:	48 89 c7             	mov    rdi,rax
   2300d:	e8 ce 06 fe ff       	call   36e0 <strncpy@plt>
   23012:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   23016:	48 05 a1 4b 06 00    	add    rax,0x64ba1
   2301c:	ba 69 01 00 00       	mov    edx,0x169
   23021:	48 8d 35 f8 93 1c 00 	lea    rsi,[rip+0x1c93f8]        # 1ec420 <Hexaloops>
   23028:	48 89 c7             	mov    rdi,rax
   2302b:	e8 b0 06 fe ff       	call   36e0 <strncpy@plt>
   23030:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   23034:	48 83 c4 78          	add    rsp,0x78
   23038:	5b                   	pop    rbx
   23039:	5d                   	pop    rbp
   2303a:	c3                   	ret    

000000000002303b <rescale_params>:
   2303b:	f3 0f 1e fa          	endbr64 
   2303f:	55                   	push   rbp
   23040:	48 89 e5             	mov    rbp,rsp
   23043:	48 83 ec 30          	sub    rsp,0x30
   23047:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
   2304b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2304f:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
   23053:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
   23057:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2305b:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
   2305f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   23063:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
   23068:	0f 84 65 01 00 00    	je     231d3 <rescale_params+0x198>
   2306e:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
   23073:	0f 84 5a 01 00 00    	je     231d3 <rescale_params+0x198>
   23079:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2307d:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
   23081:	f2 0f 10 05 7f ef 00 00 	movsd  xmm0,QWORD PTR [rip+0xef7f]        # 32008 <Law_and_Order+0x5c8>
   23089:	f2 0f 11 00          	movsd  QWORD PTR [rax],xmm0
   2308d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   23091:	f2 0f 10 88 60 5e 06 00 	movsd  xmm1,QWORD PTR [rax+0x65e60]
   23099:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2309d:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
   230a1:	48 83 c0 08          	add    rax,0x8
   230a5:	f2 0f 10 05 5b ef 00 00 	movsd  xmm0,QWORD PTR [rip+0xef5b]        # 32008 <Law_and_Order+0x5c8>
   230ad:	f2 0f 5e c1          	divsd  xmm0,xmm1
   230b1:	f2 0f 11 00          	movsd  QWORD PTR [rax],xmm0
   230b5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   230b9:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
   230bd:	f2 0f 10 05 43 ef 00 00 	movsd  xmm0,QWORD PTR [rip+0xef43]        # 32008 <Law_and_Order+0x5c8>
   230c5:	f2 0f 11 00          	movsd  QWORD PTR [rax],xmm0
   230c9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   230cd:	f2 0f 10 80 d0 3f 06 00 	movsd  xmm0,QWORD PTR [rax+0x63fd0]
   230d5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   230d9:	f2 0f 10 88 60 5e 06 00 	movsd  xmm1,QWORD PTR [rax+0x65e60]
   230e1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   230e5:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
   230e9:	48 83 c0 08          	add    rax,0x8
   230ed:	f2 0f 5e c1          	divsd  xmm0,xmm1
   230f1:	f2 0f 11 00          	movsd  QWORD PTR [rax],xmm0
   230f5:	c7 45 ec 02 00 00 00 	mov    DWORD PTR [rbp-0x14],0x2
   230fc:	e9 c0 00 00 00       	jmp    231c1 <rescale_params+0x186>
   23101:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   23105:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
   23109:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2310c:	89 c1                	mov    ecx,eax
   2310e:	c1 e9 1f             	shr    ecx,0x1f
   23111:	01 c8                	add    eax,ecx
   23113:	d1 f8                	sar    eax,1
   23115:	48 98                	cdqe   
   23117:	48 c1 e0 03          	shl    rax,0x3
   2311b:	48 01 d0             	add    rax,rdx
   2311e:	f2 0f 10 08          	movsd  xmm1,QWORD PTR [rax]
   23122:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   23126:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
   2312a:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2312d:	89 c1                	mov    ecx,eax
   2312f:	c1 e9 1f             	shr    ecx,0x1f
   23132:	01 c8                	add    eax,ecx
   23134:	d1 f8                	sar    eax,1
   23136:	f7 d8                	neg    eax
   23138:	89 c1                	mov    ecx,eax
   2313a:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2313d:	01 c8                	add    eax,ecx
   2313f:	48 98                	cdqe   
   23141:	48 c1 e0 03          	shl    rax,0x3
   23145:	48 01 d0             	add    rax,rdx
   23148:	f2 0f 10 00          	movsd  xmm0,QWORD PTR [rax]
   2314c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   23150:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
   23154:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
   23157:	48 63 d2             	movsxd rdx,edx
   2315a:	48 c1 e2 03          	shl    rdx,0x3
   2315e:	48 01 d0             	add    rax,rdx
   23161:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   23165:	f2 0f 11 00          	movsd  QWORD PTR [rax],xmm0
   23169:	f2 0f 2a 45 ec       	cvtsi2sd xmm0,DWORD PTR [rbp-0x14]
   2316e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   23172:	48 8b 80 d0 3f 06 00 	mov    rax,QWORD PTR [rax+0x63fd0]
   23179:	66 0f 28 c8          	movapd xmm1,xmm0
   2317d:	66 48 0f 6e c0       	movq   xmm0,rax
   23182:	e8 a9 08 fe ff       	call   3a30 <pow@plt>
   23187:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2318b:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
   2318f:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
   23192:	48 63 d2             	movsxd rdx,edx
   23195:	48 c1 e2 03          	shl    rdx,0x3
   23199:	48 01 d0             	add    rax,rdx
   2319c:	f2 0f 10 08          	movsd  xmm1,QWORD PTR [rax]
   231a0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   231a4:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
   231a8:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
   231ab:	48 63 d2             	movsxd rdx,edx
   231ae:	48 c1 e2 03          	shl    rdx,0x3
   231b2:	48 01 d0             	add    rax,rdx
   231b5:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   231b9:	f2 0f 11 00          	movsd  QWORD PTR [rax],xmm0
   231bd:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
   231c1:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   231c5:	8b 50 04             	mov    edx,DWORD PTR [rax+0x4]
   231c8:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   231cb:	39 c2                	cmp    edx,eax
   231cd:	0f 83 2e ff ff ff    	jae    23101 <rescale_params+0xc6>
   231d3:	90                   	nop
   231d4:	c9                   	leave  
   231d5:	c3                   	ret    

00000000000231d6 <scale_parameters>:
   231d6:	f3 0f 1e fa          	endbr64 
   231da:	55                   	push   rbp
   231db:	48 89 e5             	mov    rbp,rsp
   231de:	48 81 ec f0 07 00 00 	sub    rsp,0x7f0
   231e5:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   231ee:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   231f2:	31 c0                	xor    eax,eax
   231f4:	48 8d 85 10 f8 ff ff 	lea    rax,[rbp-0x7f0]
   231fb:	48 89 c7             	mov    rdi,rax
   231fe:	e8 1e c2 00 00       	call   2f421 <set_model_details>
   23203:	48 8d 85 10 f8 ff ff 	lea    rax,[rbp-0x7f0]
   2320a:	48 89 c7             	mov    rdi,rax
   2320d:	e8 99 2c ff ff       	call   15eab <vrna_params>
   23212:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   23216:	64 48 33 14 25 28 00 00 00 	xor    rdx,QWORD PTR fs:0x28
   2321f:	74 05                	je     23226 <scale_parameters+0x50>
   23221:	e8 3a 06 fe ff       	call   3860 <__stack_chk_fail@plt>
   23226:	c9                   	leave  
   23227:	c3                   	ret    

0000000000023228 <get_scaled_parameters>:
   23228:	f3 0f 1e fa          	endbr64 
   2322c:	55                   	push   rbp
   2322d:	48 89 e5             	mov    rbp,rsp
   23230:	48 83 ec 10          	sub    rsp,0x10
   23234:	f2 0f 11 45 f8       	movsd  QWORD PTR [rbp-0x8],xmm0
   23239:	f2 0f 10 45 f8       	movsd  xmm0,QWORD PTR [rbp-0x8]
   2323e:	f2 0f 11 45 10       	movsd  QWORD PTR [rbp+0x10],xmm0
   23243:	48 8d 7d 10          	lea    rdi,[rbp+0x10]
   23247:	e8 3c 34 ff ff       	call   16688 <get_scaled_params>
   2324c:	c9                   	leave  
   2324d:	c3                   	ret    

000000000002324e <get_boltzmann_factors>:
   2324e:	f3 0f 1e fa          	endbr64 
   23252:	55                   	push   rbp
   23253:	48 89 e5             	mov    rbp,rsp
   23256:	48 83 ec 20          	sub    rsp,0x20
   2325a:	f2 0f 11 45 f8       	movsd  QWORD PTR [rbp-0x8],xmm0
   2325f:	f2 0f 11 4d f0       	movsd  QWORD PTR [rbp-0x10],xmm1
   23264:	f2 0f 11 55 e8       	movsd  QWORD PTR [rbp-0x18],xmm2
   23269:	f2 0f 10 45 f8       	movsd  xmm0,QWORD PTR [rbp-0x8]
   2326e:	f2 0f 11 45 10       	movsd  QWORD PTR [rbp+0x10],xmm0
   23273:	f2 0f 10 45 f0       	movsd  xmm0,QWORD PTR [rbp-0x10]
   23278:	f2 0f 11 45 18       	movsd  QWORD PTR [rbp+0x18],xmm0
   2327d:	f2 0f 10 45 e8       	movsd  xmm0,QWORD PTR [rbp-0x18]
   23282:	f2 0f 11 05 fe a3 22 00 	movsd  QWORD PTR [rip+0x22a3fe],xmm0        # 24d688 <pf_scale>
   2328a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2328e:	66 48 0f 6e c0       	movq   xmm0,rax
   23293:	48 8d 7d 10          	lea    rdi,[rbp+0x10]
   23297:	e8 d9 4d ff ff       	call   18075 <get_scaled_exp_params>
   2329c:	c9                   	leave  
   2329d:	c3                   	ret    

000000000002329e <get_scaled_pf_parameters>:
   2329e:	f3 0f 1e fa          	endbr64 
   232a2:	55                   	push   rbp
   232a3:	48 89 e5             	mov    rbp,rsp
   232a6:	48 81 ec 00 08 00 00 	sub    rsp,0x800
   232ad:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   232b6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   232ba:	31 c0                	xor    eax,eax
   232bc:	48 8d 85 10 f8 ff ff 	lea    rax,[rbp-0x7f0]
   232c3:	48 89 c7             	mov    rdi,rax
   232c6:	e8 56 c1 00 00       	call   2f421 <set_model_details>
   232cb:	48 8d 85 10 f8 ff ff 	lea    rax,[rbp-0x7f0]
   232d2:	48 89 c7             	mov    rdi,rax
   232d5:	e8 45 2c ff ff       	call   15f1f <vrna_exp_params>
   232da:	48 89 85 08 f8 ff ff 	mov    QWORD PTR [rbp-0x7f8],rax
   232e1:	f2 0f 10 05 9f a3 22 00 	movsd  xmm0,QWORD PTR [rip+0x22a39f]        # 24d688 <pf_scale>
   232e9:	48 8b 85 08 f8 ff ff 	mov    rax,QWORD PTR [rbp-0x7f8]
   232f0:	f2 0f 11 80 60 5e 06 00 	movsd  QWORD PTR [rax+0x65e60],xmm0
   232f8:	48 8b 85 08 f8 ff ff 	mov    rax,QWORD PTR [rbp-0x7f8]
   232ff:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   23303:	64 48 33 14 25 28 00 00 00 	xor    rdx,QWORD PTR fs:0x28
   2330c:	74 05                	je     23313 <get_scaled_pf_parameters+0x75>
   2330e:	e8 4d 05 fe ff       	call   3860 <__stack_chk_fail@plt>
   23313:	c9                   	leave  
   23314:	c3                   	ret    

0000000000023315 <get_boltzmann_factors_ali>:
   23315:	f3 0f 1e fa          	endbr64 
   23319:	55                   	push   rbp
   2331a:	48 89 e5             	mov    rbp,rsp
   2331d:	48 83 ec 20          	sub    rsp,0x20
   23321:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
   23324:	f2 0f 11 45 f0       	movsd  QWORD PTR [rbp-0x10],xmm0
   23329:	f2 0f 11 4d e8       	movsd  QWORD PTR [rbp-0x18],xmm1
   2332e:	f2 0f 11 55 e0       	movsd  QWORD PTR [rbp-0x20],xmm2
   23333:	f2 0f 10 45 f0       	movsd  xmm0,QWORD PTR [rbp-0x10]
   23338:	f2 0f 11 45 10       	movsd  QWORD PTR [rbp+0x10],xmm0
   2333d:	f2 0f 10 45 e8       	movsd  xmm0,QWORD PTR [rbp-0x18]
   23342:	f2 0f 11 45 18       	movsd  QWORD PTR [rbp+0x18],xmm0
   23347:	f2 0f 10 45 e0       	movsd  xmm0,QWORD PTR [rbp-0x20]
   2334c:	f2 0f 11 05 34 a3 22 00 	movsd  QWORD PTR [rip+0x22a334],xmm0        # 24d688 <pf_scale>
   23354:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
   23358:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2335b:	66 48 0f 6e c2       	movq   xmm0,rdx
   23360:	89 c6                	mov    esi,eax
   23362:	48 8d 7d 10          	lea    rdi,[rbp+0x10]
   23366:	e8 36 a5 ff ff       	call   1d8a1 <get_exp_params_ali>
   2336b:	c9                   	leave  
   2336c:	c3                   	ret    

000000000002336d <get_scaled_alipf_parameters>:
   2336d:	f3 0f 1e fa          	endbr64 
   23371:	55                   	push   rbp
   23372:	48 89 e5             	mov    rbp,rsp
   23375:	48 81 ec 00 08 00 00 	sub    rsp,0x800
   2337c:	89 bd 0c f8 ff ff    	mov    DWORD PTR [rbp-0x7f4],edi
   23382:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   2338b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2338f:	31 c0                	xor    eax,eax
   23391:	48 8d 85 10 f8 ff ff 	lea    rax,[rbp-0x7f0]
   23398:	48 89 c7             	mov    rdi,rax
   2339b:	e8 81 c0 00 00       	call   2f421 <set_model_details>
   233a0:	48 8b 0d e1 a2 22 00 	mov    rcx,QWORD PTR [rip+0x22a2e1]        # 24d688 <pf_scale>
   233a7:	8b 95 0c f8 ff ff    	mov    edx,DWORD PTR [rbp-0x7f4]
   233ad:	48 8d 85 10 f8 ff ff 	lea    rax,[rbp-0x7f0]
   233b4:	66 48 0f 6e c1       	movq   xmm0,rcx
   233b9:	89 d6                	mov    esi,edx
   233bb:	48 89 c7             	mov    rdi,rax
   233be:	e8 de a4 ff ff       	call   1d8a1 <get_exp_params_ali>
   233c3:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
   233c7:	64 48 33 34 25 28 00 00 00 	xor    rsi,QWORD PTR fs:0x28
   233d0:	74 05                	je     233d7 <get_scaled_alipf_parameters+0x6a>
   233d2:	e8 89 04 fe ff       	call   3860 <__stack_chk_fail@plt>
   233d7:	c9                   	leave  
   233d8:	c3                   	ret    

00000000000233d9 <get_boltzmann_factor_copy>:
   233d9:	f3 0f 1e fa          	endbr64 
   233dd:	55                   	push   rbp
   233de:	48 89 e5             	mov    rbp,rsp
   233e1:	48 83 ec 10          	sub    rsp,0x10
   233e5:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   233e9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   233ed:	48 89 c7             	mov    rdi,rax
   233f0:	e8 a3 2c ff ff       	call   16098 <vrna_exp_params_copy>
   233f5:	c9                   	leave  
   233f6:	c3                   	ret    

00000000000233f7 <get_parameter_copy>:
   233f7:	f3 0f 1e fa          	endbr64 
   233fb:	55                   	push   rbp
   233fc:	48 89 e5             	mov    rbp,rsp
   233ff:	48 83 ec 10          	sub    rsp,0x10
   23403:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   23407:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2340b:	48 89 c7             	mov    rdi,rax
   2340e:	e8 3a 2c ff ff       	call   1604d <vrna_params_copy>
   23413:	c9                   	leave  
   23414:	c3                   	ret    

0000000000023415 <copy_parameters>:
   23415:	f3 0f 1e fa          	endbr64 
   23419:	55                   	push   rbp
   2341a:	48 89 e5             	mov    rbp,rsp
   2341d:	48 81 ec 00 08 00 00 	sub    rsp,0x800
   23424:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   2342d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   23431:	31 c0                	xor    eax,eax
   23433:	8b 15 c7 b5 22 00    	mov    edx,DWORD PTR [rip+0x22b5c7]        # 24ea00 <p>
   23439:	8b 05 a1 a0 22 00    	mov    eax,DWORD PTR [rip+0x22a0a1]        # 24d4e0 <id>
   2343f:	39 c2                	cmp    edx,eax
   23441:	74 20                	je     23463 <copy_parameters+0x4e>
   23443:	48 8d 85 10 f8 ff ff 	lea    rax,[rbp-0x7f0]
   2344a:	48 89 c7             	mov    rdi,rax
   2344d:	e8 cf bf 00 00       	call   2f421 <set_model_details>
   23452:	48 8d 85 10 f8 ff ff 	lea    rax,[rbp-0x7f0]
   23459:	48 89 c7             	mov    rdi,rax
   2345c:	e8 4a 2a ff ff       	call   15eab <vrna_params>
   23461:	eb 33                	jmp    23496 <copy_parameters+0x81>
   23463:	bf 80 3e 03 00       	mov    edi,0x33e80
   23468:	e8 54 8a 00 00       	call   2bec1 <vrna_alloc>
   2346d:	48 89 85 08 f8 ff ff 	mov    QWORD PTR [rbp-0x7f8],rax
   23474:	48 8b 85 08 f8 ff ff 	mov    rax,QWORD PTR [rbp-0x7f8]
   2347b:	ba 80 3e 03 00       	mov    edx,0x33e80
   23480:	48 8d 35 79 b5 22 00 	lea    rsi,[rip+0x22b579]        # 24ea00 <p>
   23487:	48 89 c7             	mov    rdi,rax
   2348a:	e8 11 03 fe ff       	call   37a0 <memcpy@plt>
   2348f:	48 8b 85 08 f8 ff ff 	mov    rax,QWORD PTR [rbp-0x7f8]
   23496:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
   2349a:	64 48 33 0c 25 28 00 00 00 	xor    rcx,QWORD PTR fs:0x28
   234a3:	74 05                	je     234aa <copy_parameters+0x95>
   234a5:	e8 b6 03 fe ff       	call   3860 <__stack_chk_fail@plt>
   234aa:	c9                   	leave  
   234ab:	c3                   	ret    

00000000000234ac <set_parameters>:
   234ac:	f3 0f 1e fa          	endbr64 
   234b0:	55                   	push   rbp
   234b1:	48 89 e5             	mov    rbp,rsp
   234b4:	48 83 ec 10          	sub    rsp,0x10
   234b8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   234bc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   234c0:	ba 80 3e 03 00       	mov    edx,0x33e80
   234c5:	48 89 c6             	mov    rsi,rax
   234c8:	48 8d 3d 31 b5 22 00 	lea    rdi,[rip+0x22b531]        # 24ea00 <p>
   234cf:	e8 cc 02 fe ff       	call   37a0 <memcpy@plt>
   234d4:	48 8d 05 25 b5 22 00 	lea    rax,[rip+0x22b525]        # 24ea00 <p>
   234db:	c9                   	leave  
   234dc:	c3                   	ret    

00000000000234dd <copy_pf_param>:
   234dd:	f3 0f 1e fa          	endbr64 
   234e1:	55                   	push   rbp
   234e2:	48 89 e5             	mov    rbp,rsp
   234e5:	48 81 ec 00 08 00 00 	sub    rsp,0x800
   234ec:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   234f5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   234f9:	31 c0                	xor    eax,eax
   234fb:	8b 15 7f f3 25 00    	mov    edx,DWORD PTR [rip+0x25f37f]        # 282880 <pf>
   23501:	8b 05 dd 9f 22 00    	mov    eax,DWORD PTR [rip+0x229fdd]        # 24d4e4 <pf_id>
   23507:	39 c2                	cmp    edx,eax
   23509:	74 45                	je     23550 <copy_pf_param+0x73>
   2350b:	48 8d 85 10 f8 ff ff 	lea    rax,[rbp-0x7f0]
   23512:	48 89 c7             	mov    rdi,rax
   23515:	e8 07 bf 00 00       	call   2f421 <set_model_details>
   2351a:	48 8d 85 10 f8 ff ff 	lea    rax,[rbp-0x7f0]
   23521:	48 89 c7             	mov    rdi,rax
   23524:	e8 f6 29 ff ff       	call   15f1f <vrna_exp_params>
   23529:	48 89 85 08 f8 ff ff 	mov    QWORD PTR [rbp-0x7f8],rax
   23530:	f2 0f 10 05 50 a1 22 00 	movsd  xmm0,QWORD PTR [rip+0x22a150]        # 24d688 <pf_scale>
   23538:	48 8b 85 08 f8 ff ff 	mov    rax,QWORD PTR [rbp-0x7f8]
   2353f:	f2 0f 11 80 60 5e 06 00 	movsd  QWORD PTR [rax+0x65e60],xmm0
   23547:	48 8b 85 08 f8 ff ff 	mov    rax,QWORD PTR [rbp-0x7f8]
   2354e:	eb 33                	jmp    23583 <copy_pf_param+0xa6>
   23550:	bf 60 67 06 00       	mov    edi,0x66760
   23555:	e8 67 89 00 00       	call   2bec1 <vrna_alloc>
   2355a:	48 89 85 08 f8 ff ff 	mov    QWORD PTR [rbp-0x7f8],rax
   23561:	48 8b 85 08 f8 ff ff 	mov    rax,QWORD PTR [rbp-0x7f8]
   23568:	ba 60 67 06 00       	mov    edx,0x66760
   2356d:	48 8d 35 0c f3 25 00 	lea    rsi,[rip+0x25f30c]        # 282880 <pf>
   23574:	48 89 c7             	mov    rdi,rax
   23577:	e8 24 02 fe ff       	call   37a0 <memcpy@plt>
   2357c:	48 8b 85 08 f8 ff ff 	mov    rax,QWORD PTR [rbp-0x7f8]
   23583:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
   23587:	64 48 33 0c 25 28 00 00 00 	xor    rcx,QWORD PTR fs:0x28
   23590:	74 05                	je     23597 <copy_pf_param+0xba>
   23592:	e8 c9 02 fe ff       	call   3860 <__stack_chk_fail@plt>
   23597:	c9                   	leave  
   23598:	c3                   	ret    

0000000000023599 <set_pf_param>:
   23599:	f3 0f 1e fa          	endbr64 
   2359d:	55                   	push   rbp
   2359e:	48 89 e5             	mov    rbp,rsp
   235a1:	48 83 ec 10          	sub    rsp,0x10
   235a5:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   235a9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   235ad:	ba 60 67 06 00       	mov    edx,0x66760
   235b2:	48 89 c6             	mov    rsi,rax
   235b5:	48 8d 3d c4 f2 25 00 	lea    rdi,[rip+0x25f2c4]        # 282880 <pf>
   235bc:	e8 df 01 fe ff       	call   37a0 <memcpy@plt>
   235c1:	48 8d 05 b8 f2 25 00 	lea    rax,[rip+0x25f2b8]        # 282880 <pf>
   235c8:	c9                   	leave  
   235c9:	c3                   	ret    

00000000000235ca <scale_pf_parameters>:
   235ca:	f3 0f 1e fa          	endbr64 
   235ce:	55                   	push   rbp
   235cf:	48 89 e5             	mov    rbp,rsp
   235d2:	48 81 ec 00 08 00 00 	sub    rsp,0x800
   235d9:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   235e2:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   235e6:	31 c0                	xor    eax,eax
   235e8:	48 8d 85 10 f8 ff ff 	lea    rax,[rbp-0x7f0]
   235ef:	48 89 c7             	mov    rdi,rax
   235f2:	e8 2a be 00 00       	call   2f421 <set_model_details>
   235f7:	48 8d 85 10 f8 ff ff 	lea    rax,[rbp-0x7f0]
   235fe:	48 89 c7             	mov    rdi,rax
   23601:	e8 19 29 ff ff       	call   15f1f <vrna_exp_params>
   23606:	48 89 85 08 f8 ff ff 	mov    QWORD PTR [rbp-0x7f8],rax
   2360d:	f2 0f 10 05 73 a0 22 00 	movsd  xmm0,QWORD PTR [rip+0x22a073]        # 24d688 <pf_scale>
   23615:	48 8b 85 08 f8 ff ff 	mov    rax,QWORD PTR [rbp-0x7f8]
   2361c:	f2 0f 11 80 60 5e 06 00 	movsd  QWORD PTR [rax+0x65e60],xmm0
   23624:	48 8b 85 08 f8 ff ff 	mov    rax,QWORD PTR [rbp-0x7f8]
   2362b:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   2362f:	64 48 33 14 25 28 00 00 00 	xor    rdx,QWORD PTR fs:0x28
   23638:	74 05                	je     2363f <scale_pf_parameters+0x75>
   2363a:	e8 21 02 fe ff       	call   3860 <__stack_chk_fail@plt>
   2363f:	c9                   	leave  
   23640:	c3                   	ret    

0000000000023641 <vrna_params_load>:
   23641:	f3 0f 1e fa          	endbr64 
   23645:	55                   	push   rbp
   23646:	48 89 e5             	mov    rbp,rsp
   23649:	48 83 ec 30          	sub    rsp,0x30
   2364d:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
   23651:	89 75 d4             	mov    DWORD PTR [rbp-0x2c],esi
   23654:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
   2365b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2365f:	48 89 c7             	mov    rdi,rax
   23662:	e8 47 03 00 00       	call   239ae <file2array>
   23667:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
   2366b:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
   23670:	74 68                	je     236da <vrna_params_load+0x99>
   23672:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   23676:	48 89 c7             	mov    rdi,rax
   23679:	e8 87 c3 00 00       	call   2fa05 <vrna_basename>
   2367e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   23682:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   23686:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   2368a:	48 89 d6             	mov    rsi,rdx
   2368d:	48 89 c7             	mov    rdi,rax
   23690:	e8 43 04 00 00       	call   23ad8 <set_parameters_from_string>
   23695:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
   23698:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2369c:	48 89 c7             	mov    rdi,rax
   2369f:	e8 0c 02 fe ff       	call   38b0 <free@plt>
   236a4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   236a8:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
   236ac:	eb 14                	jmp    236c2 <vrna_params_load+0x81>
   236ae:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   236b2:	48 8b 00             	mov    rax,QWORD PTR [rax]
   236b5:	48 89 c7             	mov    rdi,rax
   236b8:	e8 f3 01 fe ff       	call   38b0 <free@plt>
   236bd:	48 83 45 e8 08       	add    QWORD PTR [rbp-0x18],0x8
   236c2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   236c6:	48 8b 00             	mov    rax,QWORD PTR [rax]
   236c9:	48 85 c0             	test   rax,rax
   236cc:	75 e0                	jne    236ae <vrna_params_load+0x6d>
   236ce:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   236d2:	48 89 c7             	mov    rdi,rax
   236d5:	e8 d6 01 fe ff       	call   38b0 <free@plt>
   236da:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   236dd:	c9                   	leave  
   236de:	c3                   	ret    

00000000000236df <vrna_params_save>:
   236df:	f3 0f 1e fa          	endbr64 
   236e3:	55                   	push   rbp
   236e4:	48 89 e5             	mov    rbp,rsp
   236e7:	48 83 ec 10          	sub    rsp,0x10
   236eb:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   236ef:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
   236f2:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
   236f5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   236f9:	89 d6                	mov    esi,edx
   236fb:	48 89 c7             	mov    rdi,rax
   236fe:	e8 8d 38 00 00       	call   26f90 <save_parameter_file>
   23703:	c9                   	leave  
   23704:	c3                   	ret    

0000000000023705 <vrna_params_load_from_string>:
   23705:	f3 0f 1e fa          	endbr64 
   23709:	55                   	push   rbp
   2370a:	48 89 e5             	mov    rbp,rsp
   2370d:	53                   	push   rbx
   2370e:	48 83 ec 78          	sub    rsp,0x78
   23712:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
   23716:	48 89 75 90          	mov    QWORD PTR [rbp-0x70],rsi
   2371a:	89 55 8c             	mov    DWORD PTR [rbp-0x74],edx
   2371d:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   23726:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
   2372a:	31 c0                	xor    eax,eax
   2372c:	c7 45 ac 00 00 00 00 	mov    DWORD PTR [rbp-0x54],0x0
   23733:	48 83 7d 98 00       	cmp    QWORD PTR [rbp-0x68],0x0
   23738:	0f 84 55 01 00 00    	je     23893 <vrna_params_load_from_string+0x18e>
   2373e:	48 c7 45 d8 00 00 00 00 	mov    QWORD PTR [rbp-0x28],0x0
   23746:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2374a:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
   2374e:	48 c7 45 b8 00 00 00 00 	mov    QWORD PTR [rbp-0x48],0x0
   23756:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2375a:	48 89 c7             	mov    rdi,rax
   2375d:	e8 a7 79 00 00       	call   2b109 <strdup>
   23762:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
   23766:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
   2376a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2376e:	48 8d 35 56 f6 1b 00 	lea    rsi,[rip+0x1bf656]        # 1e2dcb <parameter_set_rna_turner2004+0x5d2ab>
   23775:	48 89 c7             	mov    rdi,rax
   23778:	e8 13 03 fe ff       	call   3a90 <strtok_r@plt>
   2377d:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
   23781:	eb 76                	jmp    237f9 <vrna_params_load_from_string+0xf4>
   23783:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   23787:	48 3b 45 d8          	cmp    rax,QWORD PTR [rbp-0x28]
   2378b:	75 25                	jne    237b2 <vrna_params_load_from_string+0xad>
   2378d:	48 81 45 d8 00 80 00 00 	add    QWORD PTR [rbp-0x28],0x8000
   23795:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   23799:	8d 14 c5 00 00 00 00 	lea    edx,[rax*8+0x0]
   237a0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
   237a4:	89 d6                	mov    esi,edx
   237a6:	48 89 c7             	mov    rdi,rax
   237a9:	e8 9b 87 00 00       	call   2bf49 <vrna_realloc>
   237ae:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
   237b2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   237b6:	48 8d 50 01          	lea    rdx,[rax+0x1]
   237ba:	48 89 55 d0          	mov    QWORD PTR [rbp-0x30],rdx
   237be:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   237c6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
   237ca:	48 8d 1c 02          	lea    rbx,[rdx+rax*1]
   237ce:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   237d2:	48 89 c7             	mov    rdi,rax
   237d5:	e8 2f 79 00 00       	call   2b109 <strdup>
   237da:	48 89 03             	mov    QWORD PTR [rbx],rax
   237dd:	48 8d 45 b0          	lea    rax,[rbp-0x50]
   237e1:	48 89 c2             	mov    rdx,rax
   237e4:	48 8d 35 e0 f5 1b 00 	lea    rsi,[rip+0x1bf5e0]        # 1e2dcb <parameter_set_rna_turner2004+0x5d2ab>
   237eb:	bf 00 00 00 00       	mov    edi,0x0
   237f0:	e8 9b 02 fe ff       	call   3a90 <strtok_r@plt>
   237f5:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
   237f9:	48 83 7d c8 00       	cmp    QWORD PTR [rbp-0x38],0x0
   237fe:	75 83                	jne    23783 <vrna_params_load_from_string+0x7e>
   23800:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   23804:	48 83 c0 01          	add    rax,0x1
   23808:	8d 14 c5 00 00 00 00 	lea    edx,[rax*8+0x0]
   2380f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
   23813:	89 d6                	mov    esi,edx
   23815:	48 89 c7             	mov    rdi,rax
   23818:	e8 2c 87 00 00       	call   2bf49 <vrna_realloc>
   2381d:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
   23821:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   23825:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   2382d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
   23831:	48 01 d0             	add    rax,rdx
   23834:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
   2383b:	48 8b 55 90          	mov    rdx,QWORD PTR [rbp-0x70]
   2383f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
   23843:	48 89 d6             	mov    rsi,rdx
   23846:	48 89 c7             	mov    rdi,rax
   23849:	e8 8a 02 00 00       	call   23ad8 <set_parameters_from_string>
   2384e:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
   23851:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   23855:	48 89 c7             	mov    rdi,rax
   23858:	e8 53 00 fe ff       	call   38b0 <free@plt>
   2385d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
   23861:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
   23865:	eb 14                	jmp    2387b <vrna_params_load_from_string+0x176>
   23867:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   2386b:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2386e:	48 89 c7             	mov    rdi,rax
   23871:	e8 3a 00 fe ff       	call   38b0 <free@plt>
   23876:	48 83 45 c0 08       	add    QWORD PTR [rbp-0x40],0x8
   2387b:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   2387f:	48 8b 00             	mov    rax,QWORD PTR [rax]
   23882:	48 85 c0             	test   rax,rax
   23885:	75 e0                	jne    23867 <vrna_params_load_from_string+0x162>
   23887:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
   2388b:	48 89 c7             	mov    rdi,rax
   2388e:	e8 1d 00 fe ff       	call   38b0 <free@plt>
   23893:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
   23896:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
   2389a:	64 48 33 0c 25 28 00 00 00 	xor    rcx,QWORD PTR fs:0x28
   238a3:	74 05                	je     238aa <vrna_params_load_from_string+0x1a5>
   238a5:	e8 b6 ff fd ff       	call   3860 <__stack_chk_fail@plt>
   238aa:	48 83 c4 78          	add    rsp,0x78
   238ae:	5b                   	pop    rbx
   238af:	5d                   	pop    rbp
   238b0:	c3                   	ret    

00000000000238b1 <vrna_params_load_defaults>:
   238b1:	f3 0f 1e fa          	endbr64 
   238b5:	55                   	push   rbp
   238b6:	48 89 e5             	mov    rbp,rsp
   238b9:	e8 02 00 00 00       	call   238c0 <vrna_params_load_RNA_Turner2004>
   238be:	5d                   	pop    rbp
   238bf:	c3                   	ret    

00000000000238c0 <vrna_params_load_RNA_Turner2004>:
   238c0:	f3 0f 1e fa          	endbr64 
   238c4:	55                   	push   rbp
   238c5:	48 89 e5             	mov    rbp,rsp
   238c8:	ba 00 00 00 00       	mov    edx,0x0
   238cd:	48 8d 35 f9 f4 1b 00 	lea    rsi,[rip+0x1bf4f9]        # 1e2dcd <parameter_set_rna_turner2004+0x5d2ad>
   238d4:	48 8d 3d 45 22 16 00 	lea    rdi,[rip+0x162245]        # 185b20 <parameter_set_rna_turner2004>
   238db:	e8 25 fe ff ff       	call   23705 <vrna_params_load_from_string>
   238e0:	5d                   	pop    rbp
   238e1:	c3                   	ret    

00000000000238e2 <vrna_params_load_RNA_Turner1999>:
   238e2:	f3 0f 1e fa          	endbr64 
   238e6:	55                   	push   rbp
   238e7:	48 89 e5             	mov    rbp,rsp
   238ea:	ba 00 00 00 00       	mov    edx,0x0
   238ef:	48 8d 35 e9 f4 1b 00 	lea    rsi,[rip+0x1bf4e9]        # 1e2ddf <parameter_set_rna_turner2004+0x5d2bf>
   238f6:	48 8d 3d 03 4d 12 00 	lea    rdi,[rip+0x124d03]        # 148600 <parameter_set_rna_turner1999>
   238fd:	e8 03 fe ff ff       	call   23705 <vrna_params_load_from_string>
   23902:	5d                   	pop    rbp
   23903:	c3                   	ret    

0000000000023904 <vrna_params_load_RNA_Andronescu2007>:
   23904:	f3 0f 1e fa          	endbr64 
   23908:	55                   	push   rbp
   23909:	48 89 e5             	mov    rbp,rsp
   2390c:	ba 00 00 00 00       	mov    edx,0x0
   23911:	48 8d 35 d9 f4 1b 00 	lea    rsi,[rip+0x1bf4d9]        # 1e2df1 <parameter_set_rna_turner2004+0x5d2d1>
   23918:	48 8d 3d a1 8f 0a 00 	lea    rdi,[rip+0xa8fa1]        # cc8c0 <parameter_set_rna_andronescu2007>
   2391f:	e8 e1 fd ff ff       	call   23705 <vrna_params_load_from_string>
   23924:	5d                   	pop    rbp
   23925:	c3                   	ret    

0000000000023926 <vrna_params_load_RNA_Langdon2018>:
   23926:	f3 0f 1e fa          	endbr64 
   2392a:	55                   	push   rbp
   2392b:	48 89 e5             	mov    rbp,rsp
   2392e:	ba 00 00 00 00       	mov    edx,0x0
   23933:	48 8d 35 cd f4 1b 00 	lea    rsi,[rip+0x1bf4cd]        # 1e2e07 <parameter_set_rna_turner2004+0x5d2e7>
   2393a:	48 8d 3d 9f 64 0e 00 	lea    rdi,[rip+0xe649f]        # 109de0 <parameter_set_rna_langdon2018>
   23941:	e8 bf fd ff ff       	call   23705 <vrna_params_load_from_string>
   23946:	5d                   	pop    rbp
   23947:	c3                   	ret    

0000000000023948 <vrna_params_load_RNA_misc_special_hairpins>:
   23948:	f3 0f 1e fa          	endbr64 
   2394c:	55                   	push   rbp
   2394d:	48 89 e5             	mov    rbp,rsp
   23950:	ba 00 00 00 00       	mov    edx,0x0
   23955:	48 8d 35 be f4 1b 00 	lea    rsi,[rip+0x1bf4be]        # 1e2e1a <parameter_set_rna_turner2004+0x5d2fa>
   2395c:	48 8d 3d 9d 39 12 00 	lea    rdi,[rip+0x12399d]        # 147300 <parameter_set_rna_misc_special_hairpins>
   23963:	e8 9d fd ff ff       	call   23705 <vrna_params_load_from_string>
   23968:	5d                   	pop    rbp
   23969:	c3                   	ret    

000000000002396a <vrna_params_load_DNA_Mathews2004>:
   2396a:	f3 0f 1e fa          	endbr64 
   2396e:	55                   	push   rbp
   2396f:	48 89 e5             	mov    rbp,rsp
   23972:	ba 00 00 00 00       	mov    edx,0x0
   23977:	48 8d 35 b9 f4 1b 00 	lea    rsi,[rip+0x1bf4b9]        # 1e2e37 <parameter_set_rna_turner2004+0x5d317>
   2397e:	48 8d 3d 3b be 04 00 	lea    rdi,[rip+0x4be3b]        # 6f7c0 <parameter_set_dna_mathews2004>
   23985:	e8 7b fd ff ff       	call   23705 <vrna_params_load_from_string>
   2398a:	5d                   	pop    rbp
   2398b:	c3                   	ret    

000000000002398c <vrna_params_load_DNA_Mathews1999>:
   2398c:	f3 0f 1e fa          	endbr64 
   23990:	55                   	push   rbp
   23991:	48 89 e5             	mov    rbp,rsp
   23994:	ba 00 00 00 00       	mov    edx,0x0
   23999:	48 8d 35 aa f4 1b 00 	lea    rsi,[rip+0x1bf4aa]        # 1e2e4a <parameter_set_rna_turner2004+0x5d32a>
   239a0:	48 8d 3d f9 e6 00 00 	lea    rdi,[rip+0xe6f9]        # 320a0 <parameter_set_dna_mathews1999>
   239a7:	e8 59 fd ff ff       	call   23705 <vrna_params_load_from_string>
   239ac:	5d                   	pop    rbp
   239ad:	c3                   	ret    

00000000000239ae <file2array>:
   239ae:	f3 0f 1e fa          	endbr64 
   239b2:	55                   	push   rbp
   239b3:	48 89 e5             	mov    rbp,rsp
   239b6:	48 83 ec 40          	sub    rsp,0x40
   239ba:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
   239be:	48 c7 45 d8 00 00 00 00 	mov    QWORD PTR [rbp-0x28],0x0
   239c6:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   239ca:	48 8d 35 8c f4 1b 00 	lea    rsi,[rip+0x1bf48c]        # 1e2e5d <parameter_set_rna_turner2004+0x5d33d>
   239d1:	48 89 c7             	mov    rdi,rax
   239d4:	e8 c7 fe fd ff       	call   38a0 <fopen@plt>
   239d9:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
   239dd:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
   239e2:	0f 84 d2 00 00 00    	je     23aba <file2array+0x10c>
   239e8:	48 c7 45 e0 00 00 00 00 	mov    QWORD PTR [rbp-0x20],0x0
   239f0:	48 c7 45 e8 00 80 00 00 	mov    QWORD PTR [rbp-0x18],0x8000
   239f8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   239fc:	c1 e0 03             	shl    eax,0x3
   239ff:	89 c7                	mov    edi,eax
   23a01:	e8 bb 84 00 00       	call   2bec1 <vrna_alloc>
   23a06:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
   23a0a:	eb 4e                	jmp    23a5a <file2array+0xac>
   23a0c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   23a10:	48 3b 45 e8          	cmp    rax,QWORD PTR [rbp-0x18]
   23a14:	75 25                	jne    23a3b <file2array+0x8d>
   23a16:	48 81 45 e8 00 80 00 00 	add    QWORD PTR [rbp-0x18],0x8000
   23a1e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   23a22:	8d 14 c5 00 00 00 00 	lea    edx,[rax*8+0x0]
   23a29:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   23a2d:	89 d6                	mov    esi,edx
   23a2f:	48 89 c7             	mov    rdi,rax
   23a32:	e8 12 85 00 00       	call   2bf49 <vrna_realloc>
   23a37:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
   23a3b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   23a3f:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   23a47:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   23a4b:	48 01 c2             	add    rdx,rax
   23a4e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   23a52:	48 89 02             	mov    QWORD PTR [rdx],rax
   23a55:	48 83 45 e0 01       	add    QWORD PTR [rbp-0x20],0x1
   23a5a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   23a5e:	48 89 c7             	mov    rdi,rax
   23a61:	e8 0b bc 00 00       	call   2f671 <vrna_read_line>
   23a66:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   23a6a:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
   23a6f:	75 9b                	jne    23a0c <file2array+0x5e>
   23a71:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   23a75:	48 83 c0 01          	add    rax,0x1
   23a79:	8d 14 c5 00 00 00 00 	lea    edx,[rax*8+0x0]
   23a80:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   23a84:	89 d6                	mov    esi,edx
   23a86:	48 89 c7             	mov    rdi,rax
   23a89:	e8 bb 84 00 00       	call   2bf49 <vrna_realloc>
   23a8e:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
   23a92:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   23a96:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   23a9e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   23aa2:	48 01 d0             	add    rax,rdx
   23aa5:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
   23aac:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   23ab0:	48 89 c7             	mov    rdi,rax
   23ab3:	e8 58 fd fd ff       	call   3810 <fclose@plt>
   23ab8:	eb 18                	jmp    23ad2 <file2array+0x124>
   23aba:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   23abe:	48 89 c6             	mov    rsi,rax
   23ac1:	48 8d 3d 98 f3 1b 00 	lea    rdi,[rip+0x1bf398]        # 1e2e60 <parameter_set_rna_turner2004+0x5d340>
   23ac8:	b8 00 00 00 00       	mov    eax,0x0
   23acd:	e8 c9 86 00 00       	call   2c19b <vrna_message_warning>
   23ad2:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   23ad6:	c9                   	leave  
   23ad7:	c3                   	ret    

0000000000023ad8 <set_parameters_from_string>:
   23ad8:	f3 0f 1e fa          	endbr64 
   23adc:	55                   	push   rbp
   23add:	48 89 e5             	mov    rbp,rsp
   23ae0:	48 81 ec 60 01 00 00 	sub    rsp,0x160
   23ae7:	48 89 bd a8 fe ff ff 	mov    QWORD PTR [rbp-0x158],rdi
   23aee:	48 89 b5 a0 fe ff ff 	mov    QWORD PTR [rbp-0x160],rsi
   23af5:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   23afe:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   23b02:	31 c0                	xor    eax,eax
   23b04:	48 c7 85 c0 fe ff ff 00 00 00 00 	mov    QWORD PTR [rbp-0x140],0x0
   23b0f:	48 83 bd a8 fe ff ff 00 	cmp    QWORD PTR [rbp-0x158],0x0
   23b17:	74 21                	je     23b3a <set_parameters_from_string+0x62>
   23b19:	48 8b 85 c0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x140]
   23b20:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   23b28:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   23b2f:	48 01 d0             	add    rax,rdx
   23b32:	48 8b 00             	mov    rax,QWORD PTR [rax]
   23b35:	48 85 c0             	test   rax,rax
   23b38:	75 0a                	jne    23b44 <set_parameters_from_string+0x6c>
   23b3a:	b8 00 00 00 00       	mov    eax,0x0
   23b3f:	e9 96 08 00 00       	jmp    243da <set_parameters_from_string+0x902>
   23b44:	48 8b 05 95 54 2c 00 	mov    rax,QWORD PTR [rip+0x2c5495]        # 2e8fe0 <last_param_file>
   23b4b:	48 89 c7             	mov    rdi,rax
   23b4e:	e8 5d fd fd ff       	call   38b0 <free@plt>
   23b53:	48 83 bd a0 fe ff ff 00 	cmp    QWORD PTR [rbp-0x160],0x0
   23b5b:	74 11                	je     23b6e <set_parameters_from_string+0x96>
   23b5d:	48 8b 85 a0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x160]
   23b64:	48 89 c7             	mov    rdi,rax
   23b67:	e8 9d 75 00 00       	call   2b109 <strdup>
   23b6c:	eb 05                	jmp    23b73 <set_parameters_from_string+0x9b>
   23b6e:	b8 00 00 00 00       	mov    eax,0x0
   23b73:	48 89 05 66 54 2c 00 	mov    QWORD PTR [rip+0x2c5466],rax        # 2e8fe0 <last_param_file>
   23b7a:	48 8b 85 c0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x140]
   23b81:	48 8d 50 01          	lea    rdx,[rax+0x1]
   23b85:	48 89 95 c0 fe ff ff 	mov    QWORD PTR [rbp-0x140],rdx
   23b8c:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   23b94:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   23b9b:	48 01 d0             	add    rax,rdx
   23b9e:	48 8b 00             	mov    rax,QWORD PTR [rax]
   23ba1:	ba 1e 00 00 00       	mov    edx,0x1e
   23ba6:	48 8d 35 e3 f2 1b 00 	lea    rsi,[rip+0x1bf2e3]        # 1e2e90 <parameter_set_rna_turner2004+0x5d370>
   23bad:	48 89 c7             	mov    rdi,rax
   23bb0:	e8 0b fb fd ff       	call   36c0 <strncmp@plt>
   23bb5:	85 c0                	test   eax,eax
   23bb7:	0f 84 d7 07 00 00    	je     24394 <set_parameters_from_string+0x8bc>
   23bbd:	48 8d 3d ec f2 1b 00 	lea    rdi,[rip+0x1bf2ec]        # 1e2eb0 <parameter_set_rna_turner2004+0x5d390>
   23bc4:	b8 00 00 00 00       	mov    eax,0x0
   23bc9:	e8 cd 85 00 00       	call   2c19b <vrna_message_warning>
   23bce:	e9 c1 07 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   23bd3:	48 8d 95 f0 fe ff ff 	lea    rdx,[rbp-0x110]
   23bda:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
   23be1:	48 8d 35 26 f3 1b 00 	lea    rsi,[rip+0x1bf326]        # 1e2f0e <parameter_set_rna_turner2004+0x5d3ee>
   23be8:	48 89 c7             	mov    rdi,rax
   23beb:	b8 00 00 00 00       	mov    eax,0x0
   23bf0:	e8 0b fc fd ff       	call   3800 <__isoc99_sscanf@plt>
   23bf5:	89 85 b8 fe ff ff    	mov    DWORD PTR [rbp-0x148],eax
   23bfb:	83 bd b8 fe ff ff 01 	cmp    DWORD PTR [rbp-0x148],0x1
   23c02:	0f 85 8b 07 00 00    	jne    24393 <set_parameters_from_string+0x8bb>
   23c08:	48 8d 85 f0 fe ff ff 	lea    rax,[rbp-0x110]
   23c0f:	48 89 c7             	mov    rdi,rax
   23c12:	e8 34 52 00 00       	call   28e4b <gettype>
   23c17:	89 85 bc fe ff ff    	mov    DWORD PTR [rbp-0x144],eax
   23c1d:	83 bd bc fe ff ff 24 	cmp    DWORD PTR [rbp-0x144],0x24
   23c24:	0f 87 4c 07 00 00    	ja     24376 <set_parameters_from_string+0x89e>
   23c2a:	8b 85 bc fe ff ff    	mov    eax,DWORD PTR [rbp-0x144]
   23c30:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   23c38:	48 8d 05 09 f3 1b 00 	lea    rax,[rip+0x1bf309]        # 1e2f48 <parameter_set_rna_turner2004+0x5d428>
   23c3f:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   23c42:	48 98                	cdqe   
   23c44:	48 8d 15 fd f2 1b 00 	lea    rdx,[rip+0x1bf2fd]        # 1e2f48 <parameter_set_rna_turner2004+0x5d428>
   23c4b:	48 01 d0             	add    rax,rdx
   23c4e:	3e ff e0             	notrack jmp rax
   23c51:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   23c58:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   23c5f:	4c 8d 05 92 98 22 00 	lea    r8,[rip+0x229892]        # 24d4f8 <stack_shift>
   23c66:	48 8d 0d 83 98 22 00 	lea    rcx,[rip+0x229883]        # 24d4f0 <stack_dim>
   23c6d:	48 8d 15 0c 56 1c 00 	lea    rdx,[rip+0x1c560c]        # 1e9280 <stack37>
   23c74:	48 89 c7             	mov    rdi,rax
   23c77:	e8 97 0b 00 00       	call   24813 <rd_2dim>
   23c7c:	e9 13 07 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   23c81:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   23c88:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   23c8f:	4c 8d 05 62 98 22 00 	lea    r8,[rip+0x229862]        # 24d4f8 <stack_shift>
   23c96:	48 8d 0d 53 98 22 00 	lea    rcx,[rip+0x229853]        # 24d4f0 <stack_dim>
   23c9d:	48 8d 15 dc 56 1c 00 	lea    rdx,[rip+0x1c56dc]        # 1e9380 <stackdH>
   23ca4:	48 89 c7             	mov    rdi,rax
   23ca7:	e8 67 0b 00 00       	call   24813 <rd_2dim>
   23cac:	e9 e3 06 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   23cb1:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   23cb8:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   23cbf:	41 b8 00 00 00 00    	mov    r8d,0x0
   23cc5:	b9 1f 00 00 00       	mov    ecx,0x1f
   23cca:	48 8d 15 af 57 1c 00 	lea    rdx,[rip+0x1c57af]        # 1e9480 <hairpin37>
   23cd1:	48 89 c7             	mov    rdi,rax
   23cd4:	e8 6d 0a 00 00       	call   24746 <rd_1dim>
   23cd9:	e9 b6 06 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   23cde:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   23ce5:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   23cec:	41 b8 00 00 00 00    	mov    r8d,0x0
   23cf2:	b9 1f 00 00 00       	mov    ecx,0x1f
   23cf7:	48 8d 15 02 58 1c 00 	lea    rdx,[rip+0x1c5802]        # 1e9500 <hairpindH>
   23cfe:	48 89 c7             	mov    rdi,rax
   23d01:	e8 40 0a 00 00       	call   24746 <rd_1dim>
   23d06:	e9 89 06 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   23d0b:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   23d12:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   23d19:	41 b8 00 00 00 00    	mov    r8d,0x0
   23d1f:	b9 1f 00 00 00       	mov    ecx,0x1f
   23d24:	48 8d 15 55 58 1c 00 	lea    rdx,[rip+0x1c5855]        # 1e9580 <bulge37>
   23d2b:	48 89 c7             	mov    rdi,rax
   23d2e:	e8 13 0a 00 00       	call   24746 <rd_1dim>
   23d33:	e9 5c 06 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   23d38:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   23d3f:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   23d46:	41 b8 00 00 00 00    	mov    r8d,0x0
   23d4c:	b9 1f 00 00 00       	mov    ecx,0x1f
   23d51:	48 8d 15 a8 58 1c 00 	lea    rdx,[rip+0x1c58a8]        # 1e9600 <bulgedH>
   23d58:	48 89 c7             	mov    rdi,rax
   23d5b:	e8 e6 09 00 00       	call   24746 <rd_1dim>
   23d60:	e9 2f 06 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   23d65:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   23d6c:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   23d73:	41 b8 00 00 00 00    	mov    r8d,0x0
   23d79:	b9 1f 00 00 00       	mov    ecx,0x1f
   23d7e:	48 8d 15 fb 58 1c 00 	lea    rdx,[rip+0x1c58fb]        # 1e9680 <internal_loop37>
   23d85:	48 89 c7             	mov    rdi,rax
   23d88:	e8 b9 09 00 00       	call   24746 <rd_1dim>
   23d8d:	e9 02 06 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   23d92:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   23d99:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   23da0:	41 b8 00 00 00 00    	mov    r8d,0x0
   23da6:	b9 1f 00 00 00       	mov    ecx,0x1f
   23dab:	48 8d 15 4e 59 1c 00 	lea    rdx,[rip+0x1c594e]        # 1e9700 <internal_loopdH>
   23db2:	48 89 c7             	mov    rdi,rax
   23db5:	e8 8c 09 00 00       	call   24746 <rd_1dim>
   23dba:	e9 d5 05 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   23dbf:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   23dc6:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   23dcd:	4c 8d 05 3c 97 22 00 	lea    r8,[rip+0x22973c]        # 24d510 <mismatch_shift>
   23dd4:	48 8d 0d 25 97 22 00 	lea    rcx,[rip+0x229725]        # 24d500 <mismatch_dim>
   23ddb:	48 8d 15 de 78 1c 00 	lea    rdx,[rip+0x1c78de]        # 1eb6c0 <mismatchExt37>
   23de2:	48 89 c7             	mov    rdi,rax
   23de5:	e8 af 0b 00 00       	call   24999 <rd_3dim>
   23dea:	e9 a5 05 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   23def:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   23df6:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   23dfd:	4c 8d 05 0c 97 22 00 	lea    r8,[rip+0x22970c]        # 24d510 <mismatch_shift>
   23e04:	48 8d 0d f5 96 22 00 	lea    rcx,[rip+0x2296f5]        # 24d500 <mismatch_dim>
   23e0b:	48 8d 15 ce 7b 1c 00 	lea    rdx,[rip+0x1c7bce]        # 1eb9e0 <mismatchExtdH>
   23e12:	48 89 c7             	mov    rdi,rax
   23e15:	e8 7f 0b 00 00       	call   24999 <rd_3dim>
   23e1a:	e9 75 05 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   23e1f:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   23e26:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   23e2d:	4c 8d 05 dc 96 22 00 	lea    r8,[rip+0x2296dc]        # 24d510 <mismatch_shift>
   23e34:	48 8d 0d c5 96 22 00 	lea    rcx,[rip+0x2296c5]        # 24d500 <mismatch_dim>
   23e3b:	48 8d 15 7e 5f 1c 00 	lea    rdx,[rip+0x1c5f7e]        # 1e9dc0 <mismatchH37>
   23e42:	48 89 c7             	mov    rdi,rax
   23e45:	e8 4f 0b 00 00       	call   24999 <rd_3dim>
   23e4a:	e9 45 05 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   23e4f:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   23e56:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   23e5d:	4c 8d 05 ac 96 22 00 	lea    r8,[rip+0x2296ac]        # 24d510 <mismatch_shift>
   23e64:	48 8d 0d 95 96 22 00 	lea    rcx,[rip+0x229695]        # 24d500 <mismatch_dim>
   23e6b:	48 8d 15 6e 62 1c 00 	lea    rdx,[rip+0x1c626e]        # 1ea0e0 <mismatchHdH>
   23e72:	48 89 c7             	mov    rdi,rax
   23e75:	e8 1f 0b 00 00       	call   24999 <rd_3dim>
   23e7a:	e9 15 05 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   23e7f:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   23e86:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   23e8d:	4c 8d 05 7c 96 22 00 	lea    r8,[rip+0x22967c]        # 24d510 <mismatch_shift>
   23e94:	48 8d 0d 65 96 22 00 	lea    rcx,[rip+0x229665]        # 24d500 <mismatch_dim>
   23e9b:	48 8d 15 de 58 1c 00 	lea    rdx,[rip+0x1c58de]        # 1e9780 <mismatchI37>
   23ea2:	48 89 c7             	mov    rdi,rax
   23ea5:	e8 ef 0a 00 00       	call   24999 <rd_3dim>
   23eaa:	e9 e5 04 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   23eaf:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   23eb6:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   23ebd:	4c 8d 05 4c 96 22 00 	lea    r8,[rip+0x22964c]        # 24d510 <mismatch_shift>
   23ec4:	48 8d 0d 35 96 22 00 	lea    rcx,[rip+0x229635]        # 24d500 <mismatch_dim>
   23ecb:	48 8d 15 ce 5b 1c 00 	lea    rdx,[rip+0x1c5bce]        # 1e9aa0 <mismatchIdH>
   23ed2:	48 89 c7             	mov    rdi,rax
   23ed5:	e8 bf 0a 00 00       	call   24999 <rd_3dim>
   23eda:	e9 b5 04 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   23edf:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   23ee6:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   23eed:	4c 8d 05 1c 96 22 00 	lea    r8,[rip+0x22961c]        # 24d510 <mismatch_shift>
   23ef4:	48 8d 0d 05 96 22 00 	lea    rcx,[rip+0x229605]        # 24d500 <mismatch_dim>
   23efb:	48 8d 15 3e 6b 1c 00 	lea    rdx,[rip+0x1c6b3e]        # 1eaa40 <mismatch1nI37>
   23f02:	48 89 c7             	mov    rdi,rax
   23f05:	e8 8f 0a 00 00       	call   24999 <rd_3dim>
   23f0a:	e9 85 04 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   23f0f:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   23f16:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   23f1d:	4c 8d 05 ec 95 22 00 	lea    r8,[rip+0x2295ec]        # 24d510 <mismatch_shift>
   23f24:	48 8d 0d d5 95 22 00 	lea    rcx,[rip+0x2295d5]        # 24d500 <mismatch_dim>
   23f2b:	48 8d 15 2e 6e 1c 00 	lea    rdx,[rip+0x1c6e2e]        # 1ead60 <mismatch1nIdH>
   23f32:	48 89 c7             	mov    rdi,rax
   23f35:	e8 5f 0a 00 00       	call   24999 <rd_3dim>
   23f3a:	e9 55 04 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   23f3f:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   23f46:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   23f4d:	4c 8d 05 bc 95 22 00 	lea    r8,[rip+0x2295bc]        # 24d510 <mismatch_shift>
   23f54:	48 8d 0d a5 95 22 00 	lea    rcx,[rip+0x2295a5]        # 24d500 <mismatch_dim>
   23f5b:	48 8d 15 1e 71 1c 00 	lea    rdx,[rip+0x1c711e]        # 1eb080 <mismatch23I37>
   23f62:	48 89 c7             	mov    rdi,rax
   23f65:	e8 2f 0a 00 00       	call   24999 <rd_3dim>
   23f6a:	e9 25 04 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   23f6f:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   23f76:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   23f7d:	4c 8d 05 8c 95 22 00 	lea    r8,[rip+0x22958c]        # 24d510 <mismatch_shift>
   23f84:	48 8d 0d 75 95 22 00 	lea    rcx,[rip+0x229575]        # 24d500 <mismatch_dim>
   23f8b:	48 8d 15 0e 74 1c 00 	lea    rdx,[rip+0x1c740e]        # 1eb3a0 <mismatch23IdH>
   23f92:	48 89 c7             	mov    rdi,rax
   23f95:	e8 ff 09 00 00       	call   24999 <rd_3dim>
   23f9a:	e9 f5 03 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   23f9f:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   23fa6:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   23fad:	4c 8d 05 5c 95 22 00 	lea    r8,[rip+0x22955c]        # 24d510 <mismatch_shift>
   23fb4:	48 8d 0d 45 95 22 00 	lea    rcx,[rip+0x229545]        # 24d500 <mismatch_dim>
   23fbb:	48 8d 15 3e 64 1c 00 	lea    rdx,[rip+0x1c643e]        # 1ea400 <mismatchM37>
   23fc2:	48 89 c7             	mov    rdi,rax
   23fc5:	e8 cf 09 00 00       	call   24999 <rd_3dim>
   23fca:	e9 c5 03 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   23fcf:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   23fd6:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   23fdd:	4c 8d 05 2c 95 22 00 	lea    r8,[rip+0x22952c]        # 24d510 <mismatch_shift>
   23fe4:	48 8d 0d 15 95 22 00 	lea    rcx,[rip+0x229515]        # 24d500 <mismatch_dim>
   23feb:	48 8d 15 2e 67 1c 00 	lea    rdx,[rip+0x1c672e]        # 1ea720 <mismatchMdH>
   23ff2:	48 89 c7             	mov    rdi,rax
   23ff5:	e8 9f 09 00 00       	call   24999 <rd_3dim>
   23ffa:	e9 95 03 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   23fff:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   24006:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   2400d:	4c 8d 05 1c 95 22 00 	lea    r8,[rip+0x22951c]        # 24d530 <int11_shift>
   24014:	48 8d 0d 05 95 22 00 	lea    rcx,[rip+0x229505]        # 24d520 <int11_dim>
   2401b:	48 8d 15 be 86 1c 00 	lea    rdx,[rip+0x1c86be]        # 1ec6e0 <int11_37>
   24022:	48 89 c7             	mov    rdi,rax
   24025:	e8 26 0b 00 00       	call   24b50 <rd_4dim>
   2402a:	e9 65 03 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   2402f:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   24036:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   2403d:	4c 8d 05 ec 94 22 00 	lea    r8,[rip+0x2294ec]        # 24d530 <int11_shift>
   24044:	48 8d 0d d5 94 22 00 	lea    rcx,[rip+0x2294d5]        # 24d520 <int11_dim>
   2404b:	48 8d 15 8e 9f 1c 00 	lea    rdx,[rip+0x1c9f8e]        # 1edfe0 <int11_dH>
   24052:	48 89 c7             	mov    rdi,rax
   24055:	e8 f6 0a 00 00       	call   24b50 <rd_4dim>
   2405a:	e9 35 03 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   2405f:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   24066:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   2406d:	4c 8d 05 ec 94 22 00 	lea    r8,[rip+0x2294ec]        # 24d560 <int21_shift>
   24074:	48 8d 0d c5 94 22 00 	lea    rcx,[rip+0x2294c5]        # 24d540 <int21_dim>
   2407b:	48 8d 15 5e b8 1c 00 	lea    rdx,[rip+0x1cb85e]        # 1ef8e0 <int21_37>
   24082:	48 89 c7             	mov    rdi,rax
   24085:	e8 ba 0c 00 00       	call   24d44 <rd_5dim>
   2408a:	e9 05 03 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   2408f:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   24096:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   2409d:	4c 8d 05 bc 94 22 00 	lea    r8,[rip+0x2294bc]        # 24d560 <int21_shift>
   240a4:	48 8d 0d 95 94 22 00 	lea    rcx,[rip+0x229495]        # 24d540 <int21_dim>
   240ab:	48 8d 15 2e 35 1d 00 	lea    rdx,[rip+0x1d352e]        # 1f75e0 <int21_dH>
   240b2:	48 89 c7             	mov    rdi,rax
   240b5:	e8 8a 0c 00 00       	call   24d44 <rd_5dim>
   240ba:	e9 d5 02 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   240bf:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   240c6:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   240cd:	4c 8d 0d ec 94 22 00 	lea    r9,[rip+0x2294ec]        # 24d5c0 <int22_post>
   240d4:	4c 8d 05 c5 94 22 00 	lea    r8,[rip+0x2294c5]        # 24d5a0 <int22_shift>
   240db:	48 8d 0d 9e 94 22 00 	lea    rcx,[rip+0x22949e]        # 24d580 <int22_dim>
   240e2:	48 8d 15 f7 b1 1d 00 	lea    rdx,[rip+0x1db1f7]        # 1ff2e0 <int22_37>
   240e9:	48 89 c7             	mov    rdi,rax
   240ec:	e8 16 0f 00 00       	call   25007 <rd_6dim_slice>
   240f1:	48 8d 3d e8 b1 1d 00 	lea    rdi,[rip+0x1db1e8]        # 1ff2e0 <int22_37>
   240f8:	e8 80 1d 00 00       	call   25e7d <update_nst>
   240fd:	e9 92 02 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   24102:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   24109:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   24110:	4c 8d 0d a9 94 22 00 	lea    r9,[rip+0x2294a9]        # 24d5c0 <int22_post>
   24117:	4c 8d 05 82 94 22 00 	lea    r8,[rip+0x229482]        # 24d5a0 <int22_shift>
   2411e:	48 8d 0d 5b 94 22 00 	lea    rcx,[rip+0x22945b]        # 24d580 <int22_dim>
   24125:	48 8d 15 b4 22 20 00 	lea    rdx,[rip+0x2022b4]        # 2263e0 <int22_dH>
   2412c:	48 89 c7             	mov    rdi,rax
   2412f:	e8 d3 0e 00 00       	call   25007 <rd_6dim_slice>
   24134:	48 8d 3d a5 22 20 00 	lea    rdi,[rip+0x2022a5]        # 2263e0 <int22_dH>
   2413b:	e8 3d 1d 00 00       	call   25e7d <update_nst>
   24140:	e9 4f 02 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   24145:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   2414c:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   24153:	4c 8d 05 86 94 22 00 	lea    r8,[rip+0x229486]        # 24d5e0 <dangle_shift>
   2415a:	48 8d 0d 77 94 22 00 	lea    rcx,[rip+0x229477]        # 24d5d8 <dangle_dim>
   24161:	48 8d 15 98 7b 1c 00 	lea    rdx,[rip+0x1c7b98]        # 1ebd00 <dangle5_37>
   24168:	48 89 c7             	mov    rdi,rax
   2416b:	e8 a3 06 00 00       	call   24813 <rd_2dim>
   24170:	e9 1f 02 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   24175:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   2417c:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   24183:	4c 8d 05 56 94 22 00 	lea    r8,[rip+0x229456]        # 24d5e0 <dangle_shift>
   2418a:	48 8d 0d 47 94 22 00 	lea    rcx,[rip+0x229447]        # 24d5d8 <dangle_dim>
   24191:	48 8d 15 a8 7c 1c 00 	lea    rdx,[rip+0x1c7ca8]        # 1ebe40 <dangle5_dH>
   24198:	48 89 c7             	mov    rdi,rax
   2419b:	e8 73 06 00 00       	call   24813 <rd_2dim>
   241a0:	e9 ef 01 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   241a5:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   241ac:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   241b3:	4c 8d 05 26 94 22 00 	lea    r8,[rip+0x229426]        # 24d5e0 <dangle_shift>
   241ba:	48 8d 0d 17 94 22 00 	lea    rcx,[rip+0x229417]        # 24d5d8 <dangle_dim>
   241c1:	48 8d 15 d8 7b 1c 00 	lea    rdx,[rip+0x1c7bd8]        # 1ebda0 <dangle3_37>
   241c8:	48 89 c7             	mov    rdi,rax
   241cb:	e8 43 06 00 00       	call   24813 <rd_2dim>
   241d0:	e9 bf 01 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   241d5:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   241dc:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   241e3:	4c 8d 05 f6 93 22 00 	lea    r8,[rip+0x2293f6]        # 24d5e0 <dangle_shift>
   241ea:	48 8d 0d e7 93 22 00 	lea    rcx,[rip+0x2293e7]        # 24d5d8 <dangle_dim>
   241f1:	48 8d 15 e8 7c 1c 00 	lea    rdx,[rip+0x1c7ce8]        # 1ebee0 <dangle3_dH>
   241f8:	48 89 c7             	mov    rdi,rax
   241fb:	e8 13 06 00 00       	call   24813 <rd_2dim>
   24200:	e9 8f 01 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   24205:	48 8d 95 d0 fe ff ff 	lea    rdx,[rbp-0x130]
   2420c:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   24213:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   2421a:	41 b8 00 00 00 00    	mov    r8d,0x0
   24220:	b9 06 00 00 00       	mov    ecx,0x6
   24225:	48 89 c7             	mov    rdi,rax
   24228:	e8 19 05 00 00       	call   24746 <rd_1dim>
   2422d:	8b 85 d0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x130]
   24233:	89 05 b3 a7 22 00    	mov    DWORD PTR [rip+0x22a7b3],eax        # 24e9ec <ML_BASE37>
   24239:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   2423f:	89 05 ab a7 22 00    	mov    DWORD PTR [rip+0x22a7ab],eax        # 24e9f0 <ML_BASEdH>
   24245:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
   2424b:	89 05 c7 4f 1c 00    	mov    DWORD PTR [rip+0x1c4fc7],eax        # 1e9218 <ML_closing37>
   24251:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
   24257:	89 05 bf 4f 1c 00    	mov    DWORD PTR [rip+0x1c4fbf],eax        # 1e921c <ML_closingdH>
   2425d:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
   24263:	89 05 a7 4f 1c 00    	mov    DWORD PTR [rip+0x1c4fa7],eax        # 1e9210 <ML_intern37>
   24269:	8b 85 e4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x11c]
   2426f:	89 05 9f 4f 1c 00    	mov    DWORD PTR [rip+0x1c4f9f],eax        # 1e9214 <ML_interndH>
   24275:	e9 1a 01 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   2427a:	48 8d 95 d0 fe ff ff 	lea    rdx,[rbp-0x130]
   24281:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   24288:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   2428f:	41 b8 00 00 00 00    	mov    r8d,0x0
   24295:	b9 03 00 00 00       	mov    ecx,0x3
   2429a:	48 89 c7             	mov    rdi,rax
   2429d:	e8 a4 04 00 00       	call   24746 <rd_1dim>
   242a2:	8b 85 d0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x130]
   242a8:	89 05 76 4f 1c 00    	mov    DWORD PTR [rip+0x1c4f76],eax        # 1e9224 <ninio37>
   242ae:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   242b4:	89 05 6e 4f 1c 00    	mov    DWORD PTR [rip+0x1c4f6e],eax        # 1e9228 <niniodH>
   242ba:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
   242c0:	89 05 5a 4f 1c 00    	mov    DWORD PTR [rip+0x1c4f5a],eax        # 1e9220 <MAX_NINIO>
   242c6:	e9 c9 00 00 00       	jmp    24394 <set_parameters_from_string+0x8bc>
   242cb:	48 8d 95 d0 fe ff ff 	lea    rdx,[rbp-0x130]
   242d2:	48 8d b5 c0 fe ff ff 	lea    rsi,[rbp-0x140]
   242d9:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   242e0:	41 b8 00 00 00 00    	mov    r8d,0x0
   242e6:	b9 04 00 00 00       	mov    ecx,0x4
   242eb:	48 89 c7             	mov    rdi,rax
   242ee:	e8 53 04 00 00       	call   24746 <rd_1dim>
   242f3:	8b 85 d0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x130]
   242f9:	89 05 35 4f 1c 00    	mov    DWORD PTR [rip+0x1c4f35],eax        # 1e9234 <DuplexInit37>
   242ff:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   24305:	89 05 2d 4f 1c 00    	mov    DWORD PTR [rip+0x1c4f2d],eax        # 1e9238 <DuplexInitdH>
   2430b:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
   24311:	89 05 15 4f 1c 00    	mov    DWORD PTR [rip+0x1c4f15],eax        # 1e922c <TerminalAU37>
   24317:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
   2431d:	89 05 0d 4f 1c 00    	mov    DWORD PTR [rip+0x1c4f0d],eax        # 1e9230 <TerminalAUdH>
   24323:	eb 6f                	jmp    24394 <set_parameters_from_string+0x8bc>
   24325:	48 8d 95 c0 fe ff ff 	lea    rdx,[rbp-0x140]
   2432c:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   24333:	48 89 d6             	mov    rsi,rdx
   24336:	48 89 c7             	mov    rdi,rax
   24339:	e8 9c 0e 00 00       	call   251da <rd_Tetraloop37>
   2433e:	eb 54                	jmp    24394 <set_parameters_from_string+0x8bc>
   24340:	48 8d 95 c0 fe ff ff 	lea    rdx,[rbp-0x140]
   24347:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   2434e:	48 89 d6             	mov    rsi,rdx
   24351:	48 89 c7             	mov    rdi,rax
   24354:	e8 07 11 00 00       	call   25460 <rd_Triloop37>
   24359:	eb 39                	jmp    24394 <set_parameters_from_string+0x8bc>
   2435b:	48 8d 95 c0 fe ff ff 	lea    rdx,[rbp-0x140]
   24362:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   24369:	48 89 d6             	mov    rsi,rdx
   2436c:	48 89 c7             	mov    rdi,rax
   2436f:	e8 a9 0f 00 00       	call   2531d <rd_Hexaloop37>
   24374:	eb 1e                	jmp    24394 <set_parameters_from_string+0x8bc>
   24376:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
   2437d:	48 89 c6             	mov    rsi,rax
   24380:	48 8d 3d 91 eb 1b 00 	lea    rdi,[rip+0x1beb91]        # 1e2f18 <parameter_set_rna_turner2004+0x5d3f8>
   24387:	b8 00 00 00 00       	mov    eax,0x0
   2438c:	e8 0a 7e 00 00       	call   2c19b <vrna_message_warning>
   24391:	eb 01                	jmp    24394 <set_parameters_from_string+0x8bc>
   24393:	90                   	nop
   24394:	48 8b 85 c0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x140]
   2439b:	48 8d 50 01          	lea    rdx,[rax+0x1]
   2439f:	48 89 95 c0 fe ff ff 	mov    QWORD PTR [rbp-0x140],rdx
   243a6:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   243ae:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
   243b5:	48 01 d0             	add    rax,rdx
   243b8:	48 8b 00             	mov    rax,QWORD PTR [rax]
   243bb:	48 89 85 c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rax
   243c2:	48 83 bd c8 fe ff ff 00 	cmp    QWORD PTR [rbp-0x138],0x0
   243ca:	0f 85 03 f8 ff ff    	jne    23bd3 <set_parameters_from_string+0xfb>
   243d0:	e8 60 12 00 00       	call   25635 <check_symmetry>
   243d5:	b8 01 00 00 00       	mov    eax,0x1
   243da:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
   243de:	64 48 33 0c 25 28 00 00 00 	xor    rcx,QWORD PTR fs:0x28
   243e7:	74 05                	je     243ee <set_parameters_from_string+0x916>
   243e9:	e8 72 f4 fd ff       	call   3860 <__stack_chk_fail@plt>
   243ee:	c9                   	leave  
   243ef:	c3                   	ret    

00000000000243f0 <display_array>:
   243f0:	f3 0f 1e fa          	endbr64 
   243f4:	55                   	push   rbp
   243f5:	48 89 e5             	mov    rbp,rsp
   243f8:	48 83 ec 30          	sub    rsp,0x30
   243fc:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   24400:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
   24403:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
   24406:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
   2440a:	c7 45 fc 01 00 00 00 	mov    DWORD PTR [rbp-0x4],0x1
   24411:	e9 c5 00 00 00       	jmp    244db <display_array+0xeb>
   24416:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2441a:	8b 00                	mov    eax,DWORD PTR [rax]
   2441c:	3d 80 96 98 00       	cmp    eax,0x989680
   24421:	74 15                	je     24438 <display_array+0x48>
   24423:	3d 80 96 98 00       	cmp    eax,0x989680
   24428:	7f 6b                	jg     24495 <display_array+0xa5>
   2442a:	3d 80 69 67 ff       	cmp    eax,0xff676980
   2442f:	74 26                	je     24457 <display_array+0x67>
   24431:	83 f8 ce             	cmp    eax,0xffffffce
   24434:	74 40                	je     24476 <display_array+0x86>
   24436:	eb 5d                	jmp    24495 <display_array+0xa5>
   24438:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2443c:	48 89 c1             	mov    rcx,rax
   2443f:	ba 06 00 00 00       	mov    edx,0x6
   24444:	be 01 00 00 00       	mov    esi,0x1
   24449:	48 8d 3d 8c eb 1b 00 	lea    rdi,[rip+0x1beb8c]        # 1e2fdc <parameter_set_rna_turner2004+0x5d4bc>
   24450:	e8 7b f6 fd ff       	call   3ad0 <fwrite@plt>
   24455:	eb 5d                	jmp    244b4 <display_array+0xc4>
   24457:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2445b:	48 89 c1             	mov    rcx,rax
   2445e:	ba 06 00 00 00       	mov    edx,0x6
   24463:	be 01 00 00 00       	mov    esi,0x1
   24468:	48 8d 3d 74 eb 1b 00 	lea    rdi,[rip+0x1beb74]        # 1e2fe3 <parameter_set_rna_turner2004+0x5d4c3>
   2446f:	e8 5c f6 fd ff       	call   3ad0 <fwrite@plt>
   24474:	eb 3e                	jmp    244b4 <display_array+0xc4>
   24476:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2447a:	48 89 c1             	mov    rcx,rax
   2447d:	ba 06 00 00 00       	mov    edx,0x6
   24482:	be 01 00 00 00       	mov    esi,0x1
   24487:	48 8d 3d 5c eb 1b 00 	lea    rdi,[rip+0x1beb5c]        # 1e2fea <parameter_set_rna_turner2004+0x5d4ca>
   2448e:	e8 3d f6 fd ff       	call   3ad0 <fwrite@plt>
   24493:	eb 1f                	jmp    244b4 <display_array+0xc4>
   24495:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   24499:	8b 10                	mov    edx,DWORD PTR [rax]
   2449b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2449f:	48 8d 35 4b eb 1b 00 	lea    rsi,[rip+0x1beb4b]        # 1e2ff1 <parameter_set_rna_turner2004+0x5d4d1>
   244a6:	48 89 c7             	mov    rdi,rax
   244a9:	b8 00 00 00 00       	mov    eax,0x0
   244ae:	e8 9d f4 fd ff       	call   3950 <fprintf@plt>
   244b3:	90                   	nop
   244b4:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   244b7:	99                   	cdq    
   244b8:	f7 7d e0             	idiv   DWORD PTR [rbp-0x20]
   244bb:	89 d0                	mov    eax,edx
   244bd:	85 c0                	test   eax,eax
   244bf:	75 11                	jne    244d2 <display_array+0xe2>
   244c1:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   244c5:	48 89 c6             	mov    rsi,rax
   244c8:	bf 0a 00 00 00       	mov    edi,0xa
   244cd:	e8 0e f4 fd ff       	call   38e0 <fputc@plt>
   244d2:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
   244d6:	48 83 45 e8 04       	add    QWORD PTR [rbp-0x18],0x4
   244db:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   244de:	3b 45 e4             	cmp    eax,DWORD PTR [rbp-0x1c]
   244e1:	0f 8e 2f ff ff ff    	jle    24416 <display_array+0x26>
   244e7:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   244ea:	99                   	cdq    
   244eb:	f7 7d e0             	idiv   DWORD PTR [rbp-0x20]
   244ee:	89 d0                	mov    eax,edx
   244f0:	85 c0                	test   eax,eax
   244f2:	74 12                	je     24506 <display_array+0x116>
   244f4:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   244f8:	48 89 c6             	mov    rsi,rax
   244fb:	bf 0a 00 00 00       	mov    edi,0xa
   24500:	e8 db f3 fd ff       	call   38e0 <fputc@plt>
   24505:	90                   	nop
   24506:	90                   	nop
   24507:	c9                   	leave  
   24508:	c3                   	ret    

0000000000024509 <get_array1>:
   24509:	f3 0f 1e fa          	endbr64 
   2450d:	55                   	push   rbp
   2450e:	48 89 e5             	mov    rbp,rsp
   24511:	53                   	push   rbx
   24512:	48 83 ec 68          	sub    rsp,0x68
   24516:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
   2451a:	48 89 75 a0          	mov    QWORD PTR [rbp-0x60],rsi
   2451e:	48 89 55 98          	mov    QWORD PTR [rbp-0x68],rdx
   24522:	89 4d 94             	mov    DWORD PTR [rbp-0x6c],ecx
   24525:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   2452e:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
   24532:	31 c0                	xor    eax,eax
   24534:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
   2453b:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
   2453e:	89 45 b8             	mov    DWORD PTR [rbp-0x48],eax
   24541:	e9 d4 01 00 00       	jmp    2471a <get_array1+0x211>
   24546:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   2454a:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2454d:	48 8d 48 01          	lea    rcx,[rax+0x1]
   24551:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
   24555:	48 89 0a             	mov    QWORD PTR [rdx],rcx
   24558:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   24560:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
   24564:	48 01 d0             	add    rax,rdx
   24567:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2456a:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
   2456e:	48 83 7d c8 00       	cmp    QWORD PTR [rbp-0x38],0x0
   24573:	75 11                	jne    24586 <get_array1+0x7d>
   24575:	48 8d 3d 7c ea 1b 00 	lea    rdi,[rip+0x1bea7c]        # 1e2ff8 <parameter_set_rna_turner2004+0x5d4d8>
   2457c:	b8 00 00 00 00       	mov    eax,0x0
   24581:	e8 64 7a 00 00       	call   2bfea <vrna_message_error>
   24586:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   2458a:	48 89 c7             	mov    rdi,rax
   2458d:	e8 12 10 00 00       	call   255a4 <ignore_comment>
   24592:	c7 45 bc 00 00 00 00 	mov    DWORD PTR [rbp-0x44],0x0
   24599:	e9 3e 01 00 00       	jmp    246dc <get_array1+0x1d3>
   2459e:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
   245a1:	01 45 bc             	add    DWORD PTR [rbp-0x44],eax
   245a4:	0f b6 45 d0          	movzx  eax,BYTE PTR [rbp-0x30]
   245a8:	3c 2a                	cmp    al,0x2a
   245aa:	75 09                	jne    245b5 <get_array1+0xac>
   245ac:	83 45 b8 01          	add    DWORD PTR [rbp-0x48],0x1
   245b0:	e9 27 01 00 00       	jmp    246dc <get_array1+0x1d3>
   245b5:	0f b6 45 d0          	movzx  eax,BYTE PTR [rbp-0x30]
   245b9:	3c 78                	cmp    al,0x78
   245bb:	75 66                	jne    24623 <get_array1+0x11a>
   245bd:	83 7d b8 00          	cmp    DWORD PTR [rbp-0x48],0x0
   245c1:	75 11                	jne    245d4 <get_array1+0xcb>
   245c3:	48 8d 3d 53 ea 1b 00 	lea    rdi,[rip+0x1bea53]        # 1e301d <parameter_set_rna_turner2004+0x5d4fd>
   245ca:	b8 00 00 00 00       	mov    eax,0x0
   245cf:	e8 16 7a 00 00       	call   2bfea <vrna_message_error>
   245d4:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
   245d7:	48 98                	cdqe   
   245d9:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   245e1:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   245e5:	48 01 d0             	add    rax,rdx
   245e8:	8b 18                	mov    ebx,DWORD PTR [rax]
   245ea:	f2 0f 2a 45 b8       	cvtsi2sd xmm0,DWORD PTR [rbp-0x48]
   245ef:	f2 0f 2a 4d c0       	cvtsi2sd xmm1,DWORD PTR [rbp-0x40]
   245f4:	f2 0f 5e c1          	divsd  xmm0,xmm1
   245f8:	e8 93 f1 fd ff       	call   3790 <log@plt>
   245fd:	f2 0f 10 0d 03 4c 1c 00 	movsd  xmm1,QWORD PTR [rip+0x1c4c03]        # 1e9208 <lxc37>
   24605:	f2 0f 59 c8          	mulsd  xmm1,xmm0
   24609:	f2 0f 10 05 f7 f0 1b 00 	movsd  xmm0,QWORD PTR [rip+0x1bf0f7]        # 1e3708 <parameter_set_rna_turner2004+0x5dbe8>
   24611:	f2 0f 58 c1          	addsd  xmm0,xmm1
   24615:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   24619:	01 d8                	add    eax,ebx
   2461b:	89 45 b0             	mov    DWORD PTR [rbp-0x50],eax
   2461e:	e9 9a 00 00 00       	jmp    246bd <get_array1+0x1b4>
   24623:	48 8d 45 d0          	lea    rax,[rbp-0x30]
   24627:	48 8d 35 0d ea 1b 00 	lea    rsi,[rip+0x1bea0d]        # 1e303b <parameter_set_rna_turner2004+0x5d51b>
   2462e:	48 89 c7             	mov    rdi,rax
   24631:	e8 fa f2 fd ff       	call   3930 <strcmp@plt>
   24636:	85 c0                	test   eax,eax
   24638:	75 09                	jne    24643 <get_array1+0x13a>
   2463a:	c7 45 b0 ce ff ff ff 	mov    DWORD PTR [rbp-0x50],0xffffffce
   24641:	eb 7a                	jmp    246bd <get_array1+0x1b4>
   24643:	48 8d 45 d0          	lea    rax,[rbp-0x30]
   24647:	48 8d 35 f1 e9 1b 00 	lea    rsi,[rip+0x1be9f1]        # 1e303f <parameter_set_rna_turner2004+0x5d51f>
   2464e:	48 89 c7             	mov    rdi,rax
   24651:	e8 da f2 fd ff       	call   3930 <strcmp@plt>
   24656:	85 c0                	test   eax,eax
   24658:	75 09                	jne    24663 <get_array1+0x15a>
   2465a:	c7 45 b0 80 96 98 00 	mov    DWORD PTR [rbp-0x50],0x989680
   24661:	eb 5a                	jmp    246bd <get_array1+0x1b4>
   24663:	48 8d 45 d0          	lea    rax,[rbp-0x30]
   24667:	48 8d 35 d5 e9 1b 00 	lea    rsi,[rip+0x1be9d5]        # 1e3043 <parameter_set_rna_turner2004+0x5d523>
   2466e:	48 89 c7             	mov    rdi,rax
   24671:	e8 ba f2 fd ff       	call   3930 <strcmp@plt>
   24676:	85 c0                	test   eax,eax
   24678:	75 09                	jne    24683 <get_array1+0x17a>
   2467a:	c7 45 b0 00 00 00 00 	mov    DWORD PTR [rbp-0x50],0x0
   24681:	eb 3a                	jmp    246bd <get_array1+0x1b4>
   24683:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
   24687:	48 8d 45 d0          	lea    rax,[rbp-0x30]
   2468b:	48 8d 35 b5 e9 1b 00 	lea    rsi,[rip+0x1be9b5]        # 1e3047 <parameter_set_rna_turner2004+0x5d527>
   24692:	48 89 c7             	mov    rdi,rax
   24695:	b8 00 00 00 00       	mov    eax,0x0
   2469a:	e8 61 f1 fd ff       	call   3800 <__isoc99_sscanf@plt>
   2469f:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
   246a2:	83 7d c4 01          	cmp    DWORD PTR [rbp-0x3c],0x1
   246a6:	74 0f                	je     246b7 <get_array1+0x1ae>
   246a8:	8b 45 bc             	mov    eax,DWORD PTR [rbp-0x44]
   246ab:	48 63 d0             	movsxd rdx,eax
   246ae:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   246b2:	48 01 d0             	add    rax,rdx
   246b5:	eb 74                	jmp    2472b <get_array1+0x222>
   246b7:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
   246ba:	89 45 c0             	mov    DWORD PTR [rbp-0x40],eax
   246bd:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
   246c0:	8d 50 01             	lea    edx,[rax+0x1]
   246c3:	89 55 b8             	mov    DWORD PTR [rbp-0x48],edx
   246c6:	48 98                	cdqe   
   246c8:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   246d0:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   246d4:	48 01 c2             	add    rdx,rax
   246d7:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
   246da:	89 02                	mov    DWORD PTR [rdx],eax
   246dc:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
   246df:	3b 45 94             	cmp    eax,DWORD PTR [rbp-0x6c]
   246e2:	7d 36                	jge    2471a <get_array1+0x211>
   246e4:	8b 45 bc             	mov    eax,DWORD PTR [rbp-0x44]
   246e7:	48 63 d0             	movsxd rdx,eax
   246ea:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   246ee:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   246f2:	48 8d 55 b4          	lea    rdx,[rbp-0x4c]
   246f6:	48 8d 45 d0          	lea    rax,[rbp-0x30]
   246fa:	48 89 d1             	mov    rcx,rdx
   246fd:	48 89 c2             	mov    rdx,rax
   24700:	48 8d 35 43 e9 1b 00 	lea    rsi,[rip+0x1be943]        # 1e304a <parameter_set_rna_turner2004+0x5d52a>
   24707:	b8 00 00 00 00       	mov    eax,0x0
   2470c:	e8 ef f0 fd ff       	call   3800 <__isoc99_sscanf@plt>
   24711:	83 f8 01             	cmp    eax,0x1
   24714:	0f 84 84 fe ff ff    	je     2459e <get_array1+0x95>
   2471a:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
   2471d:	3b 45 94             	cmp    eax,DWORD PTR [rbp-0x6c]
   24720:	0f 8c 20 fe ff ff    	jl     24546 <get_array1+0x3d>
   24726:	b8 00 00 00 00       	mov    eax,0x0
   2472b:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
   2472f:	64 48 33 1c 25 28 00 00 00 	xor    rbx,QWORD PTR fs:0x28
   24738:	74 05                	je     2473f <get_array1+0x236>
   2473a:	e8 21 f1 fd ff       	call   3860 <__stack_chk_fail@plt>
   2473f:	48 83 c4 68          	add    rsp,0x68
   24743:	5b                   	pop    rbx
   24744:	5d                   	pop    rbp
   24745:	c3                   	ret    

0000000000024746 <rd_1dim>:
   24746:	f3 0f 1e fa          	endbr64 
   2474a:	55                   	push   rbp
   2474b:	48 89 e5             	mov    rbp,rsp
   2474e:	48 83 ec 20          	sub    rsp,0x20
   24752:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   24756:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
   2475a:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
   2475e:	89 4d e4             	mov    DWORD PTR [rbp-0x1c],ecx
   24761:	44 89 45 e0          	mov    DWORD PTR [rbp-0x20],r8d
   24765:	8b 7d e0             	mov    edi,DWORD PTR [rbp-0x20]
   24768:	8b 4d e4             	mov    ecx,DWORD PTR [rbp-0x1c]
   2476b:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
   2476f:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
   24773:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   24777:	41 b9 00 00 00 00    	mov    r9d,0x0
   2477d:	41 89 f8             	mov    r8d,edi
   24780:	48 89 c7             	mov    rdi,rax
   24783:	e8 03 00 00 00       	call   2478b <rd_1dim_slice>
   24788:	90                   	nop
   24789:	c9                   	leave  
   2478a:	c3                   	ret    

000000000002478b <rd_1dim_slice>:
   2478b:	f3 0f 1e fa          	endbr64 
   2478f:	55                   	push   rbp
   24790:	48 89 e5             	mov    rbp,rsp
   24793:	48 83 ec 40          	sub    rsp,0x40
   24797:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   2479b:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
   2479f:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
   247a3:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
   247a6:	44 89 45 d0          	mov    DWORD PTR [rbp-0x30],r8d
   247aa:	44 89 4d cc          	mov    DWORD PTR [rbp-0x34],r9d
   247ae:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   247b1:	2b 45 d0             	sub    eax,DWORD PTR [rbp-0x30]
   247b4:	2b 45 cc             	sub    eax,DWORD PTR [rbp-0x34]
   247b7:	89 c2                	mov    edx,eax
   247b9:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   247bc:	48 98                	cdqe   
   247be:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   247c6:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   247ca:	48 8d 3c 01          	lea    rdi,[rcx+rax*1]
   247ce:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
   247d2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   247d6:	89 d1                	mov    ecx,edx
   247d8:	48 89 fa             	mov    rdx,rdi
   247db:	48 89 c7             	mov    rdi,rax
   247de:	e8 26 fd ff ff       	call   24509 <get_array1>
   247e3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   247e7:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
   247ec:	74 22                	je     24810 <rd_1dim_slice+0x85>
   247ee:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   247f2:	48 89 c6             	mov    rsi,rax
   247f5:	48 8d 3d 55 e8 1b 00 	lea    rdi,[rip+0x1be855]        # 1e3051 <parameter_set_rna_turner2004+0x5d531>
   247fc:	b8 00 00 00 00       	mov    eax,0x0
   24801:	e8 e4 77 00 00       	call   2bfea <vrna_message_error>
   24806:	bf 01 00 00 00       	mov    edi,0x1
   2480b:	e8 b0 f0 fd ff       	call   38c0 <exit@plt>
   24810:	90                   	nop
   24811:	c9                   	leave  
   24812:	c3                   	ret    

0000000000024813 <rd_2dim>:
   24813:	f3 0f 1e fa          	endbr64 
   24817:	55                   	push   rbp
   24818:	48 89 e5             	mov    rbp,rsp
   2481b:	48 83 ec 40          	sub    rsp,0x40
   2481f:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   24823:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
   24827:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
   2482b:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
   2482f:	4c 89 45 c8          	mov    QWORD PTR [rbp-0x38],r8
   24833:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   2483c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   24840:	31 c0                	xor    eax,eax
   24842:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [rbp-0x10],0x0
   24849:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
   24850:	4c 8d 45 f0          	lea    r8,[rbp-0x10]
   24854:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
   24858:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
   2485c:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
   24860:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
   24864:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   24868:	4d 89 c1             	mov    r9,r8
   2486b:	49 89 f8             	mov    r8,rdi
   2486e:	48 89 c7             	mov    rdi,rax
   24871:	e8 17 00 00 00       	call   2488d <rd_2dim_slice>
   24876:	90                   	nop
   24877:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2487b:	64 48 33 04 25 28 00 00 00 	xor    rax,QWORD PTR fs:0x28
   24884:	74 05                	je     2488b <rd_2dim+0x78>
   24886:	e8 d5 ef fd ff       	call   3860 <__stack_chk_fail@plt>
   2488b:	c9                   	leave  
   2488c:	c3                   	ret    

000000000002488d <rd_2dim_slice>:
   2488d:	f3 0f 1e fa          	endbr64 
   24891:	55                   	push   rbp
   24892:	48 89 e5             	mov    rbp,rsp
   24895:	48 83 ec 40          	sub    rsp,0x40
   24899:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   2489d:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
   248a1:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
   248a5:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
   248a9:	4c 89 45 c8          	mov    QWORD PTR [rbp-0x38],r8
   248ad:	4c 89 4d c0          	mov    QWORD PTR [rbp-0x40],r9
   248b1:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   248b5:	8b 10                	mov    edx,DWORD PTR [rax]
   248b7:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   248bb:	48 83 c0 04          	add    rax,0x4
   248bf:	8b 00                	mov    eax,DWORD PTR [rax]
   248c1:	01 d0                	add    eax,edx
   248c3:	89 45 f8             	mov    DWORD PTR [rbp-0x8],eax
   248c6:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   248ca:	8b 10                	mov    edx,DWORD PTR [rax]
   248cc:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   248d0:	48 83 c0 04          	add    rax,0x4
   248d4:	8b 00                	mov    eax,DWORD PTR [rax]
   248d6:	01 d0                	add    eax,edx
   248d8:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
   248db:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
   248de:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   248e1:	01 d0                	add    eax,edx
   248e3:	85 c0                	test   eax,eax
   248e5:	75 31                	jne    24918 <rd_2dim_slice+0x8b>
   248e7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   248eb:	8b 10                	mov    edx,DWORD PTR [rax]
   248ed:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   248f1:	48 83 c0 04          	add    rax,0x4
   248f5:	8b 00                	mov    eax,DWORD PTR [rax]
   248f7:	89 d1                	mov    ecx,edx
   248f9:	0f af c8             	imul   ecx,eax
   248fc:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
   24900:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
   24904:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   24908:	41 b8 00 00 00 00    	mov    r8d,0x0
   2490e:	48 89 c7             	mov    rdi,rax
   24911:	e8 30 fe ff ff       	call   24746 <rd_1dim>
   24916:	eb 7f                	jmp    24997 <rd_2dim_slice+0x10a>
   24918:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   2491c:	8b 00                	mov    eax,DWORD PTR [rax]
   2491e:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
   24921:	eb 5e                	jmp    24981 <rd_2dim_slice+0xf4>
   24923:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   24927:	48 83 c0 04          	add    rax,0x4
   2492b:	44 8b 00             	mov    r8d,DWORD PTR [rax]
   2492e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   24932:	48 83 c0 04          	add    rax,0x4
   24936:	8b 08                	mov    ecx,DWORD PTR [rax]
   24938:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2493c:	48 83 c0 04          	add    rax,0x4
   24940:	8b 10                	mov    edx,DWORD PTR [rax]
   24942:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   24946:	48 83 c0 04          	add    rax,0x4
   2494a:	8b 00                	mov    eax,DWORD PTR [rax]
   2494c:	0f af 45 f4          	imul   eax,DWORD PTR [rbp-0xc]
   24950:	48 98                	cdqe   
   24952:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   2495a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2495e:	48 8d 3c 06          	lea    rdi,[rsi+rax*1]
   24962:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
   24966:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2496a:	45 89 c1             	mov    r9d,r8d
   2496d:	41 89 c8             	mov    r8d,ecx
   24970:	89 d1                	mov    ecx,edx
   24972:	48 89 fa             	mov    rdx,rdi
   24975:	48 89 c7             	mov    rdi,rax
   24978:	e8 0e fe ff ff       	call   2478b <rd_1dim_slice>
   2497d:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
   24981:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   24985:	8b 10                	mov    edx,DWORD PTR [rax]
   24987:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   2498b:	8b 00                	mov    eax,DWORD PTR [rax]
   2498d:	29 c2                	sub    edx,eax
   2498f:	89 d0                	mov    eax,edx
   24991:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
   24994:	7c 8d                	jl     24923 <rd_2dim_slice+0x96>
   24996:	90                   	nop
   24997:	c9                   	leave  
   24998:	c3                   	ret    

0000000000024999 <rd_3dim>:
   24999:	f3 0f 1e fa          	endbr64 
   2499d:	55                   	push   rbp
   2499e:	48 89 e5             	mov    rbp,rsp
   249a1:	48 83 ec 50          	sub    rsp,0x50
   249a5:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
   249a9:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
   249ad:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
   249b1:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
   249b5:	4c 89 45 b8          	mov    QWORD PTR [rbp-0x48],r8
   249b9:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   249c2:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   249c6:	31 c0                	xor    eax,eax
   249c8:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
   249cf:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [rbp-0x10],0x0
   249d6:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
   249dd:	4c 8d 45 ec          	lea    r8,[rbp-0x14]
   249e1:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
   249e5:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
   249e9:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
   249ed:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
   249f1:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   249f5:	4d 89 c1             	mov    r9,r8
   249f8:	49 89 f8             	mov    r8,rdi
   249fb:	48 89 c7             	mov    rdi,rax
   249fe:	e8 17 00 00 00       	call   24a1a <rd_3dim_slice>
   24a03:	90                   	nop
   24a04:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   24a08:	64 48 33 04 25 28 00 00 00 	xor    rax,QWORD PTR fs:0x28
   24a11:	74 05                	je     24a18 <rd_3dim+0x7f>
   24a13:	e8 48 ee fd ff       	call   3860 <__stack_chk_fail@plt>
   24a18:	c9                   	leave  
   24a19:	c3                   	ret    

0000000000024a1a <rd_3dim_slice>:
   24a1a:	f3 0f 1e fa          	endbr64 
   24a1e:	55                   	push   rbp
   24a1f:	48 89 e5             	mov    rbp,rsp
   24a22:	48 83 ec 40          	sub    rsp,0x40
   24a26:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   24a2a:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
   24a2e:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
   24a32:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
   24a36:	4c 89 45 c8          	mov    QWORD PTR [rbp-0x38],r8
   24a3a:	4c 89 4d c0          	mov    QWORD PTR [rbp-0x40],r9
   24a3e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   24a42:	8b 10                	mov    edx,DWORD PTR [rax]
   24a44:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   24a48:	48 83 c0 04          	add    rax,0x4
   24a4c:	8b 00                	mov    eax,DWORD PTR [rax]
   24a4e:	01 c2                	add    edx,eax
   24a50:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   24a54:	48 83 c0 08          	add    rax,0x8
   24a58:	8b 00                	mov    eax,DWORD PTR [rax]
   24a5a:	01 d0                	add    eax,edx
   24a5c:	89 45 f8             	mov    DWORD PTR [rbp-0x8],eax
   24a5f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   24a63:	8b 10                	mov    edx,DWORD PTR [rax]
   24a65:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   24a69:	48 83 c0 04          	add    rax,0x4
   24a6d:	8b 00                	mov    eax,DWORD PTR [rax]
   24a6f:	01 c2                	add    edx,eax
   24a71:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   24a75:	48 83 c0 08          	add    rax,0x8
   24a79:	8b 00                	mov    eax,DWORD PTR [rax]
   24a7b:	01 d0                	add    eax,edx
   24a7d:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
   24a80:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
   24a83:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   24a86:	01 d0                	add    eax,edx
   24a88:	85 c0                	test   eax,eax
   24a8a:	75 41                	jne    24acd <rd_3dim_slice+0xb3>
   24a8c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   24a90:	8b 10                	mov    edx,DWORD PTR [rax]
   24a92:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   24a96:	48 83 c0 04          	add    rax,0x4
   24a9a:	8b 00                	mov    eax,DWORD PTR [rax]
   24a9c:	0f af d0             	imul   edx,eax
   24a9f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   24aa3:	48 83 c0 08          	add    rax,0x8
   24aa7:	8b 00                	mov    eax,DWORD PTR [rax]
   24aa9:	89 d1                	mov    ecx,edx
   24aab:	0f af c8             	imul   ecx,eax
   24aae:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
   24ab2:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
   24ab6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   24aba:	41 b8 00 00 00 00    	mov    r8d,0x0
   24ac0:	48 89 c7             	mov    rdi,rax
   24ac3:	e8 7e fc ff ff       	call   24746 <rd_1dim>
   24ac8:	e9 81 00 00 00       	jmp    24b4e <rd_3dim_slice+0x134>
   24acd:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   24ad1:	8b 00                	mov    eax,DWORD PTR [rax]
   24ad3:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
   24ad6:	eb 60                	jmp    24b38 <rd_3dim_slice+0x11e>
   24ad8:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   24adc:	4c 8d 40 04          	lea    r8,[rax+0x4]
   24ae0:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   24ae4:	48 8d 78 04          	lea    rdi,[rax+0x4]
   24ae8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   24aec:	48 8d 48 04          	lea    rcx,[rax+0x4]
   24af0:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   24af4:	48 83 c0 04          	add    rax,0x4
   24af8:	8b 00                	mov    eax,DWORD PTR [rax]
   24afa:	0f af 45 f4          	imul   eax,DWORD PTR [rbp-0xc]
   24afe:	89 c2                	mov    edx,eax
   24b00:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   24b04:	48 83 c0 08          	add    rax,0x8
   24b08:	8b 00                	mov    eax,DWORD PTR [rax]
   24b0a:	0f af c2             	imul   eax,edx
   24b0d:	48 98                	cdqe   
   24b0f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   24b17:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   24b1b:	48 01 c2             	add    rdx,rax
   24b1e:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
   24b22:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   24b26:	4d 89 c1             	mov    r9,r8
   24b29:	49 89 f8             	mov    r8,rdi
   24b2c:	48 89 c7             	mov    rdi,rax
   24b2f:	e8 59 fd ff ff       	call   2488d <rd_2dim_slice>
   24b34:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
   24b38:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   24b3c:	8b 10                	mov    edx,DWORD PTR [rax]
   24b3e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   24b42:	8b 00                	mov    eax,DWORD PTR [rax]
   24b44:	29 c2                	sub    edx,eax
   24b46:	89 d0                	mov    eax,edx
   24b48:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
   24b4b:	7c 8b                	jl     24ad8 <rd_3dim_slice+0xbe>
   24b4d:	90                   	nop
   24b4e:	c9                   	leave  
   24b4f:	c3                   	ret    

0000000000024b50 <rd_4dim>:
   24b50:	f3 0f 1e fa          	endbr64 
   24b54:	55                   	push   rbp
   24b55:	48 89 e5             	mov    rbp,rsp
   24b58:	48 83 ec 50          	sub    rsp,0x50
   24b5c:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
   24b60:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
   24b64:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
   24b68:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
   24b6c:	4c 89 45 b8          	mov    QWORD PTR [rbp-0x48],r8
   24b70:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   24b79:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   24b7d:	31 c0                	xor    eax,eax
   24b7f:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [rbp-0x20],0x0
   24b86:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
   24b8d:	c7 45 e8 00 00 00 00 	mov    DWORD PTR [rbp-0x18],0x0
   24b94:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
   24b9b:	4c 8d 45 e0          	lea    r8,[rbp-0x20]
   24b9f:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
   24ba3:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
   24ba7:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
   24bab:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
   24baf:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   24bb3:	4d 89 c1             	mov    r9,r8
   24bb6:	49 89 f8             	mov    r8,rdi
   24bb9:	48 89 c7             	mov    rdi,rax
   24bbc:	e8 17 00 00 00       	call   24bd8 <rd_4dim_slice>
   24bc1:	90                   	nop
   24bc2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   24bc6:	64 48 33 04 25 28 00 00 00 	xor    rax,QWORD PTR fs:0x28
   24bcf:	74 05                	je     24bd6 <rd_4dim+0x86>
   24bd1:	e8 8a ec fd ff       	call   3860 <__stack_chk_fail@plt>
   24bd6:	c9                   	leave  
   24bd7:	c3                   	ret    

0000000000024bd8 <rd_4dim_slice>:
   24bd8:	f3 0f 1e fa          	endbr64 
   24bdc:	55                   	push   rbp
   24bdd:	48 89 e5             	mov    rbp,rsp
   24be0:	48 83 ec 40          	sub    rsp,0x40
   24be4:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   24be8:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
   24bec:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
   24bf0:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
   24bf4:	4c 89 45 c8          	mov    QWORD PTR [rbp-0x38],r8
   24bf8:	4c 89 4d c0          	mov    QWORD PTR [rbp-0x40],r9
   24bfc:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   24c00:	8b 10                	mov    edx,DWORD PTR [rax]
   24c02:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   24c06:	48 83 c0 04          	add    rax,0x4
   24c0a:	8b 00                	mov    eax,DWORD PTR [rax]
   24c0c:	01 c2                	add    edx,eax
   24c0e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   24c12:	48 83 c0 08          	add    rax,0x8
   24c16:	8b 00                	mov    eax,DWORD PTR [rax]
   24c18:	01 c2                	add    edx,eax
   24c1a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   24c1e:	48 83 c0 0c          	add    rax,0xc
   24c22:	8b 00                	mov    eax,DWORD PTR [rax]
   24c24:	01 d0                	add    eax,edx
   24c26:	89 45 f8             	mov    DWORD PTR [rbp-0x8],eax
   24c29:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   24c2d:	8b 10                	mov    edx,DWORD PTR [rax]
   24c2f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   24c33:	48 83 c0 04          	add    rax,0x4
   24c37:	8b 00                	mov    eax,DWORD PTR [rax]
   24c39:	01 c2                	add    edx,eax
   24c3b:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   24c3f:	48 83 c0 08          	add    rax,0x8
   24c43:	8b 00                	mov    eax,DWORD PTR [rax]
   24c45:	01 c2                	add    edx,eax
   24c47:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   24c4b:	48 83 c0 0c          	add    rax,0xc
   24c4f:	8b 00                	mov    eax,DWORD PTR [rax]
   24c51:	01 d0                	add    eax,edx
   24c53:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
   24c56:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
   24c59:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   24c5c:	01 d0                	add    eax,edx
   24c5e:	85 c0                	test   eax,eax
   24c60:	75 4e                	jne    24cb0 <rd_4dim_slice+0xd8>
   24c62:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   24c66:	8b 10                	mov    edx,DWORD PTR [rax]
   24c68:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   24c6c:	48 83 c0 04          	add    rax,0x4
   24c70:	8b 00                	mov    eax,DWORD PTR [rax]
   24c72:	0f af d0             	imul   edx,eax
   24c75:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   24c79:	48 83 c0 08          	add    rax,0x8
   24c7d:	8b 00                	mov    eax,DWORD PTR [rax]
   24c7f:	0f af d0             	imul   edx,eax
   24c82:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   24c86:	48 83 c0 0c          	add    rax,0xc
   24c8a:	8b 00                	mov    eax,DWORD PTR [rax]
   24c8c:	89 d1                	mov    ecx,edx
   24c8e:	0f af c8             	imul   ecx,eax
   24c91:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
   24c95:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
   24c99:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   24c9d:	41 b8 00 00 00 00    	mov    r8d,0x0
   24ca3:	48 89 c7             	mov    rdi,rax
   24ca6:	e8 9b fa ff ff       	call   24746 <rd_1dim>
   24cab:	e9 92 00 00 00       	jmp    24d42 <rd_4dim_slice+0x16a>
   24cb0:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   24cb4:	8b 00                	mov    eax,DWORD PTR [rax]
   24cb6:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
   24cb9:	eb 6d                	jmp    24d28 <rd_4dim_slice+0x150>
   24cbb:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   24cbf:	4c 8d 40 04          	lea    r8,[rax+0x4]
   24cc3:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   24cc7:	48 8d 78 04          	lea    rdi,[rax+0x4]
   24ccb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   24ccf:	48 8d 48 04          	lea    rcx,[rax+0x4]
   24cd3:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   24cd7:	48 83 c0 04          	add    rax,0x4
   24cdb:	8b 00                	mov    eax,DWORD PTR [rax]
   24cdd:	0f af 45 f4          	imul   eax,DWORD PTR [rbp-0xc]
   24ce1:	89 c2                	mov    edx,eax
   24ce3:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   24ce7:	48 83 c0 08          	add    rax,0x8
   24ceb:	8b 00                	mov    eax,DWORD PTR [rax]
   24ced:	0f af d0             	imul   edx,eax
   24cf0:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   24cf4:	48 83 c0 0c          	add    rax,0xc
   24cf8:	8b 00                	mov    eax,DWORD PTR [rax]
   24cfa:	0f af c2             	imul   eax,edx
   24cfd:	48 98                	cdqe   
   24cff:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   24d07:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   24d0b:	48 01 c2             	add    rdx,rax
   24d0e:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
   24d12:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   24d16:	4d 89 c1             	mov    r9,r8
   24d19:	49 89 f8             	mov    r8,rdi
   24d1c:	48 89 c7             	mov    rdi,rax
   24d1f:	e8 f6 fc ff ff       	call   24a1a <rd_3dim_slice>
   24d24:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
   24d28:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   24d2c:	8b 10                	mov    edx,DWORD PTR [rax]
   24d2e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   24d32:	8b 00                	mov    eax,DWORD PTR [rax]
   24d34:	29 c2                	sub    edx,eax
   24d36:	89 d0                	mov    eax,edx
   24d38:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
   24d3b:	0f 8c 7a ff ff ff    	jl     24cbb <rd_4dim_slice+0xe3>
   24d41:	90                   	nop
   24d42:	c9                   	leave  
   24d43:	c3                   	ret    

0000000000024d44 <rd_5dim>:
   24d44:	f3 0f 1e fa          	endbr64 
   24d48:	55                   	push   rbp
   24d49:	48 89 e5             	mov    rbp,rsp
   24d4c:	48 83 ec 50          	sub    rsp,0x50
   24d50:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
   24d54:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
   24d58:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
   24d5c:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
   24d60:	4c 89 45 b8          	mov    QWORD PTR [rbp-0x48],r8
   24d64:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   24d6d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   24d71:	31 c0                	xor    eax,eax
   24d73:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [rbp-0x20],0x0
   24d7a:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
   24d81:	c7 45 e8 00 00 00 00 	mov    DWORD PTR [rbp-0x18],0x0
   24d88:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
   24d8f:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [rbp-0x10],0x0
   24d96:	4c 8d 45 e0          	lea    r8,[rbp-0x20]
   24d9a:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
   24d9e:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
   24da2:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
   24da6:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
   24daa:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   24dae:	4d 89 c1             	mov    r9,r8
   24db1:	49 89 f8             	mov    r8,rdi
   24db4:	48 89 c7             	mov    rdi,rax
   24db7:	e8 17 00 00 00       	call   24dd3 <rd_5dim_slice>
   24dbc:	90                   	nop
   24dbd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   24dc1:	64 48 33 04 25 28 00 00 00 	xor    rax,QWORD PTR fs:0x28
   24dca:	74 05                	je     24dd1 <rd_5dim+0x8d>
   24dcc:	e8 8f ea fd ff       	call   3860 <__stack_chk_fail@plt>
   24dd1:	c9                   	leave  
   24dd2:	c3                   	ret    

0000000000024dd3 <rd_5dim_slice>:
   24dd3:	f3 0f 1e fa          	endbr64 
   24dd7:	55                   	push   rbp
   24dd8:	48 89 e5             	mov    rbp,rsp
   24ddb:	48 83 ec 40          	sub    rsp,0x40
   24ddf:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   24de3:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
   24de7:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
   24deb:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
   24def:	4c 89 45 c8          	mov    QWORD PTR [rbp-0x38],r8
   24df3:	4c 89 4d c0          	mov    QWORD PTR [rbp-0x40],r9
   24df7:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   24dfb:	8b 10                	mov    edx,DWORD PTR [rax]
   24dfd:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   24e01:	48 83 c0 04          	add    rax,0x4
   24e05:	8b 00                	mov    eax,DWORD PTR [rax]
   24e07:	01 c2                	add    edx,eax
   24e09:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   24e0d:	48 83 c0 08          	add    rax,0x8
   24e11:	8b 00                	mov    eax,DWORD PTR [rax]
   24e13:	01 c2                	add    edx,eax
   24e15:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   24e19:	48 83 c0 0c          	add    rax,0xc
   24e1d:	8b 00                	mov    eax,DWORD PTR [rax]
   24e1f:	01 c2                	add    edx,eax
   24e21:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   24e25:	48 83 c0 10          	add    rax,0x10
   24e29:	8b 00                	mov    eax,DWORD PTR [rax]
   24e2b:	01 d0                	add    eax,edx
   24e2d:	89 45 f8             	mov    DWORD PTR [rbp-0x8],eax
   24e30:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   24e34:	8b 10                	mov    edx,DWORD PTR [rax]
   24e36:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   24e3a:	48 83 c0 04          	add    rax,0x4
   24e3e:	8b 00                	mov    eax,DWORD PTR [rax]
   24e40:	01 c2                	add    edx,eax
   24e42:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   24e46:	48 83 c0 08          	add    rax,0x8
   24e4a:	8b 00                	mov    eax,DWORD PTR [rax]
   24e4c:	01 c2                	add    edx,eax
   24e4e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   24e52:	48 83 c0 0c          	add    rax,0xc
   24e56:	8b 00                	mov    eax,DWORD PTR [rax]
   24e58:	01 c2                	add    edx,eax
   24e5a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   24e5e:	48 83 c0 10          	add    rax,0x10
   24e62:	8b 00                	mov    eax,DWORD PTR [rax]
   24e64:	01 d0                	add    eax,edx
   24e66:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
   24e69:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
   24e6c:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   24e6f:	01 d0                	add    eax,edx
   24e71:	85 c0                	test   eax,eax
   24e73:	75 5b                	jne    24ed0 <rd_5dim_slice+0xfd>
   24e75:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   24e79:	8b 10                	mov    edx,DWORD PTR [rax]
   24e7b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   24e7f:	48 83 c0 04          	add    rax,0x4
   24e83:	8b 00                	mov    eax,DWORD PTR [rax]
   24e85:	0f af d0             	imul   edx,eax
   24e88:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   24e8c:	48 83 c0 08          	add    rax,0x8
   24e90:	8b 00                	mov    eax,DWORD PTR [rax]
   24e92:	0f af d0             	imul   edx,eax
   24e95:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   24e99:	48 83 c0 0c          	add    rax,0xc
   24e9d:	8b 00                	mov    eax,DWORD PTR [rax]
   24e9f:	0f af d0             	imul   edx,eax
   24ea2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   24ea6:	48 83 c0 10          	add    rax,0x10
   24eaa:	8b 00                	mov    eax,DWORD PTR [rax]
   24eac:	89 d1                	mov    ecx,edx
   24eae:	0f af c8             	imul   ecx,eax
   24eb1:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
   24eb5:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
   24eb9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   24ebd:	41 b8 00 00 00 00    	mov    r8d,0x0
   24ec3:	48 89 c7             	mov    rdi,rax
   24ec6:	e8 7b f8 ff ff       	call   24746 <rd_1dim>
   24ecb:	e9 9f 00 00 00       	jmp    24f6f <rd_5dim_slice+0x19c>
   24ed0:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   24ed4:	8b 00                	mov    eax,DWORD PTR [rax]
   24ed6:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
   24ed9:	eb 7a                	jmp    24f55 <rd_5dim_slice+0x182>
   24edb:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   24edf:	4c 8d 40 04          	lea    r8,[rax+0x4]
   24ee3:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   24ee7:	48 8d 78 04          	lea    rdi,[rax+0x4]
   24eeb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   24eef:	48 8d 48 04          	lea    rcx,[rax+0x4]
   24ef3:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   24ef7:	48 83 c0 04          	add    rax,0x4
   24efb:	8b 00                	mov    eax,DWORD PTR [rax]
   24efd:	0f af 45 f4          	imul   eax,DWORD PTR [rbp-0xc]
   24f01:	89 c2                	mov    edx,eax
   24f03:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   24f07:	48 83 c0 08          	add    rax,0x8
   24f0b:	8b 00                	mov    eax,DWORD PTR [rax]
   24f0d:	0f af d0             	imul   edx,eax
   24f10:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   24f14:	48 83 c0 0c          	add    rax,0xc
   24f18:	8b 00                	mov    eax,DWORD PTR [rax]
   24f1a:	0f af d0             	imul   edx,eax
   24f1d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   24f21:	48 83 c0 10          	add    rax,0x10
   24f25:	8b 00                	mov    eax,DWORD PTR [rax]
   24f27:	0f af c2             	imul   eax,edx
   24f2a:	48 98                	cdqe   
   24f2c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   24f34:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   24f38:	48 01 c2             	add    rdx,rax
   24f3b:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
   24f3f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   24f43:	4d 89 c1             	mov    r9,r8
   24f46:	49 89 f8             	mov    r8,rdi
   24f49:	48 89 c7             	mov    rdi,rax
   24f4c:	e8 87 fc ff ff       	call   24bd8 <rd_4dim_slice>
   24f51:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
   24f55:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   24f59:	8b 10                	mov    edx,DWORD PTR [rax]
   24f5b:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   24f5f:	8b 00                	mov    eax,DWORD PTR [rax]
   24f61:	29 c2                	sub    edx,eax
   24f63:	89 d0                	mov    eax,edx
   24f65:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
   24f68:	0f 8c 6d ff ff ff    	jl     24edb <rd_5dim_slice+0x108>
   24f6e:	90                   	nop
   24f6f:	c9                   	leave  
   24f70:	c3                   	ret    

0000000000024f71 <rd_6dim>:
   24f71:	f3 0f 1e fa          	endbr64 
   24f75:	55                   	push   rbp
   24f76:	48 89 e5             	mov    rbp,rsp
   24f79:	48 83 ec 50          	sub    rsp,0x50
   24f7d:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
   24f81:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
   24f85:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
   24f89:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
   24f8d:	4c 89 45 b8          	mov    QWORD PTR [rbp-0x48],r8
   24f91:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   24f9a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   24f9e:	31 c0                	xor    eax,eax
   24fa0:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [rbp-0x20],0x0
   24fa7:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
   24fae:	c7 45 e8 00 00 00 00 	mov    DWORD PTR [rbp-0x18],0x0
   24fb5:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
   24fbc:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [rbp-0x10],0x0
   24fc3:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
   24fca:	4c 8d 45 e0          	lea    r8,[rbp-0x20]
   24fce:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
   24fd2:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
   24fd6:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
   24fda:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
   24fde:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   24fe2:	4d 89 c1             	mov    r9,r8
   24fe5:	49 89 f8             	mov    r8,rdi
   24fe8:	48 89 c7             	mov    rdi,rax
   24feb:	e8 17 00 00 00       	call   25007 <rd_6dim_slice>
   24ff0:	90                   	nop
   24ff1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   24ff5:	64 48 33 04 25 28 00 00 00 	xor    rax,QWORD PTR fs:0x28
   24ffe:	74 05                	je     25005 <rd_6dim+0x94>
   25000:	e8 5b e8 fd ff       	call   3860 <__stack_chk_fail@plt>
   25005:	c9                   	leave  
   25006:	c3                   	ret    

0000000000025007 <rd_6dim_slice>:
   25007:	f3 0f 1e fa          	endbr64 
   2500b:	55                   	push   rbp
   2500c:	48 89 e5             	mov    rbp,rsp
   2500f:	48 83 ec 40          	sub    rsp,0x40
   25013:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   25017:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
   2501b:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
   2501f:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
   25023:	4c 89 45 c8          	mov    QWORD PTR [rbp-0x38],r8
   25027:	4c 89 4d c0          	mov    QWORD PTR [rbp-0x40],r9
   2502b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   2502f:	8b 10                	mov    edx,DWORD PTR [rax]
   25031:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   25035:	48 83 c0 04          	add    rax,0x4
   25039:	8b 00                	mov    eax,DWORD PTR [rax]
   2503b:	01 c2                	add    edx,eax
   2503d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   25041:	48 83 c0 08          	add    rax,0x8
   25045:	8b 00                	mov    eax,DWORD PTR [rax]
   25047:	01 c2                	add    edx,eax
   25049:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   2504d:	48 83 c0 0c          	add    rax,0xc
   25051:	8b 00                	mov    eax,DWORD PTR [rax]
   25053:	01 c2                	add    edx,eax
   25055:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   25059:	48 83 c0 10          	add    rax,0x10
   2505d:	8b 00                	mov    eax,DWORD PTR [rax]
   2505f:	01 c2                	add    edx,eax
   25061:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   25065:	48 83 c0 14          	add    rax,0x14
   25069:	8b 00                	mov    eax,DWORD PTR [rax]
   2506b:	01 d0                	add    eax,edx
   2506d:	89 45 f8             	mov    DWORD PTR [rbp-0x8],eax
   25070:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   25074:	8b 10                	mov    edx,DWORD PTR [rax]
   25076:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   2507a:	48 83 c0 04          	add    rax,0x4
   2507e:	8b 00                	mov    eax,DWORD PTR [rax]
   25080:	01 c2                	add    edx,eax
   25082:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   25086:	48 83 c0 08          	add    rax,0x8
   2508a:	8b 00                	mov    eax,DWORD PTR [rax]
   2508c:	01 c2                	add    edx,eax
   2508e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   25092:	48 83 c0 0c          	add    rax,0xc
   25096:	8b 00                	mov    eax,DWORD PTR [rax]
   25098:	01 c2                	add    edx,eax
   2509a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   2509e:	48 83 c0 10          	add    rax,0x10
   250a2:	8b 00                	mov    eax,DWORD PTR [rax]
   250a4:	01 c2                	add    edx,eax
   250a6:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   250aa:	48 83 c0 14          	add    rax,0x14
   250ae:	8b 00                	mov    eax,DWORD PTR [rax]
   250b0:	01 d0                	add    eax,edx
   250b2:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
   250b5:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
   250b8:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   250bb:	01 d0                	add    eax,edx
   250bd:	85 c0                	test   eax,eax
   250bf:	75 68                	jne    25129 <rd_6dim_slice+0x122>
   250c1:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   250c5:	8b 10                	mov    edx,DWORD PTR [rax]
   250c7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   250cb:	48 83 c0 04          	add    rax,0x4
   250cf:	8b 00                	mov    eax,DWORD PTR [rax]
   250d1:	0f af d0             	imul   edx,eax
   250d4:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   250d8:	48 83 c0 08          	add    rax,0x8
   250dc:	8b 00                	mov    eax,DWORD PTR [rax]
   250de:	0f af d0             	imul   edx,eax
   250e1:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   250e5:	48 83 c0 0c          	add    rax,0xc
   250e9:	8b 00                	mov    eax,DWORD PTR [rax]
   250eb:	0f af d0             	imul   edx,eax
   250ee:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   250f2:	48 83 c0 10          	add    rax,0x10
   250f6:	8b 00                	mov    eax,DWORD PTR [rax]
   250f8:	0f af d0             	imul   edx,eax
   250fb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   250ff:	48 83 c0 14          	add    rax,0x14
   25103:	8b 00                	mov    eax,DWORD PTR [rax]
   25105:	89 d1                	mov    ecx,edx
   25107:	0f af c8             	imul   ecx,eax
   2510a:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
   2510e:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
   25112:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   25116:	41 b8 00 00 00 00    	mov    r8d,0x0
   2511c:	48 89 c7             	mov    rdi,rax
   2511f:	e8 22 f6 ff ff       	call   24746 <rd_1dim>
   25124:	e9 af 00 00 00       	jmp    251d8 <rd_6dim_slice+0x1d1>
   25129:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   2512d:	8b 00                	mov    eax,DWORD PTR [rax]
   2512f:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
   25132:	e9 87 00 00 00       	jmp    251be <rd_6dim_slice+0x1b7>
   25137:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   2513b:	4c 8d 40 04          	lea    r8,[rax+0x4]
   2513f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   25143:	48 8d 78 04          	lea    rdi,[rax+0x4]
   25147:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2514b:	48 8d 48 04          	lea    rcx,[rax+0x4]
   2514f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   25153:	48 83 c0 04          	add    rax,0x4
   25157:	8b 00                	mov    eax,DWORD PTR [rax]
   25159:	0f af 45 f4          	imul   eax,DWORD PTR [rbp-0xc]
   2515d:	89 c2                	mov    edx,eax
   2515f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   25163:	48 83 c0 08          	add    rax,0x8
   25167:	8b 00                	mov    eax,DWORD PTR [rax]
   25169:	0f af d0             	imul   edx,eax
   2516c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   25170:	48 83 c0 0c          	add    rax,0xc
   25174:	8b 00                	mov    eax,DWORD PTR [rax]
   25176:	0f af d0             	imul   edx,eax
   25179:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2517d:	48 83 c0 10          	add    rax,0x10
   25181:	8b 00                	mov    eax,DWORD PTR [rax]
   25183:	0f af d0             	imul   edx,eax
   25186:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2518a:	48 83 c0 14          	add    rax,0x14
   2518e:	8b 00                	mov    eax,DWORD PTR [rax]
   25190:	0f af c2             	imul   eax,edx
   25193:	48 98                	cdqe   
   25195:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2519d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   251a1:	48 01 c2             	add    rdx,rax
   251a4:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
   251a8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   251ac:	4d 89 c1             	mov    r9,r8
   251af:	49 89 f8             	mov    r8,rdi
   251b2:	48 89 c7             	mov    rdi,rax
   251b5:	e8 19 fc ff ff       	call   24dd3 <rd_5dim_slice>
   251ba:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
   251be:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   251c2:	8b 10                	mov    edx,DWORD PTR [rax]
   251c4:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   251c8:	8b 00                	mov    eax,DWORD PTR [rax]
   251ca:	29 c2                	sub    edx,eax
   251cc:	89 d0                	mov    eax,edx
   251ce:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
   251d1:	0f 8c 60 ff ff ff    	jl     25137 <rd_6dim_slice+0x130>
   251d7:	90                   	nop
   251d8:	c9                   	leave  
   251d9:	c3                   	ret    

00000000000251da <rd_Tetraloop37>:
   251da:	f3 0f 1e fa          	endbr64 
   251de:	55                   	push   rbp
   251df:	48 89 e5             	mov    rbp,rsp
   251e2:	48 83 ec 20          	sub    rsp,0x20
   251e6:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   251ea:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
   251ee:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [rbp-0x10],0x0
   251f5:	ba 19 01 00 00       	mov    edx,0x119
   251fa:	be 00 00 00 00       	mov    esi,0x0
   251ff:	48 8d 3d ba 6f 1c 00 	lea    rdi,[rip+0x1c6fba]        # 1ec1c0 <Tetraloops>
   25206:	e8 05 e5 fd ff       	call   3710 <memset@plt>
   2520b:	ba a0 00 00 00       	mov    edx,0xa0
   25210:	be 00 00 00 00       	mov    esi,0x0
   25215:	48 8d 3d c4 70 1c 00 	lea    rdi,[rip+0x1c70c4]        # 1ec2e0 <Tetraloop37>
   2521c:	e8 ef e4 fd ff       	call   3710 <memset@plt>
   25221:	ba a0 00 00 00       	mov    edx,0xa0
   25226:	be 00 00 00 00       	mov    esi,0x0
   2522b:	48 8d 3d 4e 71 1c 00 	lea    rdi,[rip+0x1c714e]        # 1ec380 <TetraloopdH>
   25232:	e8 d9 e4 fd ff       	call   3710 <memset@plt>
   25237:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2523b:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2523e:	48 8d 48 01          	lea    rcx,[rax+0x1]
   25242:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
   25246:	48 89 0a             	mov    QWORD PTR [rdx],rcx
   25249:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   25251:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   25255:	48 01 d0             	add    rax,rdx
   25258:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2525b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2525f:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
   25264:	0f 84 ae 00 00 00    	je     25318 <rd_Tetraloop37+0x13e>
   2526a:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
   2526d:	48 98                	cdqe   
   2526f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   25277:	48 8d 05 02 71 1c 00 	lea    rax,[rip+0x1c7102]        # 1ec380 <TetraloopdH>
   2527e:	48 8d 34 02          	lea    rsi,[rdx+rax*1]
   25282:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
   25285:	48 98                	cdqe   
   25287:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2528f:	48 8d 05 4a 70 1c 00 	lea    rax,[rip+0x1c704a]        # 1ec2e0 <Tetraloop37>
   25296:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
   2529a:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
   2529d:	89 d0                	mov    eax,edx
   2529f:	c1 e0 03             	shl    eax,0x3
   252a2:	29 d0                	sub    eax,edx
   252a4:	48 98                	cdqe   
   252a6:	48 8d 15 13 6f 1c 00 	lea    rdx,[rip+0x1c6f13]        # 1ec1c0 <Tetraloops>
   252ad:	48 01 c2             	add    rdx,rax
   252b0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   252b4:	49 89 f0             	mov    r8,rsi
   252b7:	48 8d 35 a0 dd 1b 00 	lea    rsi,[rip+0x1bdda0]        # 1e305e <parameter_set_rna_turner2004+0x5d53e>
   252be:	48 89 c7             	mov    rdi,rax
   252c1:	b8 00 00 00 00       	mov    eax,0x0
   252c6:	e8 35 e5 fd ff       	call   3800 <__isoc99_sscanf@plt>
   252cb:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
   252ce:	48 8d 05 eb 6e 1c 00 	lea    rax,[rip+0x1c6eeb]        # 1ec1c0 <Tetraloops>
   252d5:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
   252dc:	48 89 c2             	mov    rdx,rax
   252df:	b8 00 00 00 00       	mov    eax,0x0
   252e4:	48 89 d7             	mov    rdi,rdx
   252e7:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
   252e9:	48 89 c8             	mov    rax,rcx
   252ec:	48 f7 d0             	not    rax
   252ef:	48 8d 50 ff          	lea    rdx,[rax-0x1]
   252f3:	48 8d 05 c6 6e 1c 00 	lea    rax,[rip+0x1c6ec6]        # 1ec1c0 <Tetraloops>
   252fa:	48 01 d0             	add    rax,rdx
   252fd:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
   25302:	83 45 f0 01          	add    DWORD PTR [rbp-0x10],0x1
   25306:	83 7d f4 03          	cmp    DWORD PTR [rbp-0xc],0x3
   2530a:	75 0e                	jne    2531a <rd_Tetraloop37+0x140>
   2530c:	83 7d f0 27          	cmp    DWORD PTR [rbp-0x10],0x27
   25310:	0f 8e 21 ff ff ff    	jle    25237 <rd_Tetraloop37+0x5d>
   25316:	eb 01                	jmp    25319 <rd_Tetraloop37+0x13f>
   25318:	90                   	nop
   25319:	90                   	nop
   2531a:	90                   	nop
   2531b:	c9                   	leave  
   2531c:	c3                   	ret    

000000000002531d <rd_Hexaloop37>:
   2531d:	f3 0f 1e fa          	endbr64 
   25321:	55                   	push   rbp
   25322:	48 89 e5             	mov    rbp,rsp
   25325:	48 83 ec 20          	sub    rsp,0x20
   25329:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   2532d:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
   25331:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [rbp-0x10],0x0
   25338:	ba 69 01 00 00       	mov    edx,0x169
   2533d:	be 00 00 00 00       	mov    esi,0x0
   25342:	48 8d 3d d7 70 1c 00 	lea    rdi,[rip+0x1c70d7]        # 1ec420 <Hexaloops>
   25349:	e8 c2 e3 fd ff       	call   3710 <memset@plt>
   2534e:	ba a0 00 00 00       	mov    edx,0xa0
   25353:	be 00 00 00 00       	mov    esi,0x0
   25358:	48 8d 3d 41 72 1c 00 	lea    rdi,[rip+0x1c7241]        # 1ec5a0 <Hexaloop37>
   2535f:	e8 ac e3 fd ff       	call   3710 <memset@plt>
   25364:	ba a0 00 00 00       	mov    edx,0xa0
   25369:	be 00 00 00 00       	mov    esi,0x0
   2536e:	48 8d 3d cb 72 1c 00 	lea    rdi,[rip+0x1c72cb]        # 1ec640 <HexaloopdH>
   25375:	e8 96 e3 fd ff       	call   3710 <memset@plt>
   2537a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2537e:	48 8b 00             	mov    rax,QWORD PTR [rax]
   25381:	48 8d 48 01          	lea    rcx,[rax+0x1]
   25385:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
   25389:	48 89 0a             	mov    QWORD PTR [rdx],rcx
   2538c:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   25394:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   25398:	48 01 d0             	add    rax,rdx
   2539b:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2539e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   253a2:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
   253a7:	0f 84 ae 00 00 00    	je     2545b <rd_Hexaloop37+0x13e>
   253ad:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
   253b0:	48 98                	cdqe   
   253b2:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   253ba:	48 8d 05 7f 72 1c 00 	lea    rax,[rip+0x1c727f]        # 1ec640 <HexaloopdH>
   253c1:	48 8d 34 02          	lea    rsi,[rdx+rax*1]
   253c5:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
   253c8:	48 98                	cdqe   
   253ca:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   253d2:	48 8d 05 c7 71 1c 00 	lea    rax,[rip+0x1c71c7]        # 1ec5a0 <Hexaloop37>
   253d9:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
   253dd:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
   253e0:	89 d0                	mov    eax,edx
   253e2:	c1 e0 03             	shl    eax,0x3
   253e5:	01 d0                	add    eax,edx
   253e7:	48 98                	cdqe   
   253e9:	48 8d 15 30 70 1c 00 	lea    rdx,[rip+0x1c7030]        # 1ec420 <Hexaloops>
   253f0:	48 01 c2             	add    rdx,rax
   253f3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   253f7:	49 89 f0             	mov    r8,rsi
   253fa:	48 8d 35 67 dc 1b 00 	lea    rsi,[rip+0x1bdc67]        # 1e3068 <parameter_set_rna_turner2004+0x5d548>
   25401:	48 89 c7             	mov    rdi,rax
   25404:	b8 00 00 00 00       	mov    eax,0x0
   25409:	e8 f2 e3 fd ff       	call   3800 <__isoc99_sscanf@plt>
   2540e:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
   25411:	48 8d 05 08 70 1c 00 	lea    rax,[rip+0x1c7008]        # 1ec420 <Hexaloops>
   25418:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
   2541f:	48 89 c2             	mov    rdx,rax
   25422:	b8 00 00 00 00       	mov    eax,0x0
   25427:	48 89 d7             	mov    rdi,rdx
   2542a:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
   2542c:	48 89 c8             	mov    rax,rcx
   2542f:	48 f7 d0             	not    rax
   25432:	48 8d 50 ff          	lea    rdx,[rax-0x1]
   25436:	48 8d 05 e3 6f 1c 00 	lea    rax,[rip+0x1c6fe3]        # 1ec420 <Hexaloops>
   2543d:	48 01 d0             	add    rax,rdx
   25440:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
   25445:	83 45 f0 01          	add    DWORD PTR [rbp-0x10],0x1
   25449:	83 7d f4 03          	cmp    DWORD PTR [rbp-0xc],0x3
   2544d:	75 0e                	jne    2545d <rd_Hexaloop37+0x140>
   2544f:	83 7d f0 27          	cmp    DWORD PTR [rbp-0x10],0x27
   25453:	0f 8e 21 ff ff ff    	jle    2537a <rd_Hexaloop37+0x5d>
   25459:	eb 01                	jmp    2545c <rd_Hexaloop37+0x13f>
   2545b:	90                   	nop
   2545c:	90                   	nop
   2545d:	90                   	nop
   2545e:	c9                   	leave  
   2545f:	c3                   	ret    

0000000000025460 <rd_Triloop37>:
   25460:	f3 0f 1e fa          	endbr64 
   25464:	55                   	push   rbp
   25465:	48 89 e5             	mov    rbp,rsp
   25468:	48 83 ec 20          	sub    rsp,0x20
   2546c:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   25470:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
   25474:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [rbp-0x10],0x0
   2547b:	ba f1 00 00 00       	mov    edx,0xf1
   25480:	be 00 00 00 00       	mov    esi,0x0
   25485:	48 8d 3d f4 6a 1c 00 	lea    rdi,[rip+0x1c6af4]        # 1ebf80 <Triloops>
   2548c:	e8 7f e2 fd ff       	call   3710 <memset@plt>
   25491:	ba a0 00 00 00       	mov    edx,0xa0
   25496:	be 00 00 00 00       	mov    esi,0x0
   2549b:	48 8d 3d de 6b 1c 00 	lea    rdi,[rip+0x1c6bde]        # 1ec080 <Triloop37>
   254a2:	e8 69 e2 fd ff       	call   3710 <memset@plt>
   254a7:	ba a0 00 00 00       	mov    edx,0xa0
   254ac:	be 00 00 00 00       	mov    esi,0x0
   254b1:	48 8d 3d 68 6c 1c 00 	lea    rdi,[rip+0x1c6c68]        # 1ec120 <TriloopdH>
   254b8:	e8 53 e2 fd ff       	call   3710 <memset@plt>
   254bd:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   254c1:	48 8b 00             	mov    rax,QWORD PTR [rax]
   254c4:	48 8d 48 01          	lea    rcx,[rax+0x1]
   254c8:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
   254cc:	48 89 0a             	mov    QWORD PTR [rdx],rcx
   254cf:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   254d7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   254db:	48 01 d0             	add    rax,rdx
   254de:	48 8b 00             	mov    rax,QWORD PTR [rax]
   254e1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   254e5:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
   254ea:	0f 84 af 00 00 00    	je     2559f <rd_Triloop37+0x13f>
   254f0:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
   254f3:	48 98                	cdqe   
   254f5:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   254fd:	48 8d 05 1c 6c 1c 00 	lea    rax,[rip+0x1c6c1c]        # 1ec120 <TriloopdH>
   25504:	48 8d 34 02          	lea    rsi,[rdx+rax*1]
   25508:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
   2550b:	48 98                	cdqe   
   2550d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   25515:	48 8d 05 64 6b 1c 00 	lea    rax,[rip+0x1c6b64]        # 1ec080 <Triloop37>
   2551c:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
   25520:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
   25523:	89 d0                	mov    eax,edx
   25525:	01 c0                	add    eax,eax
   25527:	01 d0                	add    eax,edx
   25529:	01 c0                	add    eax,eax
   2552b:	48 98                	cdqe   
   2552d:	48 8d 15 4c 6a 1c 00 	lea    rdx,[rip+0x1c6a4c]        # 1ebf80 <Triloops>
   25534:	48 01 c2             	add    rdx,rax
   25537:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2553b:	49 89 f0             	mov    r8,rsi
   2553e:	48 8d 35 2d db 1b 00 	lea    rsi,[rip+0x1bdb2d]        # 1e3072 <parameter_set_rna_turner2004+0x5d552>
   25545:	48 89 c7             	mov    rdi,rax
   25548:	b8 00 00 00 00       	mov    eax,0x0
   2554d:	e8 ae e2 fd ff       	call   3800 <__isoc99_sscanf@plt>
   25552:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
   25555:	48 8d 05 24 6a 1c 00 	lea    rax,[rip+0x1c6a24]        # 1ebf80 <Triloops>
   2555c:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
   25563:	48 89 c2             	mov    rdx,rax
   25566:	b8 00 00 00 00       	mov    eax,0x0
   2556b:	48 89 d7             	mov    rdi,rdx
   2556e:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
   25570:	48 89 c8             	mov    rax,rcx
   25573:	48 f7 d0             	not    rax
   25576:	48 8d 50 ff          	lea    rdx,[rax-0x1]
   2557a:	48 8d 05 ff 69 1c 00 	lea    rax,[rip+0x1c69ff]        # 1ebf80 <Triloops>
   25581:	48 01 d0             	add    rax,rdx
   25584:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
   25589:	83 45 f0 01          	add    DWORD PTR [rbp-0x10],0x1
   2558d:	83 7d f4 03          	cmp    DWORD PTR [rbp-0xc],0x3
   25591:	75 0e                	jne    255a1 <rd_Triloop37+0x141>
   25593:	83 7d f0 27          	cmp    DWORD PTR [rbp-0x10],0x27
   25597:	0f 8e 20 ff ff ff    	jle    254bd <rd_Triloop37+0x5d>
   2559d:	eb 01                	jmp    255a0 <rd_Triloop37+0x140>
   2559f:	90                   	nop
   255a0:	90                   	nop
   255a1:	90                   	nop
   255a2:	c9                   	leave  
   255a3:	c3                   	ret    

00000000000255a4 <ignore_comment>:
   255a4:	f3 0f 1e fa          	endbr64 
   255a8:	55                   	push   rbp
   255a9:	48 89 e5             	mov    rbp,rsp
   255ac:	48 83 ec 20          	sub    rsp,0x20
   255b0:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   255b4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   255b8:	48 8d 35 bd da 1b 00 	lea    rsi,[rip+0x1bdabd]        # 1e307c <parameter_set_rna_turner2004+0x5d55c>
   255bf:	48 89 c7             	mov    rdi,rax
   255c2:	e8 39 e0 fd ff       	call   3600 <strstr@plt>
   255c7:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
   255cb:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
   255d0:	74 60                	je     25632 <ignore_comment+0x8e>
   255d2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   255d6:	48 8d 35 a2 da 1b 00 	lea    rsi,[rip+0x1bdaa2]        # 1e307f <parameter_set_rna_turner2004+0x5d55f>
   255dd:	48 89 c7             	mov    rdi,rax
   255e0:	e8 1b e0 fd ff       	call   3600 <strstr@plt>
   255e5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   255e9:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
   255ee:	75 11                	jne    25601 <ignore_comment+0x5d>
   255f0:	48 8d 3d 91 da 1b 00 	lea    rdi,[rip+0x1bda91]        # 1e3088 <parameter_set_rna_turner2004+0x5d568>
   255f7:	b8 00 00 00 00       	mov    eax,0x0
   255fc:	e8 e9 69 00 00       	call   2bfea <vrna_message_error>
   25601:	48 83 45 f8 02       	add    QWORD PTR [rbp-0x8],0x2
   25606:	eb 17                	jmp    2561f <ignore_comment+0x7b>
   25608:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2560c:	0f b6 10             	movzx  edx,BYTE PTR [rax]
   2560f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   25613:	88 10                	mov    BYTE PTR [rax],dl
   25615:	48 83 45 f8 01       	add    QWORD PTR [rbp-0x8],0x1
   2561a:	48 83 45 f0 01       	add    QWORD PTR [rbp-0x10],0x1
   2561f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   25623:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   25626:	84 c0                	test   al,al
   25628:	75 de                	jne    25608 <ignore_comment+0x64>
   2562a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   2562e:	c6 00 00             	mov    BYTE PTR [rax],0x0
   25631:	90                   	nop
   25632:	90                   	nop
   25633:	c9                   	leave  
   25634:	c3                   	ret    

0000000000025635 <check_symmetry>:
   25635:	f3 0f 1e fa          	endbr64 
   25639:	55                   	push   rbp
   2563a:	48 89 e5             	mov    rbp,rsp
   2563d:	48 83 ec 20          	sub    rsp,0x20
   25641:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [rbp-0x20],0x0
   25648:	eb 74                	jmp    256be <check_symmetry+0x89>
   2564a:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
   25651:	eb 61                	jmp    256b4 <check_symmetry+0x7f>
   25653:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   25656:	48 98                	cdqe   
   25658:	8b 55 e0             	mov    edx,DWORD PTR [rbp-0x20]
   2565b:	48 63 d2             	movsxd rdx,edx
   2565e:	48 c1 e2 03          	shl    rdx,0x3
   25662:	48 01 d0             	add    rax,rdx
   25665:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2566d:	48 8d 05 0c 3c 1c 00 	lea    rax,[rip+0x1c3c0c]        # 1e9280 <stack37>
   25674:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   25677:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   2567a:	48 98                	cdqe   
   2567c:	8b 4d e4             	mov    ecx,DWORD PTR [rbp-0x1c]
   2567f:	48 63 c9             	movsxd rcx,ecx
   25682:	48 c1 e1 03          	shl    rcx,0x3
   25686:	48 01 c8             	add    rax,rcx
   25689:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   25691:	48 8d 05 e8 3b 1c 00 	lea    rax,[rip+0x1c3be8]        # 1e9280 <stack37>
   25698:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   2569b:	39 c2                	cmp    edx,eax
   2569d:	74 11                	je     256b0 <check_symmetry+0x7b>
   2569f:	48 8d 3d 0a da 1b 00 	lea    rdi,[rip+0x1bda0a]        # 1e30b0 <parameter_set_rna_turner2004+0x5d590>
   256a6:	b8 00 00 00 00       	mov    eax,0x0
   256ab:	e8 eb 6a 00 00       	call   2c19b <vrna_message_warning>
   256b0:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
   256b4:	83 7d e4 07          	cmp    DWORD PTR [rbp-0x1c],0x7
   256b8:	7e 99                	jle    25653 <check_symmetry+0x1e>
   256ba:	83 45 e0 01          	add    DWORD PTR [rbp-0x20],0x1
   256be:	83 7d e0 07          	cmp    DWORD PTR [rbp-0x20],0x7
   256c2:	7e 86                	jle    2564a <check_symmetry+0x15>
   256c4:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [rbp-0x20],0x0
   256cb:	eb 74                	jmp    25741 <check_symmetry+0x10c>
   256cd:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
   256d4:	eb 61                	jmp    25737 <check_symmetry+0x102>
   256d6:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   256d9:	48 98                	cdqe   
   256db:	8b 55 e0             	mov    edx,DWORD PTR [rbp-0x20]
   256de:	48 63 d2             	movsxd rdx,edx
   256e1:	48 c1 e2 03          	shl    rdx,0x3
   256e5:	48 01 d0             	add    rax,rdx
   256e8:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   256f0:	48 8d 05 89 3c 1c 00 	lea    rax,[rip+0x1c3c89]        # 1e9380 <stackdH>
   256f7:	8b 14 02             	mov    edx,DWORD PTR [rdx+rax*1]
   256fa:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   256fd:	48 98                	cdqe   
   256ff:	8b 4d e4             	mov    ecx,DWORD PTR [rbp-0x1c]
   25702:	48 63 c9             	movsxd rcx,ecx
   25705:	48 c1 e1 03          	shl    rcx,0x3
   25709:	48 01 c8             	add    rax,rcx
   2570c:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   25714:	48 8d 05 65 3c 1c 00 	lea    rax,[rip+0x1c3c65]        # 1e9380 <stackdH>
   2571b:	8b 04 01             	mov    eax,DWORD PTR [rcx+rax*1]
   2571e:	39 c2                	cmp    edx,eax
   25720:	74 11                	je     25733 <check_symmetry+0xfe>
   25722:	48 8d 3d a7 d9 1b 00 	lea    rdi,[rip+0x1bd9a7]        # 1e30d0 <parameter_set_rna_turner2004+0x5d5b0>
   25729:	b8 00 00 00 00       	mov    eax,0x0
   2572e:	e8 68 6a 00 00       	call   2c19b <vrna_message_warning>
   25733:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
   25737:	83 7d e4 07          	cmp    DWORD PTR [rbp-0x1c],0x7
   2573b:	7e 99                	jle    256d6 <check_symmetry+0xa1>
   2573d:	83 45 e0 01          	add    DWORD PTR [rbp-0x20],0x1
   25741:	83 7d e0 07          	cmp    DWORD PTR [rbp-0x20],0x7
   25745:	7e 86                	jle    256cd <check_symmetry+0x98>
   25747:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [rbp-0x20],0x0
   2574e:	e9 31 02 00 00       	jmp    25984 <check_symmetry+0x34f>
   25753:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
   2575a:	e9 17 02 00 00       	jmp    25976 <check_symmetry+0x341>
   2575f:	c7 45 e8 00 00 00 00 	mov    DWORD PTR [rbp-0x18],0x0
   25766:	e9 fd 01 00 00       	jmp    25968 <check_symmetry+0x333>
   2576b:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
   25772:	e9 e3 01 00 00       	jmp    2595a <check_symmetry+0x325>
   25777:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2577a:	48 63 f8             	movsxd rdi,eax
   2577d:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   25780:	48 98                	cdqe   
   25782:	8b 55 e8             	mov    edx,DWORD PTR [rbp-0x18]
   25785:	48 63 ca             	movsxd rcx,edx
   25788:	8b 55 e0             	mov    edx,DWORD PTR [rbp-0x20]
   2578b:	48 63 f2             	movsxd rsi,edx
   2578e:	48 89 c2             	mov    rdx,rax
   25791:	48 c1 e2 02          	shl    rdx,0x2
   25795:	48 01 c2             	add    rdx,rax
   25798:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   257a0:	48 01 c2             	add    rdx,rax
   257a3:	48 89 f0             	mov    rax,rsi
   257a6:	48 c1 e0 02          	shl    rax,0x2
   257aa:	48 01 f0             	add    rax,rsi
   257ad:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   257b5:	48 01 f0             	add    rax,rsi
   257b8:	48 c1 e0 03          	shl    rax,0x3
   257bc:	48 01 c2             	add    rdx,rax
   257bf:	48 89 c8             	mov    rax,rcx
   257c2:	48 c1 e0 02          	shl    rax,0x2
   257c6:	48 01 c8             	add    rax,rcx
   257c9:	48 01 d0             	add    rax,rdx
   257cc:	48 01 f8             	add    rax,rdi
   257cf:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   257d7:	48 8d 05 02 6f 1c 00 	lea    rax,[rip+0x1c6f02]        # 1ec6e0 <int11_37>
   257de:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
   257e1:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   257e4:	4c 63 c0             	movsxd r8,eax
   257e7:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   257ea:	48 98                	cdqe   
   257ec:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
   257ef:	48 63 ca             	movsxd rcx,edx
   257f2:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
   257f5:	48 63 f2             	movsxd rsi,edx
   257f8:	48 89 c2             	mov    rdx,rax
   257fb:	48 c1 e2 02          	shl    rdx,0x2
   257ff:	48 01 c2             	add    rdx,rax
   25802:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   2580a:	48 01 c2             	add    rdx,rax
   2580d:	48 89 f0             	mov    rax,rsi
   25810:	48 c1 e0 02          	shl    rax,0x2
   25814:	48 01 f0             	add    rax,rsi
   25817:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   2581f:	48 01 f0             	add    rax,rsi
   25822:	48 c1 e0 03          	shl    rax,0x3
   25826:	48 01 c2             	add    rdx,rax
   25829:	48 89 c8             	mov    rax,rcx
   2582c:	48 c1 e0 02          	shl    rax,0x2
   25830:	48 01 c8             	add    rax,rcx
   25833:	48 01 d0             	add    rax,rdx
   25836:	4c 01 c0             	add    rax,r8
   25839:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   25841:	48 8d 05 98 6e 1c 00 	lea    rax,[rip+0x1c6e98]        # 1ec6e0 <int11_37>
   25848:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   2584b:	39 c7                	cmp    edi,eax
   2584d:	0f 84 03 01 00 00    	je     25956 <check_symmetry+0x321>
   25853:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   25856:	48 63 f8             	movsxd rdi,eax
   25859:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   2585c:	48 98                	cdqe   
   2585e:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
   25861:	48 63 ca             	movsxd rcx,edx
   25864:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
   25867:	48 63 f2             	movsxd rsi,edx
   2586a:	48 89 c2             	mov    rdx,rax
   2586d:	48 c1 e2 02          	shl    rdx,0x2
   25871:	48 01 c2             	add    rdx,rax
   25874:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   2587c:	48 01 c2             	add    rdx,rax
   2587f:	48 89 f0             	mov    rax,rsi
   25882:	48 c1 e0 02          	shl    rax,0x2
   25886:	48 01 f0             	add    rax,rsi
   25889:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   25891:	48 01 f0             	add    rax,rsi
   25894:	48 c1 e0 03          	shl    rax,0x3
   25898:	48 01 c2             	add    rdx,rax
   2589b:	48 89 c8             	mov    rax,rcx
   2589e:	48 c1 e0 02          	shl    rax,0x2
   258a2:	48 01 c8             	add    rax,rcx
   258a5:	48 01 d0             	add    rax,rdx
   258a8:	48 01 f8             	add    rax,rdi
   258ab:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   258b3:	48 8d 05 26 6e 1c 00 	lea    rax,[rip+0x1c6e26]        # 1ec6e0 <int11_37>
   258ba:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
   258bd:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   258c0:	4c 63 c0             	movsxd r8,eax
   258c3:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   258c6:	48 98                	cdqe   
   258c8:	8b 55 e8             	mov    edx,DWORD PTR [rbp-0x18]
   258cb:	48 63 ca             	movsxd rcx,edx
   258ce:	8b 55 e0             	mov    edx,DWORD PTR [rbp-0x20]
   258d1:	48 63 f2             	movsxd rsi,edx
   258d4:	48 89 c2             	mov    rdx,rax
   258d7:	48 c1 e2 02          	shl    rdx,0x2
   258db:	48 01 c2             	add    rdx,rax
   258de:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   258e6:	48 01 c2             	add    rdx,rax
   258e9:	48 89 f0             	mov    rax,rsi
   258ec:	48 c1 e0 02          	shl    rax,0x2
   258f0:	48 01 f0             	add    rax,rsi
   258f3:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   258fb:	48 01 f0             	add    rax,rsi
   258fe:	48 c1 e0 03          	shl    rax,0x3
   25902:	48 01 c2             	add    rdx,rax
   25905:	48 89 c8             	mov    rax,rcx
   25908:	48 c1 e0 02          	shl    rax,0x2
   2590c:	48 01 c8             	add    rax,rcx
   2590f:	48 01 d0             	add    rax,rdx
   25912:	4c 01 c0             	add    rax,r8
   25915:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2591d:	48 8d 05 bc 6d 1c 00 	lea    rax,[rip+0x1c6dbc]        # 1ec6e0 <int11_37>
   25924:	44 8b 04 02          	mov    r8d,DWORD PTR [rdx+rax*1]
   25928:	8b 75 ec             	mov    esi,DWORD PTR [rbp-0x14]
   2592b:	8b 4d e8             	mov    ecx,DWORD PTR [rbp-0x18]
   2592e:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
   25931:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   25934:	48 83 ec 08          	sub    rsp,0x8
   25938:	57                   	push   rdi
   25939:	45 89 c1             	mov    r9d,r8d
   2593c:	41 89 f0             	mov    r8d,esi
   2593f:	89 c6                	mov    esi,eax
   25941:	48 8d 3d b0 d7 1b 00 	lea    rdi,[rip+0x1bd7b0]        # 1e30f8 <parameter_set_rna_turner2004+0x5d5d8>
   25948:	b8 00 00 00 00       	mov    eax,0x0
   2594d:	e8 49 68 00 00       	call   2c19b <vrna_message_warning>
   25952:	48 83 c4 10          	add    rsp,0x10
   25956:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
   2595a:	83 7d ec 04          	cmp    DWORD PTR [rbp-0x14],0x4
   2595e:	0f 8e 13 fe ff ff    	jle    25777 <check_symmetry+0x142>
   25964:	83 45 e8 01          	add    DWORD PTR [rbp-0x18],0x1
   25968:	83 7d e8 04          	cmp    DWORD PTR [rbp-0x18],0x4
   2596c:	0f 8e f9 fd ff ff    	jle    2576b <check_symmetry+0x136>
   25972:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
   25976:	83 7d e4 07          	cmp    DWORD PTR [rbp-0x1c],0x7
   2597a:	0f 8e df fd ff ff    	jle    2575f <check_symmetry+0x12a>
   25980:	83 45 e0 01          	add    DWORD PTR [rbp-0x20],0x1
   25984:	83 7d e0 07          	cmp    DWORD PTR [rbp-0x20],0x7
   25988:	0f 8e c5 fd ff ff    	jle    25753 <check_symmetry+0x11e>
   2598e:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [rbp-0x20],0x0
   25995:	e9 3b 01 00 00       	jmp    25ad5 <check_symmetry+0x4a0>
   2599a:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
   259a1:	e9 21 01 00 00       	jmp    25ac7 <check_symmetry+0x492>
   259a6:	c7 45 e8 00 00 00 00 	mov    DWORD PTR [rbp-0x18],0x0
   259ad:	e9 07 01 00 00       	jmp    25ab9 <check_symmetry+0x484>
   259b2:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
   259b9:	e9 ed 00 00 00       	jmp    25aab <check_symmetry+0x476>
   259be:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   259c1:	48 63 f8             	movsxd rdi,eax
   259c4:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   259c7:	48 98                	cdqe   
   259c9:	8b 55 e8             	mov    edx,DWORD PTR [rbp-0x18]
   259cc:	48 63 ca             	movsxd rcx,edx
   259cf:	8b 55 e0             	mov    edx,DWORD PTR [rbp-0x20]
   259d2:	48 63 f2             	movsxd rsi,edx
   259d5:	48 89 c2             	mov    rdx,rax
   259d8:	48 c1 e2 02          	shl    rdx,0x2
   259dc:	48 01 c2             	add    rdx,rax
   259df:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   259e7:	48 01 c2             	add    rdx,rax
   259ea:	48 89 f0             	mov    rax,rsi
   259ed:	48 c1 e0 02          	shl    rax,0x2
   259f1:	48 01 f0             	add    rax,rsi
   259f4:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   259fc:	48 01 f0             	add    rax,rsi
   259ff:	48 c1 e0 03          	shl    rax,0x3
   25a03:	48 01 c2             	add    rdx,rax
   25a06:	48 89 c8             	mov    rax,rcx
   25a09:	48 c1 e0 02          	shl    rax,0x2
   25a0d:	48 01 c8             	add    rax,rcx
   25a10:	48 01 d0             	add    rax,rdx
   25a13:	48 01 f8             	add    rax,rdi
   25a16:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   25a1e:	48 8d 05 bb 85 1c 00 	lea    rax,[rip+0x1c85bb]        # 1edfe0 <int11_dH>
   25a25:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
   25a28:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   25a2b:	4c 63 c0             	movsxd r8,eax
   25a2e:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   25a31:	48 98                	cdqe   
   25a33:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
   25a36:	48 63 ca             	movsxd rcx,edx
   25a39:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
   25a3c:	48 63 f2             	movsxd rsi,edx
   25a3f:	48 89 c2             	mov    rdx,rax
   25a42:	48 c1 e2 02          	shl    rdx,0x2
   25a46:	48 01 c2             	add    rdx,rax
   25a49:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   25a51:	48 01 c2             	add    rdx,rax
   25a54:	48 89 f0             	mov    rax,rsi
   25a57:	48 c1 e0 02          	shl    rax,0x2
   25a5b:	48 01 f0             	add    rax,rsi
   25a5e:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   25a66:	48 01 f0             	add    rax,rsi
   25a69:	48 c1 e0 03          	shl    rax,0x3
   25a6d:	48 01 c2             	add    rdx,rax
   25a70:	48 89 c8             	mov    rax,rcx
   25a73:	48 c1 e0 02          	shl    rax,0x2
   25a77:	48 01 c8             	add    rax,rcx
   25a7a:	48 01 d0             	add    rax,rdx
   25a7d:	4c 01 c0             	add    rax,r8
   25a80:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   25a88:	48 8d 05 51 85 1c 00 	lea    rax,[rip+0x1c8551]        # 1edfe0 <int11_dH>
   25a8f:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   25a92:	39 c7                	cmp    edi,eax
   25a94:	74 11                	je     25aa7 <check_symmetry+0x472>
   25a96:	48 8d 3d 93 d6 1b 00 	lea    rdi,[rip+0x1bd693]        # 1e3130 <parameter_set_rna_turner2004+0x5d610>
   25a9d:	b8 00 00 00 00       	mov    eax,0x0
   25aa2:	e8 f4 66 00 00       	call   2c19b <vrna_message_warning>
   25aa7:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
   25aab:	83 7d ec 04          	cmp    DWORD PTR [rbp-0x14],0x4
   25aaf:	0f 8e 09 ff ff ff    	jle    259be <check_symmetry+0x389>
   25ab5:	83 45 e8 01          	add    DWORD PTR [rbp-0x18],0x1
   25ab9:	83 7d e8 04          	cmp    DWORD PTR [rbp-0x18],0x4
   25abd:	0f 8e ef fe ff ff    	jle    259b2 <check_symmetry+0x37d>
   25ac3:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
   25ac7:	83 7d e4 07          	cmp    DWORD PTR [rbp-0x1c],0x7
   25acb:	0f 8e d5 fe ff ff    	jle    259a6 <check_symmetry+0x371>
   25ad1:	83 45 e0 01          	add    DWORD PTR [rbp-0x20],0x1
   25ad5:	83 7d e0 07          	cmp    DWORD PTR [rbp-0x20],0x7
   25ad9:	0f 8e bb fe ff ff    	jle    2599a <check_symmetry+0x365>
   25adf:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [rbp-0x20],0x0
   25ae6:	e9 a5 01 00 00       	jmp    25c90 <check_symmetry+0x65b>
   25aeb:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
   25af2:	e9 8b 01 00 00       	jmp    25c82 <check_symmetry+0x64d>
   25af7:	c7 45 e8 00 00 00 00 	mov    DWORD PTR [rbp-0x18],0x0
   25afe:	e9 71 01 00 00       	jmp    25c74 <check_symmetry+0x63f>
   25b03:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
   25b0a:	e9 57 01 00 00       	jmp    25c66 <check_symmetry+0x631>
   25b0f:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [rbp-0x10],0x0
   25b16:	e9 3d 01 00 00       	jmp    25c58 <check_symmetry+0x623>
   25b1b:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
   25b22:	e9 23 01 00 00       	jmp    25c4a <check_symmetry+0x615>
   25b27:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   25b2a:	48 63 f8             	movsxd rdi,eax
   25b2d:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   25b30:	48 63 f0             	movsxd rsi,eax
   25b33:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
   25b36:	48 63 c8             	movsxd rcx,eax
   25b39:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   25b3c:	4c 63 c0             	movsxd r8,eax
   25b3f:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   25b42:	48 63 d0             	movsxd rdx,eax
   25b45:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   25b48:	4c 63 c8             	movsxd r9,eax
   25b4b:	48 89 f0             	mov    rax,rsi
   25b4e:	48 c1 e0 02          	shl    rax,0x2
   25b52:	48 01 f0             	add    rax,rsi
   25b55:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   25b5d:	48 01 f0             	add    rax,rsi
   25b60:	49 69 f1 88 13 00 00 	imul   rsi,r9,0x1388
   25b67:	48 01 c6             	add    rsi,rax
   25b6a:	48 89 c8             	mov    rax,rcx
   25b6d:	48 c1 e0 02          	shl    rax,0x2
   25b71:	48 01 c8             	add    rax,rcx
   25b74:	48 8d 0c 06          	lea    rcx,[rsi+rax*1]
   25b78:	48 89 d0             	mov    rax,rdx
   25b7b:	48 c1 e0 05          	shl    rax,0x5
   25b7f:	48 29 d0             	sub    rax,rdx
   25b82:	48 c1 e0 02          	shl    rax,0x2
   25b86:	48 01 d0             	add    rax,rdx
   25b89:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   25b8d:	49 69 c0 71 02 00 00 	imul   rax,r8,0x271
   25b94:	48 01 d0             	add    rax,rdx
   25b97:	48 01 f8             	add    rax,rdi
   25b9a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   25ba2:	48 8d 05 37 97 1d 00 	lea    rax,[rip+0x1d9737]        # 1ff2e0 <int22_37>
   25ba9:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
   25bac:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   25baf:	4c 63 c0             	movsxd r8,eax
   25bb2:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   25bb5:	48 63 f0             	movsxd rsi,eax
   25bb8:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   25bbb:	48 63 c8             	movsxd rcx,eax
   25bbe:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   25bc1:	4c 63 c8             	movsxd r9,eax
   25bc4:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
   25bc7:	48 63 d0             	movsxd rdx,eax
   25bca:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   25bcd:	4c 63 d0             	movsxd r10,eax
   25bd0:	48 89 f0             	mov    rax,rsi
   25bd3:	48 c1 e0 02          	shl    rax,0x2
   25bd7:	48 01 f0             	add    rax,rsi
   25bda:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   25be2:	48 01 f0             	add    rax,rsi
   25be5:	49 69 f2 88 13 00 00 	imul   rsi,r10,0x1388
   25bec:	48 01 c6             	add    rsi,rax
   25bef:	48 89 c8             	mov    rax,rcx
   25bf2:	48 c1 e0 02          	shl    rax,0x2
   25bf6:	48 01 c8             	add    rax,rcx
   25bf9:	48 8d 0c 06          	lea    rcx,[rsi+rax*1]
   25bfd:	48 89 d0             	mov    rax,rdx
   25c00:	48 c1 e0 05          	shl    rax,0x5
   25c04:	48 29 d0             	sub    rax,rdx
   25c07:	48 c1 e0 02          	shl    rax,0x2
   25c0b:	48 01 d0             	add    rax,rdx
   25c0e:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   25c12:	49 69 c1 71 02 00 00 	imul   rax,r9,0x271
   25c19:	48 01 d0             	add    rax,rdx
   25c1c:	4c 01 c0             	add    rax,r8
   25c1f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   25c27:	48 8d 05 b2 96 1d 00 	lea    rax,[rip+0x1d96b2]        # 1ff2e0 <int22_37>
   25c2e:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   25c31:	39 c7                	cmp    edi,eax
   25c33:	74 11                	je     25c46 <check_symmetry+0x611>
   25c35:	48 8d 3d 13 d5 1b 00 	lea    rdi,[rip+0x1bd513]        # 1e314f <parameter_set_rna_turner2004+0x5d62f>
   25c3c:	b8 00 00 00 00       	mov    eax,0x0
   25c41:	e8 55 65 00 00       	call   2c19b <vrna_message_warning>
   25c46:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
   25c4a:	83 7d f4 04          	cmp    DWORD PTR [rbp-0xc],0x4
   25c4e:	0f 8e d3 fe ff ff    	jle    25b27 <check_symmetry+0x4f2>
   25c54:	83 45 f0 01          	add    DWORD PTR [rbp-0x10],0x1
   25c58:	83 7d f0 04          	cmp    DWORD PTR [rbp-0x10],0x4
   25c5c:	0f 8e b9 fe ff ff    	jle    25b1b <check_symmetry+0x4e6>
   25c62:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
   25c66:	83 7d ec 04          	cmp    DWORD PTR [rbp-0x14],0x4
   25c6a:	0f 8e 9f fe ff ff    	jle    25b0f <check_symmetry+0x4da>
   25c70:	83 45 e8 01          	add    DWORD PTR [rbp-0x18],0x1
   25c74:	83 7d e8 04          	cmp    DWORD PTR [rbp-0x18],0x4
   25c78:	0f 8e 85 fe ff ff    	jle    25b03 <check_symmetry+0x4ce>
   25c7e:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
   25c82:	83 7d e4 07          	cmp    DWORD PTR [rbp-0x1c],0x7
   25c86:	0f 8e 6b fe ff ff    	jle    25af7 <check_symmetry+0x4c2>
   25c8c:	83 45 e0 01          	add    DWORD PTR [rbp-0x20],0x1
   25c90:	83 7d e0 07          	cmp    DWORD PTR [rbp-0x20],0x7
   25c94:	0f 8e 51 fe ff ff    	jle    25aeb <check_symmetry+0x4b6>
   25c9a:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [rbp-0x20],0x0
   25ca1:	e9 c9 01 00 00       	jmp    25e6f <check_symmetry+0x83a>
   25ca6:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
   25cad:	e9 af 01 00 00       	jmp    25e61 <check_symmetry+0x82c>
   25cb2:	c7 45 e8 00 00 00 00 	mov    DWORD PTR [rbp-0x18],0x0
   25cb9:	e9 95 01 00 00       	jmp    25e53 <check_symmetry+0x81e>
   25cbe:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
   25cc5:	e9 7b 01 00 00       	jmp    25e45 <check_symmetry+0x810>
   25cca:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [rbp-0x8],0x0
   25cd1:	e9 61 01 00 00       	jmp    25e37 <check_symmetry+0x802>
   25cd6:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
   25cdd:	e9 47 01 00 00       	jmp    25e29 <check_symmetry+0x7f4>
   25ce2:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   25ce5:	48 63 f8             	movsxd rdi,eax
   25ce8:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   25ceb:	48 63 f0             	movsxd rsi,eax
   25cee:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   25cf1:	48 63 c8             	movsxd rcx,eax
   25cf4:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   25cf7:	4c 63 c0             	movsxd r8,eax
   25cfa:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   25cfd:	48 63 d0             	movsxd rdx,eax
   25d00:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   25d03:	4c 63 c8             	movsxd r9,eax
   25d06:	48 89 f0             	mov    rax,rsi
   25d09:	48 c1 e0 02          	shl    rax,0x2
   25d0d:	48 01 f0             	add    rax,rsi
   25d10:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   25d18:	48 01 f0             	add    rax,rsi
   25d1b:	49 69 f1 88 13 00 00 	imul   rsi,r9,0x1388
   25d22:	48 01 c6             	add    rsi,rax
   25d25:	48 89 c8             	mov    rax,rcx
   25d28:	48 c1 e0 02          	shl    rax,0x2
   25d2c:	48 01 c8             	add    rax,rcx
   25d2f:	48 8d 0c 06          	lea    rcx,[rsi+rax*1]
   25d33:	48 89 d0             	mov    rax,rdx
   25d36:	48 c1 e0 05          	shl    rax,0x5
   25d3a:	48 29 d0             	sub    rax,rdx
   25d3d:	48 c1 e0 02          	shl    rax,0x2
   25d41:	48 01 d0             	add    rax,rdx
   25d44:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   25d48:	49 69 c0 71 02 00 00 	imul   rax,r8,0x271
   25d4f:	48 01 d0             	add    rax,rdx
   25d52:	48 01 f8             	add    rax,rdi
   25d55:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   25d5d:	48 8d 05 7c 06 20 00 	lea    rax,[rip+0x20067c]        # 2263e0 <int22_dH>
   25d64:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
   25d67:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   25d6a:	4c 63 c0             	movsxd r8,eax
   25d6d:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   25d70:	48 63 f0             	movsxd rsi,eax
   25d73:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   25d76:	48 63 c8             	movsxd rcx,eax
   25d79:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   25d7c:	4c 63 c8             	movsxd r9,eax
   25d7f:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   25d82:	48 63 d0             	movsxd rdx,eax
   25d85:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   25d88:	4c 63 d0             	movsxd r10,eax
   25d8b:	48 89 f0             	mov    rax,rsi
   25d8e:	48 c1 e0 02          	shl    rax,0x2
   25d92:	48 01 f0             	add    rax,rsi
   25d95:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   25d9d:	48 01 f0             	add    rax,rsi
   25da0:	49 69 f2 88 13 00 00 	imul   rsi,r10,0x1388
   25da7:	48 01 c6             	add    rsi,rax
   25daa:	48 89 c8             	mov    rax,rcx
   25dad:	48 c1 e0 02          	shl    rax,0x2
   25db1:	48 01 c8             	add    rax,rcx
   25db4:	48 8d 0c 06          	lea    rcx,[rsi+rax*1]
   25db8:	48 89 d0             	mov    rax,rdx
   25dbb:	48 c1 e0 05          	shl    rax,0x5
   25dbf:	48 29 d0             	sub    rax,rdx
   25dc2:	48 c1 e0 02          	shl    rax,0x2
   25dc6:	48 01 d0             	add    rax,rdx
   25dc9:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   25dcd:	49 69 c1 71 02 00 00 	imul   rax,r9,0x271
   25dd4:	48 01 d0             	add    rax,rdx
   25dd7:	4c 01 c0             	add    rax,r8
   25dda:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   25de2:	48 8d 05 f7 05 20 00 	lea    rax,[rip+0x2005f7]        # 2263e0 <int22_dH>
   25de9:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   25dec:	39 c7                	cmp    edi,eax
   25dee:	74 35                	je     25e25 <check_symmetry+0x7f0>
   25df0:	44 8b 45 f8          	mov    r8d,DWORD PTR [rbp-0x8]
   25df4:	8b 7d ec             	mov    edi,DWORD PTR [rbp-0x14]
   25df7:	8b 4d e8             	mov    ecx,DWORD PTR [rbp-0x18]
   25dfa:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
   25dfd:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   25e00:	48 83 ec 08          	sub    rsp,0x8
   25e04:	8b 75 fc             	mov    esi,DWORD PTR [rbp-0x4]
   25e07:	56                   	push   rsi
   25e08:	45 89 c1             	mov    r9d,r8d
   25e0b:	41 89 f8             	mov    r8d,edi
   25e0e:	89 c6                	mov    esi,eax
   25e10:	48 8d 3d 59 d3 1b 00 	lea    rdi,[rip+0x1bd359]        # 1e3170 <parameter_set_rna_turner2004+0x5d650>
   25e17:	b8 00 00 00 00       	mov    eax,0x0
   25e1c:	e8 7a 63 00 00       	call   2c19b <vrna_message_warning>
   25e21:	48 83 c4 10          	add    rsp,0x10
   25e25:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
   25e29:	83 7d fc 04          	cmp    DWORD PTR [rbp-0x4],0x4
   25e2d:	0f 8e af fe ff ff    	jle    25ce2 <check_symmetry+0x6ad>
   25e33:	83 45 f8 01          	add    DWORD PTR [rbp-0x8],0x1
   25e37:	83 7d f8 04          	cmp    DWORD PTR [rbp-0x8],0x4
   25e3b:	0f 8e 95 fe ff ff    	jle    25cd6 <check_symmetry+0x6a1>
   25e41:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
   25e45:	83 7d ec 04          	cmp    DWORD PTR [rbp-0x14],0x4
   25e49:	0f 8e 7b fe ff ff    	jle    25cca <check_symmetry+0x695>
   25e4f:	83 45 e8 01          	add    DWORD PTR [rbp-0x18],0x1
   25e53:	83 7d e8 04          	cmp    DWORD PTR [rbp-0x18],0x4
   25e57:	0f 8e 61 fe ff ff    	jle    25cbe <check_symmetry+0x689>
   25e5d:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
   25e61:	83 7d e4 07          	cmp    DWORD PTR [rbp-0x1c],0x7
   25e65:	0f 8e 47 fe ff ff    	jle    25cb2 <check_symmetry+0x67d>
   25e6b:	83 45 e0 01          	add    DWORD PTR [rbp-0x20],0x1
   25e6f:	83 7d e0 07          	cmp    DWORD PTR [rbp-0x20],0x7
   25e73:	0f 8e 2d fe ff ff    	jle    25ca6 <check_symmetry+0x671>
   25e79:	90                   	nop
   25e7a:	90                   	nop
   25e7b:	c9                   	leave  
   25e7c:	c3                   	ret    

0000000000025e7d <update_nst>:
   25e7d:	f3 0f 1e fa          	endbr64 
   25e81:	55                   	push   rbp
   25e82:	48 89 e5             	mov    rbp,rsp
   25e85:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
   25e89:	c7 45 d0 01 00 00 00 	mov    DWORD PTR [rbp-0x30],0x1
   25e90:	e9 49 04 00 00       	jmp    262de <update_nst+0x461>
   25e95:	c7 45 d4 01 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x1
   25e9c:	e9 2f 04 00 00       	jmp    262d0 <update_nst+0x453>
   25ea1:	c7 45 d8 01 00 00 00 	mov    DWORD PTR [rbp-0x28],0x1
   25ea8:	e9 15 04 00 00       	jmp    262c2 <update_nst+0x445>
   25ead:	c7 45 dc 01 00 00 00 	mov    DWORD PTR [rbp-0x24],0x1
   25eb4:	e9 fb 03 00 00       	jmp    262b4 <update_nst+0x437>
   25eb9:	c7 45 e0 01 00 00 00 	mov    DWORD PTR [rbp-0x20],0x1
   25ec0:	e9 e1 03 00 00       	jmp    262a6 <update_nst+0x429>
   25ec5:	c7 45 f4 80 69 67 ff 	mov    DWORD PTR [rbp-0xc],0xff676980
   25ecc:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   25ecf:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
   25ed2:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
   25ed5:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
   25ed8:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   25edb:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
   25ede:	c7 45 e4 01 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x1
   25ee5:	e9 10 02 00 00       	jmp    260fa <update_nst+0x27d>
   25eea:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   25eed:	48 98                	cdqe   
   25eef:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   25ef6:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   25efa:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   25efe:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   25f01:	4c 63 c0             	movsxd r8,eax
   25f04:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   25f07:	48 63 f0             	movsxd rsi,eax
   25f0a:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   25f0d:	48 63 c8             	movsxd rcx,eax
   25f10:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   25f13:	4c 63 c8             	movsxd r9,eax
   25f16:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
   25f19:	48 63 d0             	movsxd rdx,eax
   25f1c:	48 89 f0             	mov    rax,rsi
   25f1f:	48 c1 e0 02          	shl    rax,0x2
   25f23:	48 01 f0             	add    rax,rsi
   25f26:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   25f2e:	48 01 f0             	add    rax,rsi
   25f31:	49 69 f1 71 02 00 00 	imul   rsi,r9,0x271
   25f38:	48 01 c6             	add    rsi,rax
   25f3b:	48 89 d0             	mov    rax,rdx
   25f3e:	48 c1 e0 05          	shl    rax,0x5
   25f42:	48 29 d0             	sub    rax,rdx
   25f45:	48 c1 e0 02          	shl    rax,0x2
   25f49:	48 01 d0             	add    rax,rdx
   25f4c:	48 8d 14 06          	lea    rdx,[rsi+rax*1]
   25f50:	48 89 c8             	mov    rax,rcx
   25f53:	48 c1 e0 02          	shl    rax,0x2
   25f57:	48 01 c8             	add    rax,rcx
   25f5a:	48 01 d0             	add    rax,rdx
   25f5d:	4c 01 c0             	add    rax,r8
   25f60:	8b 04 87             	mov    eax,DWORD PTR [rdi+rax*4]
   25f63:	39 45 e8             	cmp    DWORD PTR [rbp-0x18],eax
   25f66:	0f 4d 45 e8          	cmovge eax,DWORD PTR [rbp-0x18]
   25f6a:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
   25f6d:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   25f70:	48 98                	cdqe   
   25f72:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   25f79:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   25f7d:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   25f81:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   25f84:	4c 63 c0             	movsxd r8,eax
   25f87:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   25f8a:	48 63 f0             	movsxd rsi,eax
   25f8d:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   25f90:	48 63 c8             	movsxd rcx,eax
   25f93:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   25f96:	4c 63 c8             	movsxd r9,eax
   25f99:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
   25f9c:	48 63 d0             	movsxd rdx,eax
   25f9f:	48 89 f0             	mov    rax,rsi
   25fa2:	48 c1 e0 02          	shl    rax,0x2
   25fa6:	48 01 f0             	add    rax,rsi
   25fa9:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   25fb1:	48 01 f0             	add    rax,rsi
   25fb4:	49 69 f1 71 02 00 00 	imul   rsi,r9,0x271
   25fbb:	48 01 c6             	add    rsi,rax
   25fbe:	48 89 d0             	mov    rax,rdx
   25fc1:	48 c1 e0 05          	shl    rax,0x5
   25fc5:	48 29 d0             	sub    rax,rdx
   25fc8:	48 c1 e0 02          	shl    rax,0x2
   25fcc:	48 01 d0             	add    rax,rdx
   25fcf:	48 8d 14 06          	lea    rdx,[rsi+rax*1]
   25fd3:	48 89 c8             	mov    rax,rcx
   25fd6:	48 c1 e0 02          	shl    rax,0x2
   25fda:	48 01 c8             	add    rax,rcx
   25fdd:	48 01 d0             	add    rax,rdx
   25fe0:	4c 01 c0             	add    rax,r8
   25fe3:	8b 04 87             	mov    eax,DWORD PTR [rdi+rax*4]
   25fe6:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
   25fe9:	0f 4d 45 ec          	cmovge eax,DWORD PTR [rbp-0x14]
   25fed:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
   25ff0:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   25ff3:	48 98                	cdqe   
   25ff5:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   25ffc:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   26000:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   26004:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   26007:	4c 63 c0             	movsxd r8,eax
   2600a:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   2600d:	48 63 f0             	movsxd rsi,eax
   26010:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   26013:	48 63 c8             	movsxd rcx,eax
   26016:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   26019:	4c 63 c8             	movsxd r9,eax
   2601c:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
   2601f:	48 63 d0             	movsxd rdx,eax
   26022:	48 89 f0             	mov    rax,rsi
   26025:	48 c1 e0 02          	shl    rax,0x2
   26029:	48 01 f0             	add    rax,rsi
   2602c:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   26034:	48 01 f0             	add    rax,rsi
   26037:	49 69 f1 71 02 00 00 	imul   rsi,r9,0x271
   2603e:	48 01 c6             	add    rsi,rax
   26041:	48 89 d0             	mov    rax,rdx
   26044:	48 c1 e0 05          	shl    rax,0x5
   26048:	48 29 d0             	sub    rax,rdx
   2604b:	48 c1 e0 02          	shl    rax,0x2
   2604f:	48 01 d0             	add    rax,rdx
   26052:	48 8d 14 06          	lea    rdx,[rsi+rax*1]
   26056:	48 89 c8             	mov    rax,rcx
   26059:	48 c1 e0 02          	shl    rax,0x2
   2605d:	48 01 c8             	add    rax,rcx
   26060:	48 01 d0             	add    rax,rdx
   26063:	4c 01 c0             	add    rax,r8
   26066:	8b 04 87             	mov    eax,DWORD PTR [rdi+rax*4]
   26069:	39 45 f0             	cmp    DWORD PTR [rbp-0x10],eax
   2606c:	0f 4d 45 f0          	cmovge eax,DWORD PTR [rbp-0x10]
   26070:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
   26073:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   26076:	48 98                	cdqe   
   26078:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   2607f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   26083:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   26087:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   2608a:	4c 63 c0             	movsxd r8,eax
   2608d:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
   26090:	48 63 f0             	movsxd rsi,eax
   26093:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   26096:	48 63 c8             	movsxd rcx,eax
   26099:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   2609c:	4c 63 c8             	movsxd r9,eax
   2609f:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   260a2:	48 63 d0             	movsxd rdx,eax
   260a5:	48 89 f0             	mov    rax,rsi
   260a8:	48 c1 e0 02          	shl    rax,0x2
   260ac:	48 01 f0             	add    rax,rsi
   260af:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   260b7:	48 01 f0             	add    rax,rsi
   260ba:	49 69 f1 71 02 00 00 	imul   rsi,r9,0x271
   260c1:	48 01 c6             	add    rsi,rax
   260c4:	48 89 d0             	mov    rax,rdx
   260c7:	48 c1 e0 05          	shl    rax,0x5
   260cb:	48 29 d0             	sub    rax,rdx
   260ce:	48 c1 e0 02          	shl    rax,0x2
   260d2:	48 01 d0             	add    rax,rdx
   260d5:	48 8d 14 06          	lea    rdx,[rsi+rax*1]
   260d9:	48 89 c8             	mov    rax,rcx
   260dc:	48 c1 e0 02          	shl    rax,0x2
   260e0:	48 01 c8             	add    rax,rcx
   260e3:	48 01 d0             	add    rax,rdx
   260e6:	4c 01 c0             	add    rax,r8
   260e9:	8b 04 87             	mov    eax,DWORD PTR [rdi+rax*4]
   260ec:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
   260ef:	0f 4d 45 f4          	cmovge eax,DWORD PTR [rbp-0xc]
   260f3:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
   260f6:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
   260fa:	83 7d e4 04          	cmp    DWORD PTR [rbp-0x1c],0x4
   260fe:	0f 8e e6 fd ff ff    	jle    25eea <update_nst+0x6d>
   26104:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   26107:	48 98                	cdqe   
   26109:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   26110:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   26114:	4c 8d 04 02          	lea    r8,[rdx+rax*1]
   26118:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   2611b:	48 63 c8             	movsxd rcx,eax
   2611e:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   26121:	48 63 d0             	movsxd rdx,eax
   26124:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   26127:	48 63 f0             	movsxd rsi,eax
   2612a:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
   2612d:	48 63 f8             	movsxd rdi,eax
   26130:	48 89 c8             	mov    rax,rcx
   26133:	48 c1 e0 02          	shl    rax,0x2
   26137:	48 01 c8             	add    rax,rcx
   2613a:	48 c1 e0 02          	shl    rax,0x2
   2613e:	48 69 cf f4 01 00 00 	imul   rcx,rdi,0x1f4
   26145:	48 01 c1             	add    rcx,rax
   26148:	48 89 d0             	mov    rax,rdx
   2614b:	48 c1 e0 02          	shl    rax,0x2
   2614f:	48 01 d0             	add    rax,rdx
   26152:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2615a:	48 01 d0             	add    rax,rdx
   2615d:	48 c1 e0 02          	shl    rax,0x2
   26161:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   26165:	48 69 c6 c4 09 00 00 	imul   rax,rsi,0x9c4
   2616c:	48 01 d0             	add    rax,rdx
   2616f:	49 8d 14 00          	lea    rdx,[r8+rax*1]
   26173:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   26176:	89 02                	mov    DWORD PTR [rdx],eax
   26178:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   2617b:	48 98                	cdqe   
   2617d:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   26184:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   26188:	48 8d 34 02          	lea    rsi,[rdx+rax*1]
   2618c:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   2618f:	48 63 f8             	movsxd rdi,eax
   26192:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
   26195:	48 63 d0             	movsxd rdx,eax
   26198:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   2619b:	48 63 c8             	movsxd rcx,eax
   2619e:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   261a1:	4c 63 c0             	movsxd r8,eax
   261a4:	48 89 d0             	mov    rax,rdx
   261a7:	48 c1 e0 05          	shl    rax,0x5
   261ab:	48 29 d0             	sub    rax,rdx
   261ae:	48 c1 e0 02          	shl    rax,0x2
   261b2:	48 01 d0             	add    rax,rdx
   261b5:	49 69 d0 71 02 00 00 	imul   rdx,r8,0x271
   261bc:	4c 8d 04 10          	lea    r8,[rax+rdx*1]
   261c0:	48 89 c8             	mov    rax,rcx
   261c3:	48 c1 e0 02          	shl    rax,0x2
   261c7:	48 01 c8             	add    rax,rcx
   261ca:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   261d2:	48 01 d0             	add    rax,rdx
   261d5:	4c 01 c0             	add    rax,r8
   261d8:	48 8d 14 38          	lea    rdx,[rax+rdi*1]
   261dc:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   261df:	89 04 96             	mov    DWORD PTR [rsi+rdx*4],eax
   261e2:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   261e5:	48 98                	cdqe   
   261e7:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   261ee:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   261f2:	48 8d 34 02          	lea    rsi,[rdx+rax*1]
   261f6:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   261f9:	48 63 f8             	movsxd rdi,eax
   261fc:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
   261ff:	48 63 d0             	movsxd rdx,eax
   26202:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   26205:	48 63 c8             	movsxd rcx,eax
   26208:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   2620b:	4c 63 c0             	movsxd r8,eax
   2620e:	48 89 d0             	mov    rax,rdx
   26211:	48 c1 e0 05          	shl    rax,0x5
   26215:	48 29 d0             	sub    rax,rdx
   26218:	48 c1 e0 02          	shl    rax,0x2
   2621c:	48 01 d0             	add    rax,rdx
   2621f:	49 69 d0 71 02 00 00 	imul   rdx,r8,0x271
   26226:	48 01 c2             	add    rdx,rax
   26229:	48 89 c8             	mov    rax,rcx
   2622c:	48 c1 e0 02          	shl    rax,0x2
   26230:	48 01 c8             	add    rax,rcx
   26233:	48 01 d0             	add    rax,rdx
   26236:	48 8d 14 38          	lea    rdx,[rax+rdi*1]
   2623a:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
   2623d:	89 04 96             	mov    DWORD PTR [rsi+rdx*4],eax
   26240:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   26243:	48 98                	cdqe   
   26245:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   2624c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   26250:	48 8d 34 02          	lea    rsi,[rdx+rax*1]
   26254:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   26257:	48 63 f8             	movsxd rdi,eax
   2625a:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
   2625d:	48 63 c8             	movsxd rcx,eax
   26260:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   26263:	48 63 d0             	movsxd rdx,eax
   26266:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   26269:	4c 63 c0             	movsxd r8,eax
   2626c:	48 89 c8             	mov    rax,rcx
   2626f:	48 c1 e0 02          	shl    rax,0x2
   26273:	48 01 c8             	add    rax,rcx
   26276:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   2627e:	48 01 c8             	add    rax,rcx
   26281:	49 69 c8 71 02 00 00 	imul   rcx,r8,0x271
   26288:	48 01 c1             	add    rcx,rax
   2628b:	48 89 d0             	mov    rax,rdx
   2628e:	48 c1 e0 02          	shl    rax,0x2
   26292:	48 01 d0             	add    rax,rdx
   26295:	48 01 c8             	add    rax,rcx
   26298:	48 8d 14 38          	lea    rdx,[rax+rdi*1]
   2629c:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2629f:	89 04 96             	mov    DWORD PTR [rsi+rdx*4],eax
   262a2:	83 45 e0 01          	add    DWORD PTR [rbp-0x20],0x1
   262a6:	83 7d e0 04          	cmp    DWORD PTR [rbp-0x20],0x4
   262aa:	0f 8e 15 fc ff ff    	jle    25ec5 <update_nst+0x48>
   262b0:	83 45 dc 01          	add    DWORD PTR [rbp-0x24],0x1
   262b4:	83 7d dc 04          	cmp    DWORD PTR [rbp-0x24],0x4
   262b8:	0f 8e fb fb ff ff    	jle    25eb9 <update_nst+0x3c>
   262be:	83 45 d8 01          	add    DWORD PTR [rbp-0x28],0x1
   262c2:	83 7d d8 04          	cmp    DWORD PTR [rbp-0x28],0x4
   262c6:	0f 8e e1 fb ff ff    	jle    25ead <update_nst+0x30>
   262cc:	83 45 d4 01          	add    DWORD PTR [rbp-0x2c],0x1
   262d0:	83 7d d4 06          	cmp    DWORD PTR [rbp-0x2c],0x6
   262d4:	0f 8e c7 fb ff ff    	jle    25ea1 <update_nst+0x24>
   262da:	83 45 d0 01          	add    DWORD PTR [rbp-0x30],0x1
   262de:	83 7d d0 06          	cmp    DWORD PTR [rbp-0x30],0x6
   262e2:	0f 8e ad fb ff ff    	jle    25e95 <update_nst+0x18>
   262e8:	c7 45 d0 01 00 00 00 	mov    DWORD PTR [rbp-0x30],0x1
   262ef:	e9 04 05 00 00       	jmp    267f8 <update_nst+0x97b>
   262f4:	c7 45 d4 01 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x1
   262fb:	e9 ea 04 00 00       	jmp    267ea <update_nst+0x96d>
   26300:	c7 45 d8 01 00 00 00 	mov    DWORD PTR [rbp-0x28],0x1
   26307:	e9 d0 04 00 00       	jmp    267dc <update_nst+0x95f>
   2630c:	c7 45 dc 01 00 00 00 	mov    DWORD PTR [rbp-0x24],0x1
   26313:	e9 b6 04 00 00       	jmp    267ce <update_nst+0x951>
   26318:	c7 45 fc 80 69 67 ff 	mov    DWORD PTR [rbp-0x4],0xff676980
   2631f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   26322:	89 45 f8             	mov    DWORD PTR [rbp-0x8],eax
   26325:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   26328:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
   2632b:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2632e:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
   26331:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
   26334:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
   26337:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2633a:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
   2633d:	c7 45 e0 01 00 00 00 	mov    DWORD PTR [rbp-0x20],0x1
   26344:	e9 86 02 00 00       	jmp    265cf <update_nst+0x752>
   26349:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   2634c:	48 98                	cdqe   
   2634e:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   26355:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   26359:	4c 8d 04 02          	lea    r8,[rdx+rax*1]
   2635d:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   26360:	48 63 c8             	movsxd rcx,eax
   26363:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   26366:	48 63 d0             	movsxd rdx,eax
   26369:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   2636c:	48 63 f0             	movsxd rsi,eax
   2636f:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
   26372:	48 63 f8             	movsxd rdi,eax
   26375:	48 89 c8             	mov    rax,rcx
   26378:	48 c1 e0 02          	shl    rax,0x2
   2637c:	48 01 c8             	add    rax,rcx
   2637f:	48 c1 e0 02          	shl    rax,0x2
   26383:	48 69 cf f4 01 00 00 	imul   rcx,rdi,0x1f4
   2638a:	48 01 c1             	add    rcx,rax
   2638d:	48 89 d0             	mov    rax,rdx
   26390:	48 c1 e0 02          	shl    rax,0x2
   26394:	48 01 d0             	add    rax,rdx
   26397:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2639f:	48 01 d0             	add    rax,rdx
   263a2:	48 c1 e0 02          	shl    rax,0x2
   263a6:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   263aa:	48 69 c6 c4 09 00 00 	imul   rax,rsi,0x9c4
   263b1:	48 01 d0             	add    rax,rdx
   263b4:	4c 01 c0             	add    rax,r8
   263b7:	8b 00                	mov    eax,DWORD PTR [rax]
   263b9:	39 45 e8             	cmp    DWORD PTR [rbp-0x18],eax
   263bc:	0f 4d 45 e8          	cmovge eax,DWORD PTR [rbp-0x18]
   263c0:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
   263c3:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   263c6:	48 98                	cdqe   
   263c8:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   263cf:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   263d3:	48 8d 34 02          	lea    rsi,[rdx+rax*1]
   263d7:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   263da:	48 63 f8             	movsxd rdi,eax
   263dd:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
   263e0:	48 63 d0             	movsxd rdx,eax
   263e3:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   263e6:	48 63 c8             	movsxd rcx,eax
   263e9:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   263ec:	4c 63 c0             	movsxd r8,eax
   263ef:	48 89 d0             	mov    rax,rdx
   263f2:	48 c1 e0 05          	shl    rax,0x5
   263f6:	48 29 d0             	sub    rax,rdx
   263f9:	48 c1 e0 02          	shl    rax,0x2
   263fd:	48 01 d0             	add    rax,rdx
   26400:	49 69 d0 71 02 00 00 	imul   rdx,r8,0x271
   26407:	4c 8d 04 10          	lea    r8,[rax+rdx*1]
   2640b:	48 89 c8             	mov    rax,rcx
   2640e:	48 c1 e0 02          	shl    rax,0x2
   26412:	48 01 c8             	add    rax,rcx
   26415:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2641d:	48 01 d0             	add    rax,rdx
   26420:	4c 01 c0             	add    rax,r8
   26423:	48 01 f8             	add    rax,rdi
   26426:	8b 04 86             	mov    eax,DWORD PTR [rsi+rax*4]
   26429:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
   2642c:	0f 4d 45 ec          	cmovge eax,DWORD PTR [rbp-0x14]
   26430:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
   26433:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   26436:	48 98                	cdqe   
   26438:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   2643f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   26443:	48 8d 34 02          	lea    rsi,[rdx+rax*1]
   26447:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   2644a:	48 63 f8             	movsxd rdi,eax
   2644d:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   26450:	48 63 d0             	movsxd rdx,eax
   26453:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
   26456:	48 63 c8             	movsxd rcx,eax
   26459:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   2645c:	4c 63 c0             	movsxd r8,eax
   2645f:	48 89 d0             	mov    rax,rdx
   26462:	48 c1 e0 05          	shl    rax,0x5
   26466:	48 29 d0             	sub    rax,rdx
   26469:	48 c1 e0 02          	shl    rax,0x2
   2646d:	48 01 d0             	add    rax,rdx
   26470:	49 69 d0 71 02 00 00 	imul   rdx,r8,0x271
   26477:	48 01 c2             	add    rdx,rax
   2647a:	48 89 c8             	mov    rax,rcx
   2647d:	48 c1 e0 02          	shl    rax,0x2
   26481:	48 01 c8             	add    rax,rcx
   26484:	48 01 d0             	add    rax,rdx
   26487:	48 01 f8             	add    rax,rdi
   2648a:	8b 04 86             	mov    eax,DWORD PTR [rsi+rax*4]
   2648d:	39 45 f0             	cmp    DWORD PTR [rbp-0x10],eax
   26490:	0f 4d 45 f0          	cmovge eax,DWORD PTR [rbp-0x10]
   26494:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
   26497:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   2649a:	48 98                	cdqe   
   2649c:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   264a3:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   264a7:	48 8d 34 02          	lea    rsi,[rdx+rax*1]
   264ab:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   264ae:	48 63 f8             	movsxd rdi,eax
   264b1:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
   264b4:	48 63 c8             	movsxd rcx,eax
   264b7:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   264ba:	48 63 d0             	movsxd rdx,eax
   264bd:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   264c0:	4c 63 c0             	movsxd r8,eax
   264c3:	48 89 c8             	mov    rax,rcx
   264c6:	48 c1 e0 02          	shl    rax,0x2
   264ca:	48 01 c8             	add    rax,rcx
   264cd:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   264d5:	48 01 c8             	add    rax,rcx
   264d8:	49 69 c8 71 02 00 00 	imul   rcx,r8,0x271
   264df:	48 01 c1             	add    rcx,rax
   264e2:	48 89 d0             	mov    rax,rdx
   264e5:	48 c1 e0 02          	shl    rax,0x2
   264e9:	48 01 d0             	add    rax,rdx
   264ec:	48 01 c8             	add    rax,rcx
   264ef:	48 01 f8             	add    rax,rdi
   264f2:	8b 04 86             	mov    eax,DWORD PTR [rsi+rax*4]
   264f5:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
   264f8:	0f 4d 45 f4          	cmovge eax,DWORD PTR [rbp-0xc]
   264fc:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
   264ff:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   26502:	48 98                	cdqe   
   26504:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   2650b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   2650f:	48 8d 34 02          	lea    rsi,[rdx+rax*1]
   26513:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   26516:	48 63 f8             	movsxd rdi,eax
   26519:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
   2651c:	48 63 c8             	movsxd rcx,eax
   2651f:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   26522:	48 63 d0             	movsxd rdx,eax
   26525:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   26528:	4c 63 c0             	movsxd r8,eax
   2652b:	48 89 c8             	mov    rax,rcx
   2652e:	48 c1 e0 02          	shl    rax,0x2
   26532:	48 01 c8             	add    rax,rcx
   26535:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   2653d:	48 01 c8             	add    rax,rcx
   26540:	49 69 c8 71 02 00 00 	imul   rcx,r8,0x271
   26547:	48 01 c1             	add    rcx,rax
   2654a:	48 89 d0             	mov    rax,rdx
   2654d:	48 c1 e0 02          	shl    rax,0x2
   26551:	48 01 d0             	add    rax,rdx
   26554:	48 01 c8             	add    rax,rcx
   26557:	48 01 f8             	add    rax,rdi
   2655a:	8b 04 86             	mov    eax,DWORD PTR [rsi+rax*4]
   2655d:	39 45 f8             	cmp    DWORD PTR [rbp-0x8],eax
   26560:	0f 4d 45 f8          	cmovge eax,DWORD PTR [rbp-0x8]
   26564:	89 45 f8             	mov    DWORD PTR [rbp-0x8],eax
   26567:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   2656a:	48 98                	cdqe   
   2656c:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   26573:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   26577:	48 8d 34 02          	lea    rsi,[rdx+rax*1]
   2657b:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   2657e:	48 63 f8             	movsxd rdi,eax
   26581:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
   26584:	48 63 d0             	movsxd rdx,eax
   26587:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   2658a:	48 63 c8             	movsxd rcx,eax
   2658d:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   26590:	4c 63 c0             	movsxd r8,eax
   26593:	48 89 d0             	mov    rax,rdx
   26596:	48 c1 e0 05          	shl    rax,0x5
   2659a:	48 29 d0             	sub    rax,rdx
   2659d:	48 c1 e0 02          	shl    rax,0x2
   265a1:	48 01 d0             	add    rax,rdx
   265a4:	49 69 d0 71 02 00 00 	imul   rdx,r8,0x271
   265ab:	48 01 c2             	add    rdx,rax
   265ae:	48 89 c8             	mov    rax,rcx
   265b1:	48 c1 e0 02          	shl    rax,0x2
   265b5:	48 01 c8             	add    rax,rcx
   265b8:	48 01 d0             	add    rax,rdx
   265bb:	48 01 f8             	add    rax,rdi
   265be:	8b 04 86             	mov    eax,DWORD PTR [rsi+rax*4]
   265c1:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
   265c4:	0f 4d 45 fc          	cmovge eax,DWORD PTR [rbp-0x4]
   265c8:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
   265cb:	83 45 e0 01          	add    DWORD PTR [rbp-0x20],0x1
   265cf:	83 7d e0 04          	cmp    DWORD PTR [rbp-0x20],0x4
   265d3:	0f 8e 70 fd ff ff    	jle    26349 <update_nst+0x4cc>
   265d9:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   265dc:	48 98                	cdqe   
   265de:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   265e5:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   265e9:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   265ed:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   265f0:	48 63 d0             	movsxd rdx,eax
   265f3:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
   265f6:	48 63 f0             	movsxd rsi,eax
   265f9:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   265fc:	48 63 c8             	movsxd rcx,eax
   265ff:	48 89 d0             	mov    rax,rdx
   26602:	48 c1 e0 02          	shl    rax,0x2
   26606:	48 01 d0             	add    rax,rdx
   26609:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   26611:	48 01 d0             	add    rax,rdx
   26614:	48 c1 e0 02          	shl    rax,0x2
   26618:	48 69 d6 f4 01 00 00 	imul   rdx,rsi,0x1f4
   2661f:	48 01 c2             	add    rdx,rax
   26622:	48 69 c1 c4 09 00 00 	imul   rax,rcx,0x9c4
   26629:	48 01 d0             	add    rax,rdx
   2662c:	48 8d 14 07          	lea    rdx,[rdi+rax*1]
   26630:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   26633:	89 02                	mov    DWORD PTR [rdx],eax
   26635:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   26638:	48 98                	cdqe   
   2663a:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   26641:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   26645:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
   26649:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   2664c:	48 63 f0             	movsxd rsi,eax
   2664f:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   26652:	48 98                	cdqe   
   26654:	8b 55 d8             	mov    edx,DWORD PTR [rbp-0x28]
   26657:	48 63 d2             	movsxd rdx,edx
   2665a:	48 69 f8 71 02 00 00 	imul   rdi,rax,0x271
   26661:	48 89 d0             	mov    rax,rdx
   26664:	48 c1 e0 05          	shl    rax,0x5
   26668:	48 29 d0             	sub    rax,rdx
   2666b:	48 c1 e0 02          	shl    rax,0x2
   2666f:	48 01 d0             	add    rax,rdx
   26672:	48 01 f8             	add    rax,rdi
   26675:	48 8d 14 30          	lea    rdx,[rax+rsi*1]
   26679:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2667c:	89 04 91             	mov    DWORD PTR [rcx+rdx*4],eax
   2667f:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   26682:	48 98                	cdqe   
   26684:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   2668b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   2668f:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
   26693:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   26696:	48 63 f0             	movsxd rsi,eax
   26699:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   2669c:	48 98                	cdqe   
   2669e:	8b 55 d8             	mov    edx,DWORD PTR [rbp-0x28]
   266a1:	48 63 d2             	movsxd rdx,edx
   266a4:	48 69 f8 71 02 00 00 	imul   rdi,rax,0x271
   266ab:	48 89 d0             	mov    rax,rdx
   266ae:	48 c1 e0 02          	shl    rax,0x2
   266b2:	48 01 d0             	add    rax,rdx
   266b5:	48 01 f8             	add    rax,rdi
   266b8:	48 8d 14 30          	lea    rdx,[rax+rsi*1]
   266bc:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
   266bf:	89 04 91             	mov    DWORD PTR [rcx+rdx*4],eax
   266c2:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   266c5:	48 98                	cdqe   
   266c7:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   266ce:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   266d2:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   266d6:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   266d9:	48 63 d0             	movsxd rdx,eax
   266dc:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
   266df:	48 63 f0             	movsxd rsi,eax
   266e2:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   266e5:	48 63 c8             	movsxd rcx,eax
   266e8:	48 89 d0             	mov    rax,rdx
   266eb:	48 c1 e0 02          	shl    rax,0x2
   266ef:	48 01 d0             	add    rax,rdx
   266f2:	48 c1 e0 02          	shl    rax,0x2
   266f6:	48 69 d6 f4 01 00 00 	imul   rdx,rsi,0x1f4
   266fd:	48 01 c2             	add    rdx,rax
   26700:	48 69 c1 c4 09 00 00 	imul   rax,rcx,0x9c4
   26707:	48 01 d0             	add    rax,rdx
   2670a:	48 8d 14 07          	lea    rdx,[rdi+rax*1]
   2670e:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   26711:	89 02                	mov    DWORD PTR [rdx],eax
   26713:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   26716:	48 98                	cdqe   
   26718:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   2671f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   26723:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
   26727:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   2672a:	48 63 f0             	movsxd rsi,eax
   2672d:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   26730:	48 98                	cdqe   
   26732:	8b 55 d8             	mov    edx,DWORD PTR [rbp-0x28]
   26735:	48 63 d2             	movsxd rdx,edx
   26738:	48 69 f8 71 02 00 00 	imul   rdi,rax,0x271
   2673f:	48 89 d0             	mov    rax,rdx
   26742:	48 c1 e0 02          	shl    rax,0x2
   26746:	48 01 d0             	add    rax,rdx
   26749:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   26751:	48 01 d0             	add    rax,rdx
   26754:	48 01 f8             	add    rax,rdi
   26757:	48 8d 14 30          	lea    rdx,[rax+rsi*1]
   2675b:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2675e:	89 04 91             	mov    DWORD PTR [rcx+rdx*4],eax
   26761:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   26764:	48 98                	cdqe   
   26766:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   2676d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   26771:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   26775:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   26778:	48 98                	cdqe   
   2677a:	8b 55 d8             	mov    edx,DWORD PTR [rbp-0x28]
   2677d:	48 63 ca             	movsxd rcx,edx
   26780:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
   26783:	48 63 f2             	movsxd rsi,edx
   26786:	48 89 c2             	mov    rdx,rax
   26789:	48 c1 e2 02          	shl    rdx,0x2
   2678d:	48 01 c2             	add    rdx,rax
   26790:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   26798:	48 89 c2             	mov    rdx,rax
   2679b:	48 89 c8             	mov    rax,rcx
   2679e:	48 c1 e0 02          	shl    rax,0x2
   267a2:	48 01 c8             	add    rax,rcx
   267a5:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   267ad:	48 01 c8             	add    rax,rcx
   267b0:	48 c1 e0 02          	shl    rax,0x2
   267b4:	48 01 c2             	add    rdx,rax
   267b7:	48 69 c6 c4 09 00 00 	imul   rax,rsi,0x9c4
   267be:	48 01 d0             	add    rax,rdx
   267c1:	48 8d 14 07          	lea    rdx,[rdi+rax*1]
   267c5:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   267c8:	89 02                	mov    DWORD PTR [rdx],eax
   267ca:	83 45 dc 01          	add    DWORD PTR [rbp-0x24],0x1
   267ce:	83 7d dc 04          	cmp    DWORD PTR [rbp-0x24],0x4
   267d2:	0f 8e 40 fb ff ff    	jle    26318 <update_nst+0x49b>
   267d8:	83 45 d8 01          	add    DWORD PTR [rbp-0x28],0x1
   267dc:	83 7d d8 04          	cmp    DWORD PTR [rbp-0x28],0x4
   267e0:	0f 8e 26 fb ff ff    	jle    2630c <update_nst+0x48f>
   267e6:	83 45 d4 01          	add    DWORD PTR [rbp-0x2c],0x1
   267ea:	83 7d d4 06          	cmp    DWORD PTR [rbp-0x2c],0x6
   267ee:	0f 8e 0c fb ff ff    	jle    26300 <update_nst+0x483>
   267f4:	83 45 d0 01          	add    DWORD PTR [rbp-0x30],0x1
   267f8:	83 7d d0 06          	cmp    DWORD PTR [rbp-0x30],0x6
   267fc:	0f 8e f2 fa ff ff    	jle    262f4 <update_nst+0x477>
   26802:	c7 45 d0 01 00 00 00 	mov    DWORD PTR [rbp-0x30],0x1
   26809:	e9 c2 02 00 00       	jmp    26ad0 <update_nst+0xc53>
   2680e:	c7 45 d4 01 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x1
   26815:	e9 a8 02 00 00       	jmp    26ac2 <update_nst+0xc45>
   2681a:	c7 45 d8 01 00 00 00 	mov    DWORD PTR [rbp-0x28],0x1
   26821:	e9 8e 02 00 00       	jmp    26ab4 <update_nst+0xc37>
   26826:	c7 45 f4 80 69 67 ff 	mov    DWORD PTR [rbp-0xc],0xff676980
   2682d:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   26830:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
   26833:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
   26836:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
   26839:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2683c:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
   2683f:	c7 45 dc 01 00 00 00 	mov    DWORD PTR [rbp-0x24],0x1
   26846:	e9 67 01 00 00       	jmp    269b2 <update_nst+0xb35>
   2684b:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   2684e:	48 98                	cdqe   
   26850:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   26857:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   2685b:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   2685f:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   26862:	48 63 d0             	movsxd rdx,eax
   26865:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
   26868:	48 63 f0             	movsxd rsi,eax
   2686b:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   2686e:	48 63 c8             	movsxd rcx,eax
   26871:	48 89 d0             	mov    rax,rdx
   26874:	48 c1 e0 02          	shl    rax,0x2
   26878:	48 01 d0             	add    rax,rdx
   2687b:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   26883:	48 01 d0             	add    rax,rdx
   26886:	48 c1 e0 02          	shl    rax,0x2
   2688a:	48 69 d6 f4 01 00 00 	imul   rdx,rsi,0x1f4
   26891:	48 01 c2             	add    rdx,rax
   26894:	48 69 c1 c4 09 00 00 	imul   rax,rcx,0x9c4
   2689b:	48 01 d0             	add    rax,rdx
   2689e:	48 01 f8             	add    rax,rdi
   268a1:	8b 00                	mov    eax,DWORD PTR [rax]
   268a3:	39 45 e8             	cmp    DWORD PTR [rbp-0x18],eax
   268a6:	0f 4d 45 e8          	cmovge eax,DWORD PTR [rbp-0x18]
   268aa:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
   268ad:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   268b0:	48 98                	cdqe   
   268b2:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   268b9:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   268bd:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   268c1:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   268c4:	48 98                	cdqe   
   268c6:	8b 55 d8             	mov    edx,DWORD PTR [rbp-0x28]
   268c9:	48 63 ca             	movsxd rcx,edx
   268cc:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
   268cf:	48 63 f2             	movsxd rsi,edx
   268d2:	48 89 c2             	mov    rdx,rax
   268d5:	48 c1 e2 02          	shl    rdx,0x2
   268d9:	48 01 c2             	add    rdx,rax
   268dc:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   268e4:	48 89 c2             	mov    rdx,rax
   268e7:	48 89 c8             	mov    rax,rcx
   268ea:	48 c1 e0 02          	shl    rax,0x2
   268ee:	48 01 c8             	add    rax,rcx
   268f1:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   268f9:	48 01 c8             	add    rax,rcx
   268fc:	48 c1 e0 02          	shl    rax,0x2
   26900:	48 01 c2             	add    rdx,rax
   26903:	48 69 c6 c4 09 00 00 	imul   rax,rsi,0x9c4
   2690a:	48 01 d0             	add    rax,rdx
   2690d:	48 01 f8             	add    rax,rdi
   26910:	8b 00                	mov    eax,DWORD PTR [rax]
   26912:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
   26915:	0f 4d 45 ec          	cmovge eax,DWORD PTR [rbp-0x14]
   26919:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
   2691c:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   2691f:	48 98                	cdqe   
   26921:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   26928:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   2692c:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
   26930:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   26933:	48 63 f0             	movsxd rsi,eax
   26936:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   26939:	48 98                	cdqe   
   2693b:	8b 55 d8             	mov    edx,DWORD PTR [rbp-0x28]
   2693e:	48 63 d2             	movsxd rdx,edx
   26941:	48 69 f8 71 02 00 00 	imul   rdi,rax,0x271
   26948:	48 89 d0             	mov    rax,rdx
   2694b:	48 c1 e0 02          	shl    rax,0x2
   2694f:	48 01 d0             	add    rax,rdx
   26952:	48 01 f8             	add    rax,rdi
   26955:	48 01 f0             	add    rax,rsi
   26958:	8b 04 81             	mov    eax,DWORD PTR [rcx+rax*4]
   2695b:	39 45 f0             	cmp    DWORD PTR [rbp-0x10],eax
   2695e:	0f 4d 45 f0          	cmovge eax,DWORD PTR [rbp-0x10]
   26962:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
   26965:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   26968:	48 98                	cdqe   
   2696a:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   26971:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   26975:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
   26979:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
   2697c:	48 63 f0             	movsxd rsi,eax
   2697f:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   26982:	48 98                	cdqe   
   26984:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
   26987:	48 63 d2             	movsxd rdx,edx
   2698a:	48 69 f8 71 02 00 00 	imul   rdi,rax,0x271
   26991:	48 89 d0             	mov    rax,rdx
   26994:	48 c1 e0 02          	shl    rax,0x2
   26998:	48 01 d0             	add    rax,rdx
   2699b:	48 01 f8             	add    rax,rdi
   2699e:	48 01 f0             	add    rax,rsi
   269a1:	8b 04 81             	mov    eax,DWORD PTR [rcx+rax*4]
   269a4:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
   269a7:	0f 4d 45 f4          	cmovge eax,DWORD PTR [rbp-0xc]
   269ab:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
   269ae:	83 45 dc 01          	add    DWORD PTR [rbp-0x24],0x1
   269b2:	83 7d dc 04          	cmp    DWORD PTR [rbp-0x24],0x4
   269b6:	0f 8e 8f fe ff ff    	jle    2684b <update_nst+0x9ce>
   269bc:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   269bf:	48 98                	cdqe   
   269c1:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   269c8:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   269cc:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
   269d0:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
   269d3:	48 63 d0             	movsxd rdx,eax
   269d6:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   269d9:	48 98                	cdqe   
   269db:	48 69 d2 f4 01 00 00 	imul   rdx,rdx,0x1f4
   269e2:	48 69 c0 c4 09 00 00 	imul   rax,rax,0x9c4
   269e9:	48 01 d0             	add    rax,rdx
   269ec:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   269f0:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   269f3:	89 02                	mov    DWORD PTR [rdx],eax
   269f5:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   269f8:	48 98                	cdqe   
   269fa:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   26a01:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   26a05:	48 8d 34 02          	lea    rsi,[rdx+rax*1]
   26a09:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
   26a0c:	48 63 d0             	movsxd rdx,eax
   26a0f:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   26a12:	48 63 c8             	movsxd rcx,eax
   26a15:	48 89 d0             	mov    rax,rdx
   26a18:	48 c1 e0 02          	shl    rax,0x2
   26a1c:	48 01 d0             	add    rax,rdx
   26a1f:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   26a27:	48 01 d0             	add    rax,rdx
   26a2a:	48 c1 e0 02          	shl    rax,0x2
   26a2e:	48 69 d1 c4 09 00 00 	imul   rdx,rcx,0x9c4
   26a35:	48 01 d0             	add    rax,rdx
   26a38:	48 8d 14 06          	lea    rdx,[rsi+rax*1]
   26a3c:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   26a3f:	89 02                	mov    DWORD PTR [rdx],eax
   26a41:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   26a44:	48 98                	cdqe   
   26a46:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   26a4d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   26a51:	48 8d 34 02          	lea    rsi,[rdx+rax*1]
   26a55:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
   26a58:	48 63 d0             	movsxd rdx,eax
   26a5b:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   26a5e:	48 63 c8             	movsxd rcx,eax
   26a61:	48 89 d0             	mov    rax,rdx
   26a64:	48 c1 e0 02          	shl    rax,0x2
   26a68:	48 01 d0             	add    rax,rdx
   26a6b:	48 c1 e0 02          	shl    rax,0x2
   26a6f:	48 69 d1 c4 09 00 00 	imul   rdx,rcx,0x9c4
   26a76:	48 01 d0             	add    rax,rdx
   26a79:	48 8d 14 06          	lea    rdx,[rsi+rax*1]
   26a7d:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
   26a80:	89 02                	mov    DWORD PTR [rdx],eax
   26a82:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   26a85:	48 98                	cdqe   
   26a87:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   26a8e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   26a92:	48 01 c2             	add    rdx,rax
   26a95:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
   26a98:	48 98                	cdqe   
   26a9a:	8b 4d d4             	mov    ecx,DWORD PTR [rbp-0x2c]
   26a9d:	48 63 c9             	movsxd rcx,ecx
   26aa0:	48 69 c9 71 02 00 00 	imul   rcx,rcx,0x271
   26aa7:	48 01 c1             	add    rcx,rax
   26aaa:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   26aad:	89 04 8a             	mov    DWORD PTR [rdx+rcx*4],eax
   26ab0:	83 45 d8 01          	add    DWORD PTR [rbp-0x28],0x1
   26ab4:	83 7d d8 04          	cmp    DWORD PTR [rbp-0x28],0x4
   26ab8:	0f 8e 68 fd ff ff    	jle    26826 <update_nst+0x9a9>
   26abe:	83 45 d4 01          	add    DWORD PTR [rbp-0x2c],0x1
   26ac2:	83 7d d4 06          	cmp    DWORD PTR [rbp-0x2c],0x6
   26ac6:	0f 8e 4e fd ff ff    	jle    2681a <update_nst+0x99d>
   26acc:	83 45 d0 01          	add    DWORD PTR [rbp-0x30],0x1
   26ad0:	83 7d d0 06          	cmp    DWORD PTR [rbp-0x30],0x6
   26ad4:	0f 8e 34 fd ff ff    	jle    2680e <update_nst+0x991>
   26ada:	c7 45 d0 01 00 00 00 	mov    DWORD PTR [rbp-0x30],0x1
   26ae1:	e9 9e 00 00 00       	jmp    26b84 <update_nst+0xd07>
   26ae6:	c7 45 d4 01 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x1
   26aed:	e9 84 00 00 00       	jmp    26b76 <update_nst+0xcf9>
   26af2:	c7 45 e8 80 69 67 ff 	mov    DWORD PTR [rbp-0x18],0xff676980
   26af9:	c7 45 d8 01 00 00 00 	mov    DWORD PTR [rbp-0x28],0x1
   26b00:	eb 43                	jmp    26b45 <update_nst+0xcc8>
   26b02:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   26b05:	48 98                	cdqe   
   26b07:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   26b0e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   26b12:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
   26b16:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
   26b19:	48 63 d0             	movsxd rdx,eax
   26b1c:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   26b1f:	48 98                	cdqe   
   26b21:	48 69 d2 f4 01 00 00 	imul   rdx,rdx,0x1f4
   26b28:	48 69 c0 c4 09 00 00 	imul   rax,rax,0x9c4
   26b2f:	48 01 d0             	add    rax,rdx
   26b32:	48 01 c8             	add    rax,rcx
   26b35:	8b 00                	mov    eax,DWORD PTR [rax]
   26b37:	39 45 e8             	cmp    DWORD PTR [rbp-0x18],eax
   26b3a:	0f 4d 45 e8          	cmovge eax,DWORD PTR [rbp-0x18]
   26b3e:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
   26b41:	83 45 d8 01          	add    DWORD PTR [rbp-0x28],0x1
   26b45:	83 7d d8 04          	cmp    DWORD PTR [rbp-0x28],0x4
   26b49:	7e b7                	jle    26b02 <update_nst+0xc85>
   26b4b:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   26b4e:	48 98                	cdqe   
   26b50:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   26b57:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   26b5b:	48 01 c2             	add    rdx,rax
   26b5e:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   26b61:	48 98                	cdqe   
   26b63:	48 69 c0 c4 09 00 00 	imul   rax,rax,0x9c4
   26b6a:	48 01 c2             	add    rdx,rax
   26b6d:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   26b70:	89 02                	mov    DWORD PTR [rdx],eax
   26b72:	83 45 d4 01          	add    DWORD PTR [rbp-0x2c],0x1
   26b76:	83 7d d4 06          	cmp    DWORD PTR [rbp-0x2c],0x6
   26b7a:	0f 8e 72 ff ff ff    	jle    26af2 <update_nst+0xc75>
   26b80:	83 45 d0 01          	add    DWORD PTR [rbp-0x30],0x1
   26b84:	83 7d d0 06          	cmp    DWORD PTR [rbp-0x30],0x6
   26b88:	0f 8e 58 ff ff ff    	jle    26ae6 <update_nst+0xc69>
   26b8e:	c7 45 d0 01 00 00 00 	mov    DWORD PTR [rbp-0x30],0x1
   26b95:	e9 7f 02 00 00       	jmp    26e19 <update_nst+0xf9c>
   26b9a:	c7 45 d8 00 00 00 00 	mov    DWORD PTR [rbp-0x28],0x0
   26ba1:	e9 65 02 00 00       	jmp    26e0b <update_nst+0xf8e>
   26ba6:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [rbp-0x24],0x0
   26bad:	e9 4b 02 00 00       	jmp    26dfd <update_nst+0xf80>
   26bb2:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [rbp-0x20],0x0
   26bb9:	e9 31 02 00 00       	jmp    26def <update_nst+0xf72>
   26bbe:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
   26bc5:	e9 17 02 00 00       	jmp    26de1 <update_nst+0xf64>
   26bca:	c7 45 ec 80 69 67 ff 	mov    DWORD PTR [rbp-0x14],0xff676980
   26bd1:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   26bd4:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
   26bd7:	c7 45 d4 01 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x1
   26bde:	e9 0a 01 00 00       	jmp    26ced <update_nst+0xe70>
   26be3:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   26be6:	48 98                	cdqe   
   26be8:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   26bef:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   26bf3:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   26bf7:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   26bfa:	4c 63 c0             	movsxd r8,eax
   26bfd:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   26c00:	48 63 f0             	movsxd rsi,eax
   26c03:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   26c06:	48 63 c8             	movsxd rcx,eax
   26c09:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   26c0c:	4c 63 c8             	movsxd r9,eax
   26c0f:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
   26c12:	48 63 d0             	movsxd rdx,eax
   26c15:	48 89 f0             	mov    rax,rsi
   26c18:	48 c1 e0 02          	shl    rax,0x2
   26c1c:	48 01 f0             	add    rax,rsi
   26c1f:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   26c27:	48 01 f0             	add    rax,rsi
   26c2a:	49 69 f1 71 02 00 00 	imul   rsi,r9,0x271
   26c31:	48 01 c6             	add    rsi,rax
   26c34:	48 89 d0             	mov    rax,rdx
   26c37:	48 c1 e0 05          	shl    rax,0x5
   26c3b:	48 29 d0             	sub    rax,rdx
   26c3e:	48 c1 e0 02          	shl    rax,0x2
   26c42:	48 01 d0             	add    rax,rdx
   26c45:	48 8d 14 06          	lea    rdx,[rsi+rax*1]
   26c49:	48 89 c8             	mov    rax,rcx
   26c4c:	48 c1 e0 02          	shl    rax,0x2
   26c50:	48 01 c8             	add    rax,rcx
   26c53:	48 01 d0             	add    rax,rdx
   26c56:	4c 01 c0             	add    rax,r8
   26c59:	8b 04 87             	mov    eax,DWORD PTR [rdi+rax*4]
   26c5c:	39 45 e8             	cmp    DWORD PTR [rbp-0x18],eax
   26c5f:	0f 4d 45 e8          	cmovge eax,DWORD PTR [rbp-0x18]
   26c63:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
   26c66:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   26c69:	48 98                	cdqe   
   26c6b:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   26c72:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   26c76:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   26c7a:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   26c7d:	4c 63 c0             	movsxd r8,eax
   26c80:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   26c83:	48 63 f0             	movsxd rsi,eax
   26c86:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   26c89:	48 63 c8             	movsxd rcx,eax
   26c8c:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   26c8f:	4c 63 c8             	movsxd r9,eax
   26c92:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
   26c95:	48 63 d0             	movsxd rdx,eax
   26c98:	48 89 f0             	mov    rax,rsi
   26c9b:	48 c1 e0 02          	shl    rax,0x2
   26c9f:	48 01 f0             	add    rax,rsi
   26ca2:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   26caa:	48 01 f0             	add    rax,rsi
   26cad:	49 69 f1 71 02 00 00 	imul   rsi,r9,0x271
   26cb4:	48 01 c6             	add    rsi,rax
   26cb7:	48 89 d0             	mov    rax,rdx
   26cba:	48 c1 e0 05          	shl    rax,0x5
   26cbe:	48 29 d0             	sub    rax,rdx
   26cc1:	48 c1 e0 02          	shl    rax,0x2
   26cc5:	48 01 d0             	add    rax,rdx
   26cc8:	48 8d 14 06          	lea    rdx,[rsi+rax*1]
   26ccc:	48 89 c8             	mov    rax,rcx
   26ccf:	48 c1 e0 02          	shl    rax,0x2
   26cd3:	48 01 c8             	add    rax,rcx
   26cd6:	48 01 d0             	add    rax,rdx
   26cd9:	4c 01 c0             	add    rax,r8
   26cdc:	8b 04 87             	mov    eax,DWORD PTR [rdi+rax*4]
   26cdf:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
   26ce2:	0f 4d 45 ec          	cmovge eax,DWORD PTR [rbp-0x14]
   26ce6:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
   26ce9:	83 45 d4 01          	add    DWORD PTR [rbp-0x2c],0x1
   26ced:	83 7d d4 06          	cmp    DWORD PTR [rbp-0x2c],0x6
   26cf1:	0f 8e ec fe ff ff    	jle    26be3 <update_nst+0xd66>
   26cf7:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   26cfa:	48 98                	cdqe   
   26cfc:	48 69 d0 20 4e 00 00 	imul   rdx,rax,0x4e20
   26d03:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   26d07:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   26d0b:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   26d0e:	4c 63 c0             	movsxd r8,eax
   26d11:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   26d14:	48 63 d0             	movsxd rdx,eax
   26d17:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   26d1a:	48 63 f0             	movsxd rsi,eax
   26d1d:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
   26d20:	48 63 c8             	movsxd rcx,eax
   26d23:	48 89 d0             	mov    rax,rdx
   26d26:	48 c1 e0 02          	shl    rax,0x2
   26d2a:	48 01 d0             	add    rax,rdx
   26d2d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   26d35:	48 01 d0             	add    rax,rdx
   26d38:	48 89 f2             	mov    rdx,rsi
   26d3b:	48 c1 e2 02          	shl    rdx,0x2
   26d3f:	48 01 f2             	add    rdx,rsi
   26d42:	48 01 c2             	add    rdx,rax
   26d45:	48 89 c8             	mov    rax,rcx
   26d48:	48 c1 e0 05          	shl    rax,0x5
   26d4c:	48 29 c8             	sub    rax,rcx
   26d4f:	48 c1 e0 02          	shl    rax,0x2
   26d53:	48 01 c8             	add    rax,rcx
   26d56:	48 01 d0             	add    rax,rdx
   26d59:	4c 01 c0             	add    rax,r8
   26d5c:	48 8d 90 17 11 00 00 	lea    rdx,[rax+0x1117]
   26d63:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   26d66:	89 04 97             	mov    DWORD PTR [rdi+rdx*4],eax
   26d69:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   26d6d:	48 8d b8 e0 22 02 00 	lea    rdi,[rax+0x222e0]
   26d74:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   26d77:	4c 63 c0             	movsxd r8,eax
   26d7a:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   26d7d:	48 63 f0             	movsxd rsi,eax
   26d80:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   26d83:	48 63 c8             	movsxd rcx,eax
   26d86:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   26d89:	4c 63 c8             	movsxd r9,eax
   26d8c:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
   26d8f:	48 63 d0             	movsxd rdx,eax
   26d92:	48 89 f0             	mov    rax,rsi
   26d95:	48 c1 e0 02          	shl    rax,0x2
   26d99:	48 01 f0             	add    rax,rsi
   26d9c:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   26da4:	48 01 f0             	add    rax,rsi
   26da7:	49 69 f1 71 02 00 00 	imul   rsi,r9,0x271
   26dae:	48 01 c6             	add    rsi,rax
   26db1:	48 89 d0             	mov    rax,rdx
   26db4:	48 c1 e0 05          	shl    rax,0x5
   26db8:	48 29 d0             	sub    rax,rdx
   26dbb:	48 c1 e0 02          	shl    rax,0x2
   26dbf:	48 01 d0             	add    rax,rdx
   26dc2:	48 8d 14 06          	lea    rdx,[rsi+rax*1]
   26dc6:	48 89 c8             	mov    rax,rcx
   26dc9:	48 c1 e0 02          	shl    rax,0x2
   26dcd:	48 01 c8             	add    rax,rcx
   26dd0:	48 01 d0             	add    rax,rdx
   26dd3:	4a 8d 14 00          	lea    rdx,[rax+r8*1]
   26dd7:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   26dda:	89 04 97             	mov    DWORD PTR [rdi+rdx*4],eax
   26ddd:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
   26de1:	83 7d e4 04          	cmp    DWORD PTR [rbp-0x1c],0x4
   26de5:	0f 8e df fd ff ff    	jle    26bca <update_nst+0xd4d>
   26deb:	83 45 e0 01          	add    DWORD PTR [rbp-0x20],0x1
   26def:	83 7d e0 04          	cmp    DWORD PTR [rbp-0x20],0x4
   26df3:	0f 8e c5 fd ff ff    	jle    26bbe <update_nst+0xd41>
   26df9:	83 45 dc 01          	add    DWORD PTR [rbp-0x24],0x1
   26dfd:	83 7d dc 04          	cmp    DWORD PTR [rbp-0x24],0x4
   26e01:	0f 8e ab fd ff ff    	jle    26bb2 <update_nst+0xd35>
   26e07:	83 45 d8 01          	add    DWORD PTR [rbp-0x28],0x1
   26e0b:	83 7d d8 04          	cmp    DWORD PTR [rbp-0x28],0x4
   26e0f:	0f 8e 91 fd ff ff    	jle    26ba6 <update_nst+0xd29>
   26e15:	83 45 d0 01          	add    DWORD PTR [rbp-0x30],0x1
   26e19:	83 7d d0 06          	cmp    DWORD PTR [rbp-0x30],0x6
   26e1d:	0f 8e 77 fd ff ff    	jle    26b9a <update_nst+0xd1d>
   26e23:	c7 45 d8 00 00 00 00 	mov    DWORD PTR [rbp-0x28],0x0
   26e2a:	e9 53 01 00 00       	jmp    26f82 <update_nst+0x1105>
   26e2f:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [rbp-0x24],0x0
   26e36:	e9 39 01 00 00       	jmp    26f74 <update_nst+0x10f7>
   26e3b:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [rbp-0x20],0x0
   26e42:	e9 1f 01 00 00       	jmp    26f66 <update_nst+0x10e9>
   26e47:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
   26e4e:	e9 05 01 00 00       	jmp    26f58 <update_nst+0x10db>
   26e53:	c7 45 e8 80 69 67 ff 	mov    DWORD PTR [rbp-0x18],0xff676980
   26e5a:	c7 45 d4 01 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x1
   26e61:	eb 7e                	jmp    26ee1 <update_nst+0x1064>
   26e63:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   26e67:	48 8d b8 e0 22 02 00 	lea    rdi,[rax+0x222e0]
   26e6e:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   26e71:	4c 63 c0             	movsxd r8,eax
   26e74:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   26e77:	48 63 f0             	movsxd rsi,eax
   26e7a:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   26e7d:	48 63 c8             	movsxd rcx,eax
   26e80:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   26e83:	4c 63 c8             	movsxd r9,eax
   26e86:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
   26e89:	48 63 d0             	movsxd rdx,eax
   26e8c:	48 89 f0             	mov    rax,rsi
   26e8f:	48 c1 e0 02          	shl    rax,0x2
   26e93:	48 01 f0             	add    rax,rsi
   26e96:	48 8d 34 85 00 00 00 00 	lea    rsi,[rax*4+0x0]
   26e9e:	48 01 f0             	add    rax,rsi
   26ea1:	49 69 f1 71 02 00 00 	imul   rsi,r9,0x271
   26ea8:	48 01 c6             	add    rsi,rax
   26eab:	48 89 d0             	mov    rax,rdx
   26eae:	48 c1 e0 05          	shl    rax,0x5
   26eb2:	48 29 d0             	sub    rax,rdx
   26eb5:	48 c1 e0 02          	shl    rax,0x2
   26eb9:	48 01 d0             	add    rax,rdx
   26ebc:	48 8d 14 06          	lea    rdx,[rsi+rax*1]
   26ec0:	48 89 c8             	mov    rax,rcx
   26ec3:	48 c1 e0 02          	shl    rax,0x2
   26ec7:	48 01 c8             	add    rax,rcx
   26eca:	48 01 d0             	add    rax,rdx
   26ecd:	4c 01 c0             	add    rax,r8
   26ed0:	8b 04 87             	mov    eax,DWORD PTR [rdi+rax*4]
   26ed3:	39 45 e8             	cmp    DWORD PTR [rbp-0x18],eax
   26ed6:	0f 4d 45 e8          	cmovge eax,DWORD PTR [rbp-0x18]
   26eda:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
   26edd:	83 45 d4 01          	add    DWORD PTR [rbp-0x2c],0x1
   26ee1:	83 7d d4 06          	cmp    DWORD PTR [rbp-0x2c],0x6
   26ee5:	0f 8e 78 ff ff ff    	jle    26e63 <update_nst+0xfe6>
   26eeb:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   26eef:	48 8d b8 e0 22 02 00 	lea    rdi,[rax+0x222e0]
   26ef6:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   26ef9:	4c 63 c0             	movsxd r8,eax
   26efc:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   26eff:	48 63 d0             	movsxd rdx,eax
   26f02:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   26f05:	48 63 f0             	movsxd rsi,eax
   26f08:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
   26f0b:	48 63 c8             	movsxd rcx,eax
   26f0e:	48 89 d0             	mov    rax,rdx
   26f11:	48 c1 e0 02          	shl    rax,0x2
   26f15:	48 01 d0             	add    rax,rdx
   26f18:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   26f20:	48 01 d0             	add    rax,rdx
   26f23:	48 89 f2             	mov    rdx,rsi
   26f26:	48 c1 e2 02          	shl    rdx,0x2
   26f2a:	48 01 f2             	add    rdx,rsi
   26f2d:	48 01 c2             	add    rdx,rax
   26f30:	48 89 c8             	mov    rax,rcx
   26f33:	48 c1 e0 05          	shl    rax,0x5
   26f37:	48 29 c8             	sub    rax,rcx
   26f3a:	48 c1 e0 02          	shl    rax,0x2
   26f3e:	48 01 c8             	add    rax,rcx
   26f41:	48 01 d0             	add    rax,rdx
   26f44:	4c 01 c0             	add    rax,r8
   26f47:	48 8d 90 17 11 00 00 	lea    rdx,[rax+0x1117]
   26f4e:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   26f51:	89 04 97             	mov    DWORD PTR [rdi+rdx*4],eax
   26f54:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
   26f58:	83 7d e4 04          	cmp    DWORD PTR [rbp-0x1c],0x4
   26f5c:	0f 8e f1 fe ff ff    	jle    26e53 <update_nst+0xfd6>
   26f62:	83 45 e0 01          	add    DWORD PTR [rbp-0x20],0x1
   26f66:	83 7d e0 04          	cmp    DWORD PTR [rbp-0x20],0x4
   26f6a:	0f 8e d7 fe ff ff    	jle    26e47 <update_nst+0xfca>
   26f70:	83 45 dc 01          	add    DWORD PTR [rbp-0x24],0x1
   26f74:	83 7d dc 04          	cmp    DWORD PTR [rbp-0x24],0x4
   26f78:	0f 8e bd fe ff ff    	jle    26e3b <update_nst+0xfbe>
   26f7e:	83 45 d8 01          	add    DWORD PTR [rbp-0x28],0x1
   26f82:	83 7d d8 04          	cmp    DWORD PTR [rbp-0x28],0x4
   26f86:	0f 8e a3 fe ff ff    	jle    26e2f <update_nst+0xfb2>
   26f8c:	90                   	nop
   26f8d:	90                   	nop
   26f8e:	5d                   	pop    rbp
   26f8f:	c3                   	ret    

0000000000026f90 <save_parameter_file>:
   26f90:	f3 0f 1e fa          	endbr64 
   26f94:	55                   	push   rbp
   26f95:	48 89 e5             	mov    rbp,rsp
   26f98:	53                   	push   rbx
   26f99:	48 81 ec 38 01 00 00 	sub    rsp,0x138
   26fa0:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
   26fa7:	89 b5 c4 fe ff ff    	mov    DWORD PTR [rbp-0x13c],esi
   26fad:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   26fb6:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
   26fba:	31 c0                	xor    eax,eax
   26fbc:	48 8d 05 df c1 1b 00 	lea    rax,[rip+0x1bc1df]        # 1e31a2 <parameter_set_rna_turner2004+0x5d682>
   26fc3:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
   26fc7:	48 8d 05 d7 c1 1b 00 	lea    rax,[rip+0x1bc1d7]        # 1e31a5 <parameter_set_rna_turner2004+0x5d685>
   26fce:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
   26fd2:	48 8d 05 cf c1 1b 00 	lea    rax,[rip+0x1bc1cf]        # 1e31a8 <parameter_set_rna_turner2004+0x5d688>
   26fd9:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
   26fdd:	48 8d 05 c7 c1 1b 00 	lea    rax,[rip+0x1bc1c7]        # 1e31ab <parameter_set_rna_turner2004+0x5d68b>
   26fe4:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
   26fe8:	48 8d 05 bf c1 1b 00 	lea    rax,[rip+0x1bc1bf]        # 1e31ae <parameter_set_rna_turner2004+0x5d68e>
   26fef:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
   26ff3:	48 8d 05 b7 c1 1b 00 	lea    rax,[rip+0x1bc1b7]        # 1e31b1 <parameter_set_rna_turner2004+0x5d691>
   26ffa:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
   26ffe:	48 8d 05 af c1 1b 00 	lea    rax,[rip+0x1bc1af]        # 1e31b4 <parameter_set_rna_turner2004+0x5d694>
   27005:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
   27009:	48 8d 05 a7 c1 1b 00 	lea    rax,[rip+0x1bc1a7]        # 1e31b7 <parameter_set_rna_turner2004+0x5d697>
   27010:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
   27014:	c7 45 e2 40 41 43 47 	mov    DWORD PTR [rbp-0x1e],0x47434140
   2701b:	66 c7 45 e6 55 00    	mov    WORD PTR [rbp-0x1a],0x55
   27021:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
   27028:	48 8d 35 8b c1 1b 00 	lea    rsi,[rip+0x1bc18b]        # 1e31ba <parameter_set_rna_turner2004+0x5d69a>
   2702f:	48 89 c7             	mov    rdi,rax
   27032:	e8 69 c8 fd ff       	call   38a0 <fopen@plt>
   27037:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
   2703b:	48 83 7d 98 00       	cmp    QWORD PTR [rbp-0x68],0x0
   27040:	75 25                	jne    27067 <save_parameter_file+0xd7>
   27042:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
   27049:	48 89 c6             	mov    rsi,rax
   2704c:	48 8d 3d 69 c1 1b 00 	lea    rdi,[rip+0x1bc169]        # 1e31bc <parameter_set_rna_turner2004+0x5d69c>
   27053:	b8 00 00 00 00       	mov    eax,0x0
   27058:	e8 3e 51 00 00       	call   2c19b <vrna_message_warning>
   2705d:	b8 00 00 00 00       	mov    eax,0x0
   27062:	e9 a6 1b 00 00       	jmp    28c0d <save_parameter_file+0x1c7d>
   27067:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2706b:	48 89 c1             	mov    rcx,rax
   2706e:	ba 1f 00 00 00       	mov    edx,0x1f
   27073:	be 01 00 00 00       	mov    esi,0x1
   27078:	48 8d 3d 51 c1 1b 00 	lea    rdi,[rip+0x1bc151]        # 1e31d0 <parameter_set_rna_turner2004+0x5d6b0>
   2707f:	e8 4c ca fd ff       	call   3ad0 <fwrite@plt>
   27084:	bf 01 00 00 00       	mov    edi,0x1
   27089:	e8 ce 1b 00 00       	call   28c5c <settype>
   2708e:	48 89 c2             	mov    rdx,rax
   27091:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   27095:	48 8d 35 54 c1 1b 00 	lea    rsi,[rip+0x1bc154]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   2709c:	48 89 c7             	mov    rdi,rax
   2709f:	b8 00 00 00 00       	mov    eax,0x0
   270a4:	e8 a7 c8 fd ff       	call   3950 <fprintf@plt>
   270a9:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   270ad:	48 89 c1             	mov    rcx,rax
   270b0:	ba 2e 00 00 00       	mov    edx,0x2e
   270b5:	be 01 00 00 00       	mov    esi,0x1
   270ba:	48 8d 3d 37 c1 1b 00 	lea    rdi,[rip+0x1bc137]        # 1e31f8 <parameter_set_rna_turner2004+0x5d6d8>
   270c1:	e8 0a ca fd ff       	call   3ad0 <fwrite@plt>
   270c6:	c7 85 d4 fe ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0x12c],0x1
   270d0:	eb 3a                	jmp    2710c <save_parameter_file+0x17c>
   270d2:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   270d8:	48 98                	cdqe   
   270da:	48 c1 e0 05          	shl    rax,0x5
   270de:	48 89 c2             	mov    rdx,rax
   270e1:	48 8d 05 98 21 1c 00 	lea    rax,[rip+0x1c2198]        # 1e9280 <stack37>
   270e8:	48 01 d0             	add    rax,rdx
   270eb:	48 8d 78 04          	lea    rdi,[rax+0x4]
   270ef:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   270f3:	48 89 c1             	mov    rcx,rax
   270f6:	ba 07 00 00 00       	mov    edx,0x7
   270fb:	be 07 00 00 00       	mov    esi,0x7
   27100:	e8 eb d2 ff ff       	call   243f0 <display_array>
   27105:	83 85 d4 fe ff ff 01 	add    DWORD PTR [rbp-0x12c],0x1
   2710c:	83 bd d4 fe ff ff 07 	cmp    DWORD PTR [rbp-0x12c],0x7
   27113:	7e bd                	jle    270d2 <save_parameter_file+0x142>
   27115:	bf 02 00 00 00       	mov    edi,0x2
   2711a:	e8 3d 1b 00 00       	call   28c5c <settype>
   2711f:	48 89 c2             	mov    rdx,rax
   27122:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   27126:	48 8d 35 c3 c0 1b 00 	lea    rsi,[rip+0x1bc0c3]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   2712d:	48 89 c7             	mov    rdi,rax
   27130:	b8 00 00 00 00       	mov    eax,0x0
   27135:	e8 16 c8 fd ff       	call   3950 <fprintf@plt>
   2713a:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2713e:	48 89 c1             	mov    rcx,rax
   27141:	ba 2e 00 00 00       	mov    edx,0x2e
   27146:	be 01 00 00 00       	mov    esi,0x1
   2714b:	48 8d 3d a6 c0 1b 00 	lea    rdi,[rip+0x1bc0a6]        # 1e31f8 <parameter_set_rna_turner2004+0x5d6d8>
   27152:	e8 79 c9 fd ff       	call   3ad0 <fwrite@plt>
   27157:	c7 85 d4 fe ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0x12c],0x1
   27161:	eb 3a                	jmp    2719d <save_parameter_file+0x20d>
   27163:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   27169:	48 98                	cdqe   
   2716b:	48 c1 e0 05          	shl    rax,0x5
   2716f:	48 89 c2             	mov    rdx,rax
   27172:	48 8d 05 07 22 1c 00 	lea    rax,[rip+0x1c2207]        # 1e9380 <stackdH>
   27179:	48 01 d0             	add    rax,rdx
   2717c:	48 8d 78 04          	lea    rdi,[rax+0x4]
   27180:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   27184:	48 89 c1             	mov    rcx,rax
   27187:	ba 07 00 00 00       	mov    edx,0x7
   2718c:	be 07 00 00 00       	mov    esi,0x7
   27191:	e8 5a d2 ff ff       	call   243f0 <display_array>
   27196:	83 85 d4 fe ff ff 01 	add    DWORD PTR [rbp-0x12c],0x1
   2719d:	83 bd d4 fe ff ff 07 	cmp    DWORD PTR [rbp-0x12c],0x7
   271a4:	7e bd                	jle    27163 <save_parameter_file+0x1d3>
   271a6:	bf 09 00 00 00       	mov    edi,0x9
   271ab:	e8 ac 1a 00 00       	call   28c5c <settype>
   271b0:	48 89 c2             	mov    rdx,rax
   271b3:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   271b7:	48 8d 35 32 c0 1b 00 	lea    rsi,[rip+0x1bc032]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   271be:	48 89 c7             	mov    rdi,rax
   271c1:	b8 00 00 00 00       	mov    eax,0x0
   271c6:	e8 85 c7 fd ff       	call   3950 <fprintf@plt>
   271cb:	c7 85 dc fe ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0x124],0x1
   271d5:	e9 86 00 00 00       	jmp    27260 <save_parameter_file+0x2d0>
   271da:	c7 85 d8 fe ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x128],0x0
   271e4:	eb 6a                	jmp    27250 <save_parameter_file+0x2c0>
   271e6:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
   271ec:	48 98                	cdqe   
   271ee:	48 89 c2             	mov    rdx,rax
   271f1:	48 c1 e2 02          	shl    rdx,0x2
   271f5:	48 01 c2             	add    rdx,rax
   271f8:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   27200:	48 89 c2             	mov    rdx,rax
   27203:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
   27209:	48 63 c8             	movsxd rcx,eax
   2720c:	48 89 c8             	mov    rax,rcx
   2720f:	48 c1 e0 02          	shl    rax,0x2
   27213:	48 01 c8             	add    rax,rcx
   27216:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   2721e:	48 01 c8             	add    rax,rcx
   27221:	48 c1 e0 02          	shl    rax,0x2
   27225:	48 01 c2             	add    rdx,rax
   27228:	48 8d 05 91 2b 1c 00 	lea    rax,[rip+0x1c2b91]        # 1e9dc0 <mismatchH37>
   2722f:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   27233:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   27237:	48 89 c1             	mov    rcx,rax
   2723a:	ba 05 00 00 00       	mov    edx,0x5
   2723f:	be 05 00 00 00       	mov    esi,0x5
   27244:	e8 a7 d1 ff ff       	call   243f0 <display_array>
   27249:	83 85 d8 fe ff ff 01 	add    DWORD PTR [rbp-0x128],0x1
   27250:	83 bd d8 fe ff ff 04 	cmp    DWORD PTR [rbp-0x128],0x4
   27257:	7e 8d                	jle    271e6 <save_parameter_file+0x256>
   27259:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
   27260:	83 bd dc fe ff ff 07 	cmp    DWORD PTR [rbp-0x124],0x7
   27267:	0f 8e 6d ff ff ff    	jle    271da <save_parameter_file+0x24a>
   2726d:	bf 0a 00 00 00       	mov    edi,0xa
   27272:	e8 e5 19 00 00       	call   28c5c <settype>
   27277:	48 89 c2             	mov    rdx,rax
   2727a:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2727e:	48 8d 35 6b bf 1b 00 	lea    rsi,[rip+0x1bbf6b]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   27285:	48 89 c7             	mov    rdi,rax
   27288:	b8 00 00 00 00       	mov    eax,0x0
   2728d:	e8 be c6 fd ff       	call   3950 <fprintf@plt>
   27292:	c7 85 e4 fe ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0x11c],0x1
   2729c:	e9 86 00 00 00       	jmp    27327 <save_parameter_file+0x397>
   272a1:	c7 85 e0 fe ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x120],0x0
   272ab:	eb 6a                	jmp    27317 <save_parameter_file+0x387>
   272ad:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
   272b3:	48 98                	cdqe   
   272b5:	48 89 c2             	mov    rdx,rax
   272b8:	48 c1 e2 02          	shl    rdx,0x2
   272bc:	48 01 c2             	add    rdx,rax
   272bf:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   272c7:	48 89 c2             	mov    rdx,rax
   272ca:	8b 85 e4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x11c]
   272d0:	48 63 c8             	movsxd rcx,eax
   272d3:	48 89 c8             	mov    rax,rcx
   272d6:	48 c1 e0 02          	shl    rax,0x2
   272da:	48 01 c8             	add    rax,rcx
   272dd:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   272e5:	48 01 c8             	add    rax,rcx
   272e8:	48 c1 e0 02          	shl    rax,0x2
   272ec:	48 01 c2             	add    rdx,rax
   272ef:	48 8d 05 ea 2d 1c 00 	lea    rax,[rip+0x1c2dea]        # 1ea0e0 <mismatchHdH>
   272f6:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   272fa:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   272fe:	48 89 c1             	mov    rcx,rax
   27301:	ba 05 00 00 00       	mov    edx,0x5
   27306:	be 05 00 00 00       	mov    esi,0x5
   2730b:	e8 e0 d0 ff ff       	call   243f0 <display_array>
   27310:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
   27317:	83 bd e0 fe ff ff 04 	cmp    DWORD PTR [rbp-0x120],0x4
   2731e:	7e 8d                	jle    272ad <save_parameter_file+0x31d>
   27320:	83 85 e4 fe ff ff 01 	add    DWORD PTR [rbp-0x11c],0x1
   27327:	83 bd e4 fe ff ff 07 	cmp    DWORD PTR [rbp-0x11c],0x7
   2732e:	0f 8e 6d ff ff ff    	jle    272a1 <save_parameter_file+0x311>
   27334:	bf 0b 00 00 00       	mov    edi,0xb
   27339:	e8 1e 19 00 00       	call   28c5c <settype>
   2733e:	48 89 c2             	mov    rdx,rax
   27341:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   27345:	48 8d 35 a4 be 1b 00 	lea    rsi,[rip+0x1bbea4]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   2734c:	48 89 c7             	mov    rdi,rax
   2734f:	b8 00 00 00 00       	mov    eax,0x0
   27354:	e8 f7 c5 fd ff       	call   3950 <fprintf@plt>
   27359:	c7 85 ec fe ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0x114],0x1
   27363:	e9 86 00 00 00       	jmp    273ee <save_parameter_file+0x45e>
   27368:	c7 85 e8 fe ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x118],0x0
   27372:	eb 6a                	jmp    273de <save_parameter_file+0x44e>
   27374:	8b 85 e8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x118]
   2737a:	48 98                	cdqe   
   2737c:	48 89 c2             	mov    rdx,rax
   2737f:	48 c1 e2 02          	shl    rdx,0x2
   27383:	48 01 c2             	add    rdx,rax
   27386:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   2738e:	48 89 c2             	mov    rdx,rax
   27391:	8b 85 ec fe ff ff    	mov    eax,DWORD PTR [rbp-0x114]
   27397:	48 63 c8             	movsxd rcx,eax
   2739a:	48 89 c8             	mov    rax,rcx
   2739d:	48 c1 e0 02          	shl    rax,0x2
   273a1:	48 01 c8             	add    rax,rcx
   273a4:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   273ac:	48 01 c8             	add    rax,rcx
   273af:	48 c1 e0 02          	shl    rax,0x2
   273b3:	48 01 c2             	add    rdx,rax
   273b6:	48 8d 05 c3 23 1c 00 	lea    rax,[rip+0x1c23c3]        # 1e9780 <mismatchI37>
   273bd:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   273c1:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   273c5:	48 89 c1             	mov    rcx,rax
   273c8:	ba 05 00 00 00       	mov    edx,0x5
   273cd:	be 05 00 00 00       	mov    esi,0x5
   273d2:	e8 19 d0 ff ff       	call   243f0 <display_array>
   273d7:	83 85 e8 fe ff ff 01 	add    DWORD PTR [rbp-0x118],0x1
   273de:	83 bd e8 fe ff ff 04 	cmp    DWORD PTR [rbp-0x118],0x4
   273e5:	7e 8d                	jle    27374 <save_parameter_file+0x3e4>
   273e7:	83 85 ec fe ff ff 01 	add    DWORD PTR [rbp-0x114],0x1
   273ee:	83 bd ec fe ff ff 07 	cmp    DWORD PTR [rbp-0x114],0x7
   273f5:	0f 8e 6d ff ff ff    	jle    27368 <save_parameter_file+0x3d8>
   273fb:	bf 0c 00 00 00       	mov    edi,0xc
   27400:	e8 57 18 00 00       	call   28c5c <settype>
   27405:	48 89 c2             	mov    rdx,rax
   27408:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2740c:	48 8d 35 dd bd 1b 00 	lea    rsi,[rip+0x1bbddd]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   27413:	48 89 c7             	mov    rdi,rax
   27416:	b8 00 00 00 00       	mov    eax,0x0
   2741b:	e8 30 c5 fd ff       	call   3950 <fprintf@plt>
   27420:	c7 85 f4 fe ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0x10c],0x1
   2742a:	e9 86 00 00 00       	jmp    274b5 <save_parameter_file+0x525>
   2742f:	c7 85 f0 fe ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x110],0x0
   27439:	eb 6a                	jmp    274a5 <save_parameter_file+0x515>
   2743b:	8b 85 f0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x110]
   27441:	48 98                	cdqe   
   27443:	48 89 c2             	mov    rdx,rax
   27446:	48 c1 e2 02          	shl    rdx,0x2
   2744a:	48 01 c2             	add    rdx,rax
   2744d:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   27455:	48 89 c2             	mov    rdx,rax
   27458:	8b 85 f4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x10c]
   2745e:	48 63 c8             	movsxd rcx,eax
   27461:	48 89 c8             	mov    rax,rcx
   27464:	48 c1 e0 02          	shl    rax,0x2
   27468:	48 01 c8             	add    rax,rcx
   2746b:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   27473:	48 01 c8             	add    rax,rcx
   27476:	48 c1 e0 02          	shl    rax,0x2
   2747a:	48 01 c2             	add    rdx,rax
   2747d:	48 8d 05 1c 26 1c 00 	lea    rax,[rip+0x1c261c]        # 1e9aa0 <mismatchIdH>
   27484:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   27488:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2748c:	48 89 c1             	mov    rcx,rax
   2748f:	ba 05 00 00 00       	mov    edx,0x5
   27494:	be 05 00 00 00       	mov    esi,0x5
   27499:	e8 52 cf ff ff       	call   243f0 <display_array>
   2749e:	83 85 f0 fe ff ff 01 	add    DWORD PTR [rbp-0x110],0x1
   274a5:	83 bd f0 fe ff ff 04 	cmp    DWORD PTR [rbp-0x110],0x4
   274ac:	7e 8d                	jle    2743b <save_parameter_file+0x4ab>
   274ae:	83 85 f4 fe ff ff 01 	add    DWORD PTR [rbp-0x10c],0x1
   274b5:	83 bd f4 fe ff ff 07 	cmp    DWORD PTR [rbp-0x10c],0x7
   274bc:	0f 8e 6d ff ff ff    	jle    2742f <save_parameter_file+0x49f>
   274c2:	bf 0d 00 00 00       	mov    edi,0xd
   274c7:	e8 90 17 00 00       	call   28c5c <settype>
   274cc:	48 89 c2             	mov    rdx,rax
   274cf:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   274d3:	48 8d 35 16 bd 1b 00 	lea    rsi,[rip+0x1bbd16]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   274da:	48 89 c7             	mov    rdi,rax
   274dd:	b8 00 00 00 00       	mov    eax,0x0
   274e2:	e8 69 c4 fd ff       	call   3950 <fprintf@plt>
   274e7:	c7 85 fc fe ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0x104],0x1
   274f1:	e9 86 00 00 00       	jmp    2757c <save_parameter_file+0x5ec>
   274f6:	c7 85 f8 fe ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x108],0x0
   27500:	eb 6a                	jmp    2756c <save_parameter_file+0x5dc>
   27502:	8b 85 f8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x108]
   27508:	48 98                	cdqe   
   2750a:	48 89 c2             	mov    rdx,rax
   2750d:	48 c1 e2 02          	shl    rdx,0x2
   27511:	48 01 c2             	add    rdx,rax
   27514:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   2751c:	48 89 c2             	mov    rdx,rax
   2751f:	8b 85 fc fe ff ff    	mov    eax,DWORD PTR [rbp-0x104]
   27525:	48 63 c8             	movsxd rcx,eax
   27528:	48 89 c8             	mov    rax,rcx
   2752b:	48 c1 e0 02          	shl    rax,0x2
   2752f:	48 01 c8             	add    rax,rcx
   27532:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   2753a:	48 01 c8             	add    rax,rcx
   2753d:	48 c1 e0 02          	shl    rax,0x2
   27541:	48 01 c2             	add    rdx,rax
   27544:	48 8d 05 f5 34 1c 00 	lea    rax,[rip+0x1c34f5]        # 1eaa40 <mismatch1nI37>
   2754b:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   2754f:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   27553:	48 89 c1             	mov    rcx,rax
   27556:	ba 05 00 00 00       	mov    edx,0x5
   2755b:	be 05 00 00 00       	mov    esi,0x5
   27560:	e8 8b ce ff ff       	call   243f0 <display_array>
   27565:	83 85 f8 fe ff ff 01 	add    DWORD PTR [rbp-0x108],0x1
   2756c:	83 bd f8 fe ff ff 04 	cmp    DWORD PTR [rbp-0x108],0x4
   27573:	7e 8d                	jle    27502 <save_parameter_file+0x572>
   27575:	83 85 fc fe ff ff 01 	add    DWORD PTR [rbp-0x104],0x1
   2757c:	83 bd fc fe ff ff 07 	cmp    DWORD PTR [rbp-0x104],0x7
   27583:	0f 8e 6d ff ff ff    	jle    274f6 <save_parameter_file+0x566>
   27589:	bf 0e 00 00 00       	mov    edi,0xe
   2758e:	e8 c9 16 00 00       	call   28c5c <settype>
   27593:	48 89 c2             	mov    rdx,rax
   27596:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2759a:	48 8d 35 4f bc 1b 00 	lea    rsi,[rip+0x1bbc4f]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   275a1:	48 89 c7             	mov    rdi,rax
   275a4:	b8 00 00 00 00       	mov    eax,0x0
   275a9:	e8 a2 c3 fd ff       	call   3950 <fprintf@plt>
   275ae:	c7 85 04 ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0xfc],0x1
   275b8:	e9 86 00 00 00       	jmp    27643 <save_parameter_file+0x6b3>
   275bd:	c7 85 00 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x100],0x0
   275c7:	eb 6a                	jmp    27633 <save_parameter_file+0x6a3>
   275c9:	8b 85 00 ff ff ff    	mov    eax,DWORD PTR [rbp-0x100]
   275cf:	48 98                	cdqe   
   275d1:	48 89 c2             	mov    rdx,rax
   275d4:	48 c1 e2 02          	shl    rdx,0x2
   275d8:	48 01 c2             	add    rdx,rax
   275db:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   275e3:	48 89 c2             	mov    rdx,rax
   275e6:	8b 85 04 ff ff ff    	mov    eax,DWORD PTR [rbp-0xfc]
   275ec:	48 63 c8             	movsxd rcx,eax
   275ef:	48 89 c8             	mov    rax,rcx
   275f2:	48 c1 e0 02          	shl    rax,0x2
   275f6:	48 01 c8             	add    rax,rcx
   275f9:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   27601:	48 01 c8             	add    rax,rcx
   27604:	48 c1 e0 02          	shl    rax,0x2
   27608:	48 01 c2             	add    rdx,rax
   2760b:	48 8d 05 4e 37 1c 00 	lea    rax,[rip+0x1c374e]        # 1ead60 <mismatch1nIdH>
   27612:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   27616:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2761a:	48 89 c1             	mov    rcx,rax
   2761d:	ba 05 00 00 00       	mov    edx,0x5
   27622:	be 05 00 00 00       	mov    esi,0x5
   27627:	e8 c4 cd ff ff       	call   243f0 <display_array>
   2762c:	83 85 00 ff ff ff 01 	add    DWORD PTR [rbp-0x100],0x1
   27633:	83 bd 00 ff ff ff 04 	cmp    DWORD PTR [rbp-0x100],0x4
   2763a:	7e 8d                	jle    275c9 <save_parameter_file+0x639>
   2763c:	83 85 04 ff ff ff 01 	add    DWORD PTR [rbp-0xfc],0x1
   27643:	83 bd 04 ff ff ff 07 	cmp    DWORD PTR [rbp-0xfc],0x7
   2764a:	0f 8e 6d ff ff ff    	jle    275bd <save_parameter_file+0x62d>
   27650:	bf 0f 00 00 00       	mov    edi,0xf
   27655:	e8 02 16 00 00       	call   28c5c <settype>
   2765a:	48 89 c2             	mov    rdx,rax
   2765d:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   27661:	48 8d 35 88 bb 1b 00 	lea    rsi,[rip+0x1bbb88]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   27668:	48 89 c7             	mov    rdi,rax
   2766b:	b8 00 00 00 00       	mov    eax,0x0
   27670:	e8 db c2 fd ff       	call   3950 <fprintf@plt>
   27675:	c7 85 0c ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0xf4],0x1
   2767f:	e9 86 00 00 00       	jmp    2770a <save_parameter_file+0x77a>
   27684:	c7 85 08 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xf8],0x0
   2768e:	eb 6a                	jmp    276fa <save_parameter_file+0x76a>
   27690:	8b 85 08 ff ff ff    	mov    eax,DWORD PTR [rbp-0xf8]
   27696:	48 98                	cdqe   
   27698:	48 89 c2             	mov    rdx,rax
   2769b:	48 c1 e2 02          	shl    rdx,0x2
   2769f:	48 01 c2             	add    rdx,rax
   276a2:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   276aa:	48 89 c2             	mov    rdx,rax
   276ad:	8b 85 0c ff ff ff    	mov    eax,DWORD PTR [rbp-0xf4]
   276b3:	48 63 c8             	movsxd rcx,eax
   276b6:	48 89 c8             	mov    rax,rcx
   276b9:	48 c1 e0 02          	shl    rax,0x2
   276bd:	48 01 c8             	add    rax,rcx
   276c0:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   276c8:	48 01 c8             	add    rax,rcx
   276cb:	48 c1 e0 02          	shl    rax,0x2
   276cf:	48 01 c2             	add    rdx,rax
   276d2:	48 8d 05 a7 39 1c 00 	lea    rax,[rip+0x1c39a7]        # 1eb080 <mismatch23I37>
   276d9:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   276dd:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   276e1:	48 89 c1             	mov    rcx,rax
   276e4:	ba 05 00 00 00       	mov    edx,0x5
   276e9:	be 05 00 00 00       	mov    esi,0x5
   276ee:	e8 fd cc ff ff       	call   243f0 <display_array>
   276f3:	83 85 08 ff ff ff 01 	add    DWORD PTR [rbp-0xf8],0x1
   276fa:	83 bd 08 ff ff ff 04 	cmp    DWORD PTR [rbp-0xf8],0x4
   27701:	7e 8d                	jle    27690 <save_parameter_file+0x700>
   27703:	83 85 0c ff ff ff 01 	add    DWORD PTR [rbp-0xf4],0x1
   2770a:	83 bd 0c ff ff ff 07 	cmp    DWORD PTR [rbp-0xf4],0x7
   27711:	0f 8e 6d ff ff ff    	jle    27684 <save_parameter_file+0x6f4>
   27717:	bf 10 00 00 00       	mov    edi,0x10
   2771c:	e8 3b 15 00 00       	call   28c5c <settype>
   27721:	48 89 c2             	mov    rdx,rax
   27724:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   27728:	48 8d 35 c1 ba 1b 00 	lea    rsi,[rip+0x1bbac1]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   2772f:	48 89 c7             	mov    rdi,rax
   27732:	b8 00 00 00 00       	mov    eax,0x0
   27737:	e8 14 c2 fd ff       	call   3950 <fprintf@plt>
   2773c:	c7 85 14 ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0xec],0x1
   27746:	e9 86 00 00 00       	jmp    277d1 <save_parameter_file+0x841>
   2774b:	c7 85 10 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xf0],0x0
   27755:	eb 6a                	jmp    277c1 <save_parameter_file+0x831>
   27757:	8b 85 10 ff ff ff    	mov    eax,DWORD PTR [rbp-0xf0]
   2775d:	48 98                	cdqe   
   2775f:	48 89 c2             	mov    rdx,rax
   27762:	48 c1 e2 02          	shl    rdx,0x2
   27766:	48 01 c2             	add    rdx,rax
   27769:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   27771:	48 89 c2             	mov    rdx,rax
   27774:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
   2777a:	48 63 c8             	movsxd rcx,eax
   2777d:	48 89 c8             	mov    rax,rcx
   27780:	48 c1 e0 02          	shl    rax,0x2
   27784:	48 01 c8             	add    rax,rcx
   27787:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   2778f:	48 01 c8             	add    rax,rcx
   27792:	48 c1 e0 02          	shl    rax,0x2
   27796:	48 01 c2             	add    rdx,rax
   27799:	48 8d 05 00 3c 1c 00 	lea    rax,[rip+0x1c3c00]        # 1eb3a0 <mismatch23IdH>
   277a0:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   277a4:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   277a8:	48 89 c1             	mov    rcx,rax
   277ab:	ba 05 00 00 00       	mov    edx,0x5
   277b0:	be 05 00 00 00       	mov    esi,0x5
   277b5:	e8 36 cc ff ff       	call   243f0 <display_array>
   277ba:	83 85 10 ff ff ff 01 	add    DWORD PTR [rbp-0xf0],0x1
   277c1:	83 bd 10 ff ff ff 04 	cmp    DWORD PTR [rbp-0xf0],0x4
   277c8:	7e 8d                	jle    27757 <save_parameter_file+0x7c7>
   277ca:	83 85 14 ff ff ff 01 	add    DWORD PTR [rbp-0xec],0x1
   277d1:	83 bd 14 ff ff ff 07 	cmp    DWORD PTR [rbp-0xec],0x7
   277d8:	0f 8e 6d ff ff ff    	jle    2774b <save_parameter_file+0x7bb>
   277de:	bf 11 00 00 00       	mov    edi,0x11
   277e3:	e8 74 14 00 00       	call   28c5c <settype>
   277e8:	48 89 c2             	mov    rdx,rax
   277eb:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   277ef:	48 8d 35 fa b9 1b 00 	lea    rsi,[rip+0x1bb9fa]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   277f6:	48 89 c7             	mov    rdi,rax
   277f9:	b8 00 00 00 00       	mov    eax,0x0
   277fe:	e8 4d c1 fd ff       	call   3950 <fprintf@plt>
   27803:	c7 85 1c ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0xe4],0x1
   2780d:	e9 86 00 00 00       	jmp    27898 <save_parameter_file+0x908>
   27812:	c7 85 18 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xe8],0x0
   2781c:	eb 6a                	jmp    27888 <save_parameter_file+0x8f8>
   2781e:	8b 85 18 ff ff ff    	mov    eax,DWORD PTR [rbp-0xe8]
   27824:	48 98                	cdqe   
   27826:	48 89 c2             	mov    rdx,rax
   27829:	48 c1 e2 02          	shl    rdx,0x2
   2782d:	48 01 c2             	add    rdx,rax
   27830:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   27838:	48 89 c2             	mov    rdx,rax
   2783b:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
   27841:	48 63 c8             	movsxd rcx,eax
   27844:	48 89 c8             	mov    rax,rcx
   27847:	48 c1 e0 02          	shl    rax,0x2
   2784b:	48 01 c8             	add    rax,rcx
   2784e:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   27856:	48 01 c8             	add    rax,rcx
   27859:	48 c1 e0 02          	shl    rax,0x2
   2785d:	48 01 c2             	add    rdx,rax
   27860:	48 8d 05 99 2b 1c 00 	lea    rax,[rip+0x1c2b99]        # 1ea400 <mismatchM37>
   27867:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   2786b:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2786f:	48 89 c1             	mov    rcx,rax
   27872:	ba 05 00 00 00       	mov    edx,0x5
   27877:	be 05 00 00 00       	mov    esi,0x5
   2787c:	e8 6f cb ff ff       	call   243f0 <display_array>
   27881:	83 85 18 ff ff ff 01 	add    DWORD PTR [rbp-0xe8],0x1
   27888:	83 bd 18 ff ff ff 04 	cmp    DWORD PTR [rbp-0xe8],0x4
   2788f:	7e 8d                	jle    2781e <save_parameter_file+0x88e>
   27891:	83 85 1c ff ff ff 01 	add    DWORD PTR [rbp-0xe4],0x1
   27898:	83 bd 1c ff ff ff 07 	cmp    DWORD PTR [rbp-0xe4],0x7
   2789f:	0f 8e 6d ff ff ff    	jle    27812 <save_parameter_file+0x882>
   278a5:	bf 12 00 00 00       	mov    edi,0x12
   278aa:	e8 ad 13 00 00       	call   28c5c <settype>
   278af:	48 89 c2             	mov    rdx,rax
   278b2:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   278b6:	48 8d 35 33 b9 1b 00 	lea    rsi,[rip+0x1bb933]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   278bd:	48 89 c7             	mov    rdi,rax
   278c0:	b8 00 00 00 00       	mov    eax,0x0
   278c5:	e8 86 c0 fd ff       	call   3950 <fprintf@plt>
   278ca:	c7 85 24 ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0xdc],0x1
   278d4:	e9 86 00 00 00       	jmp    2795f <save_parameter_file+0x9cf>
   278d9:	c7 85 20 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xe0],0x0
   278e3:	eb 6a                	jmp    2794f <save_parameter_file+0x9bf>
   278e5:	8b 85 20 ff ff ff    	mov    eax,DWORD PTR [rbp-0xe0]
   278eb:	48 98                	cdqe   
   278ed:	48 89 c2             	mov    rdx,rax
   278f0:	48 c1 e2 02          	shl    rdx,0x2
   278f4:	48 01 c2             	add    rdx,rax
   278f7:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   278ff:	48 89 c2             	mov    rdx,rax
   27902:	8b 85 24 ff ff ff    	mov    eax,DWORD PTR [rbp-0xdc]
   27908:	48 63 c8             	movsxd rcx,eax
   2790b:	48 89 c8             	mov    rax,rcx
   2790e:	48 c1 e0 02          	shl    rax,0x2
   27912:	48 01 c8             	add    rax,rcx
   27915:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   2791d:	48 01 c8             	add    rax,rcx
   27920:	48 c1 e0 02          	shl    rax,0x2
   27924:	48 01 c2             	add    rdx,rax
   27927:	48 8d 05 f2 2d 1c 00 	lea    rax,[rip+0x1c2df2]        # 1ea720 <mismatchMdH>
   2792e:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   27932:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   27936:	48 89 c1             	mov    rcx,rax
   27939:	ba 05 00 00 00       	mov    edx,0x5
   2793e:	be 05 00 00 00       	mov    esi,0x5
   27943:	e8 a8 ca ff ff       	call   243f0 <display_array>
   27948:	83 85 20 ff ff ff 01 	add    DWORD PTR [rbp-0xe0],0x1
   2794f:	83 bd 20 ff ff ff 04 	cmp    DWORD PTR [rbp-0xe0],0x4
   27956:	7e 8d                	jle    278e5 <save_parameter_file+0x955>
   27958:	83 85 24 ff ff ff 01 	add    DWORD PTR [rbp-0xdc],0x1
   2795f:	83 bd 24 ff ff ff 07 	cmp    DWORD PTR [rbp-0xdc],0x7
   27966:	0f 8e 6d ff ff ff    	jle    278d9 <save_parameter_file+0x949>
   2796c:	bf 13 00 00 00       	mov    edi,0x13
   27971:	e8 e6 12 00 00       	call   28c5c <settype>
   27976:	48 89 c2             	mov    rdx,rax
   27979:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2797d:	48 8d 35 6c b8 1b 00 	lea    rsi,[rip+0x1bb86c]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   27984:	48 89 c7             	mov    rdi,rax
   27987:	b8 00 00 00 00       	mov    eax,0x0
   2798c:	e8 bf bf fd ff       	call   3950 <fprintf@plt>
   27991:	c7 85 2c ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0xd4],0x1
   2799b:	e9 86 00 00 00       	jmp    27a26 <save_parameter_file+0xa96>
   279a0:	c7 85 28 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xd8],0x0
   279aa:	eb 6a                	jmp    27a16 <save_parameter_file+0xa86>
   279ac:	8b 85 28 ff ff ff    	mov    eax,DWORD PTR [rbp-0xd8]
   279b2:	48 98                	cdqe   
   279b4:	48 89 c2             	mov    rdx,rax
   279b7:	48 c1 e2 02          	shl    rdx,0x2
   279bb:	48 01 c2             	add    rdx,rax
   279be:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   279c6:	48 89 c2             	mov    rdx,rax
   279c9:	8b 85 2c ff ff ff    	mov    eax,DWORD PTR [rbp-0xd4]
   279cf:	48 63 c8             	movsxd rcx,eax
   279d2:	48 89 c8             	mov    rax,rcx
   279d5:	48 c1 e0 02          	shl    rax,0x2
   279d9:	48 01 c8             	add    rax,rcx
   279dc:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   279e4:	48 01 c8             	add    rax,rcx
   279e7:	48 c1 e0 02          	shl    rax,0x2
   279eb:	48 01 c2             	add    rdx,rax
   279ee:	48 8d 05 cb 3c 1c 00 	lea    rax,[rip+0x1c3ccb]        # 1eb6c0 <mismatchExt37>
   279f5:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   279f9:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   279fd:	48 89 c1             	mov    rcx,rax
   27a00:	ba 05 00 00 00       	mov    edx,0x5
   27a05:	be 05 00 00 00       	mov    esi,0x5
   27a0a:	e8 e1 c9 ff ff       	call   243f0 <display_array>
   27a0f:	83 85 28 ff ff ff 01 	add    DWORD PTR [rbp-0xd8],0x1
   27a16:	83 bd 28 ff ff ff 04 	cmp    DWORD PTR [rbp-0xd8],0x4
   27a1d:	7e 8d                	jle    279ac <save_parameter_file+0xa1c>
   27a1f:	83 85 2c ff ff ff 01 	add    DWORD PTR [rbp-0xd4],0x1
   27a26:	83 bd 2c ff ff ff 07 	cmp    DWORD PTR [rbp-0xd4],0x7
   27a2d:	0f 8e 6d ff ff ff    	jle    279a0 <save_parameter_file+0xa10>
   27a33:	bf 14 00 00 00       	mov    edi,0x14
   27a38:	e8 1f 12 00 00       	call   28c5c <settype>
   27a3d:	48 89 c2             	mov    rdx,rax
   27a40:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   27a44:	48 8d 35 a5 b7 1b 00 	lea    rsi,[rip+0x1bb7a5]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   27a4b:	48 89 c7             	mov    rdi,rax
   27a4e:	b8 00 00 00 00       	mov    eax,0x0
   27a53:	e8 f8 be fd ff       	call   3950 <fprintf@plt>
   27a58:	c7 85 34 ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0xcc],0x1
   27a62:	e9 86 00 00 00       	jmp    27aed <save_parameter_file+0xb5d>
   27a67:	c7 85 30 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xd0],0x0
   27a71:	eb 6a                	jmp    27add <save_parameter_file+0xb4d>
   27a73:	8b 85 30 ff ff ff    	mov    eax,DWORD PTR [rbp-0xd0]
   27a79:	48 98                	cdqe   
   27a7b:	48 89 c2             	mov    rdx,rax
   27a7e:	48 c1 e2 02          	shl    rdx,0x2
   27a82:	48 01 c2             	add    rdx,rax
   27a85:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   27a8d:	48 89 c2             	mov    rdx,rax
   27a90:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [rbp-0xcc]
   27a96:	48 63 c8             	movsxd rcx,eax
   27a99:	48 89 c8             	mov    rax,rcx
   27a9c:	48 c1 e0 02          	shl    rax,0x2
   27aa0:	48 01 c8             	add    rax,rcx
   27aa3:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   27aab:	48 01 c8             	add    rax,rcx
   27aae:	48 c1 e0 02          	shl    rax,0x2
   27ab2:	48 01 c2             	add    rdx,rax
   27ab5:	48 8d 05 24 3f 1c 00 	lea    rax,[rip+0x1c3f24]        # 1eb9e0 <mismatchExtdH>
   27abc:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   27ac0:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   27ac4:	48 89 c1             	mov    rcx,rax
   27ac7:	ba 05 00 00 00       	mov    edx,0x5
   27acc:	be 05 00 00 00       	mov    esi,0x5
   27ad1:	e8 1a c9 ff ff       	call   243f0 <display_array>
   27ad6:	83 85 30 ff ff ff 01 	add    DWORD PTR [rbp-0xd0],0x1
   27add:	83 bd 30 ff ff ff 04 	cmp    DWORD PTR [rbp-0xd0],0x4
   27ae4:	7e 8d                	jle    27a73 <save_parameter_file+0xae3>
   27ae6:	83 85 34 ff ff ff 01 	add    DWORD PTR [rbp-0xcc],0x1
   27aed:	83 bd 34 ff ff ff 07 	cmp    DWORD PTR [rbp-0xcc],0x7
   27af4:	0f 8e 6d ff ff ff    	jle    27a67 <save_parameter_file+0xad7>
   27afa:	bf 15 00 00 00       	mov    edi,0x15
   27aff:	e8 58 11 00 00       	call   28c5c <settype>
   27b04:	48 89 c2             	mov    rdx,rax
   27b07:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   27b0b:	48 8d 35 de b6 1b 00 	lea    rsi,[rip+0x1bb6de]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   27b12:	48 89 c7             	mov    rdi,rax
   27b15:	b8 00 00 00 00       	mov    eax,0x0
   27b1a:	e8 31 be fd ff       	call   3950 <fprintf@plt>
   27b1f:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   27b23:	48 89 c1             	mov    rcx,rax
   27b26:	ba 23 00 00 00       	mov    edx,0x23
   27b2b:	be 01 00 00 00       	mov    esi,0x1
   27b30:	48 8d 3d f1 b6 1b 00 	lea    rdi,[rip+0x1bb6f1]        # 1e3228 <parameter_set_rna_turner2004+0x5d708>
   27b37:	e8 94 bf fd ff       	call   3ad0 <fwrite@plt>
   27b3c:	c7 85 d4 fe ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0x12c],0x1
   27b46:	eb 3f                	jmp    27b87 <save_parameter_file+0xbf7>
   27b48:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   27b4e:	48 63 d0             	movsxd rdx,eax
   27b51:	48 89 d0             	mov    rax,rdx
   27b54:	48 c1 e0 02          	shl    rax,0x2
   27b58:	48 01 d0             	add    rax,rdx
   27b5b:	48 c1 e0 02          	shl    rax,0x2
   27b5f:	48 8d 15 9a 41 1c 00 	lea    rdx,[rip+0x1c419a]        # 1ebd00 <dangle5_37>
   27b66:	48 8d 3c 10          	lea    rdi,[rax+rdx*1]
   27b6a:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   27b6e:	48 89 c1             	mov    rcx,rax
   27b71:	ba 05 00 00 00       	mov    edx,0x5
   27b76:	be 05 00 00 00       	mov    esi,0x5
   27b7b:	e8 70 c8 ff ff       	call   243f0 <display_array>
   27b80:	83 85 d4 fe ff ff 01 	add    DWORD PTR [rbp-0x12c],0x1
   27b87:	83 bd d4 fe ff ff 07 	cmp    DWORD PTR [rbp-0x12c],0x7
   27b8e:	7e b8                	jle    27b48 <save_parameter_file+0xbb8>
   27b90:	bf 16 00 00 00       	mov    edi,0x16
   27b95:	e8 c2 10 00 00       	call   28c5c <settype>
   27b9a:	48 89 c2             	mov    rdx,rax
   27b9d:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   27ba1:	48 8d 35 48 b6 1b 00 	lea    rsi,[rip+0x1bb648]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   27ba8:	48 89 c7             	mov    rdi,rax
   27bab:	b8 00 00 00 00       	mov    eax,0x0
   27bb0:	e8 9b bd fd ff       	call   3950 <fprintf@plt>
   27bb5:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   27bb9:	48 89 c1             	mov    rcx,rax
   27bbc:	ba 23 00 00 00       	mov    edx,0x23
   27bc1:	be 01 00 00 00       	mov    esi,0x1
   27bc6:	48 8d 3d 5b b6 1b 00 	lea    rdi,[rip+0x1bb65b]        # 1e3228 <parameter_set_rna_turner2004+0x5d708>
   27bcd:	e8 fe be fd ff       	call   3ad0 <fwrite@plt>
   27bd2:	c7 85 d4 fe ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0x12c],0x1
   27bdc:	eb 3f                	jmp    27c1d <save_parameter_file+0xc8d>
   27bde:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   27be4:	48 63 d0             	movsxd rdx,eax
   27be7:	48 89 d0             	mov    rax,rdx
   27bea:	48 c1 e0 02          	shl    rax,0x2
   27bee:	48 01 d0             	add    rax,rdx
   27bf1:	48 c1 e0 02          	shl    rax,0x2
   27bf5:	48 8d 15 44 42 1c 00 	lea    rdx,[rip+0x1c4244]        # 1ebe40 <dangle5_dH>
   27bfc:	48 8d 3c 10          	lea    rdi,[rax+rdx*1]
   27c00:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   27c04:	48 89 c1             	mov    rcx,rax
   27c07:	ba 05 00 00 00       	mov    edx,0x5
   27c0c:	be 05 00 00 00       	mov    esi,0x5
   27c11:	e8 da c7 ff ff       	call   243f0 <display_array>
   27c16:	83 85 d4 fe ff ff 01 	add    DWORD PTR [rbp-0x12c],0x1
   27c1d:	83 bd d4 fe ff ff 07 	cmp    DWORD PTR [rbp-0x12c],0x7
   27c24:	7e b8                	jle    27bde <save_parameter_file+0xc4e>
   27c26:	bf 17 00 00 00       	mov    edi,0x17
   27c2b:	e8 2c 10 00 00       	call   28c5c <settype>
   27c30:	48 89 c2             	mov    rdx,rax
   27c33:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   27c37:	48 8d 35 b2 b5 1b 00 	lea    rsi,[rip+0x1bb5b2]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   27c3e:	48 89 c7             	mov    rdi,rax
   27c41:	b8 00 00 00 00       	mov    eax,0x0
   27c46:	e8 05 bd fd ff       	call   3950 <fprintf@plt>
   27c4b:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   27c4f:	48 89 c1             	mov    rcx,rax
   27c52:	ba 23 00 00 00       	mov    edx,0x23
   27c57:	be 01 00 00 00       	mov    esi,0x1
   27c5c:	48 8d 3d c5 b5 1b 00 	lea    rdi,[rip+0x1bb5c5]        # 1e3228 <parameter_set_rna_turner2004+0x5d708>
   27c63:	e8 68 be fd ff       	call   3ad0 <fwrite@plt>
   27c68:	c7 85 d4 fe ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0x12c],0x1
   27c72:	eb 3f                	jmp    27cb3 <save_parameter_file+0xd23>
   27c74:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   27c7a:	48 63 d0             	movsxd rdx,eax
   27c7d:	48 89 d0             	mov    rax,rdx
   27c80:	48 c1 e0 02          	shl    rax,0x2
   27c84:	48 01 d0             	add    rax,rdx
   27c87:	48 c1 e0 02          	shl    rax,0x2
   27c8b:	48 8d 15 0e 41 1c 00 	lea    rdx,[rip+0x1c410e]        # 1ebda0 <dangle3_37>
   27c92:	48 8d 3c 10          	lea    rdi,[rax+rdx*1]
   27c96:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   27c9a:	48 89 c1             	mov    rcx,rax
   27c9d:	ba 05 00 00 00       	mov    edx,0x5
   27ca2:	be 05 00 00 00       	mov    esi,0x5
   27ca7:	e8 44 c7 ff ff       	call   243f0 <display_array>
   27cac:	83 85 d4 fe ff ff 01 	add    DWORD PTR [rbp-0x12c],0x1
   27cb3:	83 bd d4 fe ff ff 07 	cmp    DWORD PTR [rbp-0x12c],0x7
   27cba:	7e b8                	jle    27c74 <save_parameter_file+0xce4>
   27cbc:	bf 18 00 00 00       	mov    edi,0x18
   27cc1:	e8 96 0f 00 00       	call   28c5c <settype>
   27cc6:	48 89 c2             	mov    rdx,rax
   27cc9:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   27ccd:	48 8d 35 1c b5 1b 00 	lea    rsi,[rip+0x1bb51c]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   27cd4:	48 89 c7             	mov    rdi,rax
   27cd7:	b8 00 00 00 00       	mov    eax,0x0
   27cdc:	e8 6f bc fd ff       	call   3950 <fprintf@plt>
   27ce1:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   27ce5:	48 89 c1             	mov    rcx,rax
   27ce8:	ba 23 00 00 00       	mov    edx,0x23
   27ced:	be 01 00 00 00       	mov    esi,0x1
   27cf2:	48 8d 3d 2f b5 1b 00 	lea    rdi,[rip+0x1bb52f]        # 1e3228 <parameter_set_rna_turner2004+0x5d708>
   27cf9:	e8 d2 bd fd ff       	call   3ad0 <fwrite@plt>
   27cfe:	c7 85 d4 fe ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0x12c],0x1
   27d08:	eb 3f                	jmp    27d49 <save_parameter_file+0xdb9>
   27d0a:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   27d10:	48 63 d0             	movsxd rdx,eax
   27d13:	48 89 d0             	mov    rax,rdx
   27d16:	48 c1 e0 02          	shl    rax,0x2
   27d1a:	48 01 d0             	add    rax,rdx
   27d1d:	48 c1 e0 02          	shl    rax,0x2
   27d21:	48 8d 15 b8 41 1c 00 	lea    rdx,[rip+0x1c41b8]        # 1ebee0 <dangle3_dH>
   27d28:	48 8d 3c 10          	lea    rdi,[rax+rdx*1]
   27d2c:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   27d30:	48 89 c1             	mov    rcx,rax
   27d33:	ba 05 00 00 00       	mov    edx,0x5
   27d38:	be 05 00 00 00       	mov    esi,0x5
   27d3d:	e8 ae c6 ff ff       	call   243f0 <display_array>
   27d42:	83 85 d4 fe ff ff 01 	add    DWORD PTR [rbp-0x12c],0x1
   27d49:	83 bd d4 fe ff ff 07 	cmp    DWORD PTR [rbp-0x12c],0x7
   27d50:	7e b8                	jle    27d0a <save_parameter_file+0xd7a>
   27d52:	bf 19 00 00 00       	mov    edi,0x19
   27d57:	e8 00 0f 00 00       	call   28c5c <settype>
   27d5c:	48 89 c2             	mov    rdx,rax
   27d5f:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   27d63:	48 8d 35 86 b4 1b 00 	lea    rsi,[rip+0x1bb486]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   27d6a:	48 89 c7             	mov    rdi,rax
   27d6d:	b8 00 00 00 00       	mov    eax,0x0
   27d72:	e8 d9 bb fd ff       	call   3950 <fprintf@plt>
   27d77:	c7 85 3c ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0xc4],0x1
   27d81:	e9 09 01 00 00       	jmp    27e8f <save_parameter_file+0xeff>
   27d86:	c7 85 40 ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0xc0],0x1
   27d90:	e9 e6 00 00 00       	jmp    27e7b <save_parameter_file+0xeeb>
   27d95:	8b 85 40 ff ff ff    	mov    eax,DWORD PTR [rbp-0xc0]
   27d9b:	48 98                	cdqe   
   27d9d:	48 8b 4c c5 a0       	mov    rcx,QWORD PTR [rbp+rax*8-0x60]
   27da2:	8b 85 3c ff ff ff    	mov    eax,DWORD PTR [rbp-0xc4]
   27da8:	48 98                	cdqe   
   27daa:	48 8b 54 c5 a0       	mov    rdx,QWORD PTR [rbp+rax*8-0x60]
   27daf:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   27db3:	48 8d 35 92 b4 1b 00 	lea    rsi,[rip+0x1bb492]        # 1e324c <parameter_set_rna_turner2004+0x5d72c>
   27dba:	48 89 c7             	mov    rdi,rax
   27dbd:	b8 00 00 00 00       	mov    eax,0x0
   27dc2:	e8 89 bb fd ff       	call   3950 <fprintf@plt>
   27dc7:	c7 85 38 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xc8],0x0
   27dd1:	e9 91 00 00 00       	jmp    27e67 <save_parameter_file+0xed7>
   27dd6:	8b 85 38 ff ff ff    	mov    eax,DWORD PTR [rbp-0xc8]
   27ddc:	48 98                	cdqe   
   27dde:	48 89 c2             	mov    rdx,rax
   27de1:	48 c1 e2 02          	shl    rdx,0x2
   27de5:	48 01 c2             	add    rdx,rax
   27de8:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   27df0:	48 89 c2             	mov    rdx,rax
   27df3:	8b 85 40 ff ff ff    	mov    eax,DWORD PTR [rbp-0xc0]
   27df9:	48 63 c8             	movsxd rcx,eax
   27dfc:	48 89 c8             	mov    rax,rcx
   27dff:	48 c1 e0 02          	shl    rax,0x2
   27e03:	48 01 c8             	add    rax,rcx
   27e06:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   27e0e:	48 01 c8             	add    rax,rcx
   27e11:	48 c1 e0 02          	shl    rax,0x2
   27e15:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
   27e19:	8b 85 3c ff ff ff    	mov    eax,DWORD PTR [rbp-0xc4]
   27e1f:	48 63 d0             	movsxd rdx,eax
   27e22:	48 89 d0             	mov    rax,rdx
   27e25:	48 c1 e0 02          	shl    rax,0x2
   27e29:	48 01 d0             	add    rax,rdx
   27e2c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   27e34:	48 01 d0             	add    rax,rdx
   27e37:	48 c1 e0 05          	shl    rax,0x5
   27e3b:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   27e3f:	48 8d 05 9a 48 1c 00 	lea    rax,[rip+0x1c489a]        # 1ec6e0 <int11_37>
   27e46:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   27e4a:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   27e4e:	48 89 c1             	mov    rcx,rax
   27e51:	ba 05 00 00 00       	mov    edx,0x5
   27e56:	be 05 00 00 00       	mov    esi,0x5
   27e5b:	e8 90 c5 ff ff       	call   243f0 <display_array>
   27e60:	83 85 38 ff ff ff 01 	add    DWORD PTR [rbp-0xc8],0x1
   27e67:	83 bd 38 ff ff ff 04 	cmp    DWORD PTR [rbp-0xc8],0x4
   27e6e:	0f 8e 62 ff ff ff    	jle    27dd6 <save_parameter_file+0xe46>
   27e74:	83 85 40 ff ff ff 01 	add    DWORD PTR [rbp-0xc0],0x1
   27e7b:	83 bd 40 ff ff ff 07 	cmp    DWORD PTR [rbp-0xc0],0x7
   27e82:	0f 8e 0d ff ff ff    	jle    27d95 <save_parameter_file+0xe05>
   27e88:	83 85 3c ff ff ff 01 	add    DWORD PTR [rbp-0xc4],0x1
   27e8f:	83 bd 3c ff ff ff 07 	cmp    DWORD PTR [rbp-0xc4],0x7
   27e96:	0f 8e ea fe ff ff    	jle    27d86 <save_parameter_file+0xdf6>
   27e9c:	bf 1a 00 00 00       	mov    edi,0x1a
   27ea1:	e8 b6 0d 00 00       	call   28c5c <settype>
   27ea6:	48 89 c2             	mov    rdx,rax
   27ea9:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   27ead:	48 8d 35 3c b3 1b 00 	lea    rsi,[rip+0x1bb33c]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   27eb4:	48 89 c7             	mov    rdi,rax
   27eb7:	b8 00 00 00 00       	mov    eax,0x0
   27ebc:	e8 8f ba fd ff       	call   3950 <fprintf@plt>
   27ec1:	c7 85 48 ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0xb8],0x1
   27ecb:	e9 09 01 00 00       	jmp    27fd9 <save_parameter_file+0x1049>
   27ed0:	c7 85 4c ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0xb4],0x1
   27eda:	e9 e6 00 00 00       	jmp    27fc5 <save_parameter_file+0x1035>
   27edf:	8b 85 4c ff ff ff    	mov    eax,DWORD PTR [rbp-0xb4]
   27ee5:	48 98                	cdqe   
   27ee7:	48 8b 4c c5 a0       	mov    rcx,QWORD PTR [rbp+rax*8-0x60]
   27eec:	8b 85 48 ff ff ff    	mov    eax,DWORD PTR [rbp-0xb8]
   27ef2:	48 98                	cdqe   
   27ef4:	48 8b 54 c5 a0       	mov    rdx,QWORD PTR [rbp+rax*8-0x60]
   27ef9:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   27efd:	48 8d 35 48 b3 1b 00 	lea    rsi,[rip+0x1bb348]        # 1e324c <parameter_set_rna_turner2004+0x5d72c>
   27f04:	48 89 c7             	mov    rdi,rax
   27f07:	b8 00 00 00 00       	mov    eax,0x0
   27f0c:	e8 3f ba fd ff       	call   3950 <fprintf@plt>
   27f11:	c7 85 44 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xbc],0x0
   27f1b:	e9 91 00 00 00       	jmp    27fb1 <save_parameter_file+0x1021>
   27f20:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   27f26:	48 98                	cdqe   
   27f28:	48 89 c2             	mov    rdx,rax
   27f2b:	48 c1 e2 02          	shl    rdx,0x2
   27f2f:	48 01 c2             	add    rdx,rax
   27f32:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   27f3a:	48 89 c2             	mov    rdx,rax
   27f3d:	8b 85 4c ff ff ff    	mov    eax,DWORD PTR [rbp-0xb4]
   27f43:	48 63 c8             	movsxd rcx,eax
   27f46:	48 89 c8             	mov    rax,rcx
   27f49:	48 c1 e0 02          	shl    rax,0x2
   27f4d:	48 01 c8             	add    rax,rcx
   27f50:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   27f58:	48 01 c8             	add    rax,rcx
   27f5b:	48 c1 e0 02          	shl    rax,0x2
   27f5f:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
   27f63:	8b 85 48 ff ff ff    	mov    eax,DWORD PTR [rbp-0xb8]
   27f69:	48 63 d0             	movsxd rdx,eax
   27f6c:	48 89 d0             	mov    rax,rdx
   27f6f:	48 c1 e0 02          	shl    rax,0x2
   27f73:	48 01 d0             	add    rax,rdx
   27f76:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   27f7e:	48 01 d0             	add    rax,rdx
   27f81:	48 c1 e0 05          	shl    rax,0x5
   27f85:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   27f89:	48 8d 05 50 60 1c 00 	lea    rax,[rip+0x1c6050]        # 1edfe0 <int11_dH>
   27f90:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   27f94:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   27f98:	48 89 c1             	mov    rcx,rax
   27f9b:	ba 05 00 00 00       	mov    edx,0x5
   27fa0:	be 05 00 00 00       	mov    esi,0x5
   27fa5:	e8 46 c4 ff ff       	call   243f0 <display_array>
   27faa:	83 85 44 ff ff ff 01 	add    DWORD PTR [rbp-0xbc],0x1
   27fb1:	83 bd 44 ff ff ff 04 	cmp    DWORD PTR [rbp-0xbc],0x4
   27fb8:	0f 8e 62 ff ff ff    	jle    27f20 <save_parameter_file+0xf90>
   27fbe:	83 85 4c ff ff ff 01 	add    DWORD PTR [rbp-0xb4],0x1
   27fc5:	83 bd 4c ff ff ff 07 	cmp    DWORD PTR [rbp-0xb4],0x7
   27fcc:	0f 8e 0d ff ff ff    	jle    27edf <save_parameter_file+0xf4f>
   27fd2:	83 85 48 ff ff ff 01 	add    DWORD PTR [rbp-0xb8],0x1
   27fd9:	83 bd 48 ff ff ff 07 	cmp    DWORD PTR [rbp-0xb8],0x7
   27fe0:	0f 8e ea fe ff ff    	jle    27ed0 <save_parameter_file+0xf40>
   27fe6:	bf 1b 00 00 00       	mov    edi,0x1b
   27feb:	e8 6c 0c 00 00       	call   28c5c <settype>
   27ff0:	48 89 c2             	mov    rdx,rax
   27ff3:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   27ff7:	48 8d 35 f2 b1 1b 00 	lea    rsi,[rip+0x1bb1f2]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   27ffe:	48 89 c7             	mov    rdi,rax
   28001:	b8 00 00 00 00       	mov    eax,0x0
   28006:	e8 45 b9 fd ff       	call   3950 <fprintf@plt>
   2800b:	c7 85 50 ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0xb0],0x1
   28015:	e9 3e 01 00 00       	jmp    28158 <save_parameter_file+0x11c8>
   2801a:	c7 85 54 ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0xac],0x1
   28024:	e9 1b 01 00 00       	jmp    28144 <save_parameter_file+0x11b4>
   28029:	c7 85 58 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xa8],0x0
   28033:	e9 f8 00 00 00       	jmp    28130 <save_parameter_file+0x11a0>
   28038:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   2803e:	48 98                	cdqe   
   28040:	48 8b 74 c5 a0       	mov    rsi,QWORD PTR [rbp+rax*8-0x60]
   28045:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
   2804b:	48 98                	cdqe   
   2804d:	0f b6 44 05 e2       	movzx  eax,BYTE PTR [rbp+rax*1-0x1e]
   28052:	0f be c8             	movsx  ecx,al
   28055:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [rbp-0xb0]
   2805b:	48 98                	cdqe   
   2805d:	48 8b 54 c5 a0       	mov    rdx,QWORD PTR [rbp+rax*8-0x60]
   28062:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   28066:	49 89 f0             	mov    r8,rsi
   28069:	48 8d 35 ec b1 1b 00 	lea    rsi,[rip+0x1bb1ec]        # 1e325c <parameter_set_rna_turner2004+0x5d73c>
   28070:	48 89 c7             	mov    rdi,rax
   28073:	b8 00 00 00 00       	mov    eax,0x0
   28078:	e8 d3 b8 fd ff       	call   3950 <fprintf@plt>
   2807d:	c7 85 5c ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xa4],0x0
   28087:	e9 90 00 00 00       	jmp    2811c <save_parameter_file+0x118c>
   2808c:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   28092:	48 98                	cdqe   
   28094:	48 89 c2             	mov    rdx,rax
   28097:	48 c1 e2 02          	shl    rdx,0x2
   2809b:	48 01 c2             	add    rdx,rax
   2809e:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   280a6:	48 89 c2             	mov    rdx,rax
   280a9:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
   280af:	48 63 c8             	movsxd rcx,eax
   280b2:	48 89 c8             	mov    rax,rcx
   280b5:	48 c1 e0 02          	shl    rax,0x2
   280b9:	48 01 c8             	add    rax,rcx
   280bc:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   280c4:	48 01 c8             	add    rax,rcx
   280c7:	48 c1 e0 02          	shl    rax,0x2
   280cb:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
   280cf:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [rbp-0xb0]
   280d5:	48 98                	cdqe   
   280d7:	48 69 d0 a0 0f 00 00 	imul   rdx,rax,0xfa0
   280de:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   280e4:	48 98                	cdqe   
   280e6:	48 69 c0 f4 01 00 00 	imul   rax,rax,0x1f4
   280ed:	48 01 d0             	add    rax,rdx
   280f0:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   280f4:	48 8d 05 e5 77 1c 00 	lea    rax,[rip+0x1c77e5]        # 1ef8e0 <int21_37>
   280fb:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   280ff:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   28103:	48 89 c1             	mov    rcx,rax
   28106:	ba 05 00 00 00       	mov    edx,0x5
   2810b:	be 05 00 00 00       	mov    esi,0x5
   28110:	e8 db c2 ff ff       	call   243f0 <display_array>
   28115:	83 85 5c ff ff ff 01 	add    DWORD PTR [rbp-0xa4],0x1
   2811c:	83 bd 5c ff ff ff 04 	cmp    DWORD PTR [rbp-0xa4],0x4
   28123:	0f 8e 63 ff ff ff    	jle    2808c <save_parameter_file+0x10fc>
   28129:	83 85 58 ff ff ff 01 	add    DWORD PTR [rbp-0xa8],0x1
   28130:	83 bd 58 ff ff ff 04 	cmp    DWORD PTR [rbp-0xa8],0x4
   28137:	0f 8e fb fe ff ff    	jle    28038 <save_parameter_file+0x10a8>
   2813d:	83 85 54 ff ff ff 01 	add    DWORD PTR [rbp-0xac],0x1
   28144:	83 bd 54 ff ff ff 07 	cmp    DWORD PTR [rbp-0xac],0x7
   2814b:	0f 8e d8 fe ff ff    	jle    28029 <save_parameter_file+0x1099>
   28151:	83 85 50 ff ff ff 01 	add    DWORD PTR [rbp-0xb0],0x1
   28158:	83 bd 50 ff ff ff 07 	cmp    DWORD PTR [rbp-0xb0],0x7
   2815f:	0f 8e b5 fe ff ff    	jle    2801a <save_parameter_file+0x108a>
   28165:	bf 1c 00 00 00       	mov    edi,0x1c
   2816a:	e8 ed 0a 00 00       	call   28c5c <settype>
   2816f:	48 89 c2             	mov    rdx,rax
   28172:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   28176:	48 8d 35 73 b0 1b 00 	lea    rsi,[rip+0x1bb073]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   2817d:	48 89 c7             	mov    rdi,rax
   28180:	b8 00 00 00 00       	mov    eax,0x0
   28185:	e8 c6 b7 fd ff       	call   3950 <fprintf@plt>
   2818a:	c7 85 60 ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0xa0],0x1
   28194:	e9 3e 01 00 00       	jmp    282d7 <save_parameter_file+0x1347>
   28199:	c7 85 64 ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0x9c],0x1
   281a3:	e9 1b 01 00 00       	jmp    282c3 <save_parameter_file+0x1333>
   281a8:	c7 85 68 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x98],0x0
   281b2:	e9 f8 00 00 00       	jmp    282af <save_parameter_file+0x131f>
   281b7:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   281bd:	48 98                	cdqe   
   281bf:	48 8b 74 c5 a0       	mov    rsi,QWORD PTR [rbp+rax*8-0x60]
   281c4:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   281ca:	48 98                	cdqe   
   281cc:	0f b6 44 05 e2       	movzx  eax,BYTE PTR [rbp+rax*1-0x1e]
   281d1:	0f be c8             	movsx  ecx,al
   281d4:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa0]
   281da:	48 98                	cdqe   
   281dc:	48 8b 54 c5 a0       	mov    rdx,QWORD PTR [rbp+rax*8-0x60]
   281e1:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   281e5:	49 89 f0             	mov    r8,rsi
   281e8:	48 8d 35 6d b0 1b 00 	lea    rsi,[rip+0x1bb06d]        # 1e325c <parameter_set_rna_turner2004+0x5d73c>
   281ef:	48 89 c7             	mov    rdi,rax
   281f2:	b8 00 00 00 00       	mov    eax,0x0
   281f7:	e8 54 b7 fd ff       	call   3950 <fprintf@plt>
   281fc:	c7 85 6c ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x94],0x0
   28206:	e9 90 00 00 00       	jmp    2829b <save_parameter_file+0x130b>
   2820b:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   28211:	48 98                	cdqe   
   28213:	48 89 c2             	mov    rdx,rax
   28216:	48 c1 e2 02          	shl    rdx,0x2
   2821a:	48 01 c2             	add    rdx,rax
   2821d:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   28225:	48 89 c2             	mov    rdx,rax
   28228:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   2822e:	48 63 c8             	movsxd rcx,eax
   28231:	48 89 c8             	mov    rax,rcx
   28234:	48 c1 e0 02          	shl    rax,0x2
   28238:	48 01 c8             	add    rax,rcx
   2823b:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   28243:	48 01 c8             	add    rax,rcx
   28246:	48 c1 e0 02          	shl    rax,0x2
   2824a:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
   2824e:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa0]
   28254:	48 98                	cdqe   
   28256:	48 69 d0 a0 0f 00 00 	imul   rdx,rax,0xfa0
   2825d:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   28263:	48 98                	cdqe   
   28265:	48 69 c0 f4 01 00 00 	imul   rax,rax,0x1f4
   2826c:	48 01 d0             	add    rax,rdx
   2826f:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   28273:	48 8d 05 66 f3 1c 00 	lea    rax,[rip+0x1cf366]        # 1f75e0 <int21_dH>
   2827a:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   2827e:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   28282:	48 89 c1             	mov    rcx,rax
   28285:	ba 05 00 00 00       	mov    edx,0x5
   2828a:	be 05 00 00 00       	mov    esi,0x5
   2828f:	e8 5c c1 ff ff       	call   243f0 <display_array>
   28294:	83 85 6c ff ff ff 01 	add    DWORD PTR [rbp-0x94],0x1
   2829b:	83 bd 6c ff ff ff 04 	cmp    DWORD PTR [rbp-0x94],0x4
   282a2:	0f 8e 63 ff ff ff    	jle    2820b <save_parameter_file+0x127b>
   282a8:	83 85 68 ff ff ff 01 	add    DWORD PTR [rbp-0x98],0x1
   282af:	83 bd 68 ff ff ff 04 	cmp    DWORD PTR [rbp-0x98],0x4
   282b6:	0f 8e fb fe ff ff    	jle    281b7 <save_parameter_file+0x1227>
   282bc:	83 85 64 ff ff ff 01 	add    DWORD PTR [rbp-0x9c],0x1
   282c3:	83 bd 64 ff ff ff 07 	cmp    DWORD PTR [rbp-0x9c],0x7
   282ca:	0f 8e d8 fe ff ff    	jle    281a8 <save_parameter_file+0x1218>
   282d0:	83 85 60 ff ff ff 01 	add    DWORD PTR [rbp-0xa0],0x1
   282d7:	83 bd 60 ff ff ff 07 	cmp    DWORD PTR [rbp-0xa0],0x7
   282de:	0f 8e b5 fe ff ff    	jle    28199 <save_parameter_file+0x1209>
   282e4:	bf 1d 00 00 00       	mov    edi,0x1d
   282e9:	e8 6e 09 00 00       	call   28c5c <settype>
   282ee:	48 89 c2             	mov    rdx,rax
   282f1:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   282f5:	48 8d 35 f4 ae 1b 00 	lea    rsi,[rip+0x1baef4]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   282fc:	48 89 c7             	mov    rdi,rax
   282ff:	b8 00 00 00 00       	mov    eax,0x0
   28304:	e8 47 b6 fd ff       	call   3950 <fprintf@plt>
   28309:	c7 85 70 ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0x90],0x1
   28313:	e9 7d 01 00 00       	jmp    28495 <save_parameter_file+0x1505>
   28318:	c7 85 74 ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0x8c],0x1
   28322:	e9 5a 01 00 00       	jmp    28481 <save_parameter_file+0x14f1>
   28327:	c7 85 78 ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0x88],0x1
   28331:	e9 37 01 00 00       	jmp    2846d <save_parameter_file+0x14dd>
   28336:	c7 85 7c ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0x84],0x1
   28340:	e9 14 01 00 00       	jmp    28459 <save_parameter_file+0x14c9>
   28345:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   2834b:	48 98                	cdqe   
   2834d:	48 8b 7c c5 a0       	mov    rdi,QWORD PTR [rbp+rax*8-0x60]
   28352:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
   28358:	48 98                	cdqe   
   2835a:	0f b6 44 05 e2       	movzx  eax,BYTE PTR [rbp+rax*1-0x1e]
   2835f:	0f be f0             	movsx  esi,al
   28362:	8b 85 78 ff ff ff    	mov    eax,DWORD PTR [rbp-0x88]
   28368:	48 98                	cdqe   
   2836a:	0f b6 44 05 e2       	movzx  eax,BYTE PTR [rbp+rax*1-0x1e]
   2836f:	0f be c8             	movsx  ecx,al
   28372:	8b 85 70 ff ff ff    	mov    eax,DWORD PTR [rbp-0x90]
   28378:	48 98                	cdqe   
   2837a:	48 8b 54 c5 a0       	mov    rdx,QWORD PTR [rbp+rax*8-0x60]
   2837f:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   28383:	49 89 f9             	mov    r9,rdi
   28386:	41 89 f0             	mov    r8d,esi
   28389:	48 8d 35 df ae 1b 00 	lea    rsi,[rip+0x1baedf]        # 1e326f <parameter_set_rna_turner2004+0x5d74f>
   28390:	48 89 c7             	mov    rdi,rax
   28393:	b8 00 00 00 00       	mov    eax,0x0
   28398:	e8 b3 b5 fd ff       	call   3950 <fprintf@plt>
   2839d:	c7 45 80 01 00 00 00 	mov    DWORD PTR [rbp-0x80],0x1
   283a4:	e9 9f 00 00 00       	jmp    28448 <save_parameter_file+0x14b8>
   283a9:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
   283ac:	48 98                	cdqe   
   283ae:	48 89 c2             	mov    rdx,rax
   283b1:	48 c1 e2 02          	shl    rdx,0x2
   283b5:	48 01 c2             	add    rdx,rax
   283b8:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   283c0:	48 89 c2             	mov    rdx,rax
   283c3:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
   283c9:	48 63 c8             	movsxd rcx,eax
   283cc:	48 89 c8             	mov    rax,rcx
   283cf:	48 c1 e0 02          	shl    rax,0x2
   283d3:	48 01 c8             	add    rax,rcx
   283d6:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   283de:	48 01 c8             	add    rax,rcx
   283e1:	48 c1 e0 02          	shl    rax,0x2
   283e5:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
   283e9:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   283ef:	48 98                	cdqe   
   283f1:	48 69 d0 c4 09 00 00 	imul   rdx,rax,0x9c4
   283f8:	8b 85 78 ff ff ff    	mov    eax,DWORD PTR [rbp-0x88]
   283fe:	48 98                	cdqe   
   28400:	48 69 c0 f4 01 00 00 	imul   rax,rax,0x1f4
   28407:	48 01 d0             	add    rax,rdx
   2840a:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   2840e:	8b 85 70 ff ff ff    	mov    eax,DWORD PTR [rbp-0x90]
   28414:	48 98                	cdqe   
   28416:	48 69 c0 20 4e 00 00 	imul   rax,rax,0x4e20
   2841d:	48 01 c2             	add    rdx,rax
   28420:	48 8d 05 b9 6e 1d 00 	lea    rax,[rip+0x1d6eb9]        # 1ff2e0 <int22_37>
   28427:	48 01 d0             	add    rax,rdx
   2842a:	48 8d 78 04          	lea    rdi,[rax+0x4]
   2842e:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   28432:	48 89 c1             	mov    rcx,rax
   28435:	ba 05 00 00 00       	mov    edx,0x5
   2843a:	be 04 00 00 00       	mov    esi,0x4
   2843f:	e8 ac bf ff ff       	call   243f0 <display_array>
   28444:	83 45 80 01          	add    DWORD PTR [rbp-0x80],0x1
   28448:	83 7d 80 04          	cmp    DWORD PTR [rbp-0x80],0x4
   2844c:	0f 8e 57 ff ff ff    	jle    283a9 <save_parameter_file+0x1419>
   28452:	83 85 7c ff ff ff 01 	add    DWORD PTR [rbp-0x84],0x1
   28459:	83 bd 7c ff ff ff 04 	cmp    DWORD PTR [rbp-0x84],0x4
   28460:	0f 8e df fe ff ff    	jle    28345 <save_parameter_file+0x13b5>
   28466:	83 85 78 ff ff ff 01 	add    DWORD PTR [rbp-0x88],0x1
   2846d:	83 bd 78 ff ff ff 04 	cmp    DWORD PTR [rbp-0x88],0x4
   28474:	0f 8e bc fe ff ff    	jle    28336 <save_parameter_file+0x13a6>
   2847a:	83 85 74 ff ff ff 01 	add    DWORD PTR [rbp-0x8c],0x1
   28481:	83 bd 74 ff ff ff 06 	cmp    DWORD PTR [rbp-0x8c],0x6
   28488:	0f 8e 99 fe ff ff    	jle    28327 <save_parameter_file+0x1397>
   2848e:	83 85 70 ff ff ff 01 	add    DWORD PTR [rbp-0x90],0x1
   28495:	83 bd 70 ff ff ff 06 	cmp    DWORD PTR [rbp-0x90],0x6
   2849c:	0f 8e 76 fe ff ff    	jle    28318 <save_parameter_file+0x1388>
   284a2:	bf 1e 00 00 00       	mov    edi,0x1e
   284a7:	e8 b0 07 00 00       	call   28c5c <settype>
   284ac:	48 89 c2             	mov    rdx,rax
   284af:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   284b3:	48 8d 35 36 ad 1b 00 	lea    rsi,[rip+0x1bad36]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   284ba:	48 89 c7             	mov    rdi,rax
   284bd:	b8 00 00 00 00       	mov    eax,0x0
   284c2:	e8 89 b4 fd ff       	call   3950 <fprintf@plt>
   284c7:	c7 45 84 01 00 00 00 	mov    DWORD PTR [rbp-0x7c],0x1
   284ce:	e9 47 01 00 00       	jmp    2861a <save_parameter_file+0x168a>
   284d3:	c7 45 88 01 00 00 00 	mov    DWORD PTR [rbp-0x78],0x1
   284da:	e9 2d 01 00 00       	jmp    2860c <save_parameter_file+0x167c>
   284df:	c7 45 8c 01 00 00 00 	mov    DWORD PTR [rbp-0x74],0x1
   284e6:	e9 13 01 00 00       	jmp    285fe <save_parameter_file+0x166e>
   284eb:	c7 45 90 01 00 00 00 	mov    DWORD PTR [rbp-0x70],0x1
   284f2:	e9 f9 00 00 00       	jmp    285f0 <save_parameter_file+0x1660>
   284f7:	8b 45 88             	mov    eax,DWORD PTR [rbp-0x78]
   284fa:	48 98                	cdqe   
   284fc:	48 8b 7c c5 a0       	mov    rdi,QWORD PTR [rbp+rax*8-0x60]
   28501:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
   28504:	48 98                	cdqe   
   28506:	0f b6 44 05 e2       	movzx  eax,BYTE PTR [rbp+rax*1-0x1e]
   2850b:	0f be f0             	movsx  esi,al
   2850e:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
   28511:	48 98                	cdqe   
   28513:	0f b6 44 05 e2       	movzx  eax,BYTE PTR [rbp+rax*1-0x1e]
   28518:	0f be c8             	movsx  ecx,al
   2851b:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
   2851e:	48 98                	cdqe   
   28520:	48 8b 54 c5 a0       	mov    rdx,QWORD PTR [rbp+rax*8-0x60]
   28525:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   28529:	49 89 f9             	mov    r9,rdi
   2852c:	41 89 f0             	mov    r8d,esi
   2852f:	48 8d 35 39 ad 1b 00 	lea    rsi,[rip+0x1bad39]        # 1e326f <parameter_set_rna_turner2004+0x5d74f>
   28536:	48 89 c7             	mov    rdi,rax
   28539:	b8 00 00 00 00       	mov    eax,0x0
   2853e:	e8 0d b4 fd ff       	call   3950 <fprintf@plt>
   28543:	c7 45 94 01 00 00 00 	mov    DWORD PTR [rbp-0x6c],0x1
   2854a:	e9 93 00 00 00       	jmp    285e2 <save_parameter_file+0x1652>
   2854f:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
   28552:	48 98                	cdqe   
   28554:	48 89 c2             	mov    rdx,rax
   28557:	48 c1 e2 02          	shl    rdx,0x2
   2855b:	48 01 c2             	add    rdx,rax
   2855e:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   28566:	48 89 c2             	mov    rdx,rax
   28569:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
   2856c:	48 63 c8             	movsxd rcx,eax
   2856f:	48 89 c8             	mov    rax,rcx
   28572:	48 c1 e0 02          	shl    rax,0x2
   28576:	48 01 c8             	add    rax,rcx
   28579:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   28581:	48 01 c8             	add    rax,rcx
   28584:	48 c1 e0 02          	shl    rax,0x2
   28588:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
   2858c:	8b 45 88             	mov    eax,DWORD PTR [rbp-0x78]
   2858f:	48 98                	cdqe   
   28591:	48 69 d0 c4 09 00 00 	imul   rdx,rax,0x9c4
   28598:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
   2859b:	48 98                	cdqe   
   2859d:	48 69 c0 f4 01 00 00 	imul   rax,rax,0x1f4
   285a4:	48 01 d0             	add    rax,rdx
   285a7:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   285ab:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
   285ae:	48 98                	cdqe   
   285b0:	48 69 c0 20 4e 00 00 	imul   rax,rax,0x4e20
   285b7:	48 01 c2             	add    rdx,rax
   285ba:	48 8d 05 1f de 1f 00 	lea    rax,[rip+0x1fde1f]        # 2263e0 <int22_dH>
   285c1:	48 01 d0             	add    rax,rdx
   285c4:	48 8d 78 04          	lea    rdi,[rax+0x4]
   285c8:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   285cc:	48 89 c1             	mov    rcx,rax
   285cf:	ba 05 00 00 00       	mov    edx,0x5
   285d4:	be 04 00 00 00       	mov    esi,0x4
   285d9:	e8 12 be ff ff       	call   243f0 <display_array>
   285de:	83 45 94 01          	add    DWORD PTR [rbp-0x6c],0x1
   285e2:	83 7d 94 04          	cmp    DWORD PTR [rbp-0x6c],0x4
   285e6:	0f 8e 63 ff ff ff    	jle    2854f <save_parameter_file+0x15bf>
   285ec:	83 45 90 01          	add    DWORD PTR [rbp-0x70],0x1
   285f0:	83 7d 90 04          	cmp    DWORD PTR [rbp-0x70],0x4
   285f4:	0f 8e fd fe ff ff    	jle    284f7 <save_parameter_file+0x1567>
   285fa:	83 45 8c 01          	add    DWORD PTR [rbp-0x74],0x1
   285fe:	83 7d 8c 04          	cmp    DWORD PTR [rbp-0x74],0x4
   28602:	0f 8e e3 fe ff ff    	jle    284eb <save_parameter_file+0x155b>
   28608:	83 45 88 01          	add    DWORD PTR [rbp-0x78],0x1
   2860c:	83 7d 88 06          	cmp    DWORD PTR [rbp-0x78],0x6
   28610:	0f 8e c9 fe ff ff    	jle    284df <save_parameter_file+0x154f>
   28616:	83 45 84 01          	add    DWORD PTR [rbp-0x7c],0x1
   2861a:	83 7d 84 06          	cmp    DWORD PTR [rbp-0x7c],0x6
   2861e:	0f 8e af fe ff ff    	jle    284d3 <save_parameter_file+0x1543>
   28624:	bf 03 00 00 00       	mov    edi,0x3
   28629:	e8 2e 06 00 00       	call   28c5c <settype>
   2862e:	48 89 c2             	mov    rdx,rax
   28631:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   28635:	48 8d 35 b4 ab 1b 00 	lea    rsi,[rip+0x1babb4]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   2863c:	48 89 c7             	mov    rdi,rax
   2863f:	b8 00 00 00 00       	mov    eax,0x0
   28644:	e8 07 b3 fd ff       	call   3950 <fprintf@plt>
   28649:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2864d:	48 89 c1             	mov    rcx,rax
   28650:	ba 0a 00 00 00       	mov    edx,0xa
   28655:	be 1f 00 00 00       	mov    esi,0x1f
   2865a:	48 8d 3d 1f 0e 1c 00 	lea    rdi,[rip+0x1c0e1f]        # 1e9480 <hairpin37>
   28661:	e8 8a bd ff ff       	call   243f0 <display_array>
   28666:	bf 04 00 00 00       	mov    edi,0x4
   2866b:	e8 ec 05 00 00       	call   28c5c <settype>
   28670:	48 89 c2             	mov    rdx,rax
   28673:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   28677:	48 8d 35 72 ab 1b 00 	lea    rsi,[rip+0x1bab72]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   2867e:	48 89 c7             	mov    rdi,rax
   28681:	b8 00 00 00 00       	mov    eax,0x0
   28686:	e8 c5 b2 fd ff       	call   3950 <fprintf@plt>
   2868b:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2868f:	48 89 c1             	mov    rcx,rax
   28692:	ba 0a 00 00 00       	mov    edx,0xa
   28697:	be 1f 00 00 00       	mov    esi,0x1f
   2869c:	48 8d 3d 5d 0e 1c 00 	lea    rdi,[rip+0x1c0e5d]        # 1e9500 <hairpindH>
   286a3:	e8 48 bd ff ff       	call   243f0 <display_array>
   286a8:	bf 05 00 00 00       	mov    edi,0x5
   286ad:	e8 aa 05 00 00       	call   28c5c <settype>
   286b2:	48 89 c2             	mov    rdx,rax
   286b5:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   286b9:	48 8d 35 30 ab 1b 00 	lea    rsi,[rip+0x1bab30]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   286c0:	48 89 c7             	mov    rdi,rax
   286c3:	b8 00 00 00 00       	mov    eax,0x0
   286c8:	e8 83 b2 fd ff       	call   3950 <fprintf@plt>
   286cd:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   286d1:	48 89 c1             	mov    rcx,rax
   286d4:	ba 0a 00 00 00       	mov    edx,0xa
   286d9:	be 1f 00 00 00       	mov    esi,0x1f
   286de:	48 8d 3d 9b 0e 1c 00 	lea    rdi,[rip+0x1c0e9b]        # 1e9580 <bulge37>
   286e5:	e8 06 bd ff ff       	call   243f0 <display_array>
   286ea:	bf 06 00 00 00       	mov    edi,0x6
   286ef:	e8 68 05 00 00       	call   28c5c <settype>
   286f4:	48 89 c2             	mov    rdx,rax
   286f7:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   286fb:	48 8d 35 ee aa 1b 00 	lea    rsi,[rip+0x1baaee]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   28702:	48 89 c7             	mov    rdi,rax
   28705:	b8 00 00 00 00       	mov    eax,0x0
   2870a:	e8 41 b2 fd ff       	call   3950 <fprintf@plt>
   2870f:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   28713:	48 89 c1             	mov    rcx,rax
   28716:	ba 0a 00 00 00       	mov    edx,0xa
   2871b:	be 1f 00 00 00       	mov    esi,0x1f
   28720:	48 8d 3d d9 0e 1c 00 	lea    rdi,[rip+0x1c0ed9]        # 1e9600 <bulgedH>
   28727:	e8 c4 bc ff ff       	call   243f0 <display_array>
   2872c:	bf 07 00 00 00       	mov    edi,0x7
   28731:	e8 26 05 00 00       	call   28c5c <settype>
   28736:	48 89 c2             	mov    rdx,rax
   28739:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2873d:	48 8d 35 ac aa 1b 00 	lea    rsi,[rip+0x1baaac]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   28744:	48 89 c7             	mov    rdi,rax
   28747:	b8 00 00 00 00       	mov    eax,0x0
   2874c:	e8 ff b1 fd ff       	call   3950 <fprintf@plt>
   28751:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   28755:	48 89 c1             	mov    rcx,rax
   28758:	ba 0a 00 00 00       	mov    edx,0xa
   2875d:	be 1f 00 00 00       	mov    esi,0x1f
   28762:	48 8d 3d 17 0f 1c 00 	lea    rdi,[rip+0x1c0f17]        # 1e9680 <internal_loop37>
   28769:	e8 82 bc ff ff       	call   243f0 <display_array>
   2876e:	bf 08 00 00 00       	mov    edi,0x8
   28773:	e8 e4 04 00 00       	call   28c5c <settype>
   28778:	48 89 c2             	mov    rdx,rax
   2877b:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2877f:	48 8d 35 6a aa 1b 00 	lea    rsi,[rip+0x1baa6a]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   28786:	48 89 c7             	mov    rdi,rax
   28789:	b8 00 00 00 00       	mov    eax,0x0
   2878e:	e8 bd b1 fd ff       	call   3950 <fprintf@plt>
   28793:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   28797:	48 89 c1             	mov    rcx,rax
   2879a:	ba 0a 00 00 00       	mov    edx,0xa
   2879f:	be 1f 00 00 00       	mov    esi,0x1f
   287a4:	48 8d 3d 55 0f 1c 00 	lea    rdi,[rip+0x1c0f55]        # 1e9700 <internal_loopdH>
   287ab:	e8 40 bc ff ff       	call   243f0 <display_array>
   287b0:	bf 1f 00 00 00       	mov    edi,0x1f
   287b5:	e8 a2 04 00 00       	call   28c5c <settype>
   287ba:	48 89 c2             	mov    rdx,rax
   287bd:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   287c1:	48 8d 35 28 aa 1b 00 	lea    rsi,[rip+0x1baa28]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   287c8:	48 89 c7             	mov    rdi,rax
   287cb:	b8 00 00 00 00       	mov    eax,0x0
   287d0:	e8 7b b1 fd ff       	call   3950 <fprintf@plt>
   287d5:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   287d9:	48 89 c1             	mov    rcx,rax
   287dc:	ba 38 00 00 00       	mov    edx,0x38
   287e1:	be 01 00 00 00       	mov    esi,0x1
   287e6:	48 8d 3d 9b aa 1b 00 	lea    rdi,[rip+0x1baa9b]        # 1e3288 <parameter_set_rna_turner2004+0x5d768>
   287ed:	e8 de b2 fd ff       	call   3ad0 <fwrite@plt>
   287f2:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   287f6:	48 89 c1             	mov    rcx,rax
   287f9:	ba 31 00 00 00       	mov    edx,0x31
   287fe:	be 01 00 00 00       	mov    esi,0x1
   28803:	48 8d 3d be aa 1b 00 	lea    rdi,[rip+0x1baabe]        # 1e32c8 <parameter_set_rna_turner2004+0x5d7a8>
   2880a:	e8 c1 b2 fd ff       	call   3ad0 <fwrite@plt>
   2880f:	8b 3d ff 09 1c 00    	mov    edi,DWORD PTR [rip+0x1c09ff]        # 1e9214 <ML_interndH>
   28815:	8b 35 f5 09 1c 00    	mov    esi,DWORD PTR [rip+0x1c09f5]        # 1e9210 <ML_intern37>
   2881b:	44 8b 0d fa 09 1c 00 	mov    r9d,DWORD PTR [rip+0x1c09fa]        # 1e921c <ML_closingdH>
   28822:	44 8b 05 ef 09 1c 00 	mov    r8d,DWORD PTR [rip+0x1c09ef]        # 1e9218 <ML_closing37>
   28829:	8b 0d c1 61 22 00    	mov    ecx,DWORD PTR [rip+0x2261c1]        # 24e9f0 <ML_BASEdH>
   2882f:	8b 15 b7 61 22 00    	mov    edx,DWORD PTR [rip+0x2261b7]        # 24e9ec <ML_BASE37>
   28835:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   28839:	57                   	push   rdi
   2883a:	56                   	push   rsi
   2883b:	48 8d 35 b8 aa 1b 00 	lea    rsi,[rip+0x1baab8]        # 1e32fa <parameter_set_rna_turner2004+0x5d7da>
   28842:	48 89 c7             	mov    rdi,rax
   28845:	b8 00 00 00 00       	mov    eax,0x0
   2884a:	e8 01 b1 fd ff       	call   3950 <fprintf@plt>
   2884f:	48 83 c4 10          	add    rsp,0x10
   28853:	bf 23 00 00 00       	mov    edi,0x23
   28858:	e8 ff 03 00 00       	call   28c5c <settype>
   2885d:	48 89 c2             	mov    rdx,rax
   28860:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   28864:	48 8d 35 85 a9 1b 00 	lea    rsi,[rip+0x1ba985]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   2886b:	48 89 c7             	mov    rdi,rax
   2886e:	b8 00 00 00 00       	mov    eax,0x0
   28873:	e8 d8 b0 fd ff       	call   3950 <fprintf@plt>
   28878:	8b 35 a2 09 1c 00    	mov    esi,DWORD PTR [rip+0x1c09a2]        # 1e9220 <MAX_NINIO>
   2887e:	8b 0d a4 09 1c 00    	mov    ecx,DWORD PTR [rip+0x1c09a4]        # 1e9228 <niniodH>
   28884:	8b 15 9a 09 1c 00    	mov    edx,DWORD PTR [rip+0x1c099a]        # 1e9224 <ninio37>
   2888a:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2888e:	41 89 f0             	mov    r8d,esi
   28891:	48 8d 35 80 aa 1b 00 	lea    rsi,[rip+0x1baa80]        # 1e3318 <parameter_set_rna_turner2004+0x5d7f8>
   28898:	48 89 c7             	mov    rdi,rax
   2889b:	b8 00 00 00 00       	mov    eax,0x0
   288a0:	e8 ab b0 fd ff       	call   3950 <fprintf@plt>
   288a5:	bf 24 00 00 00       	mov    edi,0x24
   288aa:	e8 ad 03 00 00       	call   28c5c <settype>
   288af:	48 89 c2             	mov    rdx,rax
   288b2:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   288b6:	48 8d 35 33 a9 1b 00 	lea    rsi,[rip+0x1ba933]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   288bd:	48 89 c7             	mov    rdi,rax
   288c0:	b8 00 00 00 00       	mov    eax,0x0
   288c5:	e8 86 b0 fd ff       	call   3950 <fprintf@plt>
   288ca:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   288ce:	48 89 c1             	mov    rcx,rax
   288d1:	ba 34 00 00 00       	mov    edx,0x34
   288d6:	be 01 00 00 00       	mov    esi,0x1
   288db:	48 8d 3d 86 aa 1b 00 	lea    rdi,[rip+0x1baa86]        # 1e3368 <parameter_set_rna_turner2004+0x5d848>
   288e2:	e8 e9 b1 fd ff       	call   3ad0 <fwrite@plt>
   288e7:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   288eb:	48 89 c1             	mov    rcx,rax
   288ee:	ba 2c 00 00 00       	mov    edx,0x2c
   288f3:	be 01 00 00 00       	mov    esi,0x1
   288f8:	48 8d 3d a1 aa 1b 00 	lea    rdi,[rip+0x1baaa1]        # 1e33a0 <parameter_set_rna_turner2004+0x5d880>
   288ff:	e8 cc b1 fd ff       	call   3ad0 <fwrite@plt>
   28904:	48 8b 35 fd 08 1c 00 	mov    rsi,QWORD PTR [rip+0x1c08fd]        # 1e9208 <lxc37>
   2890b:	44 8b 05 1e 09 1c 00 	mov    r8d,DWORD PTR [rip+0x1c091e]        # 1e9230 <TerminalAUdH>
   28912:	8b 3d 14 09 1c 00    	mov    edi,DWORD PTR [rip+0x1c0914]        # 1e922c <TerminalAU37>
   28918:	8b 0d 1a 09 1c 00    	mov    ecx,DWORD PTR [rip+0x1c091a]        # 1e9238 <DuplexInitdH>
   2891e:	8b 15 10 09 1c 00    	mov    edx,DWORD PTR [rip+0x1c0910]        # 1e9234 <DuplexInit37>
   28924:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   28928:	48 83 ec 08          	sub    rsp,0x8
   2892c:	6a 00                	push   0x0
   2892e:	66 48 0f 6e c6       	movq   xmm0,rsi
   28933:	45 89 c1             	mov    r9d,r8d
   28936:	41 89 f8             	mov    r8d,edi
   28939:	48 8d 35 90 aa 1b 00 	lea    rsi,[rip+0x1baa90]        # 1e33d0 <parameter_set_rna_turner2004+0x5d8b0>
   28940:	48 89 c7             	mov    rdi,rax
   28943:	b8 01 00 00 00       	mov    eax,0x1
   28948:	e8 03 b0 fd ff       	call   3950 <fprintf@plt>
   2894d:	48 83 c4 10          	add    rsp,0x10
   28951:	bf 22 00 00 00       	mov    edi,0x22
   28956:	e8 01 03 00 00       	call   28c5c <settype>
   2895b:	48 89 c2             	mov    rdx,rax
   2895e:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   28962:	48 8d 35 87 a8 1b 00 	lea    rsi,[rip+0x1ba887]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   28969:	48 89 c7             	mov    rdi,rax
   2896c:	b8 00 00 00 00       	mov    eax,0x0
   28971:	e8 da af fd ff       	call   3950 <fprintf@plt>
   28976:	c7 85 d4 fe ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x12c],0x0
   28980:	eb 6f                	jmp    289f1 <save_parameter_file+0x1a61>
   28982:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   28988:	48 98                	cdqe   
   2898a:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   28992:	48 8d 05 a7 3c 1c 00 	lea    rax,[rip+0x1c3ca7]        # 1ec640 <HexaloopdH>
   28999:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   2899c:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   289a2:	48 98                	cdqe   
   289a4:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   289ac:	48 8d 05 ed 3b 1c 00 	lea    rax,[rip+0x1c3bed]        # 1ec5a0 <Hexaloop37>
   289b3:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   289b6:	8b 95 d4 fe ff ff    	mov    edx,DWORD PTR [rbp-0x12c]
   289bc:	89 d0                	mov    eax,edx
   289be:	c1 e0 03             	shl    eax,0x3
   289c1:	01 d0                	add    eax,edx
   289c3:	48 98                	cdqe   
   289c5:	48 8d 15 54 3a 1c 00 	lea    rdx,[rip+0x1c3a54]        # 1ec420 <Hexaloops>
   289cc:	48 01 c2             	add    rdx,rax
   289cf:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   289d3:	41 89 f0             	mov    r8d,esi
   289d6:	48 8d 35 12 aa 1b 00 	lea    rsi,[rip+0x1baa12]        # 1e33ef <parameter_set_rna_turner2004+0x5d8cf>
   289dd:	48 89 c7             	mov    rdi,rax
   289e0:	b8 00 00 00 00       	mov    eax,0x0
   289e5:	e8 66 af fd ff       	call   3950 <fprintf@plt>
   289ea:	83 85 d4 fe ff ff 01 	add    DWORD PTR [rbp-0x12c],0x1
   289f1:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   289f7:	48 63 d8             	movsxd rbx,eax
   289fa:	48 8d 3d 1f 3a 1c 00 	lea    rdi,[rip+0x1c3a1f]        # 1ec420 <Hexaloops>
   28a01:	e8 8a ac fd ff       	call   3690 <strlen@plt>
   28a06:	48 ba 8f e3 38 8e e3 38 8e e3 	movabs rdx,0xe38e38e38e38e38f
   28a10:	48 f7 e2             	mul    rdx
   28a13:	48 89 d0             	mov    rax,rdx
   28a16:	48 c1 e8 03          	shr    rax,0x3
   28a1a:	48 39 c3             	cmp    rbx,rax
   28a1d:	0f 82 5f ff ff ff    	jb     28982 <save_parameter_file+0x19f2>
   28a23:	bf 20 00 00 00       	mov    edi,0x20
   28a28:	e8 2f 02 00 00       	call   28c5c <settype>
   28a2d:	48 89 c2             	mov    rdx,rax
   28a30:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   28a34:	48 8d 35 b5 a7 1b 00 	lea    rsi,[rip+0x1ba7b5]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   28a3b:	48 89 c7             	mov    rdi,rax
   28a3e:	b8 00 00 00 00       	mov    eax,0x0
   28a43:	e8 08 af fd ff       	call   3950 <fprintf@plt>
   28a48:	c7 85 d4 fe ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x12c],0x0
   28a52:	eb 6f                	jmp    28ac3 <save_parameter_file+0x1b33>
   28a54:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   28a5a:	48 98                	cdqe   
   28a5c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   28a64:	48 8d 05 15 39 1c 00 	lea    rax,[rip+0x1c3915]        # 1ec380 <TetraloopdH>
   28a6b:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   28a6e:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   28a74:	48 98                	cdqe   
   28a76:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   28a7e:	48 8d 05 5b 38 1c 00 	lea    rax,[rip+0x1c385b]        # 1ec2e0 <Tetraloop37>
   28a85:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   28a88:	8b 95 d4 fe ff ff    	mov    edx,DWORD PTR [rbp-0x12c]
   28a8e:	89 d0                	mov    eax,edx
   28a90:	c1 e0 03             	shl    eax,0x3
   28a93:	29 d0                	sub    eax,edx
   28a95:	48 98                	cdqe   
   28a97:	48 8d 15 22 37 1c 00 	lea    rdx,[rip+0x1c3722]        # 1ec1c0 <Tetraloops>
   28a9e:	48 01 c2             	add    rdx,rax
   28aa1:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   28aa5:	41 89 f0             	mov    r8d,esi
   28aa8:	48 8d 35 4f a9 1b 00 	lea    rsi,[rip+0x1ba94f]        # 1e33fe <parameter_set_rna_turner2004+0x5d8de>
   28aaf:	48 89 c7             	mov    rdi,rax
   28ab2:	b8 00 00 00 00       	mov    eax,0x0
   28ab7:	e8 94 ae fd ff       	call   3950 <fprintf@plt>
   28abc:	83 85 d4 fe ff ff 01 	add    DWORD PTR [rbp-0x12c],0x1
   28ac3:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   28ac9:	48 63 d8             	movsxd rbx,eax
   28acc:	48 8d 3d ed 36 1c 00 	lea    rdi,[rip+0x1c36ed]        # 1ec1c0 <Tetraloops>
   28ad3:	e8 b8 ab fd ff       	call   3690 <strlen@plt>
   28ad8:	48 89 c1             	mov    rcx,rax
   28adb:	48 ba 93 24 49 92 24 49 92 24 	movabs rdx,0x2492492492492493
   28ae5:	48 89 c8             	mov    rax,rcx
   28ae8:	48 f7 e2             	mul    rdx
   28aeb:	48 89 c8             	mov    rax,rcx
   28aee:	48 29 d0             	sub    rax,rdx
   28af1:	48 d1 e8             	shr    rax,1
   28af4:	48 01 d0             	add    rax,rdx
   28af7:	48 c1 e8 02          	shr    rax,0x2
   28afb:	48 39 c3             	cmp    rbx,rax
   28afe:	0f 82 50 ff ff ff    	jb     28a54 <save_parameter_file+0x1ac4>
   28b04:	bf 21 00 00 00       	mov    edi,0x21
   28b09:	e8 4e 01 00 00       	call   28c5c <settype>
   28b0e:	48 89 c2             	mov    rdx,rax
   28b11:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   28b15:	48 8d 35 d4 a6 1b 00 	lea    rsi,[rip+0x1ba6d4]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   28b1c:	48 89 c7             	mov    rdi,rax
   28b1f:	b8 00 00 00 00       	mov    eax,0x0
   28b24:	e8 27 ae fd ff       	call   3950 <fprintf@plt>
   28b29:	c7 85 d4 fe ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x12c],0x0
   28b33:	eb 70                	jmp    28ba5 <save_parameter_file+0x1c15>
   28b35:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   28b3b:	48 98                	cdqe   
   28b3d:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   28b45:	48 8d 05 d4 35 1c 00 	lea    rax,[rip+0x1c35d4]        # 1ec120 <TriloopdH>
   28b4c:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   28b4f:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   28b55:	48 98                	cdqe   
   28b57:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   28b5f:	48 8d 05 1a 35 1c 00 	lea    rax,[rip+0x1c351a]        # 1ec080 <Triloop37>
   28b66:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   28b69:	8b 95 d4 fe ff ff    	mov    edx,DWORD PTR [rbp-0x12c]
   28b6f:	89 d0                	mov    eax,edx
   28b71:	01 c0                	add    eax,eax
   28b73:	01 d0                	add    eax,edx
   28b75:	01 c0                	add    eax,eax
   28b77:	48 98                	cdqe   
   28b79:	48 8d 15 00 34 1c 00 	lea    rdx,[rip+0x1c3400]        # 1ebf80 <Triloops>
   28b80:	48 01 c2             	add    rdx,rax
   28b83:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   28b87:	41 89 f0             	mov    r8d,esi
   28b8a:	48 8d 35 7c a8 1b 00 	lea    rsi,[rip+0x1ba87c]        # 1e340d <parameter_set_rna_turner2004+0x5d8ed>
   28b91:	48 89 c7             	mov    rdi,rax
   28b94:	b8 00 00 00 00       	mov    eax,0x0
   28b99:	e8 b2 ad fd ff       	call   3950 <fprintf@plt>
   28b9e:	83 85 d4 fe ff ff 01 	add    DWORD PTR [rbp-0x12c],0x1
   28ba5:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   28bab:	48 63 d8             	movsxd rbx,eax
   28bae:	48 8d 3d cb 33 1c 00 	lea    rdi,[rip+0x1c33cb]        # 1ebf80 <Triloops>
   28bb5:	e8 d6 aa fd ff       	call   3690 <strlen@plt>
   28bba:	48 ba ab aa aa aa aa aa aa aa 	movabs rdx,0xaaaaaaaaaaaaaaab
   28bc4:	48 f7 e2             	mul    rdx
   28bc7:	48 89 d0             	mov    rax,rdx
   28bca:	48 c1 e8 02          	shr    rax,0x2
   28bce:	48 39 c3             	cmp    rbx,rax
   28bd1:	0f 82 5e ff ff ff    	jb     28b35 <save_parameter_file+0x1ba5>
   28bd7:	bf 00 00 00 00       	mov    edi,0x0
   28bdc:	e8 7b 00 00 00       	call   28c5c <settype>
   28be1:	48 89 c2             	mov    rdx,rax
   28be4:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   28be8:	48 8d 35 01 a6 1b 00 	lea    rsi,[rip+0x1ba601]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   28bef:	48 89 c7             	mov    rdi,rax
   28bf2:	b8 00 00 00 00       	mov    eax,0x0
   28bf7:	e8 54 ad fd ff       	call   3950 <fprintf@plt>
   28bfc:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   28c00:	48 89 c7             	mov    rdi,rax
   28c03:	e8 08 ac fd ff       	call   3810 <fclose@plt>
   28c08:	b8 01 00 00 00       	mov    eax,0x1
   28c0d:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
   28c11:	64 48 33 1c 25 28 00 00 00 	xor    rbx,QWORD PTR fs:0x28
   28c1a:	74 05                	je     28c21 <save_parameter_file+0x1c91>
   28c1c:	e8 3f ac fd ff       	call   3860 <__stack_chk_fail@plt>
   28c21:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
   28c25:	c9                   	leave  
   28c26:	c3                   	ret    

0000000000028c27 <last_parameter_file>:
   28c27:	f3 0f 1e fa          	endbr64 
   28c2b:	55                   	push   rbp
   28c2c:	48 89 e5             	mov    rbp,rsp
   28c2f:	48 8b 05 aa 03 2c 00 	mov    rax,QWORD PTR [rip+0x2c03aa]        # 2e8fe0 <last_param_file>
   28c36:	5d                   	pop    rbp
   28c37:	c3                   	ret    

0000000000028c38 <read_parameter_file>:
   28c38:	f3 0f 1e fa          	endbr64 
   28c3c:	55                   	push   rbp
   28c3d:	48 89 e5             	mov    rbp,rsp
   28c40:	48 83 ec 10          	sub    rsp,0x10
   28c44:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   28c48:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   28c4c:	be 00 00 00 00       	mov    esi,0x0
   28c51:	48 89 c7             	mov    rdi,rax
   28c54:	e8 e8 a9 ff ff       	call   23641 <vrna_params_load>
   28c59:	90                   	nop
   28c5a:	c9                   	leave  
   28c5b:	c3                   	ret    

0000000000028c5c <settype>:
   28c5c:	f3 0f 1e fa          	endbr64 
   28c60:	55                   	push   rbp
   28c61:	48 89 e5             	mov    rbp,rsp
   28c64:	48 83 ec 10          	sub    rsp,0x10
   28c68:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
   28c6b:	83 7d fc 24          	cmp    DWORD PTR [rbp-0x4],0x24
   28c6f:	0f 87 bc 01 00 00    	ja     28e31 <settype+0x1d5>
   28c75:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   28c78:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   28c80:	48 8d 05 e9 a9 1b 00 	lea    rax,[rip+0x1ba9e9]        # 1e3670 <parameter_set_rna_turner2004+0x5db50>
   28c87:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   28c8a:	48 98                	cdqe   
   28c8c:	48 8d 15 dd a9 1b 00 	lea    rdx,[rip+0x1ba9dd]        # 1e3670 <parameter_set_rna_turner2004+0x5db50>
   28c93:	48 01 d0             	add    rax,rdx
   28c96:	3e ff e0             	notrack jmp rax
   28c99:	48 8d 05 7c a7 1b 00 	lea    rax,[rip+0x1ba77c]        # 1e341c <parameter_set_rna_turner2004+0x5d8fc>
   28ca0:	e9 a4 01 00 00       	jmp    28e49 <settype+0x1ed>
   28ca5:	48 8d 05 76 a7 1b 00 	lea    rax,[rip+0x1ba776]        # 1e3422 <parameter_set_rna_turner2004+0x5d902>
   28cac:	e9 98 01 00 00       	jmp    28e49 <settype+0x1ed>
   28cb1:	48 8d 05 7b a7 1b 00 	lea    rax,[rip+0x1ba77b]        # 1e3433 <parameter_set_rna_turner2004+0x5d913>
   28cb8:	e9 8c 01 00 00       	jmp    28e49 <settype+0x1ed>
   28cbd:	48 8d 05 77 a7 1b 00 	lea    rax,[rip+0x1ba777]        # 1e343b <parameter_set_rna_turner2004+0x5d91b>
   28cc4:	e9 80 01 00 00       	jmp    28e49 <settype+0x1ed>
   28cc9:	48 8d 05 7e a7 1b 00 	lea    rax,[rip+0x1ba77e]        # 1e344e <parameter_set_rna_turner2004+0x5d92e>
   28cd0:	e9 74 01 00 00       	jmp    28e49 <settype+0x1ed>
   28cd5:	48 8d 05 78 a7 1b 00 	lea    rax,[rip+0x1ba778]        # 1e3454 <parameter_set_rna_turner2004+0x5d934>
   28cdc:	e9 68 01 00 00       	jmp    28e49 <settype+0x1ed>
   28ce1:	48 8d 05 7d a7 1b 00 	lea    rax,[rip+0x1ba77d]        # 1e3465 <parameter_set_rna_turner2004+0x5d945>
   28ce8:	e9 5c 01 00 00       	jmp    28e49 <settype+0x1ed>
   28ced:	48 8d 05 7a a7 1b 00 	lea    rax,[rip+0x1ba77a]        # 1e346e <parameter_set_rna_turner2004+0x5d94e>
   28cf4:	e9 50 01 00 00       	jmp    28e49 <settype+0x1ed>
   28cf9:	48 8d 05 82 a7 1b 00 	lea    rax,[rip+0x1ba782]        # 1e3482 <parameter_set_rna_turner2004+0x5d962>
   28d00:	e9 44 01 00 00       	jmp    28e49 <settype+0x1ed>
   28d05:	48 8d 05 88 a7 1b 00 	lea    rax,[rip+0x1ba788]        # 1e3494 <parameter_set_rna_turner2004+0x5d974>
   28d0c:	e9 38 01 00 00       	jmp    28e49 <settype+0x1ed>
   28d11:	48 8d 05 99 a7 1b 00 	lea    rax,[rip+0x1ba799]        # 1e34b1 <parameter_set_rna_turner2004+0x5d991>
   28d18:	e9 2c 01 00 00       	jmp    28e49 <settype+0x1ed>
   28d1d:	48 8d 05 9e a7 1b 00 	lea    rax,[rip+0x1ba79e]        # 1e34c2 <parameter_set_rna_turner2004+0x5d9a2>
   28d24:	e9 20 01 00 00       	jmp    28e49 <settype+0x1ed>
   28d29:	48 8d 05 ae a7 1b 00 	lea    rax,[rip+0x1ba7ae]        # 1e34de <parameter_set_rna_turner2004+0x5d9be>
   28d30:	e9 14 01 00 00       	jmp    28e49 <settype+0x1ed>
   28d35:	48 8d 05 b4 a7 1b 00 	lea    rax,[rip+0x1ba7b4]        # 1e34f0 <parameter_set_rna_turner2004+0x5d9d0>
   28d3c:	e9 08 01 00 00       	jmp    28e49 <settype+0x1ed>
   28d41:	48 8d 05 c5 a7 1b 00 	lea    rax,[rip+0x1ba7c5]        # 1e350d <parameter_set_rna_turner2004+0x5d9ed>
   28d48:	e9 fc 00 00 00       	jmp    28e49 <settype+0x1ed>
   28d4d:	48 8d 05 d4 a7 1b 00 	lea    rax,[rip+0x1ba7d4]        # 1e3528 <parameter_set_rna_turner2004+0x5da08>
   28d54:	e9 f0 00 00 00       	jmp    28e49 <settype+0x1ed>
   28d59:	48 8d 05 e8 a7 1b 00 	lea    rax,[rip+0x1ba7e8]        # 1e3548 <parameter_set_rna_turner2004+0x5da28>
   28d60:	e9 e4 00 00 00       	jmp    28e49 <settype+0x1ed>
   28d65:	48 8d 05 f4 a7 1b 00 	lea    rax,[rip+0x1ba7f4]        # 1e3560 <parameter_set_rna_turner2004+0x5da40>
   28d6c:	e9 d8 00 00 00       	jmp    28e49 <settype+0x1ed>
   28d71:	48 8d 05 08 a8 1b 00 	lea    rax,[rip+0x1ba808]        # 1e3580 <parameter_set_rna_turner2004+0x5da60>
   28d78:	e9 cc 00 00 00       	jmp    28e49 <settype+0x1ed>
   28d7d:	48 8d 05 0b a8 1b 00 	lea    rax,[rip+0x1ba80b]        # 1e358f <parameter_set_rna_turner2004+0x5da6f>
   28d84:	e9 c0 00 00 00       	jmp    28e49 <settype+0x1ed>
   28d89:	48 8d 05 19 a8 1b 00 	lea    rax,[rip+0x1ba819]        # 1e35a9 <parameter_set_rna_turner2004+0x5da89>
   28d90:	e9 b4 00 00 00       	jmp    28e49 <settype+0x1ed>
   28d95:	48 8d 05 15 a8 1b 00 	lea    rax,[rip+0x1ba815]        # 1e35b1 <parameter_set_rna_turner2004+0x5da91>
   28d9c:	e9 a8 00 00 00       	jmp    28e49 <settype+0x1ed>
   28da1:	48 8d 05 1c a8 1b 00 	lea    rax,[rip+0x1ba81c]        # 1e35c4 <parameter_set_rna_turner2004+0x5daa4>
   28da8:	e9 9c 00 00 00       	jmp    28e49 <settype+0x1ed>
   28dad:	48 8d 05 18 a8 1b 00 	lea    rax,[rip+0x1ba818]        # 1e35cc <parameter_set_rna_turner2004+0x5daac>
   28db4:	e9 90 00 00 00       	jmp    28e49 <settype+0x1ed>
   28db9:	48 8d 05 1f a8 1b 00 	lea    rax,[rip+0x1ba81f]        # 1e35df <parameter_set_rna_turner2004+0x5dabf>
   28dc0:	e9 84 00 00 00       	jmp    28e49 <settype+0x1ed>
   28dc5:	48 8d 05 19 a8 1b 00 	lea    rax,[rip+0x1ba819]        # 1e35e5 <parameter_set_rna_turner2004+0x5dac5>
   28dcc:	eb 7b                	jmp    28e49 <settype+0x1ed>
   28dce:	48 8d 05 21 a8 1b 00 	lea    rax,[rip+0x1ba821]        # 1e35f6 <parameter_set_rna_turner2004+0x5dad6>
   28dd5:	eb 72                	jmp    28e49 <settype+0x1ed>
   28dd7:	48 8d 05 1e a8 1b 00 	lea    rax,[rip+0x1ba81e]        # 1e35fc <parameter_set_rna_turner2004+0x5dadc>
   28dde:	eb 69                	jmp    28e49 <settype+0x1ed>
   28de0:	48 8d 05 26 a8 1b 00 	lea    rax,[rip+0x1ba826]        # 1e360d <parameter_set_rna_turner2004+0x5daed>
   28de7:	eb 60                	jmp    28e49 <settype+0x1ed>
   28de9:	48 8d 05 23 a8 1b 00 	lea    rax,[rip+0x1ba823]        # 1e3613 <parameter_set_rna_turner2004+0x5daf3>
   28df0:	eb 57                	jmp    28e49 <settype+0x1ed>
   28df2:	48 8d 05 2b a8 1b 00 	lea    rax,[rip+0x1ba82b]        # 1e3624 <parameter_set_rna_turner2004+0x5db04>
   28df9:	eb 4e                	jmp    28e49 <settype+0x1ed>
   28dfb:	48 8d 05 2c a8 1b 00 	lea    rax,[rip+0x1ba82c]        # 1e362e <parameter_set_rna_turner2004+0x5db0e>
   28e02:	eb 45                	jmp    28e49 <settype+0x1ed>
   28e04:	48 8d 05 29 a8 1b 00 	lea    rax,[rip+0x1ba829]        # 1e3634 <parameter_set_rna_turner2004+0x5db14>
   28e0b:	eb 3c                	jmp    28e49 <settype+0x1ed>
   28e0d:	48 8d 05 29 a8 1b 00 	lea    rax,[rip+0x1ba829]        # 1e363d <parameter_set_rna_turner2004+0x5db1d>
   28e14:	eb 33                	jmp    28e49 <settype+0x1ed>
   28e16:	48 8d 05 2b a8 1b 00 	lea    rax,[rip+0x1ba82b]        # 1e3648 <parameter_set_rna_turner2004+0x5db28>
   28e1d:	eb 2a                	jmp    28e49 <settype+0x1ed>
   28e1f:	48 8d 05 2c a8 1b 00 	lea    rax,[rip+0x1ba82c]        # 1e3652 <parameter_set_rna_turner2004+0x5db32>
   28e26:	eb 21                	jmp    28e49 <settype+0x1ed>
   28e28:	48 8d 05 27 a8 1b 00 	lea    rax,[rip+0x1ba827]        # 1e3656 <parameter_set_rna_turner2004+0x5db36>
   28e2f:	eb 18                	jmp    28e49 <settype+0x1ed>
   28e31:	48 8d 3d 23 a8 1b 00 	lea    rdi,[rip+0x1ba823]        # 1e365b <parameter_set_rna_turner2004+0x5db3b>
   28e38:	b8 00 00 00 00       	mov    eax,0x0
   28e3d:	e8 a8 31 00 00       	call   2bfea <vrna_message_error>
   28e42:	48 8d 05 26 a8 1b 00 	lea    rax,[rip+0x1ba826]        # 1e366f <parameter_set_rna_turner2004+0x5db4f>
   28e49:	c9                   	leave  
   28e4a:	c3                   	ret    

0000000000028e4b <gettype>:
   28e4b:	f3 0f 1e fa          	endbr64 
   28e4f:	55                   	push   rbp
   28e50:	48 89 e5             	mov    rbp,rsp
   28e53:	48 83 ec 10          	sub    rsp,0x10
   28e57:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   28e5b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   28e5f:	48 8d 35 b6 a5 1b 00 	lea    rsi,[rip+0x1ba5b6]        # 1e341c <parameter_set_rna_turner2004+0x5d8fc>
   28e66:	48 89 c7             	mov    rdi,rax
   28e69:	e8 c2 aa fd ff       	call   3930 <strcmp@plt>
   28e6e:	85 c0                	test   eax,eax
   28e70:	75 0a                	jne    28e7c <gettype+0x31>
   28e72:	b8 01 00 00 00       	mov    eax,0x1
   28e77:	e9 9a 04 00 00       	jmp    29316 <gettype+0x4cb>
   28e7c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   28e80:	48 8d 35 9b a5 1b 00 	lea    rsi,[rip+0x1ba59b]        # 1e3422 <parameter_set_rna_turner2004+0x5d902>
   28e87:	48 89 c7             	mov    rdi,rax
   28e8a:	e8 a1 aa fd ff       	call   3930 <strcmp@plt>
   28e8f:	85 c0                	test   eax,eax
   28e91:	75 0a                	jne    28e9d <gettype+0x52>
   28e93:	b8 02 00 00 00       	mov    eax,0x2
   28e98:	e9 79 04 00 00       	jmp    29316 <gettype+0x4cb>
   28e9d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   28ea1:	48 8d 35 8b a5 1b 00 	lea    rsi,[rip+0x1ba58b]        # 1e3433 <parameter_set_rna_turner2004+0x5d913>
   28ea8:	48 89 c7             	mov    rdi,rax
   28eab:	e8 80 aa fd ff       	call   3930 <strcmp@plt>
   28eb0:	85 c0                	test   eax,eax
   28eb2:	75 0a                	jne    28ebe <gettype+0x73>
   28eb4:	b8 03 00 00 00       	mov    eax,0x3
   28eb9:	e9 58 04 00 00       	jmp    29316 <gettype+0x4cb>
   28ebe:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   28ec2:	48 8d 35 72 a5 1b 00 	lea    rsi,[rip+0x1ba572]        # 1e343b <parameter_set_rna_turner2004+0x5d91b>
   28ec9:	48 89 c7             	mov    rdi,rax
   28ecc:	e8 5f aa fd ff       	call   3930 <strcmp@plt>
   28ed1:	85 c0                	test   eax,eax
   28ed3:	75 0a                	jne    28edf <gettype+0x94>
   28ed5:	b8 04 00 00 00       	mov    eax,0x4
   28eda:	e9 37 04 00 00       	jmp    29316 <gettype+0x4cb>
   28edf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   28ee3:	48 8d 35 64 a5 1b 00 	lea    rsi,[rip+0x1ba564]        # 1e344e <parameter_set_rna_turner2004+0x5d92e>
   28eea:	48 89 c7             	mov    rdi,rax
   28eed:	e8 3e aa fd ff       	call   3930 <strcmp@plt>
   28ef2:	85 c0                	test   eax,eax
   28ef4:	75 0a                	jne    28f00 <gettype+0xb5>
   28ef6:	b8 05 00 00 00       	mov    eax,0x5
   28efb:	e9 16 04 00 00       	jmp    29316 <gettype+0x4cb>
   28f00:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   28f04:	48 8d 35 49 a5 1b 00 	lea    rsi,[rip+0x1ba549]        # 1e3454 <parameter_set_rna_turner2004+0x5d934>
   28f0b:	48 89 c7             	mov    rdi,rax
   28f0e:	e8 1d aa fd ff       	call   3930 <strcmp@plt>
   28f13:	85 c0                	test   eax,eax
   28f15:	75 0a                	jne    28f21 <gettype+0xd6>
   28f17:	b8 06 00 00 00       	mov    eax,0x6
   28f1c:	e9 f5 03 00 00       	jmp    29316 <gettype+0x4cb>
   28f21:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   28f25:	48 8d 35 39 a5 1b 00 	lea    rsi,[rip+0x1ba539]        # 1e3465 <parameter_set_rna_turner2004+0x5d945>
   28f2c:	48 89 c7             	mov    rdi,rax
   28f2f:	e8 fc a9 fd ff       	call   3930 <strcmp@plt>
   28f34:	85 c0                	test   eax,eax
   28f36:	75 0a                	jne    28f42 <gettype+0xf7>
   28f38:	b8 07 00 00 00       	mov    eax,0x7
   28f3d:	e9 d4 03 00 00       	jmp    29316 <gettype+0x4cb>
   28f42:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   28f46:	48 8d 35 21 a5 1b 00 	lea    rsi,[rip+0x1ba521]        # 1e346e <parameter_set_rna_turner2004+0x5d94e>
   28f4d:	48 89 c7             	mov    rdi,rax
   28f50:	e8 db a9 fd ff       	call   3930 <strcmp@plt>
   28f55:	85 c0                	test   eax,eax
   28f57:	75 0a                	jne    28f63 <gettype+0x118>
   28f59:	b8 08 00 00 00       	mov    eax,0x8
   28f5e:	e9 b3 03 00 00       	jmp    29316 <gettype+0x4cb>
   28f63:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   28f67:	48 8d 35 14 a5 1b 00 	lea    rsi,[rip+0x1ba514]        # 1e3482 <parameter_set_rna_turner2004+0x5d962>
   28f6e:	48 89 c7             	mov    rdi,rax
   28f71:	e8 ba a9 fd ff       	call   3930 <strcmp@plt>
   28f76:	85 c0                	test   eax,eax
   28f78:	75 0a                	jne    28f84 <gettype+0x139>
   28f7a:	b8 13 00 00 00       	mov    eax,0x13
   28f7f:	e9 92 03 00 00       	jmp    29316 <gettype+0x4cb>
   28f84:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   28f88:	48 8d 35 05 a5 1b 00 	lea    rsi,[rip+0x1ba505]        # 1e3494 <parameter_set_rna_turner2004+0x5d974>
   28f8f:	48 89 c7             	mov    rdi,rax
   28f92:	e8 99 a9 fd ff       	call   3930 <strcmp@plt>
   28f97:	85 c0                	test   eax,eax
   28f99:	75 0a                	jne    28fa5 <gettype+0x15a>
   28f9b:	b8 14 00 00 00       	mov    eax,0x14
   28fa0:	e9 71 03 00 00       	jmp    29316 <gettype+0x4cb>
   28fa5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   28fa9:	48 8d 35 01 a5 1b 00 	lea    rsi,[rip+0x1ba501]        # 1e34b1 <parameter_set_rna_turner2004+0x5d991>
   28fb0:	48 89 c7             	mov    rdi,rax
   28fb3:	e8 78 a9 fd ff       	call   3930 <strcmp@plt>
   28fb8:	85 c0                	test   eax,eax
   28fba:	75 0a                	jne    28fc6 <gettype+0x17b>
   28fbc:	b8 09 00 00 00       	mov    eax,0x9
   28fc1:	e9 50 03 00 00       	jmp    29316 <gettype+0x4cb>
   28fc6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   28fca:	48 8d 35 f1 a4 1b 00 	lea    rsi,[rip+0x1ba4f1]        # 1e34c2 <parameter_set_rna_turner2004+0x5d9a2>
   28fd1:	48 89 c7             	mov    rdi,rax
   28fd4:	e8 57 a9 fd ff       	call   3930 <strcmp@plt>
   28fd9:	85 c0                	test   eax,eax
   28fdb:	75 0a                	jne    28fe7 <gettype+0x19c>
   28fdd:	b8 0a 00 00 00       	mov    eax,0xa
   28fe2:	e9 2f 03 00 00       	jmp    29316 <gettype+0x4cb>
   28fe7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   28feb:	48 8d 35 ec a4 1b 00 	lea    rsi,[rip+0x1ba4ec]        # 1e34de <parameter_set_rna_turner2004+0x5d9be>
   28ff2:	48 89 c7             	mov    rdi,rax
   28ff5:	e8 36 a9 fd ff       	call   3930 <strcmp@plt>
   28ffa:	85 c0                	test   eax,eax
   28ffc:	75 0a                	jne    29008 <gettype+0x1bd>
   28ffe:	b8 0b 00 00 00       	mov    eax,0xb
   29003:	e9 0e 03 00 00       	jmp    29316 <gettype+0x4cb>
   29008:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2900c:	48 8d 35 dd a4 1b 00 	lea    rsi,[rip+0x1ba4dd]        # 1e34f0 <parameter_set_rna_turner2004+0x5d9d0>
   29013:	48 89 c7             	mov    rdi,rax
   29016:	e8 15 a9 fd ff       	call   3930 <strcmp@plt>
   2901b:	85 c0                	test   eax,eax
   2901d:	75 0a                	jne    29029 <gettype+0x1de>
   2901f:	b8 0c 00 00 00       	mov    eax,0xc
   29024:	e9 ed 02 00 00       	jmp    29316 <gettype+0x4cb>
   29029:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2902d:	48 8d 35 d9 a4 1b 00 	lea    rsi,[rip+0x1ba4d9]        # 1e350d <parameter_set_rna_turner2004+0x5d9ed>
   29034:	48 89 c7             	mov    rdi,rax
   29037:	e8 f4 a8 fd ff       	call   3930 <strcmp@plt>
   2903c:	85 c0                	test   eax,eax
   2903e:	75 0a                	jne    2904a <gettype+0x1ff>
   29040:	b8 0d 00 00 00       	mov    eax,0xd
   29045:	e9 cc 02 00 00       	jmp    29316 <gettype+0x4cb>
   2904a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2904e:	48 8d 35 d3 a4 1b 00 	lea    rsi,[rip+0x1ba4d3]        # 1e3528 <parameter_set_rna_turner2004+0x5da08>
   29055:	48 89 c7             	mov    rdi,rax
   29058:	e8 d3 a8 fd ff       	call   3930 <strcmp@plt>
   2905d:	85 c0                	test   eax,eax
   2905f:	75 0a                	jne    2906b <gettype+0x220>
   29061:	b8 0e 00 00 00       	mov    eax,0xe
   29066:	e9 ab 02 00 00       	jmp    29316 <gettype+0x4cb>
   2906b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2906f:	48 8d 35 d2 a4 1b 00 	lea    rsi,[rip+0x1ba4d2]        # 1e3548 <parameter_set_rna_turner2004+0x5da28>
   29076:	48 89 c7             	mov    rdi,rax
   29079:	e8 b2 a8 fd ff       	call   3930 <strcmp@plt>
   2907e:	85 c0                	test   eax,eax
   29080:	75 0a                	jne    2908c <gettype+0x241>
   29082:	b8 0f 00 00 00       	mov    eax,0xf
   29087:	e9 8a 02 00 00       	jmp    29316 <gettype+0x4cb>
   2908c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   29090:	48 8d 35 c9 a4 1b 00 	lea    rsi,[rip+0x1ba4c9]        # 1e3560 <parameter_set_rna_turner2004+0x5da40>
   29097:	48 89 c7             	mov    rdi,rax
   2909a:	e8 91 a8 fd ff       	call   3930 <strcmp@plt>
   2909f:	85 c0                	test   eax,eax
   290a1:	75 0a                	jne    290ad <gettype+0x262>
   290a3:	b8 10 00 00 00       	mov    eax,0x10
   290a8:	e9 69 02 00 00       	jmp    29316 <gettype+0x4cb>
   290ad:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   290b1:	48 8d 35 c8 a4 1b 00 	lea    rsi,[rip+0x1ba4c8]        # 1e3580 <parameter_set_rna_turner2004+0x5da60>
   290b8:	48 89 c7             	mov    rdi,rax
   290bb:	e8 70 a8 fd ff       	call   3930 <strcmp@plt>
   290c0:	85 c0                	test   eax,eax
   290c2:	75 0a                	jne    290ce <gettype+0x283>
   290c4:	b8 11 00 00 00       	mov    eax,0x11
   290c9:	e9 48 02 00 00       	jmp    29316 <gettype+0x4cb>
   290ce:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   290d2:	48 8d 35 b6 a4 1b 00 	lea    rsi,[rip+0x1ba4b6]        # 1e358f <parameter_set_rna_turner2004+0x5da6f>
   290d9:	48 89 c7             	mov    rdi,rax
   290dc:	e8 4f a8 fd ff       	call   3930 <strcmp@plt>
   290e1:	85 c0                	test   eax,eax
   290e3:	75 0a                	jne    290ef <gettype+0x2a4>
   290e5:	b8 12 00 00 00       	mov    eax,0x12
   290ea:	e9 27 02 00 00       	jmp    29316 <gettype+0x4cb>
   290ef:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   290f3:	48 8d 35 e5 a4 1b 00 	lea    rsi,[rip+0x1ba4e5]        # 1e35df <parameter_set_rna_turner2004+0x5dabf>
   290fa:	48 89 c7             	mov    rdi,rax
   290fd:	e8 2e a8 fd ff       	call   3930 <strcmp@plt>
   29102:	85 c0                	test   eax,eax
   29104:	75 0a                	jne    29110 <gettype+0x2c5>
   29106:	b8 19 00 00 00       	mov    eax,0x19
   2910b:	e9 06 02 00 00       	jmp    29316 <gettype+0x4cb>
   29110:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   29114:	48 8d 35 ca a4 1b 00 	lea    rsi,[rip+0x1ba4ca]        # 1e35e5 <parameter_set_rna_turner2004+0x5dac5>
   2911b:	48 89 c7             	mov    rdi,rax
   2911e:	e8 0d a8 fd ff       	call   3930 <strcmp@plt>
   29123:	85 c0                	test   eax,eax
   29125:	75 0a                	jne    29131 <gettype+0x2e6>
   29127:	b8 1a 00 00 00       	mov    eax,0x1a
   2912c:	e9 e5 01 00 00       	jmp    29316 <gettype+0x4cb>
   29131:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   29135:	48 8d 35 ba a4 1b 00 	lea    rsi,[rip+0x1ba4ba]        # 1e35f6 <parameter_set_rna_turner2004+0x5dad6>
   2913c:	48 89 c7             	mov    rdi,rax
   2913f:	e8 ec a7 fd ff       	call   3930 <strcmp@plt>
   29144:	85 c0                	test   eax,eax
   29146:	75 0a                	jne    29152 <gettype+0x307>
   29148:	b8 1b 00 00 00       	mov    eax,0x1b
   2914d:	e9 c4 01 00 00       	jmp    29316 <gettype+0x4cb>
   29152:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   29156:	48 8d 35 9f a4 1b 00 	lea    rsi,[rip+0x1ba49f]        # 1e35fc <parameter_set_rna_turner2004+0x5dadc>
   2915d:	48 89 c7             	mov    rdi,rax
   29160:	e8 cb a7 fd ff       	call   3930 <strcmp@plt>
   29165:	85 c0                	test   eax,eax
   29167:	75 0a                	jne    29173 <gettype+0x328>
   29169:	b8 1c 00 00 00       	mov    eax,0x1c
   2916e:	e9 a3 01 00 00       	jmp    29316 <gettype+0x4cb>
   29173:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   29177:	48 8d 35 8f a4 1b 00 	lea    rsi,[rip+0x1ba48f]        # 1e360d <parameter_set_rna_turner2004+0x5daed>
   2917e:	48 89 c7             	mov    rdi,rax
   29181:	e8 aa a7 fd ff       	call   3930 <strcmp@plt>
   29186:	85 c0                	test   eax,eax
   29188:	75 0a                	jne    29194 <gettype+0x349>
   2918a:	b8 1d 00 00 00       	mov    eax,0x1d
   2918f:	e9 82 01 00 00       	jmp    29316 <gettype+0x4cb>
   29194:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   29198:	48 8d 35 74 a4 1b 00 	lea    rsi,[rip+0x1ba474]        # 1e3613 <parameter_set_rna_turner2004+0x5daf3>
   2919f:	48 89 c7             	mov    rdi,rax
   291a2:	e8 89 a7 fd ff       	call   3930 <strcmp@plt>
   291a7:	85 c0                	test   eax,eax
   291a9:	75 0a                	jne    291b5 <gettype+0x36a>
   291ab:	b8 1e 00 00 00       	mov    eax,0x1e
   291b0:	e9 61 01 00 00       	jmp    29316 <gettype+0x4cb>
   291b5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   291b9:	48 8d 35 e9 a3 1b 00 	lea    rsi,[rip+0x1ba3e9]        # 1e35a9 <parameter_set_rna_turner2004+0x5da89>
   291c0:	48 89 c7             	mov    rdi,rax
   291c3:	e8 68 a7 fd ff       	call   3930 <strcmp@plt>
   291c8:	85 c0                	test   eax,eax
   291ca:	75 0a                	jne    291d6 <gettype+0x38b>
   291cc:	b8 15 00 00 00       	mov    eax,0x15
   291d1:	e9 40 01 00 00       	jmp    29316 <gettype+0x4cb>
   291d6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   291da:	48 8d 35 d0 a3 1b 00 	lea    rsi,[rip+0x1ba3d0]        # 1e35b1 <parameter_set_rna_turner2004+0x5da91>
   291e1:	48 89 c7             	mov    rdi,rax
   291e4:	e8 47 a7 fd ff       	call   3930 <strcmp@plt>
   291e9:	85 c0                	test   eax,eax
   291eb:	75 0a                	jne    291f7 <gettype+0x3ac>
   291ed:	b8 16 00 00 00       	mov    eax,0x16
   291f2:	e9 1f 01 00 00       	jmp    29316 <gettype+0x4cb>
   291f7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   291fb:	48 8d 35 c2 a3 1b 00 	lea    rsi,[rip+0x1ba3c2]        # 1e35c4 <parameter_set_rna_turner2004+0x5daa4>
   29202:	48 89 c7             	mov    rdi,rax
   29205:	e8 26 a7 fd ff       	call   3930 <strcmp@plt>
   2920a:	85 c0                	test   eax,eax
   2920c:	75 0a                	jne    29218 <gettype+0x3cd>
   2920e:	b8 17 00 00 00       	mov    eax,0x17
   29213:	e9 fe 00 00 00       	jmp    29316 <gettype+0x4cb>
   29218:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2921c:	48 8d 35 a9 a3 1b 00 	lea    rsi,[rip+0x1ba3a9]        # 1e35cc <parameter_set_rna_turner2004+0x5daac>
   29223:	48 89 c7             	mov    rdi,rax
   29226:	e8 05 a7 fd ff       	call   3930 <strcmp@plt>
   2922b:	85 c0                	test   eax,eax
   2922d:	75 0a                	jne    29239 <gettype+0x3ee>
   2922f:	b8 18 00 00 00       	mov    eax,0x18
   29234:	e9 dd 00 00 00       	jmp    29316 <gettype+0x4cb>
   29239:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2923d:	48 8d 35 e0 a3 1b 00 	lea    rsi,[rip+0x1ba3e0]        # 1e3624 <parameter_set_rna_turner2004+0x5db04>
   29244:	48 89 c7             	mov    rdi,rax
   29247:	e8 e4 a6 fd ff       	call   3930 <strcmp@plt>
   2924c:	85 c0                	test   eax,eax
   2924e:	75 0a                	jne    2925a <gettype+0x40f>
   29250:	b8 1f 00 00 00       	mov    eax,0x1f
   29255:	e9 bc 00 00 00       	jmp    29316 <gettype+0x4cb>
   2925a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2925e:	48 8d 35 c9 a3 1b 00 	lea    rsi,[rip+0x1ba3c9]        # 1e362e <parameter_set_rna_turner2004+0x5db0e>
   29265:	48 89 c7             	mov    rdi,rax
   29268:	e8 c3 a6 fd ff       	call   3930 <strcmp@plt>
   2926d:	85 c0                	test   eax,eax
   2926f:	75 0a                	jne    2927b <gettype+0x430>
   29271:	b8 23 00 00 00       	mov    eax,0x23
   29276:	e9 9b 00 00 00       	jmp    29316 <gettype+0x4cb>
   2927b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2927f:	48 8d 35 ae a3 1b 00 	lea    rsi,[rip+0x1ba3ae]        # 1e3634 <parameter_set_rna_turner2004+0x5db14>
   29286:	48 89 c7             	mov    rdi,rax
   29289:	e8 a2 a6 fd ff       	call   3930 <strcmp@plt>
   2928e:	85 c0                	test   eax,eax
   29290:	75 07                	jne    29299 <gettype+0x44e>
   29292:	b8 21 00 00 00       	mov    eax,0x21
   29297:	eb 7d                	jmp    29316 <gettype+0x4cb>
   29299:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2929d:	48 8d 35 99 a3 1b 00 	lea    rsi,[rip+0x1ba399]        # 1e363d <parameter_set_rna_turner2004+0x5db1d>
   292a4:	48 89 c7             	mov    rdi,rax
   292a7:	e8 84 a6 fd ff       	call   3930 <strcmp@plt>
   292ac:	85 c0                	test   eax,eax
   292ae:	75 07                	jne    292b7 <gettype+0x46c>
   292b0:	b8 20 00 00 00       	mov    eax,0x20
   292b5:	eb 5f                	jmp    29316 <gettype+0x4cb>
   292b7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   292bb:	48 8d 35 86 a3 1b 00 	lea    rsi,[rip+0x1ba386]        # 1e3648 <parameter_set_rna_turner2004+0x5db28>
   292c2:	48 89 c7             	mov    rdi,rax
   292c5:	e8 66 a6 fd ff       	call   3930 <strcmp@plt>
   292ca:	85 c0                	test   eax,eax
   292cc:	75 07                	jne    292d5 <gettype+0x48a>
   292ce:	b8 22 00 00 00       	mov    eax,0x22
   292d3:	eb 41                	jmp    29316 <gettype+0x4cb>
   292d5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   292d9:	48 8d 35 76 a3 1b 00 	lea    rsi,[rip+0x1ba376]        # 1e3656 <parameter_set_rna_turner2004+0x5db36>
   292e0:	48 89 c7             	mov    rdi,rax
   292e3:	e8 48 a6 fd ff       	call   3930 <strcmp@plt>
   292e8:	85 c0                	test   eax,eax
   292ea:	75 07                	jne    292f3 <gettype+0x4a8>
   292ec:	b8 24 00 00 00       	mov    eax,0x24
   292f1:	eb 23                	jmp    29316 <gettype+0x4cb>
   292f3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   292f7:	48 8d 35 54 a3 1b 00 	lea    rsi,[rip+0x1ba354]        # 1e3652 <parameter_set_rna_turner2004+0x5db32>
   292fe:	48 89 c7             	mov    rdi,rax
   29301:	e8 2a a6 fd ff       	call   3930 <strcmp@plt>
   29306:	85 c0                	test   eax,eax
   29308:	75 07                	jne    29311 <gettype+0x4c6>
   2930a:	b8 00 00 00 00       	mov    eax,0x0
   2930f:	eb 05                	jmp    29316 <gettype+0x4cb>
   29311:	b8 ff ff ff ff       	mov    eax,0xffffffff
   29316:	c9                   	leave  
   29317:	c3                   	ret    

0000000000029318 <write_parameter_file>:
   29318:	f3 0f 1e fa          	endbr64 
   2931c:	55                   	push   rbp
   2931d:	48 89 e5             	mov    rbp,rsp
   29320:	53                   	push   rbx
   29321:	48 81 ec 38 01 00 00 	sub    rsp,0x138
   29328:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
   2932f:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   29338:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
   2933c:	31 c0                	xor    eax,eax
   2933e:	48 8d 05 5d 9e 1b 00 	lea    rax,[rip+0x1b9e5d]        # 1e31a2 <parameter_set_rna_turner2004+0x5d682>
   29345:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
   29349:	48 8d 05 55 9e 1b 00 	lea    rax,[rip+0x1b9e55]        # 1e31a5 <parameter_set_rna_turner2004+0x5d685>
   29350:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
   29354:	48 8d 05 4d 9e 1b 00 	lea    rax,[rip+0x1b9e4d]        # 1e31a8 <parameter_set_rna_turner2004+0x5d688>
   2935b:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
   2935f:	48 8d 05 45 9e 1b 00 	lea    rax,[rip+0x1b9e45]        # 1e31ab <parameter_set_rna_turner2004+0x5d68b>
   29366:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
   2936a:	48 8d 05 3d 9e 1b 00 	lea    rax,[rip+0x1b9e3d]        # 1e31ae <parameter_set_rna_turner2004+0x5d68e>
   29371:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
   29375:	48 8d 05 35 9e 1b 00 	lea    rax,[rip+0x1b9e35]        # 1e31b1 <parameter_set_rna_turner2004+0x5d691>
   2937c:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
   29380:	48 8d 05 2d 9e 1b 00 	lea    rax,[rip+0x1b9e2d]        # 1e31b4 <parameter_set_rna_turner2004+0x5d694>
   29387:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
   2938b:	48 8d 05 25 9e 1b 00 	lea    rax,[rip+0x1b9e25]        # 1e31b7 <parameter_set_rna_turner2004+0x5d697>
   29392:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
   29396:	c7 45 e2 40 41 43 47 	mov    DWORD PTR [rbp-0x1e],0x47434140
   2939d:	66 c7 45 e6 55 00    	mov    WORD PTR [rbp-0x1a],0x55
   293a3:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
   293aa:	48 8d 35 09 9e 1b 00 	lea    rsi,[rip+0x1b9e09]        # 1e31ba <parameter_set_rna_turner2004+0x5d69a>
   293b1:	48 89 c7             	mov    rdi,rax
   293b4:	e8 e7 a4 fd ff       	call   38a0 <fopen@plt>
   293b9:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
   293bd:	48 83 7d 98 00       	cmp    QWORD PTR [rbp-0x68],0x0
   293c2:	75 25                	jne    293e9 <write_parameter_file+0xd1>
   293c4:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
   293cb:	48 89 c6             	mov    rsi,rax
   293ce:	48 8d 3d e7 9d 1b 00 	lea    rdi,[rip+0x1b9de7]        # 1e31bc <parameter_set_rna_turner2004+0x5d69c>
   293d5:	b8 00 00 00 00       	mov    eax,0x0
   293da:	e8 0b 2c 00 00       	call   2bfea <vrna_message_error>
   293df:	bf 01 00 00 00       	mov    edi,0x1
   293e4:	e8 d7 a4 fd ff       	call   38c0 <exit@plt>
   293e9:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   293ed:	48 89 c1             	mov    rcx,rax
   293f0:	ba 1f 00 00 00       	mov    edx,0x1f
   293f5:	be 01 00 00 00       	mov    esi,0x1
   293fa:	48 8d 3d cf 9d 1b 00 	lea    rdi,[rip+0x1b9dcf]        # 1e31d0 <parameter_set_rna_turner2004+0x5d6b0>
   29401:	e8 ca a6 fd ff       	call   3ad0 <fwrite@plt>
   29406:	bf 01 00 00 00       	mov    edi,0x1
   2940b:	e8 4c f8 ff ff       	call   28c5c <settype>
   29410:	48 89 c2             	mov    rdx,rax
   29413:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   29417:	48 8d 35 d2 9d 1b 00 	lea    rsi,[rip+0x1b9dd2]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   2941e:	48 89 c7             	mov    rdi,rax
   29421:	b8 00 00 00 00       	mov    eax,0x0
   29426:	e8 25 a5 fd ff       	call   3950 <fprintf@plt>
   2942b:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2942f:	48 89 c1             	mov    rcx,rax
   29432:	ba 2e 00 00 00       	mov    edx,0x2e
   29437:	be 01 00 00 00       	mov    esi,0x1
   2943c:	48 8d 3d b5 9d 1b 00 	lea    rdi,[rip+0x1b9db5]        # 1e31f8 <parameter_set_rna_turner2004+0x5d6d8>
   29443:	e8 88 a6 fd ff       	call   3ad0 <fwrite@plt>
   29448:	c7 85 d4 fe ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0x12c],0x1
   29452:	eb 3a                	jmp    2948e <write_parameter_file+0x176>
   29454:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   2945a:	48 98                	cdqe   
   2945c:	48 c1 e0 05          	shl    rax,0x5
   29460:	48 89 c2             	mov    rdx,rax
   29463:	48 8d 05 16 fe 1b 00 	lea    rax,[rip+0x1bfe16]        # 1e9280 <stack37>
   2946a:	48 01 d0             	add    rax,rdx
   2946d:	48 8d 78 04          	lea    rdi,[rax+0x4]
   29471:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   29475:	48 89 c1             	mov    rcx,rax
   29478:	ba 07 00 00 00       	mov    edx,0x7
   2947d:	be 07 00 00 00       	mov    esi,0x7
   29482:	e8 69 af ff ff       	call   243f0 <display_array>
   29487:	83 85 d4 fe ff ff 01 	add    DWORD PTR [rbp-0x12c],0x1
   2948e:	83 bd d4 fe ff ff 07 	cmp    DWORD PTR [rbp-0x12c],0x7
   29495:	7e bd                	jle    29454 <write_parameter_file+0x13c>
   29497:	bf 02 00 00 00       	mov    edi,0x2
   2949c:	e8 bb f7 ff ff       	call   28c5c <settype>
   294a1:	48 89 c2             	mov    rdx,rax
   294a4:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   294a8:	48 8d 35 41 9d 1b 00 	lea    rsi,[rip+0x1b9d41]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   294af:	48 89 c7             	mov    rdi,rax
   294b2:	b8 00 00 00 00       	mov    eax,0x0
   294b7:	e8 94 a4 fd ff       	call   3950 <fprintf@plt>
   294bc:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   294c0:	48 89 c1             	mov    rcx,rax
   294c3:	ba 2e 00 00 00       	mov    edx,0x2e
   294c8:	be 01 00 00 00       	mov    esi,0x1
   294cd:	48 8d 3d 24 9d 1b 00 	lea    rdi,[rip+0x1b9d24]        # 1e31f8 <parameter_set_rna_turner2004+0x5d6d8>
   294d4:	e8 f7 a5 fd ff       	call   3ad0 <fwrite@plt>
   294d9:	c7 85 d4 fe ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0x12c],0x1
   294e3:	eb 3a                	jmp    2951f <write_parameter_file+0x207>
   294e5:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   294eb:	48 98                	cdqe   
   294ed:	48 c1 e0 05          	shl    rax,0x5
   294f1:	48 89 c2             	mov    rdx,rax
   294f4:	48 8d 05 85 fe 1b 00 	lea    rax,[rip+0x1bfe85]        # 1e9380 <stackdH>
   294fb:	48 01 d0             	add    rax,rdx
   294fe:	48 8d 78 04          	lea    rdi,[rax+0x4]
   29502:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   29506:	48 89 c1             	mov    rcx,rax
   29509:	ba 07 00 00 00       	mov    edx,0x7
   2950e:	be 07 00 00 00       	mov    esi,0x7
   29513:	e8 d8 ae ff ff       	call   243f0 <display_array>
   29518:	83 85 d4 fe ff ff 01 	add    DWORD PTR [rbp-0x12c],0x1
   2951f:	83 bd d4 fe ff ff 07 	cmp    DWORD PTR [rbp-0x12c],0x7
   29526:	7e bd                	jle    294e5 <write_parameter_file+0x1cd>
   29528:	bf 09 00 00 00       	mov    edi,0x9
   2952d:	e8 2a f7 ff ff       	call   28c5c <settype>
   29532:	48 89 c2             	mov    rdx,rax
   29535:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   29539:	48 8d 35 b0 9c 1b 00 	lea    rsi,[rip+0x1b9cb0]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   29540:	48 89 c7             	mov    rdi,rax
   29543:	b8 00 00 00 00       	mov    eax,0x0
   29548:	e8 03 a4 fd ff       	call   3950 <fprintf@plt>
   2954d:	c7 85 dc fe ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0x124],0x1
   29557:	e9 86 00 00 00       	jmp    295e2 <write_parameter_file+0x2ca>
   2955c:	c7 85 d8 fe ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x128],0x0
   29566:	eb 6a                	jmp    295d2 <write_parameter_file+0x2ba>
   29568:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
   2956e:	48 98                	cdqe   
   29570:	48 89 c2             	mov    rdx,rax
   29573:	48 c1 e2 02          	shl    rdx,0x2
   29577:	48 01 c2             	add    rdx,rax
   2957a:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   29582:	48 89 c2             	mov    rdx,rax
   29585:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
   2958b:	48 63 c8             	movsxd rcx,eax
   2958e:	48 89 c8             	mov    rax,rcx
   29591:	48 c1 e0 02          	shl    rax,0x2
   29595:	48 01 c8             	add    rax,rcx
   29598:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   295a0:	48 01 c8             	add    rax,rcx
   295a3:	48 c1 e0 02          	shl    rax,0x2
   295a7:	48 01 c2             	add    rdx,rax
   295aa:	48 8d 05 0f 08 1c 00 	lea    rax,[rip+0x1c080f]        # 1e9dc0 <mismatchH37>
   295b1:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   295b5:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   295b9:	48 89 c1             	mov    rcx,rax
   295bc:	ba 05 00 00 00       	mov    edx,0x5
   295c1:	be 05 00 00 00       	mov    esi,0x5
   295c6:	e8 25 ae ff ff       	call   243f0 <display_array>
   295cb:	83 85 d8 fe ff ff 01 	add    DWORD PTR [rbp-0x128],0x1
   295d2:	83 bd d8 fe ff ff 04 	cmp    DWORD PTR [rbp-0x128],0x4
   295d9:	7e 8d                	jle    29568 <write_parameter_file+0x250>
   295db:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
   295e2:	83 bd dc fe ff ff 07 	cmp    DWORD PTR [rbp-0x124],0x7
   295e9:	0f 8e 6d ff ff ff    	jle    2955c <write_parameter_file+0x244>
   295ef:	bf 0a 00 00 00       	mov    edi,0xa
   295f4:	e8 63 f6 ff ff       	call   28c5c <settype>
   295f9:	48 89 c2             	mov    rdx,rax
   295fc:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   29600:	48 8d 35 e9 9b 1b 00 	lea    rsi,[rip+0x1b9be9]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   29607:	48 89 c7             	mov    rdi,rax
   2960a:	b8 00 00 00 00       	mov    eax,0x0
   2960f:	e8 3c a3 fd ff       	call   3950 <fprintf@plt>
   29614:	c7 85 e4 fe ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0x11c],0x1
   2961e:	e9 86 00 00 00       	jmp    296a9 <write_parameter_file+0x391>
   29623:	c7 85 e0 fe ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x120],0x0
   2962d:	eb 6a                	jmp    29699 <write_parameter_file+0x381>
   2962f:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
   29635:	48 98                	cdqe   
   29637:	48 89 c2             	mov    rdx,rax
   2963a:	48 c1 e2 02          	shl    rdx,0x2
   2963e:	48 01 c2             	add    rdx,rax
   29641:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   29649:	48 89 c2             	mov    rdx,rax
   2964c:	8b 85 e4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x11c]
   29652:	48 63 c8             	movsxd rcx,eax
   29655:	48 89 c8             	mov    rax,rcx
   29658:	48 c1 e0 02          	shl    rax,0x2
   2965c:	48 01 c8             	add    rax,rcx
   2965f:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   29667:	48 01 c8             	add    rax,rcx
   2966a:	48 c1 e0 02          	shl    rax,0x2
   2966e:	48 01 c2             	add    rdx,rax
   29671:	48 8d 05 68 0a 1c 00 	lea    rax,[rip+0x1c0a68]        # 1ea0e0 <mismatchHdH>
   29678:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   2967c:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   29680:	48 89 c1             	mov    rcx,rax
   29683:	ba 05 00 00 00       	mov    edx,0x5
   29688:	be 05 00 00 00       	mov    esi,0x5
   2968d:	e8 5e ad ff ff       	call   243f0 <display_array>
   29692:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
   29699:	83 bd e0 fe ff ff 04 	cmp    DWORD PTR [rbp-0x120],0x4
   296a0:	7e 8d                	jle    2962f <write_parameter_file+0x317>
   296a2:	83 85 e4 fe ff ff 01 	add    DWORD PTR [rbp-0x11c],0x1
   296a9:	83 bd e4 fe ff ff 07 	cmp    DWORD PTR [rbp-0x11c],0x7
   296b0:	0f 8e 6d ff ff ff    	jle    29623 <write_parameter_file+0x30b>
   296b6:	bf 0b 00 00 00       	mov    edi,0xb
   296bb:	e8 9c f5 ff ff       	call   28c5c <settype>
   296c0:	48 89 c2             	mov    rdx,rax
   296c3:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   296c7:	48 8d 35 22 9b 1b 00 	lea    rsi,[rip+0x1b9b22]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   296ce:	48 89 c7             	mov    rdi,rax
   296d1:	b8 00 00 00 00       	mov    eax,0x0
   296d6:	e8 75 a2 fd ff       	call   3950 <fprintf@plt>
   296db:	c7 85 ec fe ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0x114],0x1
   296e5:	e9 86 00 00 00       	jmp    29770 <write_parameter_file+0x458>
   296ea:	c7 85 e8 fe ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x118],0x0
   296f4:	eb 6a                	jmp    29760 <write_parameter_file+0x448>
   296f6:	8b 85 e8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x118]
   296fc:	48 98                	cdqe   
   296fe:	48 89 c2             	mov    rdx,rax
   29701:	48 c1 e2 02          	shl    rdx,0x2
   29705:	48 01 c2             	add    rdx,rax
   29708:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   29710:	48 89 c2             	mov    rdx,rax
   29713:	8b 85 ec fe ff ff    	mov    eax,DWORD PTR [rbp-0x114]
   29719:	48 63 c8             	movsxd rcx,eax
   2971c:	48 89 c8             	mov    rax,rcx
   2971f:	48 c1 e0 02          	shl    rax,0x2
   29723:	48 01 c8             	add    rax,rcx
   29726:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   2972e:	48 01 c8             	add    rax,rcx
   29731:	48 c1 e0 02          	shl    rax,0x2
   29735:	48 01 c2             	add    rdx,rax
   29738:	48 8d 05 41 00 1c 00 	lea    rax,[rip+0x1c0041]        # 1e9780 <mismatchI37>
   2973f:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   29743:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   29747:	48 89 c1             	mov    rcx,rax
   2974a:	ba 05 00 00 00       	mov    edx,0x5
   2974f:	be 05 00 00 00       	mov    esi,0x5
   29754:	e8 97 ac ff ff       	call   243f0 <display_array>
   29759:	83 85 e8 fe ff ff 01 	add    DWORD PTR [rbp-0x118],0x1
   29760:	83 bd e8 fe ff ff 04 	cmp    DWORD PTR [rbp-0x118],0x4
   29767:	7e 8d                	jle    296f6 <write_parameter_file+0x3de>
   29769:	83 85 ec fe ff ff 01 	add    DWORD PTR [rbp-0x114],0x1
   29770:	83 bd ec fe ff ff 07 	cmp    DWORD PTR [rbp-0x114],0x7
   29777:	0f 8e 6d ff ff ff    	jle    296ea <write_parameter_file+0x3d2>
   2977d:	bf 0c 00 00 00       	mov    edi,0xc
   29782:	e8 d5 f4 ff ff       	call   28c5c <settype>
   29787:	48 89 c2             	mov    rdx,rax
   2978a:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2978e:	48 8d 35 5b 9a 1b 00 	lea    rsi,[rip+0x1b9a5b]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   29795:	48 89 c7             	mov    rdi,rax
   29798:	b8 00 00 00 00       	mov    eax,0x0
   2979d:	e8 ae a1 fd ff       	call   3950 <fprintf@plt>
   297a2:	c7 85 f4 fe ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0x10c],0x1
   297ac:	e9 86 00 00 00       	jmp    29837 <write_parameter_file+0x51f>
   297b1:	c7 85 f0 fe ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x110],0x0
   297bb:	eb 6a                	jmp    29827 <write_parameter_file+0x50f>
   297bd:	8b 85 f0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x110]
   297c3:	48 98                	cdqe   
   297c5:	48 89 c2             	mov    rdx,rax
   297c8:	48 c1 e2 02          	shl    rdx,0x2
   297cc:	48 01 c2             	add    rdx,rax
   297cf:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   297d7:	48 89 c2             	mov    rdx,rax
   297da:	8b 85 f4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x10c]
   297e0:	48 63 c8             	movsxd rcx,eax
   297e3:	48 89 c8             	mov    rax,rcx
   297e6:	48 c1 e0 02          	shl    rax,0x2
   297ea:	48 01 c8             	add    rax,rcx
   297ed:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   297f5:	48 01 c8             	add    rax,rcx
   297f8:	48 c1 e0 02          	shl    rax,0x2
   297fc:	48 01 c2             	add    rdx,rax
   297ff:	48 8d 05 9a 02 1c 00 	lea    rax,[rip+0x1c029a]        # 1e9aa0 <mismatchIdH>
   29806:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   2980a:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2980e:	48 89 c1             	mov    rcx,rax
   29811:	ba 05 00 00 00       	mov    edx,0x5
   29816:	be 05 00 00 00       	mov    esi,0x5
   2981b:	e8 d0 ab ff ff       	call   243f0 <display_array>
   29820:	83 85 f0 fe ff ff 01 	add    DWORD PTR [rbp-0x110],0x1
   29827:	83 bd f0 fe ff ff 04 	cmp    DWORD PTR [rbp-0x110],0x4
   2982e:	7e 8d                	jle    297bd <write_parameter_file+0x4a5>
   29830:	83 85 f4 fe ff ff 01 	add    DWORD PTR [rbp-0x10c],0x1
   29837:	83 bd f4 fe ff ff 07 	cmp    DWORD PTR [rbp-0x10c],0x7
   2983e:	0f 8e 6d ff ff ff    	jle    297b1 <write_parameter_file+0x499>
   29844:	bf 0d 00 00 00       	mov    edi,0xd
   29849:	e8 0e f4 ff ff       	call   28c5c <settype>
   2984e:	48 89 c2             	mov    rdx,rax
   29851:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   29855:	48 8d 35 94 99 1b 00 	lea    rsi,[rip+0x1b9994]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   2985c:	48 89 c7             	mov    rdi,rax
   2985f:	b8 00 00 00 00       	mov    eax,0x0
   29864:	e8 e7 a0 fd ff       	call   3950 <fprintf@plt>
   29869:	c7 85 fc fe ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0x104],0x1
   29873:	e9 86 00 00 00       	jmp    298fe <write_parameter_file+0x5e6>
   29878:	c7 85 f8 fe ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x108],0x0
   29882:	eb 6a                	jmp    298ee <write_parameter_file+0x5d6>
   29884:	8b 85 f8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x108]
   2988a:	48 98                	cdqe   
   2988c:	48 89 c2             	mov    rdx,rax
   2988f:	48 c1 e2 02          	shl    rdx,0x2
   29893:	48 01 c2             	add    rdx,rax
   29896:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   2989e:	48 89 c2             	mov    rdx,rax
   298a1:	8b 85 fc fe ff ff    	mov    eax,DWORD PTR [rbp-0x104]
   298a7:	48 63 c8             	movsxd rcx,eax
   298aa:	48 89 c8             	mov    rax,rcx
   298ad:	48 c1 e0 02          	shl    rax,0x2
   298b1:	48 01 c8             	add    rax,rcx
   298b4:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   298bc:	48 01 c8             	add    rax,rcx
   298bf:	48 c1 e0 02          	shl    rax,0x2
   298c3:	48 01 c2             	add    rdx,rax
   298c6:	48 8d 05 73 11 1c 00 	lea    rax,[rip+0x1c1173]        # 1eaa40 <mismatch1nI37>
   298cd:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   298d1:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   298d5:	48 89 c1             	mov    rcx,rax
   298d8:	ba 05 00 00 00       	mov    edx,0x5
   298dd:	be 05 00 00 00       	mov    esi,0x5
   298e2:	e8 09 ab ff ff       	call   243f0 <display_array>
   298e7:	83 85 f8 fe ff ff 01 	add    DWORD PTR [rbp-0x108],0x1
   298ee:	83 bd f8 fe ff ff 04 	cmp    DWORD PTR [rbp-0x108],0x4
   298f5:	7e 8d                	jle    29884 <write_parameter_file+0x56c>
   298f7:	83 85 fc fe ff ff 01 	add    DWORD PTR [rbp-0x104],0x1
   298fe:	83 bd fc fe ff ff 07 	cmp    DWORD PTR [rbp-0x104],0x7
   29905:	0f 8e 6d ff ff ff    	jle    29878 <write_parameter_file+0x560>
   2990b:	bf 0e 00 00 00       	mov    edi,0xe
   29910:	e8 47 f3 ff ff       	call   28c5c <settype>
   29915:	48 89 c2             	mov    rdx,rax
   29918:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2991c:	48 8d 35 cd 98 1b 00 	lea    rsi,[rip+0x1b98cd]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   29923:	48 89 c7             	mov    rdi,rax
   29926:	b8 00 00 00 00       	mov    eax,0x0
   2992b:	e8 20 a0 fd ff       	call   3950 <fprintf@plt>
   29930:	c7 85 04 ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0xfc],0x1
   2993a:	e9 86 00 00 00       	jmp    299c5 <write_parameter_file+0x6ad>
   2993f:	c7 85 00 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x100],0x0
   29949:	eb 6a                	jmp    299b5 <write_parameter_file+0x69d>
   2994b:	8b 85 00 ff ff ff    	mov    eax,DWORD PTR [rbp-0x100]
   29951:	48 98                	cdqe   
   29953:	48 89 c2             	mov    rdx,rax
   29956:	48 c1 e2 02          	shl    rdx,0x2
   2995a:	48 01 c2             	add    rdx,rax
   2995d:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   29965:	48 89 c2             	mov    rdx,rax
   29968:	8b 85 04 ff ff ff    	mov    eax,DWORD PTR [rbp-0xfc]
   2996e:	48 63 c8             	movsxd rcx,eax
   29971:	48 89 c8             	mov    rax,rcx
   29974:	48 c1 e0 02          	shl    rax,0x2
   29978:	48 01 c8             	add    rax,rcx
   2997b:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   29983:	48 01 c8             	add    rax,rcx
   29986:	48 c1 e0 02          	shl    rax,0x2
   2998a:	48 01 c2             	add    rdx,rax
   2998d:	48 8d 05 cc 13 1c 00 	lea    rax,[rip+0x1c13cc]        # 1ead60 <mismatch1nIdH>
   29994:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   29998:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2999c:	48 89 c1             	mov    rcx,rax
   2999f:	ba 05 00 00 00       	mov    edx,0x5
   299a4:	be 05 00 00 00       	mov    esi,0x5
   299a9:	e8 42 aa ff ff       	call   243f0 <display_array>
   299ae:	83 85 00 ff ff ff 01 	add    DWORD PTR [rbp-0x100],0x1
   299b5:	83 bd 00 ff ff ff 04 	cmp    DWORD PTR [rbp-0x100],0x4
   299bc:	7e 8d                	jle    2994b <write_parameter_file+0x633>
   299be:	83 85 04 ff ff ff 01 	add    DWORD PTR [rbp-0xfc],0x1
   299c5:	83 bd 04 ff ff ff 07 	cmp    DWORD PTR [rbp-0xfc],0x7
   299cc:	0f 8e 6d ff ff ff    	jle    2993f <write_parameter_file+0x627>
   299d2:	bf 0f 00 00 00       	mov    edi,0xf
   299d7:	e8 80 f2 ff ff       	call   28c5c <settype>
   299dc:	48 89 c2             	mov    rdx,rax
   299df:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   299e3:	48 8d 35 06 98 1b 00 	lea    rsi,[rip+0x1b9806]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   299ea:	48 89 c7             	mov    rdi,rax
   299ed:	b8 00 00 00 00       	mov    eax,0x0
   299f2:	e8 59 9f fd ff       	call   3950 <fprintf@plt>
   299f7:	c7 85 0c ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0xf4],0x1
   29a01:	e9 86 00 00 00       	jmp    29a8c <write_parameter_file+0x774>
   29a06:	c7 85 08 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xf8],0x0
   29a10:	eb 6a                	jmp    29a7c <write_parameter_file+0x764>
   29a12:	8b 85 08 ff ff ff    	mov    eax,DWORD PTR [rbp-0xf8]
   29a18:	48 98                	cdqe   
   29a1a:	48 89 c2             	mov    rdx,rax
   29a1d:	48 c1 e2 02          	shl    rdx,0x2
   29a21:	48 01 c2             	add    rdx,rax
   29a24:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   29a2c:	48 89 c2             	mov    rdx,rax
   29a2f:	8b 85 0c ff ff ff    	mov    eax,DWORD PTR [rbp-0xf4]
   29a35:	48 63 c8             	movsxd rcx,eax
   29a38:	48 89 c8             	mov    rax,rcx
   29a3b:	48 c1 e0 02          	shl    rax,0x2
   29a3f:	48 01 c8             	add    rax,rcx
   29a42:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   29a4a:	48 01 c8             	add    rax,rcx
   29a4d:	48 c1 e0 02          	shl    rax,0x2
   29a51:	48 01 c2             	add    rdx,rax
   29a54:	48 8d 05 25 16 1c 00 	lea    rax,[rip+0x1c1625]        # 1eb080 <mismatch23I37>
   29a5b:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   29a5f:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   29a63:	48 89 c1             	mov    rcx,rax
   29a66:	ba 05 00 00 00       	mov    edx,0x5
   29a6b:	be 05 00 00 00       	mov    esi,0x5
   29a70:	e8 7b a9 ff ff       	call   243f0 <display_array>
   29a75:	83 85 08 ff ff ff 01 	add    DWORD PTR [rbp-0xf8],0x1
   29a7c:	83 bd 08 ff ff ff 04 	cmp    DWORD PTR [rbp-0xf8],0x4
   29a83:	7e 8d                	jle    29a12 <write_parameter_file+0x6fa>
   29a85:	83 85 0c ff ff ff 01 	add    DWORD PTR [rbp-0xf4],0x1
   29a8c:	83 bd 0c ff ff ff 07 	cmp    DWORD PTR [rbp-0xf4],0x7
   29a93:	0f 8e 6d ff ff ff    	jle    29a06 <write_parameter_file+0x6ee>
   29a99:	bf 10 00 00 00       	mov    edi,0x10
   29a9e:	e8 b9 f1 ff ff       	call   28c5c <settype>
   29aa3:	48 89 c2             	mov    rdx,rax
   29aa6:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   29aaa:	48 8d 35 3f 97 1b 00 	lea    rsi,[rip+0x1b973f]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   29ab1:	48 89 c7             	mov    rdi,rax
   29ab4:	b8 00 00 00 00       	mov    eax,0x0
   29ab9:	e8 92 9e fd ff       	call   3950 <fprintf@plt>
   29abe:	c7 85 14 ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0xec],0x1
   29ac8:	e9 86 00 00 00       	jmp    29b53 <write_parameter_file+0x83b>
   29acd:	c7 85 10 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xf0],0x0
   29ad7:	eb 6a                	jmp    29b43 <write_parameter_file+0x82b>
   29ad9:	8b 85 10 ff ff ff    	mov    eax,DWORD PTR [rbp-0xf0]
   29adf:	48 98                	cdqe   
   29ae1:	48 89 c2             	mov    rdx,rax
   29ae4:	48 c1 e2 02          	shl    rdx,0x2
   29ae8:	48 01 c2             	add    rdx,rax
   29aeb:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   29af3:	48 89 c2             	mov    rdx,rax
   29af6:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
   29afc:	48 63 c8             	movsxd rcx,eax
   29aff:	48 89 c8             	mov    rax,rcx
   29b02:	48 c1 e0 02          	shl    rax,0x2
   29b06:	48 01 c8             	add    rax,rcx
   29b09:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   29b11:	48 01 c8             	add    rax,rcx
   29b14:	48 c1 e0 02          	shl    rax,0x2
   29b18:	48 01 c2             	add    rdx,rax
   29b1b:	48 8d 05 7e 18 1c 00 	lea    rax,[rip+0x1c187e]        # 1eb3a0 <mismatch23IdH>
   29b22:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   29b26:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   29b2a:	48 89 c1             	mov    rcx,rax
   29b2d:	ba 05 00 00 00       	mov    edx,0x5
   29b32:	be 05 00 00 00       	mov    esi,0x5
   29b37:	e8 b4 a8 ff ff       	call   243f0 <display_array>
   29b3c:	83 85 10 ff ff ff 01 	add    DWORD PTR [rbp-0xf0],0x1
   29b43:	83 bd 10 ff ff ff 04 	cmp    DWORD PTR [rbp-0xf0],0x4
   29b4a:	7e 8d                	jle    29ad9 <write_parameter_file+0x7c1>
   29b4c:	83 85 14 ff ff ff 01 	add    DWORD PTR [rbp-0xec],0x1
   29b53:	83 bd 14 ff ff ff 07 	cmp    DWORD PTR [rbp-0xec],0x7
   29b5a:	0f 8e 6d ff ff ff    	jle    29acd <write_parameter_file+0x7b5>
   29b60:	bf 11 00 00 00       	mov    edi,0x11
   29b65:	e8 f2 f0 ff ff       	call   28c5c <settype>
   29b6a:	48 89 c2             	mov    rdx,rax
   29b6d:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   29b71:	48 8d 35 78 96 1b 00 	lea    rsi,[rip+0x1b9678]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   29b78:	48 89 c7             	mov    rdi,rax
   29b7b:	b8 00 00 00 00       	mov    eax,0x0
   29b80:	e8 cb 9d fd ff       	call   3950 <fprintf@plt>
   29b85:	c7 85 1c ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0xe4],0x1
   29b8f:	e9 86 00 00 00       	jmp    29c1a <write_parameter_file+0x902>
   29b94:	c7 85 18 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xe8],0x0
   29b9e:	eb 6a                	jmp    29c0a <write_parameter_file+0x8f2>
   29ba0:	8b 85 18 ff ff ff    	mov    eax,DWORD PTR [rbp-0xe8]
   29ba6:	48 98                	cdqe   
   29ba8:	48 89 c2             	mov    rdx,rax
   29bab:	48 c1 e2 02          	shl    rdx,0x2
   29baf:	48 01 c2             	add    rdx,rax
   29bb2:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   29bba:	48 89 c2             	mov    rdx,rax
   29bbd:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
   29bc3:	48 63 c8             	movsxd rcx,eax
   29bc6:	48 89 c8             	mov    rax,rcx
   29bc9:	48 c1 e0 02          	shl    rax,0x2
   29bcd:	48 01 c8             	add    rax,rcx
   29bd0:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   29bd8:	48 01 c8             	add    rax,rcx
   29bdb:	48 c1 e0 02          	shl    rax,0x2
   29bdf:	48 01 c2             	add    rdx,rax
   29be2:	48 8d 05 17 08 1c 00 	lea    rax,[rip+0x1c0817]        # 1ea400 <mismatchM37>
   29be9:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   29bed:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   29bf1:	48 89 c1             	mov    rcx,rax
   29bf4:	ba 05 00 00 00       	mov    edx,0x5
   29bf9:	be 05 00 00 00       	mov    esi,0x5
   29bfe:	e8 ed a7 ff ff       	call   243f0 <display_array>
   29c03:	83 85 18 ff ff ff 01 	add    DWORD PTR [rbp-0xe8],0x1
   29c0a:	83 bd 18 ff ff ff 04 	cmp    DWORD PTR [rbp-0xe8],0x4
   29c11:	7e 8d                	jle    29ba0 <write_parameter_file+0x888>
   29c13:	83 85 1c ff ff ff 01 	add    DWORD PTR [rbp-0xe4],0x1
   29c1a:	83 bd 1c ff ff ff 07 	cmp    DWORD PTR [rbp-0xe4],0x7
   29c21:	0f 8e 6d ff ff ff    	jle    29b94 <write_parameter_file+0x87c>
   29c27:	bf 12 00 00 00       	mov    edi,0x12
   29c2c:	e8 2b f0 ff ff       	call   28c5c <settype>
   29c31:	48 89 c2             	mov    rdx,rax
   29c34:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   29c38:	48 8d 35 b1 95 1b 00 	lea    rsi,[rip+0x1b95b1]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   29c3f:	48 89 c7             	mov    rdi,rax
   29c42:	b8 00 00 00 00       	mov    eax,0x0
   29c47:	e8 04 9d fd ff       	call   3950 <fprintf@plt>
   29c4c:	c7 85 24 ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0xdc],0x1
   29c56:	e9 86 00 00 00       	jmp    29ce1 <write_parameter_file+0x9c9>
   29c5b:	c7 85 20 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xe0],0x0
   29c65:	eb 6a                	jmp    29cd1 <write_parameter_file+0x9b9>
   29c67:	8b 85 20 ff ff ff    	mov    eax,DWORD PTR [rbp-0xe0]
   29c6d:	48 98                	cdqe   
   29c6f:	48 89 c2             	mov    rdx,rax
   29c72:	48 c1 e2 02          	shl    rdx,0x2
   29c76:	48 01 c2             	add    rdx,rax
   29c79:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   29c81:	48 89 c2             	mov    rdx,rax
   29c84:	8b 85 24 ff ff ff    	mov    eax,DWORD PTR [rbp-0xdc]
   29c8a:	48 63 c8             	movsxd rcx,eax
   29c8d:	48 89 c8             	mov    rax,rcx
   29c90:	48 c1 e0 02          	shl    rax,0x2
   29c94:	48 01 c8             	add    rax,rcx
   29c97:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   29c9f:	48 01 c8             	add    rax,rcx
   29ca2:	48 c1 e0 02          	shl    rax,0x2
   29ca6:	48 01 c2             	add    rdx,rax
   29ca9:	48 8d 05 70 0a 1c 00 	lea    rax,[rip+0x1c0a70]        # 1ea720 <mismatchMdH>
   29cb0:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   29cb4:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   29cb8:	48 89 c1             	mov    rcx,rax
   29cbb:	ba 05 00 00 00       	mov    edx,0x5
   29cc0:	be 05 00 00 00       	mov    esi,0x5
   29cc5:	e8 26 a7 ff ff       	call   243f0 <display_array>
   29cca:	83 85 20 ff ff ff 01 	add    DWORD PTR [rbp-0xe0],0x1
   29cd1:	83 bd 20 ff ff ff 04 	cmp    DWORD PTR [rbp-0xe0],0x4
   29cd8:	7e 8d                	jle    29c67 <write_parameter_file+0x94f>
   29cda:	83 85 24 ff ff ff 01 	add    DWORD PTR [rbp-0xdc],0x1
   29ce1:	83 bd 24 ff ff ff 07 	cmp    DWORD PTR [rbp-0xdc],0x7
   29ce8:	0f 8e 6d ff ff ff    	jle    29c5b <write_parameter_file+0x943>
   29cee:	bf 13 00 00 00       	mov    edi,0x13
   29cf3:	e8 64 ef ff ff       	call   28c5c <settype>
   29cf8:	48 89 c2             	mov    rdx,rax
   29cfb:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   29cff:	48 8d 35 ea 94 1b 00 	lea    rsi,[rip+0x1b94ea]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   29d06:	48 89 c7             	mov    rdi,rax
   29d09:	b8 00 00 00 00       	mov    eax,0x0
   29d0e:	e8 3d 9c fd ff       	call   3950 <fprintf@plt>
   29d13:	c7 85 2c ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0xd4],0x1
   29d1d:	e9 86 00 00 00       	jmp    29da8 <write_parameter_file+0xa90>
   29d22:	c7 85 28 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xd8],0x0
   29d2c:	eb 6a                	jmp    29d98 <write_parameter_file+0xa80>
   29d2e:	8b 85 28 ff ff ff    	mov    eax,DWORD PTR [rbp-0xd8]
   29d34:	48 98                	cdqe   
   29d36:	48 89 c2             	mov    rdx,rax
   29d39:	48 c1 e2 02          	shl    rdx,0x2
   29d3d:	48 01 c2             	add    rdx,rax
   29d40:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   29d48:	48 89 c2             	mov    rdx,rax
   29d4b:	8b 85 2c ff ff ff    	mov    eax,DWORD PTR [rbp-0xd4]
   29d51:	48 63 c8             	movsxd rcx,eax
   29d54:	48 89 c8             	mov    rax,rcx
   29d57:	48 c1 e0 02          	shl    rax,0x2
   29d5b:	48 01 c8             	add    rax,rcx
   29d5e:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   29d66:	48 01 c8             	add    rax,rcx
   29d69:	48 c1 e0 02          	shl    rax,0x2
   29d6d:	48 01 c2             	add    rdx,rax
   29d70:	48 8d 05 49 19 1c 00 	lea    rax,[rip+0x1c1949]        # 1eb6c0 <mismatchExt37>
   29d77:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   29d7b:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   29d7f:	48 89 c1             	mov    rcx,rax
   29d82:	ba 05 00 00 00       	mov    edx,0x5
   29d87:	be 05 00 00 00       	mov    esi,0x5
   29d8c:	e8 5f a6 ff ff       	call   243f0 <display_array>
   29d91:	83 85 28 ff ff ff 01 	add    DWORD PTR [rbp-0xd8],0x1
   29d98:	83 bd 28 ff ff ff 04 	cmp    DWORD PTR [rbp-0xd8],0x4
   29d9f:	7e 8d                	jle    29d2e <write_parameter_file+0xa16>
   29da1:	83 85 2c ff ff ff 01 	add    DWORD PTR [rbp-0xd4],0x1
   29da8:	83 bd 2c ff ff ff 07 	cmp    DWORD PTR [rbp-0xd4],0x7
   29daf:	0f 8e 6d ff ff ff    	jle    29d22 <write_parameter_file+0xa0a>
   29db5:	bf 14 00 00 00       	mov    edi,0x14
   29dba:	e8 9d ee ff ff       	call   28c5c <settype>
   29dbf:	48 89 c2             	mov    rdx,rax
   29dc2:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   29dc6:	48 8d 35 23 94 1b 00 	lea    rsi,[rip+0x1b9423]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   29dcd:	48 89 c7             	mov    rdi,rax
   29dd0:	b8 00 00 00 00       	mov    eax,0x0
   29dd5:	e8 76 9b fd ff       	call   3950 <fprintf@plt>
   29dda:	c7 85 34 ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0xcc],0x1
   29de4:	e9 86 00 00 00       	jmp    29e6f <write_parameter_file+0xb57>
   29de9:	c7 85 30 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xd0],0x0
   29df3:	eb 6a                	jmp    29e5f <write_parameter_file+0xb47>
   29df5:	8b 85 30 ff ff ff    	mov    eax,DWORD PTR [rbp-0xd0]
   29dfb:	48 98                	cdqe   
   29dfd:	48 89 c2             	mov    rdx,rax
   29e00:	48 c1 e2 02          	shl    rdx,0x2
   29e04:	48 01 c2             	add    rdx,rax
   29e07:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   29e0f:	48 89 c2             	mov    rdx,rax
   29e12:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [rbp-0xcc]
   29e18:	48 63 c8             	movsxd rcx,eax
   29e1b:	48 89 c8             	mov    rax,rcx
   29e1e:	48 c1 e0 02          	shl    rax,0x2
   29e22:	48 01 c8             	add    rax,rcx
   29e25:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   29e2d:	48 01 c8             	add    rax,rcx
   29e30:	48 c1 e0 02          	shl    rax,0x2
   29e34:	48 01 c2             	add    rdx,rax
   29e37:	48 8d 05 a2 1b 1c 00 	lea    rax,[rip+0x1c1ba2]        # 1eb9e0 <mismatchExtdH>
   29e3e:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   29e42:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   29e46:	48 89 c1             	mov    rcx,rax
   29e49:	ba 05 00 00 00       	mov    edx,0x5
   29e4e:	be 05 00 00 00       	mov    esi,0x5
   29e53:	e8 98 a5 ff ff       	call   243f0 <display_array>
   29e58:	83 85 30 ff ff ff 01 	add    DWORD PTR [rbp-0xd0],0x1
   29e5f:	83 bd 30 ff ff ff 04 	cmp    DWORD PTR [rbp-0xd0],0x4
   29e66:	7e 8d                	jle    29df5 <write_parameter_file+0xadd>
   29e68:	83 85 34 ff ff ff 01 	add    DWORD PTR [rbp-0xcc],0x1
   29e6f:	83 bd 34 ff ff ff 07 	cmp    DWORD PTR [rbp-0xcc],0x7
   29e76:	0f 8e 6d ff ff ff    	jle    29de9 <write_parameter_file+0xad1>
   29e7c:	bf 15 00 00 00       	mov    edi,0x15
   29e81:	e8 d6 ed ff ff       	call   28c5c <settype>
   29e86:	48 89 c2             	mov    rdx,rax
   29e89:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   29e8d:	48 8d 35 5c 93 1b 00 	lea    rsi,[rip+0x1b935c]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   29e94:	48 89 c7             	mov    rdi,rax
   29e97:	b8 00 00 00 00       	mov    eax,0x0
   29e9c:	e8 af 9a fd ff       	call   3950 <fprintf@plt>
   29ea1:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   29ea5:	48 89 c1             	mov    rcx,rax
   29ea8:	ba 23 00 00 00       	mov    edx,0x23
   29ead:	be 01 00 00 00       	mov    esi,0x1
   29eb2:	48 8d 3d 6f 93 1b 00 	lea    rdi,[rip+0x1b936f]        # 1e3228 <parameter_set_rna_turner2004+0x5d708>
   29eb9:	e8 12 9c fd ff       	call   3ad0 <fwrite@plt>
   29ebe:	c7 85 d4 fe ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0x12c],0x1
   29ec8:	eb 3f                	jmp    29f09 <write_parameter_file+0xbf1>
   29eca:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   29ed0:	48 63 d0             	movsxd rdx,eax
   29ed3:	48 89 d0             	mov    rax,rdx
   29ed6:	48 c1 e0 02          	shl    rax,0x2
   29eda:	48 01 d0             	add    rax,rdx
   29edd:	48 c1 e0 02          	shl    rax,0x2
   29ee1:	48 8d 15 18 1e 1c 00 	lea    rdx,[rip+0x1c1e18]        # 1ebd00 <dangle5_37>
   29ee8:	48 8d 3c 10          	lea    rdi,[rax+rdx*1]
   29eec:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   29ef0:	48 89 c1             	mov    rcx,rax
   29ef3:	ba 05 00 00 00       	mov    edx,0x5
   29ef8:	be 05 00 00 00       	mov    esi,0x5
   29efd:	e8 ee a4 ff ff       	call   243f0 <display_array>
   29f02:	83 85 d4 fe ff ff 01 	add    DWORD PTR [rbp-0x12c],0x1
   29f09:	83 bd d4 fe ff ff 07 	cmp    DWORD PTR [rbp-0x12c],0x7
   29f10:	7e b8                	jle    29eca <write_parameter_file+0xbb2>
   29f12:	bf 16 00 00 00       	mov    edi,0x16
   29f17:	e8 40 ed ff ff       	call   28c5c <settype>
   29f1c:	48 89 c2             	mov    rdx,rax
   29f1f:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   29f23:	48 8d 35 c6 92 1b 00 	lea    rsi,[rip+0x1b92c6]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   29f2a:	48 89 c7             	mov    rdi,rax
   29f2d:	b8 00 00 00 00       	mov    eax,0x0
   29f32:	e8 19 9a fd ff       	call   3950 <fprintf@plt>
   29f37:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   29f3b:	48 89 c1             	mov    rcx,rax
   29f3e:	ba 23 00 00 00       	mov    edx,0x23
   29f43:	be 01 00 00 00       	mov    esi,0x1
   29f48:	48 8d 3d d9 92 1b 00 	lea    rdi,[rip+0x1b92d9]        # 1e3228 <parameter_set_rna_turner2004+0x5d708>
   29f4f:	e8 7c 9b fd ff       	call   3ad0 <fwrite@plt>
   29f54:	c7 85 d4 fe ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0x12c],0x1
   29f5e:	eb 3f                	jmp    29f9f <write_parameter_file+0xc87>
   29f60:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   29f66:	48 63 d0             	movsxd rdx,eax
   29f69:	48 89 d0             	mov    rax,rdx
   29f6c:	48 c1 e0 02          	shl    rax,0x2
   29f70:	48 01 d0             	add    rax,rdx
   29f73:	48 c1 e0 02          	shl    rax,0x2
   29f77:	48 8d 15 c2 1e 1c 00 	lea    rdx,[rip+0x1c1ec2]        # 1ebe40 <dangle5_dH>
   29f7e:	48 8d 3c 10          	lea    rdi,[rax+rdx*1]
   29f82:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   29f86:	48 89 c1             	mov    rcx,rax
   29f89:	ba 05 00 00 00       	mov    edx,0x5
   29f8e:	be 05 00 00 00       	mov    esi,0x5
   29f93:	e8 58 a4 ff ff       	call   243f0 <display_array>
   29f98:	83 85 d4 fe ff ff 01 	add    DWORD PTR [rbp-0x12c],0x1
   29f9f:	83 bd d4 fe ff ff 07 	cmp    DWORD PTR [rbp-0x12c],0x7
   29fa6:	7e b8                	jle    29f60 <write_parameter_file+0xc48>
   29fa8:	bf 17 00 00 00       	mov    edi,0x17
   29fad:	e8 aa ec ff ff       	call   28c5c <settype>
   29fb2:	48 89 c2             	mov    rdx,rax
   29fb5:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   29fb9:	48 8d 35 30 92 1b 00 	lea    rsi,[rip+0x1b9230]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   29fc0:	48 89 c7             	mov    rdi,rax
   29fc3:	b8 00 00 00 00       	mov    eax,0x0
   29fc8:	e8 83 99 fd ff       	call   3950 <fprintf@plt>
   29fcd:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   29fd1:	48 89 c1             	mov    rcx,rax
   29fd4:	ba 23 00 00 00       	mov    edx,0x23
   29fd9:	be 01 00 00 00       	mov    esi,0x1
   29fde:	48 8d 3d 43 92 1b 00 	lea    rdi,[rip+0x1b9243]        # 1e3228 <parameter_set_rna_turner2004+0x5d708>
   29fe5:	e8 e6 9a fd ff       	call   3ad0 <fwrite@plt>
   29fea:	c7 85 d4 fe ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0x12c],0x1
   29ff4:	eb 3f                	jmp    2a035 <write_parameter_file+0xd1d>
   29ff6:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   29ffc:	48 63 d0             	movsxd rdx,eax
   29fff:	48 89 d0             	mov    rax,rdx
   2a002:	48 c1 e0 02          	shl    rax,0x2
   2a006:	48 01 d0             	add    rax,rdx
   2a009:	48 c1 e0 02          	shl    rax,0x2
   2a00d:	48 8d 15 8c 1d 1c 00 	lea    rdx,[rip+0x1c1d8c]        # 1ebda0 <dangle3_37>
   2a014:	48 8d 3c 10          	lea    rdi,[rax+rdx*1]
   2a018:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2a01c:	48 89 c1             	mov    rcx,rax
   2a01f:	ba 05 00 00 00       	mov    edx,0x5
   2a024:	be 05 00 00 00       	mov    esi,0x5
   2a029:	e8 c2 a3 ff ff       	call   243f0 <display_array>
   2a02e:	83 85 d4 fe ff ff 01 	add    DWORD PTR [rbp-0x12c],0x1
   2a035:	83 bd d4 fe ff ff 07 	cmp    DWORD PTR [rbp-0x12c],0x7
   2a03c:	7e b8                	jle    29ff6 <write_parameter_file+0xcde>
   2a03e:	bf 18 00 00 00       	mov    edi,0x18
   2a043:	e8 14 ec ff ff       	call   28c5c <settype>
   2a048:	48 89 c2             	mov    rdx,rax
   2a04b:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2a04f:	48 8d 35 9a 91 1b 00 	lea    rsi,[rip+0x1b919a]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   2a056:	48 89 c7             	mov    rdi,rax
   2a059:	b8 00 00 00 00       	mov    eax,0x0
   2a05e:	e8 ed 98 fd ff       	call   3950 <fprintf@plt>
   2a063:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2a067:	48 89 c1             	mov    rcx,rax
   2a06a:	ba 23 00 00 00       	mov    edx,0x23
   2a06f:	be 01 00 00 00       	mov    esi,0x1
   2a074:	48 8d 3d ad 91 1b 00 	lea    rdi,[rip+0x1b91ad]        # 1e3228 <parameter_set_rna_turner2004+0x5d708>
   2a07b:	e8 50 9a fd ff       	call   3ad0 <fwrite@plt>
   2a080:	c7 85 d4 fe ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0x12c],0x1
   2a08a:	eb 3f                	jmp    2a0cb <write_parameter_file+0xdb3>
   2a08c:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   2a092:	48 63 d0             	movsxd rdx,eax
   2a095:	48 89 d0             	mov    rax,rdx
   2a098:	48 c1 e0 02          	shl    rax,0x2
   2a09c:	48 01 d0             	add    rax,rdx
   2a09f:	48 c1 e0 02          	shl    rax,0x2
   2a0a3:	48 8d 15 36 1e 1c 00 	lea    rdx,[rip+0x1c1e36]        # 1ebee0 <dangle3_dH>
   2a0aa:	48 8d 3c 10          	lea    rdi,[rax+rdx*1]
   2a0ae:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2a0b2:	48 89 c1             	mov    rcx,rax
   2a0b5:	ba 05 00 00 00       	mov    edx,0x5
   2a0ba:	be 05 00 00 00       	mov    esi,0x5
   2a0bf:	e8 2c a3 ff ff       	call   243f0 <display_array>
   2a0c4:	83 85 d4 fe ff ff 01 	add    DWORD PTR [rbp-0x12c],0x1
   2a0cb:	83 bd d4 fe ff ff 07 	cmp    DWORD PTR [rbp-0x12c],0x7
   2a0d2:	7e b8                	jle    2a08c <write_parameter_file+0xd74>
   2a0d4:	bf 19 00 00 00       	mov    edi,0x19
   2a0d9:	e8 7e eb ff ff       	call   28c5c <settype>
   2a0de:	48 89 c2             	mov    rdx,rax
   2a0e1:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2a0e5:	48 8d 35 04 91 1b 00 	lea    rsi,[rip+0x1b9104]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   2a0ec:	48 89 c7             	mov    rdi,rax
   2a0ef:	b8 00 00 00 00       	mov    eax,0x0
   2a0f4:	e8 57 98 fd ff       	call   3950 <fprintf@plt>
   2a0f9:	c7 85 3c ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0xc4],0x1
   2a103:	e9 09 01 00 00       	jmp    2a211 <write_parameter_file+0xef9>
   2a108:	c7 85 40 ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0xc0],0x1
   2a112:	e9 e6 00 00 00       	jmp    2a1fd <write_parameter_file+0xee5>
   2a117:	8b 85 40 ff ff ff    	mov    eax,DWORD PTR [rbp-0xc0]
   2a11d:	48 98                	cdqe   
   2a11f:	48 8b 4c c5 a0       	mov    rcx,QWORD PTR [rbp+rax*8-0x60]
   2a124:	8b 85 3c ff ff ff    	mov    eax,DWORD PTR [rbp-0xc4]
   2a12a:	48 98                	cdqe   
   2a12c:	48 8b 54 c5 a0       	mov    rdx,QWORD PTR [rbp+rax*8-0x60]
   2a131:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2a135:	48 8d 35 10 91 1b 00 	lea    rsi,[rip+0x1b9110]        # 1e324c <parameter_set_rna_turner2004+0x5d72c>
   2a13c:	48 89 c7             	mov    rdi,rax
   2a13f:	b8 00 00 00 00       	mov    eax,0x0
   2a144:	e8 07 98 fd ff       	call   3950 <fprintf@plt>
   2a149:	c7 85 38 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xc8],0x0
   2a153:	e9 91 00 00 00       	jmp    2a1e9 <write_parameter_file+0xed1>
   2a158:	8b 85 38 ff ff ff    	mov    eax,DWORD PTR [rbp-0xc8]
   2a15e:	48 98                	cdqe   
   2a160:	48 89 c2             	mov    rdx,rax
   2a163:	48 c1 e2 02          	shl    rdx,0x2
   2a167:	48 01 c2             	add    rdx,rax
   2a16a:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   2a172:	48 89 c2             	mov    rdx,rax
   2a175:	8b 85 40 ff ff ff    	mov    eax,DWORD PTR [rbp-0xc0]
   2a17b:	48 63 c8             	movsxd rcx,eax
   2a17e:	48 89 c8             	mov    rax,rcx
   2a181:	48 c1 e0 02          	shl    rax,0x2
   2a185:	48 01 c8             	add    rax,rcx
   2a188:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   2a190:	48 01 c8             	add    rax,rcx
   2a193:	48 c1 e0 02          	shl    rax,0x2
   2a197:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
   2a19b:	8b 85 3c ff ff ff    	mov    eax,DWORD PTR [rbp-0xc4]
   2a1a1:	48 63 d0             	movsxd rdx,eax
   2a1a4:	48 89 d0             	mov    rax,rdx
   2a1a7:	48 c1 e0 02          	shl    rax,0x2
   2a1ab:	48 01 d0             	add    rax,rdx
   2a1ae:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2a1b6:	48 01 d0             	add    rax,rdx
   2a1b9:	48 c1 e0 05          	shl    rax,0x5
   2a1bd:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   2a1c1:	48 8d 05 18 25 1c 00 	lea    rax,[rip+0x1c2518]        # 1ec6e0 <int11_37>
   2a1c8:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   2a1cc:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2a1d0:	48 89 c1             	mov    rcx,rax
   2a1d3:	ba 05 00 00 00       	mov    edx,0x5
   2a1d8:	be 05 00 00 00       	mov    esi,0x5
   2a1dd:	e8 0e a2 ff ff       	call   243f0 <display_array>
   2a1e2:	83 85 38 ff ff ff 01 	add    DWORD PTR [rbp-0xc8],0x1
   2a1e9:	83 bd 38 ff ff ff 04 	cmp    DWORD PTR [rbp-0xc8],0x4
   2a1f0:	0f 8e 62 ff ff ff    	jle    2a158 <write_parameter_file+0xe40>
   2a1f6:	83 85 40 ff ff ff 01 	add    DWORD PTR [rbp-0xc0],0x1
   2a1fd:	83 bd 40 ff ff ff 07 	cmp    DWORD PTR [rbp-0xc0],0x7
   2a204:	0f 8e 0d ff ff ff    	jle    2a117 <write_parameter_file+0xdff>
   2a20a:	83 85 3c ff ff ff 01 	add    DWORD PTR [rbp-0xc4],0x1
   2a211:	83 bd 3c ff ff ff 07 	cmp    DWORD PTR [rbp-0xc4],0x7
   2a218:	0f 8e ea fe ff ff    	jle    2a108 <write_parameter_file+0xdf0>
   2a21e:	bf 1a 00 00 00       	mov    edi,0x1a
   2a223:	e8 34 ea ff ff       	call   28c5c <settype>
   2a228:	48 89 c2             	mov    rdx,rax
   2a22b:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2a22f:	48 8d 35 ba 8f 1b 00 	lea    rsi,[rip+0x1b8fba]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   2a236:	48 89 c7             	mov    rdi,rax
   2a239:	b8 00 00 00 00       	mov    eax,0x0
   2a23e:	e8 0d 97 fd ff       	call   3950 <fprintf@plt>
   2a243:	c7 85 48 ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0xb8],0x1
   2a24d:	e9 09 01 00 00       	jmp    2a35b <write_parameter_file+0x1043>
   2a252:	c7 85 4c ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0xb4],0x1
   2a25c:	e9 e6 00 00 00       	jmp    2a347 <write_parameter_file+0x102f>
   2a261:	8b 85 4c ff ff ff    	mov    eax,DWORD PTR [rbp-0xb4]
   2a267:	48 98                	cdqe   
   2a269:	48 8b 4c c5 a0       	mov    rcx,QWORD PTR [rbp+rax*8-0x60]
   2a26e:	8b 85 48 ff ff ff    	mov    eax,DWORD PTR [rbp-0xb8]
   2a274:	48 98                	cdqe   
   2a276:	48 8b 54 c5 a0       	mov    rdx,QWORD PTR [rbp+rax*8-0x60]
   2a27b:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2a27f:	48 8d 35 c6 8f 1b 00 	lea    rsi,[rip+0x1b8fc6]        # 1e324c <parameter_set_rna_turner2004+0x5d72c>
   2a286:	48 89 c7             	mov    rdi,rax
   2a289:	b8 00 00 00 00       	mov    eax,0x0
   2a28e:	e8 bd 96 fd ff       	call   3950 <fprintf@plt>
   2a293:	c7 85 44 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xbc],0x0
   2a29d:	e9 91 00 00 00       	jmp    2a333 <write_parameter_file+0x101b>
   2a2a2:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [rbp-0xbc]
   2a2a8:	48 98                	cdqe   
   2a2aa:	48 89 c2             	mov    rdx,rax
   2a2ad:	48 c1 e2 02          	shl    rdx,0x2
   2a2b1:	48 01 c2             	add    rdx,rax
   2a2b4:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   2a2bc:	48 89 c2             	mov    rdx,rax
   2a2bf:	8b 85 4c ff ff ff    	mov    eax,DWORD PTR [rbp-0xb4]
   2a2c5:	48 63 c8             	movsxd rcx,eax
   2a2c8:	48 89 c8             	mov    rax,rcx
   2a2cb:	48 c1 e0 02          	shl    rax,0x2
   2a2cf:	48 01 c8             	add    rax,rcx
   2a2d2:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   2a2da:	48 01 c8             	add    rax,rcx
   2a2dd:	48 c1 e0 02          	shl    rax,0x2
   2a2e1:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
   2a2e5:	8b 85 48 ff ff ff    	mov    eax,DWORD PTR [rbp-0xb8]
   2a2eb:	48 63 d0             	movsxd rdx,eax
   2a2ee:	48 89 d0             	mov    rax,rdx
   2a2f1:	48 c1 e0 02          	shl    rax,0x2
   2a2f5:	48 01 d0             	add    rax,rdx
   2a2f8:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2a300:	48 01 d0             	add    rax,rdx
   2a303:	48 c1 e0 05          	shl    rax,0x5
   2a307:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   2a30b:	48 8d 05 ce 3c 1c 00 	lea    rax,[rip+0x1c3cce]        # 1edfe0 <int11_dH>
   2a312:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   2a316:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2a31a:	48 89 c1             	mov    rcx,rax
   2a31d:	ba 05 00 00 00       	mov    edx,0x5
   2a322:	be 05 00 00 00       	mov    esi,0x5
   2a327:	e8 c4 a0 ff ff       	call   243f0 <display_array>
   2a32c:	83 85 44 ff ff ff 01 	add    DWORD PTR [rbp-0xbc],0x1
   2a333:	83 bd 44 ff ff ff 04 	cmp    DWORD PTR [rbp-0xbc],0x4
   2a33a:	0f 8e 62 ff ff ff    	jle    2a2a2 <write_parameter_file+0xf8a>
   2a340:	83 85 4c ff ff ff 01 	add    DWORD PTR [rbp-0xb4],0x1
   2a347:	83 bd 4c ff ff ff 07 	cmp    DWORD PTR [rbp-0xb4],0x7
   2a34e:	0f 8e 0d ff ff ff    	jle    2a261 <write_parameter_file+0xf49>
   2a354:	83 85 48 ff ff ff 01 	add    DWORD PTR [rbp-0xb8],0x1
   2a35b:	83 bd 48 ff ff ff 07 	cmp    DWORD PTR [rbp-0xb8],0x7
   2a362:	0f 8e ea fe ff ff    	jle    2a252 <write_parameter_file+0xf3a>
   2a368:	bf 1b 00 00 00       	mov    edi,0x1b
   2a36d:	e8 ea e8 ff ff       	call   28c5c <settype>
   2a372:	48 89 c2             	mov    rdx,rax
   2a375:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2a379:	48 8d 35 70 8e 1b 00 	lea    rsi,[rip+0x1b8e70]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   2a380:	48 89 c7             	mov    rdi,rax
   2a383:	b8 00 00 00 00       	mov    eax,0x0
   2a388:	e8 c3 95 fd ff       	call   3950 <fprintf@plt>
   2a38d:	c7 85 50 ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0xb0],0x1
   2a397:	e9 3e 01 00 00       	jmp    2a4da <write_parameter_file+0x11c2>
   2a39c:	c7 85 54 ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0xac],0x1
   2a3a6:	e9 1b 01 00 00       	jmp    2a4c6 <write_parameter_file+0x11ae>
   2a3ab:	c7 85 58 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xa8],0x0
   2a3b5:	e9 f8 00 00 00       	jmp    2a4b2 <write_parameter_file+0x119a>
   2a3ba:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   2a3c0:	48 98                	cdqe   
   2a3c2:	48 8b 74 c5 a0       	mov    rsi,QWORD PTR [rbp+rax*8-0x60]
   2a3c7:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
   2a3cd:	48 98                	cdqe   
   2a3cf:	0f b6 44 05 e2       	movzx  eax,BYTE PTR [rbp+rax*1-0x1e]
   2a3d4:	0f be c8             	movsx  ecx,al
   2a3d7:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [rbp-0xb0]
   2a3dd:	48 98                	cdqe   
   2a3df:	48 8b 54 c5 a0       	mov    rdx,QWORD PTR [rbp+rax*8-0x60]
   2a3e4:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2a3e8:	49 89 f0             	mov    r8,rsi
   2a3eb:	48 8d 35 6a 8e 1b 00 	lea    rsi,[rip+0x1b8e6a]        # 1e325c <parameter_set_rna_turner2004+0x5d73c>
   2a3f2:	48 89 c7             	mov    rdi,rax
   2a3f5:	b8 00 00 00 00       	mov    eax,0x0
   2a3fa:	e8 51 95 fd ff       	call   3950 <fprintf@plt>
   2a3ff:	c7 85 5c ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xa4],0x0
   2a409:	e9 90 00 00 00       	jmp    2a49e <write_parameter_file+0x1186>
   2a40e:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   2a414:	48 98                	cdqe   
   2a416:	48 89 c2             	mov    rdx,rax
   2a419:	48 c1 e2 02          	shl    rdx,0x2
   2a41d:	48 01 c2             	add    rdx,rax
   2a420:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   2a428:	48 89 c2             	mov    rdx,rax
   2a42b:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa8]
   2a431:	48 63 c8             	movsxd rcx,eax
   2a434:	48 89 c8             	mov    rax,rcx
   2a437:	48 c1 e0 02          	shl    rax,0x2
   2a43b:	48 01 c8             	add    rax,rcx
   2a43e:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   2a446:	48 01 c8             	add    rax,rcx
   2a449:	48 c1 e0 02          	shl    rax,0x2
   2a44d:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
   2a451:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [rbp-0xb0]
   2a457:	48 98                	cdqe   
   2a459:	48 69 d0 a0 0f 00 00 	imul   rdx,rax,0xfa0
   2a460:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
   2a466:	48 98                	cdqe   
   2a468:	48 69 c0 f4 01 00 00 	imul   rax,rax,0x1f4
   2a46f:	48 01 d0             	add    rax,rdx
   2a472:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   2a476:	48 8d 05 63 54 1c 00 	lea    rax,[rip+0x1c5463]        # 1ef8e0 <int21_37>
   2a47d:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   2a481:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2a485:	48 89 c1             	mov    rcx,rax
   2a488:	ba 05 00 00 00       	mov    edx,0x5
   2a48d:	be 05 00 00 00       	mov    esi,0x5
   2a492:	e8 59 9f ff ff       	call   243f0 <display_array>
   2a497:	83 85 5c ff ff ff 01 	add    DWORD PTR [rbp-0xa4],0x1
   2a49e:	83 bd 5c ff ff ff 04 	cmp    DWORD PTR [rbp-0xa4],0x4
   2a4a5:	0f 8e 63 ff ff ff    	jle    2a40e <write_parameter_file+0x10f6>
   2a4ab:	83 85 58 ff ff ff 01 	add    DWORD PTR [rbp-0xa8],0x1
   2a4b2:	83 bd 58 ff ff ff 04 	cmp    DWORD PTR [rbp-0xa8],0x4
   2a4b9:	0f 8e fb fe ff ff    	jle    2a3ba <write_parameter_file+0x10a2>
   2a4bf:	83 85 54 ff ff ff 01 	add    DWORD PTR [rbp-0xac],0x1
   2a4c6:	83 bd 54 ff ff ff 07 	cmp    DWORD PTR [rbp-0xac],0x7
   2a4cd:	0f 8e d8 fe ff ff    	jle    2a3ab <write_parameter_file+0x1093>
   2a4d3:	83 85 50 ff ff ff 01 	add    DWORD PTR [rbp-0xb0],0x1
   2a4da:	83 bd 50 ff ff ff 07 	cmp    DWORD PTR [rbp-0xb0],0x7
   2a4e1:	0f 8e b5 fe ff ff    	jle    2a39c <write_parameter_file+0x1084>
   2a4e7:	bf 1c 00 00 00       	mov    edi,0x1c
   2a4ec:	e8 6b e7 ff ff       	call   28c5c <settype>
   2a4f1:	48 89 c2             	mov    rdx,rax
   2a4f4:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2a4f8:	48 8d 35 f1 8c 1b 00 	lea    rsi,[rip+0x1b8cf1]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   2a4ff:	48 89 c7             	mov    rdi,rax
   2a502:	b8 00 00 00 00       	mov    eax,0x0
   2a507:	e8 44 94 fd ff       	call   3950 <fprintf@plt>
   2a50c:	c7 85 60 ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0xa0],0x1
   2a516:	e9 3e 01 00 00       	jmp    2a659 <write_parameter_file+0x1341>
   2a51b:	c7 85 64 ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0x9c],0x1
   2a525:	e9 1b 01 00 00       	jmp    2a645 <write_parameter_file+0x132d>
   2a52a:	c7 85 68 ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x98],0x0
   2a534:	e9 f8 00 00 00       	jmp    2a631 <write_parameter_file+0x1319>
   2a539:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   2a53f:	48 98                	cdqe   
   2a541:	48 8b 74 c5 a0       	mov    rsi,QWORD PTR [rbp+rax*8-0x60]
   2a546:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   2a54c:	48 98                	cdqe   
   2a54e:	0f b6 44 05 e2       	movzx  eax,BYTE PTR [rbp+rax*1-0x1e]
   2a553:	0f be c8             	movsx  ecx,al
   2a556:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa0]
   2a55c:	48 98                	cdqe   
   2a55e:	48 8b 54 c5 a0       	mov    rdx,QWORD PTR [rbp+rax*8-0x60]
   2a563:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2a567:	49 89 f0             	mov    r8,rsi
   2a56a:	48 8d 35 eb 8c 1b 00 	lea    rsi,[rip+0x1b8ceb]        # 1e325c <parameter_set_rna_turner2004+0x5d73c>
   2a571:	48 89 c7             	mov    rdi,rax
   2a574:	b8 00 00 00 00       	mov    eax,0x0
   2a579:	e8 d2 93 fd ff       	call   3950 <fprintf@plt>
   2a57e:	c7 85 6c ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x94],0x0
   2a588:	e9 90 00 00 00       	jmp    2a61d <write_parameter_file+0x1305>
   2a58d:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
   2a593:	48 98                	cdqe   
   2a595:	48 89 c2             	mov    rdx,rax
   2a598:	48 c1 e2 02          	shl    rdx,0x2
   2a59c:	48 01 c2             	add    rdx,rax
   2a59f:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   2a5a7:	48 89 c2             	mov    rdx,rax
   2a5aa:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [rbp-0x98]
   2a5b0:	48 63 c8             	movsxd rcx,eax
   2a5b3:	48 89 c8             	mov    rax,rcx
   2a5b6:	48 c1 e0 02          	shl    rax,0x2
   2a5ba:	48 01 c8             	add    rax,rcx
   2a5bd:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   2a5c5:	48 01 c8             	add    rax,rcx
   2a5c8:	48 c1 e0 02          	shl    rax,0x2
   2a5cc:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
   2a5d0:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa0]
   2a5d6:	48 98                	cdqe   
   2a5d8:	48 69 d0 a0 0f 00 00 	imul   rdx,rax,0xfa0
   2a5df:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
   2a5e5:	48 98                	cdqe   
   2a5e7:	48 69 c0 f4 01 00 00 	imul   rax,rax,0x1f4
   2a5ee:	48 01 d0             	add    rax,rdx
   2a5f1:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   2a5f5:	48 8d 05 e4 cf 1c 00 	lea    rax,[rip+0x1ccfe4]        # 1f75e0 <int21_dH>
   2a5fc:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   2a600:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2a604:	48 89 c1             	mov    rcx,rax
   2a607:	ba 05 00 00 00       	mov    edx,0x5
   2a60c:	be 05 00 00 00       	mov    esi,0x5
   2a611:	e8 da 9d ff ff       	call   243f0 <display_array>
   2a616:	83 85 6c ff ff ff 01 	add    DWORD PTR [rbp-0x94],0x1
   2a61d:	83 bd 6c ff ff ff 04 	cmp    DWORD PTR [rbp-0x94],0x4
   2a624:	0f 8e 63 ff ff ff    	jle    2a58d <write_parameter_file+0x1275>
   2a62a:	83 85 68 ff ff ff 01 	add    DWORD PTR [rbp-0x98],0x1
   2a631:	83 bd 68 ff ff ff 04 	cmp    DWORD PTR [rbp-0x98],0x4
   2a638:	0f 8e fb fe ff ff    	jle    2a539 <write_parameter_file+0x1221>
   2a63e:	83 85 64 ff ff ff 01 	add    DWORD PTR [rbp-0x9c],0x1
   2a645:	83 bd 64 ff ff ff 07 	cmp    DWORD PTR [rbp-0x9c],0x7
   2a64c:	0f 8e d8 fe ff ff    	jle    2a52a <write_parameter_file+0x1212>
   2a652:	83 85 60 ff ff ff 01 	add    DWORD PTR [rbp-0xa0],0x1
   2a659:	83 bd 60 ff ff ff 07 	cmp    DWORD PTR [rbp-0xa0],0x7
   2a660:	0f 8e b5 fe ff ff    	jle    2a51b <write_parameter_file+0x1203>
   2a666:	bf 1d 00 00 00       	mov    edi,0x1d
   2a66b:	e8 ec e5 ff ff       	call   28c5c <settype>
   2a670:	48 89 c2             	mov    rdx,rax
   2a673:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2a677:	48 8d 35 72 8b 1b 00 	lea    rsi,[rip+0x1b8b72]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   2a67e:	48 89 c7             	mov    rdi,rax
   2a681:	b8 00 00 00 00       	mov    eax,0x0
   2a686:	e8 c5 92 fd ff       	call   3950 <fprintf@plt>
   2a68b:	c7 85 70 ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0x90],0x1
   2a695:	e9 7d 01 00 00       	jmp    2a817 <write_parameter_file+0x14ff>
   2a69a:	c7 85 74 ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0x8c],0x1
   2a6a4:	e9 5a 01 00 00       	jmp    2a803 <write_parameter_file+0x14eb>
   2a6a9:	c7 85 78 ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0x88],0x1
   2a6b3:	e9 37 01 00 00       	jmp    2a7ef <write_parameter_file+0x14d7>
   2a6b8:	c7 85 7c ff ff ff 01 00 00 00 	mov    DWORD PTR [rbp-0x84],0x1
   2a6c2:	e9 14 01 00 00       	jmp    2a7db <write_parameter_file+0x14c3>
   2a6c7:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   2a6cd:	48 98                	cdqe   
   2a6cf:	48 8b 7c c5 a0       	mov    rdi,QWORD PTR [rbp+rax*8-0x60]
   2a6d4:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
   2a6da:	48 98                	cdqe   
   2a6dc:	0f b6 44 05 e2       	movzx  eax,BYTE PTR [rbp+rax*1-0x1e]
   2a6e1:	0f be f0             	movsx  esi,al
   2a6e4:	8b 85 78 ff ff ff    	mov    eax,DWORD PTR [rbp-0x88]
   2a6ea:	48 98                	cdqe   
   2a6ec:	0f b6 44 05 e2       	movzx  eax,BYTE PTR [rbp+rax*1-0x1e]
   2a6f1:	0f be c8             	movsx  ecx,al
   2a6f4:	8b 85 70 ff ff ff    	mov    eax,DWORD PTR [rbp-0x90]
   2a6fa:	48 98                	cdqe   
   2a6fc:	48 8b 54 c5 a0       	mov    rdx,QWORD PTR [rbp+rax*8-0x60]
   2a701:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2a705:	49 89 f9             	mov    r9,rdi
   2a708:	41 89 f0             	mov    r8d,esi
   2a70b:	48 8d 35 5d 8b 1b 00 	lea    rsi,[rip+0x1b8b5d]        # 1e326f <parameter_set_rna_turner2004+0x5d74f>
   2a712:	48 89 c7             	mov    rdi,rax
   2a715:	b8 00 00 00 00       	mov    eax,0x0
   2a71a:	e8 31 92 fd ff       	call   3950 <fprintf@plt>
   2a71f:	c7 45 80 01 00 00 00 	mov    DWORD PTR [rbp-0x80],0x1
   2a726:	e9 9f 00 00 00       	jmp    2a7ca <write_parameter_file+0x14b2>
   2a72b:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
   2a72e:	48 98                	cdqe   
   2a730:	48 89 c2             	mov    rdx,rax
   2a733:	48 c1 e2 02          	shl    rdx,0x2
   2a737:	48 01 c2             	add    rdx,rax
   2a73a:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   2a742:	48 89 c2             	mov    rdx,rax
   2a745:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
   2a74b:	48 63 c8             	movsxd rcx,eax
   2a74e:	48 89 c8             	mov    rax,rcx
   2a751:	48 c1 e0 02          	shl    rax,0x2
   2a755:	48 01 c8             	add    rax,rcx
   2a758:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   2a760:	48 01 c8             	add    rax,rcx
   2a763:	48 c1 e0 02          	shl    rax,0x2
   2a767:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
   2a76b:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
   2a771:	48 98                	cdqe   
   2a773:	48 69 d0 c4 09 00 00 	imul   rdx,rax,0x9c4
   2a77a:	8b 85 78 ff ff ff    	mov    eax,DWORD PTR [rbp-0x88]
   2a780:	48 98                	cdqe   
   2a782:	48 69 c0 f4 01 00 00 	imul   rax,rax,0x1f4
   2a789:	48 01 d0             	add    rax,rdx
   2a78c:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   2a790:	8b 85 70 ff ff ff    	mov    eax,DWORD PTR [rbp-0x90]
   2a796:	48 98                	cdqe   
   2a798:	48 69 c0 20 4e 00 00 	imul   rax,rax,0x4e20
   2a79f:	48 01 c2             	add    rdx,rax
   2a7a2:	48 8d 05 37 4b 1d 00 	lea    rax,[rip+0x1d4b37]        # 1ff2e0 <int22_37>
   2a7a9:	48 01 d0             	add    rax,rdx
   2a7ac:	48 8d 78 04          	lea    rdi,[rax+0x4]
   2a7b0:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2a7b4:	48 89 c1             	mov    rcx,rax
   2a7b7:	ba 05 00 00 00       	mov    edx,0x5
   2a7bc:	be 04 00 00 00       	mov    esi,0x4
   2a7c1:	e8 2a 9c ff ff       	call   243f0 <display_array>
   2a7c6:	83 45 80 01          	add    DWORD PTR [rbp-0x80],0x1
   2a7ca:	83 7d 80 04          	cmp    DWORD PTR [rbp-0x80],0x4
   2a7ce:	0f 8e 57 ff ff ff    	jle    2a72b <write_parameter_file+0x1413>
   2a7d4:	83 85 7c ff ff ff 01 	add    DWORD PTR [rbp-0x84],0x1
   2a7db:	83 bd 7c ff ff ff 04 	cmp    DWORD PTR [rbp-0x84],0x4
   2a7e2:	0f 8e df fe ff ff    	jle    2a6c7 <write_parameter_file+0x13af>
   2a7e8:	83 85 78 ff ff ff 01 	add    DWORD PTR [rbp-0x88],0x1
   2a7ef:	83 bd 78 ff ff ff 04 	cmp    DWORD PTR [rbp-0x88],0x4
   2a7f6:	0f 8e bc fe ff ff    	jle    2a6b8 <write_parameter_file+0x13a0>
   2a7fc:	83 85 74 ff ff ff 01 	add    DWORD PTR [rbp-0x8c],0x1
   2a803:	83 bd 74 ff ff ff 06 	cmp    DWORD PTR [rbp-0x8c],0x6
   2a80a:	0f 8e 99 fe ff ff    	jle    2a6a9 <write_parameter_file+0x1391>
   2a810:	83 85 70 ff ff ff 01 	add    DWORD PTR [rbp-0x90],0x1
   2a817:	83 bd 70 ff ff ff 06 	cmp    DWORD PTR [rbp-0x90],0x6
   2a81e:	0f 8e 76 fe ff ff    	jle    2a69a <write_parameter_file+0x1382>
   2a824:	bf 1e 00 00 00       	mov    edi,0x1e
   2a829:	e8 2e e4 ff ff       	call   28c5c <settype>
   2a82e:	48 89 c2             	mov    rdx,rax
   2a831:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2a835:	48 8d 35 b4 89 1b 00 	lea    rsi,[rip+0x1b89b4]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   2a83c:	48 89 c7             	mov    rdi,rax
   2a83f:	b8 00 00 00 00       	mov    eax,0x0
   2a844:	e8 07 91 fd ff       	call   3950 <fprintf@plt>
   2a849:	c7 45 84 01 00 00 00 	mov    DWORD PTR [rbp-0x7c],0x1
   2a850:	e9 47 01 00 00       	jmp    2a99c <write_parameter_file+0x1684>
   2a855:	c7 45 88 01 00 00 00 	mov    DWORD PTR [rbp-0x78],0x1
   2a85c:	e9 2d 01 00 00       	jmp    2a98e <write_parameter_file+0x1676>
   2a861:	c7 45 8c 01 00 00 00 	mov    DWORD PTR [rbp-0x74],0x1
   2a868:	e9 13 01 00 00       	jmp    2a980 <write_parameter_file+0x1668>
   2a86d:	c7 45 90 01 00 00 00 	mov    DWORD PTR [rbp-0x70],0x1
   2a874:	e9 f9 00 00 00       	jmp    2a972 <write_parameter_file+0x165a>
   2a879:	8b 45 88             	mov    eax,DWORD PTR [rbp-0x78]
   2a87c:	48 98                	cdqe   
   2a87e:	48 8b 7c c5 a0       	mov    rdi,QWORD PTR [rbp+rax*8-0x60]
   2a883:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
   2a886:	48 98                	cdqe   
   2a888:	0f b6 44 05 e2       	movzx  eax,BYTE PTR [rbp+rax*1-0x1e]
   2a88d:	0f be f0             	movsx  esi,al
   2a890:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
   2a893:	48 98                	cdqe   
   2a895:	0f b6 44 05 e2       	movzx  eax,BYTE PTR [rbp+rax*1-0x1e]
   2a89a:	0f be c8             	movsx  ecx,al
   2a89d:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
   2a8a0:	48 98                	cdqe   
   2a8a2:	48 8b 54 c5 a0       	mov    rdx,QWORD PTR [rbp+rax*8-0x60]
   2a8a7:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2a8ab:	49 89 f9             	mov    r9,rdi
   2a8ae:	41 89 f0             	mov    r8d,esi
   2a8b1:	48 8d 35 b7 89 1b 00 	lea    rsi,[rip+0x1b89b7]        # 1e326f <parameter_set_rna_turner2004+0x5d74f>
   2a8b8:	48 89 c7             	mov    rdi,rax
   2a8bb:	b8 00 00 00 00       	mov    eax,0x0
   2a8c0:	e8 8b 90 fd ff       	call   3950 <fprintf@plt>
   2a8c5:	c7 45 94 01 00 00 00 	mov    DWORD PTR [rbp-0x6c],0x1
   2a8cc:	e9 93 00 00 00       	jmp    2a964 <write_parameter_file+0x164c>
   2a8d1:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
   2a8d4:	48 98                	cdqe   
   2a8d6:	48 89 c2             	mov    rdx,rax
   2a8d9:	48 c1 e2 02          	shl    rdx,0x2
   2a8dd:	48 01 c2             	add    rdx,rax
   2a8e0:	48 8d 04 95 00 00 00 00 	lea    rax,[rdx*4+0x0]
   2a8e8:	48 89 c2             	mov    rdx,rax
   2a8eb:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
   2a8ee:	48 63 c8             	movsxd rcx,eax
   2a8f1:	48 89 c8             	mov    rax,rcx
   2a8f4:	48 c1 e0 02          	shl    rax,0x2
   2a8f8:	48 01 c8             	add    rax,rcx
   2a8fb:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   2a903:	48 01 c8             	add    rax,rcx
   2a906:	48 c1 e0 02          	shl    rax,0x2
   2a90a:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
   2a90e:	8b 45 88             	mov    eax,DWORD PTR [rbp-0x78]
   2a911:	48 98                	cdqe   
   2a913:	48 69 d0 c4 09 00 00 	imul   rdx,rax,0x9c4
   2a91a:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
   2a91d:	48 98                	cdqe   
   2a91f:	48 69 c0 f4 01 00 00 	imul   rax,rax,0x1f4
   2a926:	48 01 d0             	add    rax,rdx
   2a929:	48 8d 14 01          	lea    rdx,[rcx+rax*1]
   2a92d:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
   2a930:	48 98                	cdqe   
   2a932:	48 69 c0 20 4e 00 00 	imul   rax,rax,0x4e20
   2a939:	48 01 c2             	add    rdx,rax
   2a93c:	48 8d 05 9d ba 1f 00 	lea    rax,[rip+0x1fba9d]        # 2263e0 <int22_dH>
   2a943:	48 01 d0             	add    rax,rdx
   2a946:	48 8d 78 04          	lea    rdi,[rax+0x4]
   2a94a:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2a94e:	48 89 c1             	mov    rcx,rax
   2a951:	ba 05 00 00 00       	mov    edx,0x5
   2a956:	be 04 00 00 00       	mov    esi,0x4
   2a95b:	e8 90 9a ff ff       	call   243f0 <display_array>
   2a960:	83 45 94 01          	add    DWORD PTR [rbp-0x6c],0x1
   2a964:	83 7d 94 04          	cmp    DWORD PTR [rbp-0x6c],0x4
   2a968:	0f 8e 63 ff ff ff    	jle    2a8d1 <write_parameter_file+0x15b9>
   2a96e:	83 45 90 01          	add    DWORD PTR [rbp-0x70],0x1
   2a972:	83 7d 90 04          	cmp    DWORD PTR [rbp-0x70],0x4
   2a976:	0f 8e fd fe ff ff    	jle    2a879 <write_parameter_file+0x1561>
   2a97c:	83 45 8c 01          	add    DWORD PTR [rbp-0x74],0x1
   2a980:	83 7d 8c 04          	cmp    DWORD PTR [rbp-0x74],0x4
   2a984:	0f 8e e3 fe ff ff    	jle    2a86d <write_parameter_file+0x1555>
   2a98a:	83 45 88 01          	add    DWORD PTR [rbp-0x78],0x1
   2a98e:	83 7d 88 06          	cmp    DWORD PTR [rbp-0x78],0x6
   2a992:	0f 8e c9 fe ff ff    	jle    2a861 <write_parameter_file+0x1549>
   2a998:	83 45 84 01          	add    DWORD PTR [rbp-0x7c],0x1
   2a99c:	83 7d 84 06          	cmp    DWORD PTR [rbp-0x7c],0x6
   2a9a0:	0f 8e af fe ff ff    	jle    2a855 <write_parameter_file+0x153d>
   2a9a6:	bf 03 00 00 00       	mov    edi,0x3
   2a9ab:	e8 ac e2 ff ff       	call   28c5c <settype>
   2a9b0:	48 89 c2             	mov    rdx,rax
   2a9b3:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2a9b7:	48 8d 35 32 88 1b 00 	lea    rsi,[rip+0x1b8832]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   2a9be:	48 89 c7             	mov    rdi,rax
   2a9c1:	b8 00 00 00 00       	mov    eax,0x0
   2a9c6:	e8 85 8f fd ff       	call   3950 <fprintf@plt>
   2a9cb:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2a9cf:	48 89 c1             	mov    rcx,rax
   2a9d2:	ba 0a 00 00 00       	mov    edx,0xa
   2a9d7:	be 1f 00 00 00       	mov    esi,0x1f
   2a9dc:	48 8d 3d 9d ea 1b 00 	lea    rdi,[rip+0x1bea9d]        # 1e9480 <hairpin37>
   2a9e3:	e8 08 9a ff ff       	call   243f0 <display_array>
   2a9e8:	bf 04 00 00 00       	mov    edi,0x4
   2a9ed:	e8 6a e2 ff ff       	call   28c5c <settype>
   2a9f2:	48 89 c2             	mov    rdx,rax
   2a9f5:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2a9f9:	48 8d 35 f0 87 1b 00 	lea    rsi,[rip+0x1b87f0]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   2aa00:	48 89 c7             	mov    rdi,rax
   2aa03:	b8 00 00 00 00       	mov    eax,0x0
   2aa08:	e8 43 8f fd ff       	call   3950 <fprintf@plt>
   2aa0d:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2aa11:	48 89 c1             	mov    rcx,rax
   2aa14:	ba 0a 00 00 00       	mov    edx,0xa
   2aa19:	be 1f 00 00 00       	mov    esi,0x1f
   2aa1e:	48 8d 3d db ea 1b 00 	lea    rdi,[rip+0x1beadb]        # 1e9500 <hairpindH>
   2aa25:	e8 c6 99 ff ff       	call   243f0 <display_array>
   2aa2a:	bf 05 00 00 00       	mov    edi,0x5
   2aa2f:	e8 28 e2 ff ff       	call   28c5c <settype>
   2aa34:	48 89 c2             	mov    rdx,rax
   2aa37:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2aa3b:	48 8d 35 ae 87 1b 00 	lea    rsi,[rip+0x1b87ae]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   2aa42:	48 89 c7             	mov    rdi,rax
   2aa45:	b8 00 00 00 00       	mov    eax,0x0
   2aa4a:	e8 01 8f fd ff       	call   3950 <fprintf@plt>
   2aa4f:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2aa53:	48 89 c1             	mov    rcx,rax
   2aa56:	ba 0a 00 00 00       	mov    edx,0xa
   2aa5b:	be 1f 00 00 00       	mov    esi,0x1f
   2aa60:	48 8d 3d 19 eb 1b 00 	lea    rdi,[rip+0x1beb19]        # 1e9580 <bulge37>
   2aa67:	e8 84 99 ff ff       	call   243f0 <display_array>
   2aa6c:	bf 06 00 00 00       	mov    edi,0x6
   2aa71:	e8 e6 e1 ff ff       	call   28c5c <settype>
   2aa76:	48 89 c2             	mov    rdx,rax
   2aa79:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2aa7d:	48 8d 35 6c 87 1b 00 	lea    rsi,[rip+0x1b876c]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   2aa84:	48 89 c7             	mov    rdi,rax
   2aa87:	b8 00 00 00 00       	mov    eax,0x0
   2aa8c:	e8 bf 8e fd ff       	call   3950 <fprintf@plt>
   2aa91:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2aa95:	48 89 c1             	mov    rcx,rax
   2aa98:	ba 0a 00 00 00       	mov    edx,0xa
   2aa9d:	be 1f 00 00 00       	mov    esi,0x1f
   2aaa2:	48 8d 3d 57 eb 1b 00 	lea    rdi,[rip+0x1beb57]        # 1e9600 <bulgedH>
   2aaa9:	e8 42 99 ff ff       	call   243f0 <display_array>
   2aaae:	bf 07 00 00 00       	mov    edi,0x7
   2aab3:	e8 a4 e1 ff ff       	call   28c5c <settype>
   2aab8:	48 89 c2             	mov    rdx,rax
   2aabb:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2aabf:	48 8d 35 2a 87 1b 00 	lea    rsi,[rip+0x1b872a]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   2aac6:	48 89 c7             	mov    rdi,rax
   2aac9:	b8 00 00 00 00       	mov    eax,0x0
   2aace:	e8 7d 8e fd ff       	call   3950 <fprintf@plt>
   2aad3:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2aad7:	48 89 c1             	mov    rcx,rax
   2aada:	ba 0a 00 00 00       	mov    edx,0xa
   2aadf:	be 1f 00 00 00       	mov    esi,0x1f
   2aae4:	48 8d 3d 95 eb 1b 00 	lea    rdi,[rip+0x1beb95]        # 1e9680 <internal_loop37>
   2aaeb:	e8 00 99 ff ff       	call   243f0 <display_array>
   2aaf0:	bf 08 00 00 00       	mov    edi,0x8
   2aaf5:	e8 62 e1 ff ff       	call   28c5c <settype>
   2aafa:	48 89 c2             	mov    rdx,rax
   2aafd:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2ab01:	48 8d 35 e8 86 1b 00 	lea    rsi,[rip+0x1b86e8]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   2ab08:	48 89 c7             	mov    rdi,rax
   2ab0b:	b8 00 00 00 00       	mov    eax,0x0
   2ab10:	e8 3b 8e fd ff       	call   3950 <fprintf@plt>
   2ab15:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2ab19:	48 89 c1             	mov    rcx,rax
   2ab1c:	ba 0a 00 00 00       	mov    edx,0xa
   2ab21:	be 1f 00 00 00       	mov    esi,0x1f
   2ab26:	48 8d 3d d3 eb 1b 00 	lea    rdi,[rip+0x1bebd3]        # 1e9700 <internal_loopdH>
   2ab2d:	e8 be 98 ff ff       	call   243f0 <display_array>
   2ab32:	bf 1f 00 00 00       	mov    edi,0x1f
   2ab37:	e8 20 e1 ff ff       	call   28c5c <settype>
   2ab3c:	48 89 c2             	mov    rdx,rax
   2ab3f:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2ab43:	48 8d 35 a6 86 1b 00 	lea    rsi,[rip+0x1b86a6]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   2ab4a:	48 89 c7             	mov    rdi,rax
   2ab4d:	b8 00 00 00 00       	mov    eax,0x0
   2ab52:	e8 f9 8d fd ff       	call   3950 <fprintf@plt>
   2ab57:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2ab5b:	48 89 c1             	mov    rcx,rax
   2ab5e:	ba 38 00 00 00       	mov    edx,0x38
   2ab63:	be 01 00 00 00       	mov    esi,0x1
   2ab68:	48 8d 3d 19 87 1b 00 	lea    rdi,[rip+0x1b8719]        # 1e3288 <parameter_set_rna_turner2004+0x5d768>
   2ab6f:	e8 5c 8f fd ff       	call   3ad0 <fwrite@plt>
   2ab74:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2ab78:	48 89 c1             	mov    rcx,rax
   2ab7b:	ba 31 00 00 00       	mov    edx,0x31
   2ab80:	be 01 00 00 00       	mov    esi,0x1
   2ab85:	48 8d 3d 3c 87 1b 00 	lea    rdi,[rip+0x1b873c]        # 1e32c8 <parameter_set_rna_turner2004+0x5d7a8>
   2ab8c:	e8 3f 8f fd ff       	call   3ad0 <fwrite@plt>
   2ab91:	8b 3d 7d e6 1b 00    	mov    edi,DWORD PTR [rip+0x1be67d]        # 1e9214 <ML_interndH>
   2ab97:	8b 35 73 e6 1b 00    	mov    esi,DWORD PTR [rip+0x1be673]        # 1e9210 <ML_intern37>
   2ab9d:	44 8b 0d 78 e6 1b 00 	mov    r9d,DWORD PTR [rip+0x1be678]        # 1e921c <ML_closingdH>
   2aba4:	44 8b 05 6d e6 1b 00 	mov    r8d,DWORD PTR [rip+0x1be66d]        # 1e9218 <ML_closing37>
   2abab:	8b 0d 3f 3e 22 00    	mov    ecx,DWORD PTR [rip+0x223e3f]        # 24e9f0 <ML_BASEdH>
   2abb1:	8b 15 35 3e 22 00    	mov    edx,DWORD PTR [rip+0x223e35]        # 24e9ec <ML_BASE37>
   2abb7:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2abbb:	57                   	push   rdi
   2abbc:	56                   	push   rsi
   2abbd:	48 8d 35 36 87 1b 00 	lea    rsi,[rip+0x1b8736]        # 1e32fa <parameter_set_rna_turner2004+0x5d7da>
   2abc4:	48 89 c7             	mov    rdi,rax
   2abc7:	b8 00 00 00 00       	mov    eax,0x0
   2abcc:	e8 7f 8d fd ff       	call   3950 <fprintf@plt>
   2abd1:	48 83 c4 10          	add    rsp,0x10
   2abd5:	bf 23 00 00 00       	mov    edi,0x23
   2abda:	e8 7d e0 ff ff       	call   28c5c <settype>
   2abdf:	48 89 c2             	mov    rdx,rax
   2abe2:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2abe6:	48 8d 35 03 86 1b 00 	lea    rsi,[rip+0x1b8603]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   2abed:	48 89 c7             	mov    rdi,rax
   2abf0:	b8 00 00 00 00       	mov    eax,0x0
   2abf5:	e8 56 8d fd ff       	call   3950 <fprintf@plt>
   2abfa:	8b 35 20 e6 1b 00    	mov    esi,DWORD PTR [rip+0x1be620]        # 1e9220 <MAX_NINIO>
   2ac00:	8b 0d 22 e6 1b 00    	mov    ecx,DWORD PTR [rip+0x1be622]        # 1e9228 <niniodH>
   2ac06:	8b 15 18 e6 1b 00    	mov    edx,DWORD PTR [rip+0x1be618]        # 1e9224 <ninio37>
   2ac0c:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2ac10:	41 89 f0             	mov    r8d,esi
   2ac13:	48 8d 35 fe 86 1b 00 	lea    rsi,[rip+0x1b86fe]        # 1e3318 <parameter_set_rna_turner2004+0x5d7f8>
   2ac1a:	48 89 c7             	mov    rdi,rax
   2ac1d:	b8 00 00 00 00       	mov    eax,0x0
   2ac22:	e8 29 8d fd ff       	call   3950 <fprintf@plt>
   2ac27:	bf 24 00 00 00       	mov    edi,0x24
   2ac2c:	e8 2b e0 ff ff       	call   28c5c <settype>
   2ac31:	48 89 c2             	mov    rdx,rax
   2ac34:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2ac38:	48 8d 35 b1 85 1b 00 	lea    rsi,[rip+0x1b85b1]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   2ac3f:	48 89 c7             	mov    rdi,rax
   2ac42:	b8 00 00 00 00       	mov    eax,0x0
   2ac47:	e8 04 8d fd ff       	call   3950 <fprintf@plt>
   2ac4c:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2ac50:	48 89 c1             	mov    rcx,rax
   2ac53:	ba 34 00 00 00       	mov    edx,0x34
   2ac58:	be 01 00 00 00       	mov    esi,0x1
   2ac5d:	48 8d 3d 04 87 1b 00 	lea    rdi,[rip+0x1b8704]        # 1e3368 <parameter_set_rna_turner2004+0x5d848>
   2ac64:	e8 67 8e fd ff       	call   3ad0 <fwrite@plt>
   2ac69:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2ac6d:	48 89 c1             	mov    rcx,rax
   2ac70:	ba 2c 00 00 00       	mov    edx,0x2c
   2ac75:	be 01 00 00 00       	mov    esi,0x1
   2ac7a:	48 8d 3d 1f 87 1b 00 	lea    rdi,[rip+0x1b871f]        # 1e33a0 <parameter_set_rna_turner2004+0x5d880>
   2ac81:	e8 4a 8e fd ff       	call   3ad0 <fwrite@plt>
   2ac86:	48 8b 35 7b e5 1b 00 	mov    rsi,QWORD PTR [rip+0x1be57b]        # 1e9208 <lxc37>
   2ac8d:	44 8b 05 9c e5 1b 00 	mov    r8d,DWORD PTR [rip+0x1be59c]        # 1e9230 <TerminalAUdH>
   2ac94:	8b 3d 92 e5 1b 00    	mov    edi,DWORD PTR [rip+0x1be592]        # 1e922c <TerminalAU37>
   2ac9a:	8b 0d 98 e5 1b 00    	mov    ecx,DWORD PTR [rip+0x1be598]        # 1e9238 <DuplexInitdH>
   2aca0:	8b 15 8e e5 1b 00    	mov    edx,DWORD PTR [rip+0x1be58e]        # 1e9234 <DuplexInit37>
   2aca6:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2acaa:	48 83 ec 08          	sub    rsp,0x8
   2acae:	6a 00                	push   0x0
   2acb0:	66 48 0f 6e c6       	movq   xmm0,rsi
   2acb5:	45 89 c1             	mov    r9d,r8d
   2acb8:	41 89 f8             	mov    r8d,edi
   2acbb:	48 8d 35 0e 87 1b 00 	lea    rsi,[rip+0x1b870e]        # 1e33d0 <parameter_set_rna_turner2004+0x5d8b0>
   2acc2:	48 89 c7             	mov    rdi,rax
   2acc5:	b8 01 00 00 00       	mov    eax,0x1
   2acca:	e8 81 8c fd ff       	call   3950 <fprintf@plt>
   2accf:	48 83 c4 10          	add    rsp,0x10
   2acd3:	bf 22 00 00 00       	mov    edi,0x22
   2acd8:	e8 7f df ff ff       	call   28c5c <settype>
   2acdd:	48 89 c2             	mov    rdx,rax
   2ace0:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2ace4:	48 8d 35 05 85 1b 00 	lea    rsi,[rip+0x1b8505]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   2aceb:	48 89 c7             	mov    rdi,rax
   2acee:	b8 00 00 00 00       	mov    eax,0x0
   2acf3:	e8 58 8c fd ff       	call   3950 <fprintf@plt>
   2acf8:	c7 85 d4 fe ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x12c],0x0
   2ad02:	eb 6f                	jmp    2ad73 <write_parameter_file+0x1a5b>
   2ad04:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   2ad0a:	48 98                	cdqe   
   2ad0c:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2ad14:	48 8d 05 25 19 1c 00 	lea    rax,[rip+0x1c1925]        # 1ec640 <HexaloopdH>
   2ad1b:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   2ad1e:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   2ad24:	48 98                	cdqe   
   2ad26:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2ad2e:	48 8d 05 6b 18 1c 00 	lea    rax,[rip+0x1c186b]        # 1ec5a0 <Hexaloop37>
   2ad35:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   2ad38:	8b 95 d4 fe ff ff    	mov    edx,DWORD PTR [rbp-0x12c]
   2ad3e:	89 d0                	mov    eax,edx
   2ad40:	c1 e0 03             	shl    eax,0x3
   2ad43:	01 d0                	add    eax,edx
   2ad45:	48 98                	cdqe   
   2ad47:	48 8d 15 d2 16 1c 00 	lea    rdx,[rip+0x1c16d2]        # 1ec420 <Hexaloops>
   2ad4e:	48 01 c2             	add    rdx,rax
   2ad51:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2ad55:	41 89 f0             	mov    r8d,esi
   2ad58:	48 8d 35 90 86 1b 00 	lea    rsi,[rip+0x1b8690]        # 1e33ef <parameter_set_rna_turner2004+0x5d8cf>
   2ad5f:	48 89 c7             	mov    rdi,rax
   2ad62:	b8 00 00 00 00       	mov    eax,0x0
   2ad67:	e8 e4 8b fd ff       	call   3950 <fprintf@plt>
   2ad6c:	83 85 d4 fe ff ff 01 	add    DWORD PTR [rbp-0x12c],0x1
   2ad73:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   2ad79:	48 63 d8             	movsxd rbx,eax
   2ad7c:	48 8d 3d 9d 16 1c 00 	lea    rdi,[rip+0x1c169d]        # 1ec420 <Hexaloops>
   2ad83:	e8 08 89 fd ff       	call   3690 <strlen@plt>
   2ad88:	48 ba 8f e3 38 8e e3 38 8e e3 	movabs rdx,0xe38e38e38e38e38f
   2ad92:	48 f7 e2             	mul    rdx
   2ad95:	48 89 d0             	mov    rax,rdx
   2ad98:	48 c1 e8 03          	shr    rax,0x3
   2ad9c:	48 39 c3             	cmp    rbx,rax
   2ad9f:	0f 82 5f ff ff ff    	jb     2ad04 <write_parameter_file+0x19ec>
   2ada5:	bf 20 00 00 00       	mov    edi,0x20
   2adaa:	e8 ad de ff ff       	call   28c5c <settype>
   2adaf:	48 89 c2             	mov    rdx,rax
   2adb2:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2adb6:	48 8d 35 33 84 1b 00 	lea    rsi,[rip+0x1b8433]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   2adbd:	48 89 c7             	mov    rdi,rax
   2adc0:	b8 00 00 00 00       	mov    eax,0x0
   2adc5:	e8 86 8b fd ff       	call   3950 <fprintf@plt>
   2adca:	c7 85 d4 fe ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x12c],0x0
   2add4:	eb 6f                	jmp    2ae45 <write_parameter_file+0x1b2d>
   2add6:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   2addc:	48 98                	cdqe   
   2adde:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2ade6:	48 8d 05 93 15 1c 00 	lea    rax,[rip+0x1c1593]        # 1ec380 <TetraloopdH>
   2aded:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   2adf0:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   2adf6:	48 98                	cdqe   
   2adf8:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2ae00:	48 8d 05 d9 14 1c 00 	lea    rax,[rip+0x1c14d9]        # 1ec2e0 <Tetraloop37>
   2ae07:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   2ae0a:	8b 95 d4 fe ff ff    	mov    edx,DWORD PTR [rbp-0x12c]
   2ae10:	89 d0                	mov    eax,edx
   2ae12:	c1 e0 03             	shl    eax,0x3
   2ae15:	29 d0                	sub    eax,edx
   2ae17:	48 98                	cdqe   
   2ae19:	48 8d 15 a0 13 1c 00 	lea    rdx,[rip+0x1c13a0]        # 1ec1c0 <Tetraloops>
   2ae20:	48 01 c2             	add    rdx,rax
   2ae23:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2ae27:	41 89 f0             	mov    r8d,esi
   2ae2a:	48 8d 35 cd 85 1b 00 	lea    rsi,[rip+0x1b85cd]        # 1e33fe <parameter_set_rna_turner2004+0x5d8de>
   2ae31:	48 89 c7             	mov    rdi,rax
   2ae34:	b8 00 00 00 00       	mov    eax,0x0
   2ae39:	e8 12 8b fd ff       	call   3950 <fprintf@plt>
   2ae3e:	83 85 d4 fe ff ff 01 	add    DWORD PTR [rbp-0x12c],0x1
   2ae45:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   2ae4b:	48 63 d8             	movsxd rbx,eax
   2ae4e:	48 8d 3d 6b 13 1c 00 	lea    rdi,[rip+0x1c136b]        # 1ec1c0 <Tetraloops>
   2ae55:	e8 36 88 fd ff       	call   3690 <strlen@plt>
   2ae5a:	48 89 c1             	mov    rcx,rax
   2ae5d:	48 ba 93 24 49 92 24 49 92 24 	movabs rdx,0x2492492492492493
   2ae67:	48 89 c8             	mov    rax,rcx
   2ae6a:	48 f7 e2             	mul    rdx
   2ae6d:	48 89 c8             	mov    rax,rcx
   2ae70:	48 29 d0             	sub    rax,rdx
   2ae73:	48 d1 e8             	shr    rax,1
   2ae76:	48 01 d0             	add    rax,rdx
   2ae79:	48 c1 e8 02          	shr    rax,0x2
   2ae7d:	48 39 c3             	cmp    rbx,rax
   2ae80:	0f 82 50 ff ff ff    	jb     2add6 <write_parameter_file+0x1abe>
   2ae86:	bf 21 00 00 00       	mov    edi,0x21
   2ae8b:	e8 cc dd ff ff       	call   28c5c <settype>
   2ae90:	48 89 c2             	mov    rdx,rax
   2ae93:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2ae97:	48 8d 35 52 83 1b 00 	lea    rsi,[rip+0x1b8352]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   2ae9e:	48 89 c7             	mov    rdi,rax
   2aea1:	b8 00 00 00 00       	mov    eax,0x0
   2aea6:	e8 a5 8a fd ff       	call   3950 <fprintf@plt>
   2aeab:	c7 85 d4 fe ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x12c],0x0
   2aeb5:	eb 70                	jmp    2af27 <write_parameter_file+0x1c0f>
   2aeb7:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   2aebd:	48 98                	cdqe   
   2aebf:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2aec7:	48 8d 05 52 12 1c 00 	lea    rax,[rip+0x1c1252]        # 1ec120 <TriloopdH>
   2aece:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   2aed1:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   2aed7:	48 98                	cdqe   
   2aed9:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2aee1:	48 8d 05 98 11 1c 00 	lea    rax,[rip+0x1c1198]        # 1ec080 <Triloop37>
   2aee8:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
   2aeeb:	8b 95 d4 fe ff ff    	mov    edx,DWORD PTR [rbp-0x12c]
   2aef1:	89 d0                	mov    eax,edx
   2aef3:	01 c0                	add    eax,eax
   2aef5:	01 d0                	add    eax,edx
   2aef7:	01 c0                	add    eax,eax
   2aef9:	48 98                	cdqe   
   2aefb:	48 8d 15 7e 10 1c 00 	lea    rdx,[rip+0x1c107e]        # 1ebf80 <Triloops>
   2af02:	48 01 c2             	add    rdx,rax
   2af05:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2af09:	41 89 f0             	mov    r8d,esi
   2af0c:	48 8d 35 fa 84 1b 00 	lea    rsi,[rip+0x1b84fa]        # 1e340d <parameter_set_rna_turner2004+0x5d8ed>
   2af13:	48 89 c7             	mov    rdi,rax
   2af16:	b8 00 00 00 00       	mov    eax,0x0
   2af1b:	e8 30 8a fd ff       	call   3950 <fprintf@plt>
   2af20:	83 85 d4 fe ff ff 01 	add    DWORD PTR [rbp-0x12c],0x1
   2af27:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
   2af2d:	48 63 d8             	movsxd rbx,eax
   2af30:	48 8d 3d 49 10 1c 00 	lea    rdi,[rip+0x1c1049]        # 1ebf80 <Triloops>
   2af37:	e8 54 87 fd ff       	call   3690 <strlen@plt>
   2af3c:	48 ba ab aa aa aa aa aa aa aa 	movabs rdx,0xaaaaaaaaaaaaaaab
   2af46:	48 f7 e2             	mul    rdx
   2af49:	48 89 d0             	mov    rax,rdx
   2af4c:	48 c1 e8 02          	shr    rax,0x2
   2af50:	48 39 c3             	cmp    rbx,rax
   2af53:	0f 82 5e ff ff ff    	jb     2aeb7 <write_parameter_file+0x1b9f>
   2af59:	bf 00 00 00 00       	mov    edi,0x0
   2af5e:	e8 f9 dc ff ff       	call   28c5c <settype>
   2af63:	48 89 c2             	mov    rdx,rax
   2af66:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2af6a:	48 8d 35 7f 82 1b 00 	lea    rsi,[rip+0x1b827f]        # 1e31f0 <parameter_set_rna_turner2004+0x5d6d0>
   2af71:	48 89 c7             	mov    rdi,rax
   2af74:	b8 00 00 00 00       	mov    eax,0x0
   2af79:	e8 d2 89 fd ff       	call   3950 <fprintf@plt>
   2af7e:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
   2af82:	48 89 c7             	mov    rdi,rax
   2af85:	e8 86 88 fd ff       	call   3810 <fclose@plt>
   2af8a:	90                   	nop
   2af8b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2af8f:	64 48 33 04 25 28 00 00 00 	xor    rax,QWORD PTR fs:0x28
   2af98:	74 05                	je     2af9f <write_parameter_file+0x1c87>
   2af9a:	e8 c1 88 fd ff       	call   3860 <__stack_chk_fail@plt>
   2af9f:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
   2afa3:	c9                   	leave  
   2afa4:	c3                   	ret    

000000000002afa5 <vrna_fun_dispatch_disable>:
   2afa5:	f3 0f 1e fa          	endbr64 
   2afa9:	55                   	push   rbp
   2afaa:	48 89 e5             	mov    rbp,rsp
   2afad:	48 8d 05 a5 00 00 00 	lea    rax,[rip+0xa5]        # 2b059 <fun_zip_add_min_default>
   2afb4:	48 89 05 2d 26 22 00 	mov    QWORD PTR [rip+0x22262d],rax        # 24d5e8 <fun_zip_add_min>
   2afbb:	90                   	nop
   2afbc:	5d                   	pop    rbp
   2afbd:	c3                   	ret    

000000000002afbe <vrna_fun_dispatch_enable>:
   2afbe:	f3 0f 1e fa          	endbr64 
   2afc2:	55                   	push   rbp
   2afc3:	48 89 e5             	mov    rbp,rsp
   2afc6:	48 8d 05 3e 00 00 00 	lea    rax,[rip+0x3e]        # 2b00b <zip_add_min_dispatcher>
   2afcd:	48 89 05 14 26 22 00 	mov    QWORD PTR [rip+0x222614],rax        # 24d5e8 <fun_zip_add_min>
   2afd4:	90                   	nop
   2afd5:	5d                   	pop    rbp
   2afd6:	c3                   	ret    

000000000002afd7 <vrna_fun_zip_add_min>:
   2afd7:	f3 0f 1e fa          	endbr64 
   2afdb:	55                   	push   rbp
   2afdc:	48 89 e5             	mov    rbp,rsp
   2afdf:	48 83 ec 20          	sub    rsp,0x20
   2afe3:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   2afe7:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
   2afeb:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
   2afee:	4c 8b 05 f3 25 22 00 	mov    r8,QWORD PTR [rip+0x2225f3]        # 24d5e8 <fun_zip_add_min>
   2aff5:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
   2aff8:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
   2affc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2b000:	48 89 ce             	mov    rsi,rcx
   2b003:	48 89 c7             	mov    rdi,rax
   2b006:	41 ff d0             	call   r8
   2b009:	c9                   	leave  
   2b00a:	c3                   	ret    

000000000002b00b <zip_add_min_dispatcher>:
   2b00b:	f3 0f 1e fa          	endbr64 
   2b00f:	55                   	push   rbp
   2b010:	48 89 e5             	mov    rbp,rsp
   2b013:	48 83 ec 30          	sub    rsp,0x30
   2b017:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   2b01b:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
   2b01f:	89 55 dc             	mov    DWORD PTR [rbp-0x24],edx
   2b022:	e8 a5 4e 00 00       	call   2fecc <vrna_cpu_simd_capabilities>
   2b027:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
   2b02a:	48 8d 05 28 00 00 00 	lea    rax,[rip+0x28]        # 2b059 <fun_zip_add_min_default>
   2b031:	48 89 05 b0 25 22 00 	mov    QWORD PTR [rip+0x2225b0],rax        # 24d5e8 <fun_zip_add_min>
   2b038:	f3 0f 1e fa          	endbr64 
   2b03c:	4c 8b 05 a5 25 22 00 	mov    r8,QWORD PTR [rip+0x2225a5]        # 24d5e8 <fun_zip_add_min>
   2b043:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
   2b046:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
   2b04a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2b04e:	48 89 ce             	mov    rsi,rcx
   2b051:	48 89 c7             	mov    rdi,rax
   2b054:	41 ff d0             	call   r8
   2b057:	c9                   	leave  
   2b058:	c3                   	ret    

000000000002b059 <fun_zip_add_min_default>:
   2b059:	f3 0f 1e fa          	endbr64 
   2b05d:	55                   	push   rbp
   2b05e:	48 89 e5             	mov    rbp,rsp
   2b061:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   2b065:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
   2b069:	89 55 dc             	mov    DWORD PTR [rbp-0x24],edx
   2b06c:	c7 45 f8 80 96 98 00 	mov    DWORD PTR [rbp-0x8],0x989680
   2b073:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
   2b07a:	eb 7c                	jmp    2b0f8 <fun_zip_add_min_default+0x9f>
   2b07c:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2b07f:	48 98                	cdqe   
   2b081:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2b089:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2b08d:	48 01 d0             	add    rax,rdx
   2b090:	8b 00                	mov    eax,DWORD PTR [rax]
   2b092:	3d 80 96 98 00       	cmp    eax,0x989680
   2b097:	74 5b                	je     2b0f4 <fun_zip_add_min_default+0x9b>
   2b099:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2b09c:	48 98                	cdqe   
   2b09e:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2b0a6:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2b0aa:	48 01 d0             	add    rax,rdx
   2b0ad:	8b 00                	mov    eax,DWORD PTR [rax]
   2b0af:	3d 80 96 98 00       	cmp    eax,0x989680
   2b0b4:	74 3e                	je     2b0f4 <fun_zip_add_min_default+0x9b>
   2b0b6:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2b0b9:	48 98                	cdqe   
   2b0bb:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2b0c3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2b0c7:	48 01 d0             	add    rax,rdx
   2b0ca:	8b 10                	mov    edx,DWORD PTR [rax]
   2b0cc:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2b0cf:	48 98                	cdqe   
   2b0d1:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   2b0d9:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2b0dd:	48 01 c8             	add    rax,rcx
   2b0e0:	8b 00                	mov    eax,DWORD PTR [rax]
   2b0e2:	01 d0                	add    eax,edx
   2b0e4:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
   2b0e7:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2b0ea:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
   2b0ed:	0f 4e 45 fc          	cmovle eax,DWORD PTR [rbp-0x4]
   2b0f1:	89 45 f8             	mov    DWORD PTR [rbp-0x8],eax
   2b0f4:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
   2b0f8:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2b0fb:	3b 45 dc             	cmp    eax,DWORD PTR [rbp-0x24]
   2b0fe:	0f 8c 78 ff ff ff    	jl     2b07c <fun_zip_add_min_default+0x23>
   2b104:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2b107:	5d                   	pop    rbp
   2b108:	c3                   	ret    

000000000002b109 <strdup>:
   2b109:	f3 0f 1e fa          	endbr64 
   2b10d:	55                   	push   rbp
   2b10e:	48 89 e5             	mov    rbp,rsp
   2b111:	48 83 ec 20          	sub    rsp,0x20
   2b115:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   2b119:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2b11d:	48 89 c7             	mov    rdi,rax
   2b120:	e8 6b 85 fd ff       	call   3690 <strlen@plt>
   2b125:	83 c0 01             	add    eax,0x1
   2b128:	89 c7                	mov    edi,eax
   2b12a:	e8 92 0d 00 00       	call   2bec1 <vrna_alloc>
   2b12f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2b133:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
   2b137:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2b13b:	48 89 d6             	mov    rsi,rdx
   2b13e:	48 89 c7             	mov    rdi,rax
   2b141:	e8 8a 86 fd ff       	call   37d0 <strcpy@plt>
   2b146:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2b14a:	c9                   	leave  
   2b14b:	c3                   	ret    

000000000002b14c <vrna_strdup_printf>:
   2b14c:	f3 0f 1e fa          	endbr64 
   2b150:	55                   	push   rbp
   2b151:	48 89 e5             	mov    rbp,rsp
   2b154:	48 81 ec f0 00 00 00 	sub    rsp,0xf0
   2b15b:	48 89 bd 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rdi
   2b162:	48 89 b5 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rsi
   2b169:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
   2b170:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
   2b177:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
   2b17e:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
   2b185:	84 c0                	test   al,al
   2b187:	74 20                	je     2b1a9 <vrna_strdup_printf+0x5d>
   2b189:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
   2b18d:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
   2b191:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
   2b195:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
   2b199:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
   2b19d:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
   2b1a1:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
   2b1a5:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
   2b1a9:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   2b1b2:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
   2b1b9:	31 c0                	xor    eax,eax
   2b1bb:	c7 85 30 ff ff ff 08 00 00 00 	mov    DWORD PTR [rbp-0xd0],0x8
   2b1c5:	c7 85 34 ff ff ff 30 00 00 00 	mov    DWORD PTR [rbp-0xcc],0x30
   2b1cf:	48 8d 45 10          	lea    rax,[rbp+0x10]
   2b1d3:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
   2b1da:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
   2b1e1:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
   2b1e8:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
   2b1ef:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
   2b1f6:	48 89 d6             	mov    rsi,rdx
   2b1f9:	48 89 c7             	mov    rdi,rax
   2b1fc:	e8 27 00 00 00       	call   2b228 <vrna_strdup_vprintf>
   2b201:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
   2b208:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
   2b20f:	48 8b 8d 48 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xb8]
   2b216:	64 48 33 0c 25 28 00 00 00 	xor    rcx,QWORD PTR fs:0x28
   2b21f:	74 05                	je     2b226 <vrna_strdup_printf+0xda>
   2b221:	e8 3a 86 fd ff       	call   3860 <__stack_chk_fail@plt>
   2b226:	c9                   	leave  
   2b227:	c3                   	ret    

000000000002b228 <vrna_strdup_vprintf>:
   2b228:	f3 0f 1e fa          	endbr64 
   2b22c:	55                   	push   rbp
   2b22d:	48 89 e5             	mov    rbp,rsp
   2b230:	48 83 ec 50          	sub    rsp,0x50
   2b234:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
   2b238:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
   2b23c:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   2b245:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2b249:	31 c0                	xor    eax,eax
   2b24b:	48 c7 45 d0 00 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
   2b253:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
   2b257:	48 8b 75 b0          	mov    rsi,QWORD PTR [rbp-0x50]
   2b25b:	48 8b 06             	mov    rax,QWORD PTR [rsi]
   2b25e:	48 8b 56 08          	mov    rdx,QWORD PTR [rsi+0x8]
   2b262:	48 89 01             	mov    QWORD PTR [rcx],rax
   2b265:	48 89 51 08          	mov    QWORD PTR [rcx+0x8],rdx
   2b269:	48 8b 46 10          	mov    rax,QWORD PTR [rsi+0x10]
   2b26d:	48 89 41 10          	mov    QWORD PTR [rcx+0x10],rax
   2b271:	c7 45 c8 ff ff ff ff 	mov    DWORD PTR [rbp-0x38],0xffffffff
   2b278:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
   2b27c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
   2b280:	48 89 d1             	mov    rcx,rdx
   2b283:	48 89 c2             	mov    rdx,rax
   2b286:	be 00 00 00 00       	mov    esi,0x0
   2b28b:	bf 00 00 00 00       	mov    edi,0x0
   2b290:	e8 9b 84 fd ff       	call   3730 <vsnprintf@plt>
   2b295:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
   2b298:	83 7d cc 00          	cmp    DWORD PTR [rbp-0x34],0x0
   2b29c:	78 66                	js     2b304 <vrna_strdup_vprintf+0xdc>
   2b29e:	81 7d cc ff ff ff 7f 	cmp    DWORD PTR [rbp-0x34],0x7fffffff
   2b2a5:	74 5d                	je     2b304 <vrna_strdup_vprintf+0xdc>
   2b2a7:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
   2b2aa:	83 c0 01             	add    eax,0x1
   2b2ad:	89 c7                	mov    edi,eax
   2b2af:	e8 0d 0c 00 00       	call   2bec1 <vrna_alloc>
   2b2b4:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
   2b2b8:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
   2b2bd:	75 09                	jne    2b2c8 <vrna_strdup_vprintf+0xa0>
   2b2bf:	c7 45 c8 ff ff ff ff 	mov    DWORD PTR [rbp-0x38],0xffffffff
   2b2c6:	eb 3c                	jmp    2b304 <vrna_strdup_vprintf+0xdc>
   2b2c8:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
   2b2cb:	83 c0 01             	add    eax,0x1
   2b2ce:	48 63 f0             	movsxd rsi,eax
   2b2d1:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
   2b2d5:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
   2b2d9:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2b2dd:	48 89 c7             	mov    rdi,rax
   2b2e0:	e8 4b 84 fd ff       	call   3730 <vsnprintf@plt>
   2b2e5:	89 45 c8             	mov    DWORD PTR [rbp-0x38],eax
   2b2e8:	83 7d c8 00          	cmp    DWORD PTR [rbp-0x38],0x0
   2b2ec:	79 0e                	jns    2b2fc <vrna_strdup_vprintf+0xd4>
   2b2ee:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2b2f2:	48 89 c7             	mov    rdi,rax
   2b2f5:	e8 b6 85 fd ff       	call   38b0 <free@plt>
   2b2fa:	eb 08                	jmp    2b304 <vrna_strdup_vprintf+0xdc>
   2b2fc:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2b300:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
   2b304:	83 7d c8 ff          	cmp    DWORD PTR [rbp-0x38],0xffffffff
   2b308:	75 19                	jne    2b323 <vrna_strdup_vprintf+0xfb>
   2b30a:	48 8d 3d ff 83 1b 00 	lea    rdi,[rip+0x1b83ff]        # 1e3710 <parameter_set_rna_turner2004+0x5dbf0>
   2b311:	b8 00 00 00 00       	mov    eax,0x0
   2b316:	e8 80 0e 00 00       	call   2c19b <vrna_message_warning>
   2b31b:	48 c7 45 d0 00 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
   2b323:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2b327:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   2b32b:	64 48 33 14 25 28 00 00 00 	xor    rdx,QWORD PTR fs:0x28
   2b334:	74 05                	je     2b33b <vrna_strdup_vprintf+0x113>
   2b336:	e8 25 85 fd ff       	call   3860 <__stack_chk_fail@plt>
   2b33b:	c9                   	leave  
   2b33c:	c3                   	ret    

000000000002b33d <vrna_strcat_printf>:
   2b33d:	f3 0f 1e fa          	endbr64 
   2b341:	55                   	push   rbp
   2b342:	48 89 e5             	mov    rbp,rsp
   2b345:	48 81 ec f0 00 00 00 	sub    rsp,0xf0
   2b34c:	48 89 bd 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rdi
   2b353:	48 89 b5 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rsi
   2b35a:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
   2b361:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
   2b368:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
   2b36f:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
   2b376:	84 c0                	test   al,al
   2b378:	74 20                	je     2b39a <vrna_strcat_printf+0x5d>
   2b37a:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
   2b37e:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
   2b382:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
   2b386:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
   2b38a:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
   2b38e:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
   2b392:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
   2b396:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
   2b39a:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   2b3a3:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
   2b3aa:	31 c0                	xor    eax,eax
   2b3ac:	c7 85 30 ff ff ff 10 00 00 00 	mov    DWORD PTR [rbp-0xd0],0x10
   2b3b6:	c7 85 34 ff ff ff 30 00 00 00 	mov    DWORD PTR [rbp-0xcc],0x30
   2b3c0:	48 8d 45 10          	lea    rax,[rbp+0x10]
   2b3c4:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
   2b3cb:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
   2b3d2:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
   2b3d9:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
   2b3e0:	48 8b 8d 10 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xf0]
   2b3e7:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
   2b3ee:	48 89 ce             	mov    rsi,rcx
   2b3f1:	48 89 c7             	mov    rdi,rax
   2b3f4:	e8 25 00 00 00       	call   2b41e <vrna_strcat_vprintf>
   2b3f9:	89 85 2c ff ff ff    	mov    DWORD PTR [rbp-0xd4],eax
   2b3ff:	8b 85 2c ff ff ff    	mov    eax,DWORD PTR [rbp-0xd4]
   2b405:	48 8b b5 48 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xb8]
   2b40c:	64 48 33 34 25 28 00 00 00 	xor    rsi,QWORD PTR fs:0x28
   2b415:	74 05                	je     2b41c <vrna_strcat_printf+0xdf>
   2b417:	e8 44 84 fd ff       	call   3860 <__stack_chk_fail@plt>
   2b41c:	c9                   	leave  
   2b41d:	c3                   	ret    

000000000002b41e <vrna_strcat_vprintf>:
   2b41e:	f3 0f 1e fa          	endbr64 
   2b422:	55                   	push   rbp
   2b423:	48 89 e5             	mov    rbp,rsp
   2b426:	48 83 ec 70          	sub    rsp,0x70
   2b42a:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
   2b42e:	48 89 75 a0          	mov    QWORD PTR [rbp-0x60],rsi
   2b432:	48 89 55 98          	mov    QWORD PTR [rbp-0x68],rdx
   2b436:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   2b43f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2b443:	31 c0                	xor    eax,eax
   2b445:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
   2b44a:	74 07                	je     2b453 <vrna_strcat_vprintf+0x35>
   2b44c:	48 83 7d a0 00       	cmp    QWORD PTR [rbp-0x60],0x0
   2b451:	75 0a                	jne    2b45d <vrna_strcat_vprintf+0x3f>
   2b453:	b8 ff ff ff ff       	mov    eax,0xffffffff
   2b458:	e9 85 01 00 00       	jmp    2b5e2 <vrna_strcat_vprintf+0x1c4>
   2b45d:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
   2b461:	48 8b 75 98          	mov    rsi,QWORD PTR [rbp-0x68]
   2b465:	48 8b 06             	mov    rax,QWORD PTR [rsi]
   2b468:	48 8b 56 08          	mov    rdx,QWORD PTR [rsi+0x8]
   2b46c:	48 89 01             	mov    QWORD PTR [rcx],rax
   2b46f:	48 89 51 08          	mov    QWORD PTR [rcx+0x8],rdx
   2b473:	48 8b 46 10          	mov    rax,QWORD PTR [rsi+0x10]
   2b477:	48 89 41 10          	mov    QWORD PTR [rcx+0x10],rax
   2b47b:	c7 45 bc ff ff ff ff 	mov    DWORD PTR [rbp-0x44],0xffffffff
   2b482:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
   2b486:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2b489:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
   2b48d:	48 83 7d c8 00       	cmp    QWORD PTR [rbp-0x38],0x0
   2b492:	74 0e                	je     2b4a2 <vrna_strcat_vprintf+0x84>
   2b494:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   2b498:	48 89 c7             	mov    rdi,rax
   2b49b:	e8 f0 81 fd ff       	call   3690 <strlen@plt>
   2b4a0:	eb 05                	jmp    2b4a7 <vrna_strcat_vprintf+0x89>
   2b4a2:	b8 00 00 00 00       	mov    eax,0x0
   2b4a7:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
   2b4ab:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
   2b4af:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   2b4b3:	48 89 d1             	mov    rcx,rdx
   2b4b6:	48 89 c2             	mov    rdx,rax
   2b4b9:	be 00 00 00 00       	mov    esi,0x0
   2b4be:	bf 00 00 00 00       	mov    edi,0x0
   2b4c3:	e8 68 82 fd ff       	call   3730 <vsnprintf@plt>
   2b4c8:	48 98                	cdqe   
   2b4ca:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
   2b4ce:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2b4d2:	48 3b 45 d8          	cmp    rax,QWORD PTR [rbp-0x28]
   2b4d6:	76 10                	jbe    2b4e8 <vrna_strcat_vprintf+0xca>
   2b4d8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2b4dc:	89 45 c0             	mov    DWORD PTR [rbp-0x40],eax
   2b4df:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2b4e3:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
   2b4e6:	eb 0e                	jmp    2b4f6 <vrna_strcat_vprintf+0xd8>
   2b4e8:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2b4ec:	89 45 c0             	mov    DWORD PTR [rbp-0x40],eax
   2b4ef:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2b4f3:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
   2b4f6:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
   2b4fb:	0f 84 ae 00 00 00    	je     2b5af <vrna_strcat_vprintf+0x191>
   2b501:	83 7d c0 ff          	cmp    DWORD PTR [rbp-0x40],0xffffffff
   2b505:	0f 84 a4 00 00 00    	je     2b5af <vrna_strcat_vprintf+0x191>
   2b50b:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
   2b50e:	48 98                	cdqe   
   2b510:	48 f7 d0             	not    rax
   2b513:	48 89 c2             	mov    rdx,rax
   2b516:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
   2b519:	48 98                	cdqe   
   2b51b:	48 39 c2             	cmp    rdx,rax
   2b51e:	0f 86 8b 00 00 00    	jbe    2b5af <vrna_strcat_vprintf+0x191>
   2b524:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2b528:	89 c2                	mov    edx,eax
   2b52a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2b52e:	01 d0                	add    eax,edx
   2b530:	8d 50 01             	lea    edx,[rax+0x1]
   2b533:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   2b537:	89 d6                	mov    esi,edx
   2b539:	48 89 c7             	mov    rdi,rax
   2b53c:	e8 08 0a 00 00       	call   2bf49 <vrna_realloc>
   2b541:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
   2b545:	48 83 7d c8 00       	cmp    QWORD PTR [rbp-0x38],0x0
   2b54a:	75 09                	jne    2b555 <vrna_strcat_vprintf+0x137>
   2b54c:	c7 45 bc ff ff ff ff 	mov    DWORD PTR [rbp-0x44],0xffffffff
   2b553:	eb 68                	jmp    2b5bd <vrna_strcat_vprintf+0x19f>
   2b555:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2b559:	48 8d 70 01          	lea    rsi,[rax+0x1]
   2b55d:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
   2b561:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2b565:	48 8d 3c 02          	lea    rdi,[rdx+rax*1]
   2b569:	48 8d 55 e0          	lea    rdx,[rbp-0x20]
   2b56d:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   2b571:	48 89 d1             	mov    rcx,rdx
   2b574:	48 89 c2             	mov    rdx,rax
   2b577:	e8 b4 81 fd ff       	call   3730 <vsnprintf@plt>
   2b57c:	89 45 bc             	mov    DWORD PTR [rbp-0x44],eax
   2b57f:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
   2b583:	79 0e                	jns    2b593 <vrna_strcat_vprintf+0x175>
   2b585:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   2b589:	48 89 c7             	mov    rdi,rax
   2b58c:	e8 1f 83 fd ff       	call   38b0 <free@plt>
   2b591:	eb 2a                	jmp    2b5bd <vrna_strcat_vprintf+0x19f>
   2b593:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
   2b597:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
   2b59b:	48 89 10             	mov    QWORD PTR [rax],rdx
   2b59e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2b5a2:	89 c2                	mov    edx,eax
   2b5a4:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2b5a8:	01 d0                	add    eax,edx
   2b5aa:	89 45 bc             	mov    DWORD PTR [rbp-0x44],eax
   2b5ad:	eb 0e                	jmp    2b5bd <vrna_strcat_vprintf+0x19f>
   2b5af:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
   2b5b4:	75 07                	jne    2b5bd <vrna_strcat_vprintf+0x19f>
   2b5b6:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2b5ba:	89 45 bc             	mov    DWORD PTR [rbp-0x44],eax
   2b5bd:	83 7d bc ff          	cmp    DWORD PTR [rbp-0x44],0xffffffff
   2b5c1:	75 1c                	jne    2b5df <vrna_strcat_vprintf+0x1c1>
   2b5c3:	48 8d 3d 76 81 1b 00 	lea    rdi,[rip+0x1b8176]        # 1e3740 <parameter_set_rna_turner2004+0x5dc20>
   2b5ca:	b8 00 00 00 00       	mov    eax,0x0
   2b5cf:	e8 c7 0b 00 00       	call   2c19b <vrna_message_warning>
   2b5d4:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
   2b5d8:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
   2b5df:	8b 45 bc             	mov    eax,DWORD PTR [rbp-0x44]
   2b5e2:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
   2b5e6:	64 48 33 0c 25 28 00 00 00 	xor    rcx,QWORD PTR fs:0x28
   2b5ef:	74 05                	je     2b5f6 <vrna_strcat_vprintf+0x1d8>
   2b5f1:	e8 6a 82 fd ff       	call   3860 <__stack_chk_fail@plt>
   2b5f6:	c9                   	leave  
   2b5f7:	c3                   	ret    

000000000002b5f8 <vrna_random_string>:
   2b5f8:	f3 0f 1e fa          	endbr64 
   2b5fc:	55                   	push   rbp
   2b5fd:	48 89 e5             	mov    rbp,rsp
   2b600:	48 83 ec 30          	sub    rsp,0x30
   2b604:	89 7d dc             	mov    DWORD PTR [rbp-0x24],edi
   2b607:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
   2b60b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2b60f:	48 89 c7             	mov    rdi,rax
   2b612:	e8 79 80 fd ff       	call   3690 <strlen@plt>
   2b617:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
   2b61a:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   2b61d:	83 c0 01             	add    eax,0x1
   2b620:	89 c7                	mov    edi,eax
   2b622:	e8 9a 08 00 00       	call   2bec1 <vrna_alloc>
   2b627:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2b62b:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
   2b632:	eb 38                	jmp    2b66c <vrna_random_string+0x74>
   2b634:	e8 3e 0f 00 00       	call   2c577 <vrna_urn>
   2b639:	f2 0f 2a 4d f0       	cvtsi2sd xmm1,DWORD PTR [rbp-0x10]
   2b63e:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   2b642:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   2b646:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
   2b649:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2b64c:	48 63 d0             	movsxd rdx,eax
   2b64f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2b653:	48 01 d0             	add    rax,rdx
   2b656:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
   2b659:	48 63 ca             	movsxd rcx,edx
   2b65c:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   2b660:	48 01 ca             	add    rdx,rcx
   2b663:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2b666:	88 02                	mov    BYTE PTR [rdx],al
   2b668:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
   2b66c:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2b66f:	3b 45 dc             	cmp    eax,DWORD PTR [rbp-0x24]
   2b672:	7c c0                	jl     2b634 <vrna_random_string+0x3c>
   2b674:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   2b677:	48 63 d0             	movsxd rdx,eax
   2b67a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2b67e:	48 01 d0             	add    rax,rdx
   2b681:	c6 00 00             	mov    BYTE PTR [rax],0x0
   2b684:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2b688:	c9                   	leave  
   2b689:	c3                   	ret    

000000000002b68a <vrna_hamming_distance>:
   2b68a:	f3 0f 1e fa          	endbr64 
   2b68e:	55                   	push   rbp
   2b68f:	48 89 e5             	mov    rbp,rsp
   2b692:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   2b696:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
   2b69a:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
   2b6a1:	eb 20                	jmp    2b6c3 <vrna_hamming_distance+0x39>
   2b6a3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2b6a7:	0f b6 10             	movzx  edx,BYTE PTR [rax]
   2b6aa:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2b6ae:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2b6b1:	38 c2                	cmp    dl,al
   2b6b3:	74 04                	je     2b6b9 <vrna_hamming_distance+0x2f>
   2b6b5:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
   2b6b9:	48 83 45 e8 01       	add    QWORD PTR [rbp-0x18],0x1
   2b6be:	48 83 45 e0 01       	add    QWORD PTR [rbp-0x20],0x1
   2b6c3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2b6c7:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2b6ca:	84 c0                	test   al,al
   2b6cc:	74 0b                	je     2b6d9 <vrna_hamming_distance+0x4f>
   2b6ce:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2b6d2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2b6d5:	84 c0                	test   al,al
   2b6d7:	75 ca                	jne    2b6a3 <vrna_hamming_distance+0x19>
   2b6d9:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2b6dc:	5d                   	pop    rbp
   2b6dd:	c3                   	ret    

000000000002b6de <vrna_hamming_distance_bound>:
   2b6de:	f3 0f 1e fa          	endbr64 
   2b6e2:	55                   	push   rbp
   2b6e3:	48 89 e5             	mov    rbp,rsp
   2b6e6:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   2b6ea:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
   2b6ee:	89 55 dc             	mov    DWORD PTR [rbp-0x24],edx
   2b6f1:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
   2b6f8:	eb 24                	jmp    2b71e <vrna_hamming_distance_bound+0x40>
   2b6fa:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2b6fe:	0f b6 10             	movzx  edx,BYTE PTR [rax]
   2b701:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2b705:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2b708:	38 c2                	cmp    dl,al
   2b70a:	74 04                	je     2b710 <vrna_hamming_distance_bound+0x32>
   2b70c:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
   2b710:	48 83 45 e8 01       	add    QWORD PTR [rbp-0x18],0x1
   2b715:	48 83 45 e0 01       	add    QWORD PTR [rbp-0x20],0x1
   2b71a:	83 6d dc 01          	sub    DWORD PTR [rbp-0x24],0x1
   2b71e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2b722:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2b725:	84 c0                	test   al,al
   2b727:	74 11                	je     2b73a <vrna_hamming_distance_bound+0x5c>
   2b729:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2b72d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2b730:	84 c0                	test   al,al
   2b732:	74 06                	je     2b73a <vrna_hamming_distance_bound+0x5c>
   2b734:	83 7d dc 00          	cmp    DWORD PTR [rbp-0x24],0x0
   2b738:	75 c0                	jne    2b6fa <vrna_hamming_distance_bound+0x1c>
   2b73a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2b73d:	5d                   	pop    rbp
   2b73e:	c3                   	ret    

000000000002b73f <vrna_seq_toRNA>:
   2b73f:	f3 0f 1e fa          	endbr64 
   2b743:	55                   	push   rbp
   2b744:	48 89 e5             	mov    rbp,rsp
   2b747:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   2b74b:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
   2b750:	74 5a                	je     2b7ac <vrna_seq_toRNA+0x6d>
   2b752:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
   2b759:	eb 40                	jmp    2b79b <vrna_seq_toRNA+0x5c>
   2b75b:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
   2b75e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2b762:	48 01 d0             	add    rax,rdx
   2b765:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2b768:	3c 54                	cmp    al,0x54
   2b76a:	75 0d                	jne    2b779 <vrna_seq_toRNA+0x3a>
   2b76c:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
   2b76f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2b773:	48 01 d0             	add    rax,rdx
   2b776:	c6 00 55             	mov    BYTE PTR [rax],0x55
   2b779:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
   2b77c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2b780:	48 01 d0             	add    rax,rdx
   2b783:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2b786:	3c 74                	cmp    al,0x74
   2b788:	75 0d                	jne    2b797 <vrna_seq_toRNA+0x58>
   2b78a:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
   2b78d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2b791:	48 01 d0             	add    rax,rdx
   2b794:	c6 00 75             	mov    BYTE PTR [rax],0x75
   2b797:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
   2b79b:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
   2b79e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2b7a2:	48 01 d0             	add    rax,rdx
   2b7a5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2b7a8:	84 c0                	test   al,al
   2b7aa:	75 af                	jne    2b75b <vrna_seq_toRNA+0x1c>
   2b7ac:	90                   	nop
   2b7ad:	5d                   	pop    rbp
   2b7ae:	c3                   	ret    

000000000002b7af <vrna_seq_toupper>:
   2b7af:	f3 0f 1e fa          	endbr64 
   2b7b3:	55                   	push   rbp
   2b7b4:	48 89 e5             	mov    rbp,rsp
   2b7b7:	48 83 ec 20          	sub    rsp,0x20
   2b7bb:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   2b7bf:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
   2b7c4:	74 45                	je     2b80b <vrna_seq_toupper+0x5c>
   2b7c6:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
   2b7cd:	eb 2b                	jmp    2b7fa <vrna_seq_toupper+0x4b>
   2b7cf:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
   2b7d2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2b7d6:	48 01 d0             	add    rax,rdx
   2b7d9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2b7dc:	0f be c0             	movsx  eax,al
   2b7df:	89 c7                	mov    edi,eax
   2b7e1:	e8 ba 82 fd ff       	call   3aa0 <toupper@plt>
   2b7e6:	89 c1                	mov    ecx,eax
   2b7e8:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
   2b7eb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2b7ef:	48 01 d0             	add    rax,rdx
   2b7f2:	89 ca                	mov    edx,ecx
   2b7f4:	88 10                	mov    BYTE PTR [rax],dl
   2b7f6:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
   2b7fa:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
   2b7fd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2b801:	48 01 d0             	add    rax,rdx
   2b804:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2b807:	84 c0                	test   al,al
   2b809:	75 c4                	jne    2b7cf <vrna_seq_toupper+0x20>
   2b80b:	90                   	nop
   2b80c:	c9                   	leave  
   2b80d:	c3                   	ret    

000000000002b80e <vrna_cut_point_insert>:
   2b80e:	f3 0f 1e fa          	endbr64 
   2b812:	55                   	push   rbp
   2b813:	48 89 e5             	mov    rbp,rsp
   2b816:	48 83 ec 20          	sub    rsp,0x20
   2b81a:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   2b81e:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
   2b821:	83 7d e4 00          	cmp    DWORD PTR [rbp-0x1c],0x0
   2b825:	7e 70                	jle    2b897 <vrna_cut_point_insert+0x89>
   2b827:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2b82b:	48 89 c7             	mov    rdi,rax
   2b82e:	e8 5d 7e fd ff       	call   3690 <strlen@plt>
   2b833:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
   2b836:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2b839:	83 c0 02             	add    eax,0x2
   2b83c:	89 c7                	mov    edi,eax
   2b83e:	e8 7e 06 00 00       	call   2bec1 <vrna_alloc>
   2b843:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2b847:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   2b84a:	83 e8 01             	sub    eax,0x1
   2b84d:	48 63 d0             	movsxd rdx,eax
   2b850:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
   2b854:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2b858:	48 89 ce             	mov    rsi,rcx
   2b85b:	48 89 c7             	mov    rdi,rax
   2b85e:	e8 7d 7e fd ff       	call   36e0 <strncpy@plt>
   2b863:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   2b866:	48 98                	cdqe   
   2b868:	48 8d 50 ff          	lea    rdx,[rax-0x1]
   2b86c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2b870:	48 01 d0             	add    rax,rdx
   2b873:	c6 00 26             	mov    BYTE PTR [rax],0x26
   2b876:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   2b879:	48 98                	cdqe   
   2b87b:	48 8d 50 ff          	lea    rdx,[rax-0x1]
   2b87f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2b883:	48 01 c2             	add    rdx,rax
   2b886:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2b88a:	48 89 d6             	mov    rsi,rdx
   2b88d:	48 89 c7             	mov    rdi,rax
   2b890:	e8 cb 81 fd ff       	call   3a60 <strcat@plt>
   2b895:	eb 10                	jmp    2b8a7 <vrna_cut_point_insert+0x99>
   2b897:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2b89b:	48 89 c7             	mov    rdi,rax
   2b89e:	e8 66 f8 ff ff       	call   2b109 <strdup>
   2b8a3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2b8a7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2b8ab:	c9                   	leave  
   2b8ac:	c3                   	ret    

000000000002b8ad <vrna_cut_point_remove>:
   2b8ad:	f3 0f 1e fa          	endbr64 
   2b8b1:	55                   	push   rbp
   2b8b2:	48 89 e5             	mov    rbp,rsp
   2b8b5:	48 83 ec 30          	sub    rsp,0x30
   2b8b9:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
   2b8bd:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
   2b8c1:	48 c7 45 f8 00 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
   2b8c9:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2b8cd:	c7 00 ff ff ff ff    	mov    DWORD PTR [rax],0xffffffff
   2b8d3:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
   2b8d8:	0f 84 ac 00 00 00    	je     2b98a <vrna_cut_point_remove+0xdd>
   2b8de:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2b8e2:	48 89 c7             	mov    rdi,rax
   2b8e5:	e8 a6 7d fd ff       	call   3690 <strlen@plt>
   2b8ea:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
   2b8ed:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2b8f1:	48 89 c7             	mov    rdi,rax
   2b8f4:	e8 10 f8 ff ff       	call   2b109 <strdup>
   2b8f9:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2b8fd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2b901:	be 26 00 00 00       	mov    esi,0x26
   2b906:	48 89 c7             	mov    rdi,rax
   2b909:	e8 52 7d fd ff       	call   3660 <strchr@plt>
   2b90e:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
   2b912:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
   2b917:	74 71                	je     2b98a <vrna_cut_point_remove+0xdd>
   2b919:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   2b91d:	48 2b 45 f8          	sub    rax,QWORD PTR [rbp-0x8]
   2b921:	8d 50 01             	lea    edx,[rax+0x1]
   2b924:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2b928:	89 10                	mov    DWORD PTR [rax],edx
   2b92a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2b92e:	8b 00                	mov    eax,DWORD PTR [rax]
   2b930:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
   2b933:	77 0a                	ja     2b93f <vrna_cut_point_remove+0x92>
   2b935:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2b939:	c7 00 ff ff ff ff    	mov    DWORD PTR [rax],0xffffffff
   2b93f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   2b943:	48 83 c0 01          	add    rax,0x1
   2b947:	be 26 00 00 00       	mov    esi,0x26
   2b94c:	48 89 c7             	mov    rdi,rax
   2b94f:	e8 0c 7d fd ff       	call   3660 <strchr@plt>
   2b954:	48 85 c0             	test   rax,rax
   2b957:	74 26                	je     2b97f <vrna_cut_point_remove+0xd2>
   2b959:	48 8d 3d 10 7e 1b 00 	lea    rdi,[rip+0x1b7e10]        # 1e3770 <parameter_set_rna_turner2004+0x5dc50>
   2b960:	b8 00 00 00 00       	mov    eax,0x0
   2b965:	e8 80 06 00 00       	call   2bfea <vrna_message_error>
   2b96a:	eb 13                	jmp    2b97f <vrna_cut_point_remove+0xd2>
   2b96c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   2b970:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
   2b974:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   2b978:	88 10                	mov    BYTE PTR [rax],dl
   2b97a:	48 83 45 f0 01       	add    QWORD PTR [rbp-0x10],0x1
   2b97f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   2b983:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2b986:	84 c0                	test   al,al
   2b988:	75 e2                	jne    2b96c <vrna_cut_point_remove+0xbf>
   2b98a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2b98e:	c9                   	leave  
   2b98f:	c3                   	ret    

000000000002b990 <vrna_strsplit>:
   2b990:	f3 0f 1e fa          	endbr64 
   2b994:	55                   	push   rbp
   2b995:	48 89 e5             	mov    rbp,rsp
   2b998:	53                   	push   rbx
   2b999:	48 83 ec 58          	sub    rsp,0x58
   2b99d:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
   2b9a1:	48 89 75 a0          	mov    QWORD PTR [rbp-0x60],rsi
   2b9a5:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   2b9ae:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
   2b9b2:	31 c0                	xor    eax,eax
   2b9b4:	48 c7 45 d0 00 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
   2b9bc:	c7 45 b4 00 00 00 00 	mov    DWORD PTR [rbp-0x4c],0x0
   2b9c3:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
   2b9c8:	0f 84 19 01 00 00    	je     2bae7 <vrna_strsplit+0x157>
   2b9ce:	48 83 7d a0 00       	cmp    QWORD PTR [rbp-0x60],0x0
   2b9d3:	74 17                	je     2b9ec <vrna_strsplit+0x5c>
   2b9d5:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   2b9d9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2b9dc:	84 c0                	test   al,al
   2b9de:	74 0c                	je     2b9ec <vrna_strsplit+0x5c>
   2b9e0:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   2b9e4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2b9e7:	88 45 e6             	mov    BYTE PTR [rbp-0x1a],al
   2b9ea:	eb 04                	jmp    2b9f0 <vrna_strsplit+0x60>
   2b9ec:	c6 45 e6 26          	mov    BYTE PTR [rbp-0x1a],0x26
   2b9f0:	c6 45 e7 00          	mov    BYTE PTR [rbp-0x19],0x0
   2b9f4:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
   2b9f8:	48 89 c7             	mov    rdi,rax
   2b9fb:	e8 09 f7 ff ff       	call   2b109 <strdup>
   2ba00:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
   2ba04:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2ba08:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
   2ba0c:	eb 13                	jmp    2ba21 <vrna_strsplit+0x91>
   2ba0e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   2ba12:	0f b6 10             	movzx  edx,BYTE PTR [rax]
   2ba15:	0f b6 45 e6          	movzx  eax,BYTE PTR [rbp-0x1a]
   2ba19:	38 c2                	cmp    dl,al
   2ba1b:	75 04                	jne    2ba21 <vrna_strsplit+0x91>
   2ba1d:	83 45 b4 01          	add    DWORD PTR [rbp-0x4c],0x1
   2ba21:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   2ba25:	48 8d 50 01          	lea    rdx,[rax+0x1]
   2ba29:	48 89 55 c0          	mov    QWORD PTR [rbp-0x40],rdx
   2ba2d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2ba30:	84 c0                	test   al,al
   2ba32:	75 da                	jne    2ba0e <vrna_strsplit+0x7e>
   2ba34:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
   2ba37:	83 c0 02             	add    eax,0x2
   2ba3a:	c1 e0 03             	shl    eax,0x3
   2ba3d:	89 c7                	mov    edi,eax
   2ba3f:	e8 7d 04 00 00       	call   2bec1 <vrna_alloc>
   2ba44:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
   2ba48:	c7 45 b4 00 00 00 00 	mov    DWORD PTR [rbp-0x4c],0x0
   2ba4f:	48 8d 55 b8          	lea    rdx,[rbp-0x48]
   2ba53:	48 8d 4d e6          	lea    rcx,[rbp-0x1a]
   2ba57:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2ba5b:	48 89 ce             	mov    rsi,rcx
   2ba5e:	48 89 c7             	mov    rdi,rax
   2ba61:	e8 2a 80 fd ff       	call   3a90 <strtok_r@plt>
   2ba66:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
   2ba6a:	eb 4f                	jmp    2babb <vrna_strsplit+0x12b>
   2ba6c:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
   2ba6f:	8d 50 01             	lea    edx,[rax+0x1]
   2ba72:	89 55 b4             	mov    DWORD PTR [rbp-0x4c],edx
   2ba75:	89 c0                	mov    eax,eax
   2ba77:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   2ba7f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2ba83:	48 8d 1c 02          	lea    rbx,[rdx+rax*1]
   2ba87:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   2ba8b:	48 89 c6             	mov    rsi,rax
   2ba8e:	48 8d 3d fc 7c 1b 00 	lea    rdi,[rip+0x1b7cfc]        # 1e3791 <parameter_set_rna_turner2004+0x5dc71>
   2ba95:	b8 00 00 00 00       	mov    eax,0x0
   2ba9a:	e8 ad f6 ff ff       	call   2b14c <vrna_strdup_printf>
   2ba9f:	48 89 03             	mov    QWORD PTR [rbx],rax
   2baa2:	48 8d 55 b8          	lea    rdx,[rbp-0x48]
   2baa6:	48 8d 45 e6          	lea    rax,[rbp-0x1a]
   2baaa:	48 89 c6             	mov    rsi,rax
   2baad:	bf 00 00 00 00       	mov    edi,0x0
   2bab2:	e8 d9 7f fd ff       	call   3a90 <strtok_r@plt>
   2bab7:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
   2babb:	48 83 7d c8 00       	cmp    QWORD PTR [rbp-0x38],0x0
   2bac0:	75 aa                	jne    2ba6c <vrna_strsplit+0xdc>
   2bac2:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
   2bac5:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   2bacd:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2bad1:	48 01 d0             	add    rax,rdx
   2bad4:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
   2badb:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2badf:	48 89 c7             	mov    rdi,rax
   2bae2:	e8 c9 7d fd ff       	call   38b0 <free@plt>
   2bae7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2baeb:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
   2baef:	64 48 33 0c 25 28 00 00 00 	xor    rcx,QWORD PTR fs:0x28
   2baf8:	74 05                	je     2baff <vrna_strsplit+0x16f>
   2bafa:	e8 61 7d fd ff       	call   3860 <__stack_chk_fail@plt>
   2baff:	48 83 c4 58          	add    rsp,0x58
   2bb03:	5b                   	pop    rbx
   2bb04:	5d                   	pop    rbp
   2bb05:	c3                   	ret    

000000000002bb06 <vrna_strjoin>:
   2bb06:	f3 0f 1e fa          	endbr64 
   2bb0a:	55                   	push   rbp
   2bb0b:	48 89 e5             	mov    rbp,rsp
   2bb0e:	53                   	push   rbx
   2bb0f:	48 83 ec 48          	sub    rsp,0x48
   2bb13:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
   2bb17:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
   2bb1b:	48 c7 45 c0 00 00 00 00 	mov    QWORD PTR [rbp-0x40],0x0
   2bb23:	48 83 7d b8 00       	cmp    QWORD PTR [rbp-0x48],0x0
   2bb28:	0f 84 01 02 00 00    	je     2bd2f <vrna_strjoin+0x229>
   2bb2e:	48 c7 45 e8 00 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
   2bb36:	48 c7 45 e0 20 00 00 00 	mov    QWORD PTR [rbp-0x20],0x20
   2bb3e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2bb42:	c1 e0 03             	shl    eax,0x3
   2bb45:	89 c7                	mov    edi,eax
   2bb47:	e8 75 03 00 00       	call   2bec1 <vrna_alloc>
   2bb4c:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
   2bb50:	48 c7 45 c8 00 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
   2bb58:	e9 80 00 00 00       	jmp    2bbdd <vrna_strjoin+0xd7>
   2bb5d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   2bb61:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   2bb69:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
   2bb6d:	48 01 d0             	add    rax,rdx
   2bb70:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2bb73:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
   2bb77:	48 8d 0c d5 00 00 00 00 	lea    rcx,[rdx*8+0x0]
   2bb7f:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
   2bb83:	48 8d 1c 11          	lea    rbx,[rcx+rdx*1]
   2bb87:	48 89 c7             	mov    rdi,rax
   2bb8a:	e8 01 7b fd ff       	call   3690 <strlen@plt>
   2bb8f:	48 89 03             	mov    QWORD PTR [rbx],rax
   2bb92:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   2bb96:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   2bb9e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2bba2:	48 01 d0             	add    rax,rdx
   2bba5:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2bba8:	48 01 45 e8          	add    QWORD PTR [rbp-0x18],rax
   2bbac:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   2bbb0:	48 3b 45 e0          	cmp    rax,QWORD PTR [rbp-0x20]
   2bbb4:	75 22                	jne    2bbd8 <vrna_strjoin+0xd2>
   2bbb6:	48 83 45 e0 20       	add    QWORD PTR [rbp-0x20],0x20
   2bbbb:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2bbbf:	8d 14 c5 00 00 00 00 	lea    edx,[rax*8+0x0]
   2bbc6:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2bbca:	89 d6                	mov    esi,edx
   2bbcc:	48 89 c7             	mov    rdi,rax
   2bbcf:	e8 75 03 00 00       	call   2bf49 <vrna_realloc>
   2bbd4:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
   2bbd8:	48 83 45 c8 01       	add    QWORD PTR [rbp-0x38],0x1
   2bbdd:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   2bbe1:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   2bbe9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
   2bbed:	48 01 d0             	add    rax,rdx
   2bbf0:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2bbf3:	48 85 c0             	test   rax,rax
   2bbf6:	0f 85 61 ff ff ff    	jne    2bb5d <vrna_strjoin+0x57>
   2bbfc:	48 83 7d b0 00       	cmp    QWORD PTR [rbp-0x50],0x0
   2bc01:	74 1e                	je     2bc21 <vrna_strjoin+0x11b>
   2bc03:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
   2bc07:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2bc0a:	84 c0                	test   al,al
   2bc0c:	74 13                	je     2bc21 <vrna_strjoin+0x11b>
   2bc0e:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
   2bc12:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2bc16:	48 01 d0             	add    rax,rdx
   2bc19:	48 83 e8 01          	sub    rax,0x1
   2bc1d:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
   2bc21:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2bc25:	83 c0 01             	add    eax,0x1
   2bc28:	89 c7                	mov    edi,eax
   2bc2a:	e8 92 02 00 00       	call   2bec1 <vrna_alloc>
   2bc2f:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
   2bc33:	48 c7 45 d0 00 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
   2bc3b:	48 c7 45 c8 00 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
   2bc43:	e9 ae 00 00 00       	jmp    2bcf6 <vrna_strjoin+0x1f0>
   2bc48:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   2bc4c:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   2bc54:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2bc58:	48 01 d0             	add    rax,rdx
   2bc5b:	48 8b 10             	mov    rdx,QWORD PTR [rax]
   2bc5e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   2bc62:	48 8d 0c c5 00 00 00 00 	lea    rcx,[rax*8+0x0]
   2bc6a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
   2bc6e:	48 01 c8             	add    rax,rcx
   2bc71:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2bc74:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
   2bc78:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
   2bc7c:	48 01 f1             	add    rcx,rsi
   2bc7f:	48 89 c6             	mov    rsi,rax
   2bc82:	48 89 cf             	mov    rdi,rcx
   2bc85:	e8 16 7b fd ff       	call   37a0 <memcpy@plt>
   2bc8a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   2bc8e:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   2bc96:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2bc9a:	48 01 d0             	add    rax,rdx
   2bc9d:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2bca0:	48 01 45 d0          	add    QWORD PTR [rbp-0x30],rax
   2bca4:	48 83 7d b0 00       	cmp    QWORD PTR [rbp-0x50],0x0
   2bca9:	74 46                	je     2bcf1 <vrna_strjoin+0x1eb>
   2bcab:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
   2bcaf:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2bcb2:	84 c0                	test   al,al
   2bcb4:	74 3b                	je     2bcf1 <vrna_strjoin+0x1eb>
   2bcb6:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   2bcba:	48 83 c0 01          	add    rax,0x1
   2bcbe:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   2bcc6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
   2bcca:	48 01 d0             	add    rax,rdx
   2bccd:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2bcd0:	48 85 c0             	test   rax,rax
   2bcd3:	74 1c                	je     2bcf1 <vrna_strjoin+0x1eb>
   2bcd5:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2bcd9:	48 8d 50 01          	lea    rdx,[rax+0x1]
   2bcdd:	48 89 55 d0          	mov    QWORD PTR [rbp-0x30],rdx
   2bce1:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   2bce5:	48 01 c2             	add    rdx,rax
   2bce8:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
   2bcec:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2bcef:	88 02                	mov    BYTE PTR [rdx],al
   2bcf1:	48 83 45 c8 01       	add    QWORD PTR [rbp-0x38],0x1
   2bcf6:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   2bcfa:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   2bd02:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
   2bd06:	48 01 d0             	add    rax,rdx
   2bd09:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2bd0c:	48 85 c0             	test   rax,rax
   2bd0f:	0f 85 33 ff ff ff    	jne    2bc48 <vrna_strjoin+0x142>
   2bd15:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   2bd19:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2bd1d:	48 01 d0             	add    rax,rdx
   2bd20:	c6 00 00             	mov    BYTE PTR [rax],0x0
   2bd23:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2bd27:	48 89 c7             	mov    rdi,rax
   2bd2a:	e8 81 7b fd ff       	call   38b0 <free@plt>
   2bd2f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   2bd33:	48 83 c4 48          	add    rsp,0x48
   2bd37:	5b                   	pop    rbx
   2bd38:	5d                   	pop    rbp
   2bd39:	c3                   	ret    

000000000002bd3a <vrna_seq_ungapped>:
   2bd3a:	f3 0f 1e fa          	endbr64 
   2bd3e:	55                   	push   rbp
   2bd3f:	48 89 e5             	mov    rbp,rsp
   2bd42:	48 83 ec 30          	sub    rsp,0x30
   2bd46:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
   2bd4a:	48 c7 45 f0 00 00 00 00 	mov    QWORD PTR [rbp-0x10],0x0
   2bd52:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
   2bd57:	0f 84 a2 00 00 00    	je     2bdff <vrna_seq_ungapped+0xc5>
   2bd5d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2bd61:	48 89 c7             	mov    rdi,rax
   2bd64:	e8 a0 f3 ff ff       	call   2b109 <strdup>
   2bd69:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
   2bd6d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   2bd71:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2bd75:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
   2bd7c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2bd80:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2bd83:	3c 2d                	cmp    al,0x2d
   2bd85:	74 3d                	je     2bdc4 <vrna_seq_ungapped+0x8a>
   2bd87:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2bd8b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2bd8e:	3c 5f                	cmp    al,0x5f
   2bd90:	74 32                	je     2bdc4 <vrna_seq_ungapped+0x8a>
   2bd92:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2bd96:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2bd99:	3c 7e                	cmp    al,0x7e
   2bd9b:	74 27                	je     2bdc4 <vrna_seq_ungapped+0x8a>
   2bd9d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2bda1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2bda4:	3c 2e                	cmp    al,0x2e
   2bda6:	74 1c                	je     2bdc4 <vrna_seq_ungapped+0x8a>
   2bda8:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2bdab:	48 63 d0             	movsxd rdx,eax
   2bdae:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   2bdb2:	48 01 c2             	add    rdx,rax
   2bdb5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2bdb9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2bdbc:	88 02                	mov    BYTE PTR [rdx],al
   2bdbe:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
   2bdc2:	eb 01                	jmp    2bdc5 <vrna_seq_ungapped+0x8b>
   2bdc4:	90                   	nop
   2bdc5:	48 83 45 f8 01       	add    QWORD PTR [rbp-0x8],0x1
   2bdca:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2bdce:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2bdd1:	84 c0                	test   al,al
   2bdd3:	75 a7                	jne    2bd7c <vrna_seq_ungapped+0x42>
   2bdd5:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2bdd8:	83 c0 01             	add    eax,0x1
   2bddb:	89 c2                	mov    edx,eax
   2bddd:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   2bde1:	89 d6                	mov    esi,edx
   2bde3:	48 89 c7             	mov    rdi,rax
   2bde6:	e8 5e 01 00 00       	call   2bf49 <vrna_realloc>
   2bdeb:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
   2bdef:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2bdf2:	48 63 d0             	movsxd rdx,eax
   2bdf5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   2bdf9:	48 01 d0             	add    rax,rdx
   2bdfc:	c6 00 00             	mov    BYTE PTR [rax],0x0
   2bdff:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   2be03:	c9                   	leave  
   2be04:	c3                   	ret    

000000000002be05 <str_uppercase>:
   2be05:	f3 0f 1e fa          	endbr64 
   2be09:	55                   	push   rbp
   2be0a:	48 89 e5             	mov    rbp,rsp
   2be0d:	48 83 ec 10          	sub    rsp,0x10
   2be11:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   2be15:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2be19:	48 89 c7             	mov    rdi,rax
   2be1c:	e8 8e f9 ff ff       	call   2b7af <vrna_seq_toupper>
   2be21:	90                   	nop
   2be22:	c9                   	leave  
   2be23:	c3                   	ret    

000000000002be24 <str_DNA2RNA>:
   2be24:	f3 0f 1e fa          	endbr64 
   2be28:	55                   	push   rbp
   2be29:	48 89 e5             	mov    rbp,rsp
   2be2c:	48 83 ec 08          	sub    rsp,0x8
   2be30:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   2be34:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2be38:	48 89 c7             	mov    rdi,rax
   2be3b:	e8 ff f8 ff ff       	call   2b73f <vrna_seq_toRNA>
   2be40:	90                   	nop
   2be41:	c9                   	leave  
   2be42:	c3                   	ret    

000000000002be43 <random_string>:
   2be43:	f3 0f 1e fa          	endbr64 
   2be47:	55                   	push   rbp
   2be48:	48 89 e5             	mov    rbp,rsp
   2be4b:	48 83 ec 10          	sub    rsp,0x10
   2be4f:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
   2be52:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
   2be56:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
   2be5a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2be5d:	48 89 d6             	mov    rsi,rdx
   2be60:	89 c7                	mov    edi,eax
   2be62:	e8 91 f7 ff ff       	call   2b5f8 <vrna_random_string>
   2be67:	c9                   	leave  
   2be68:	c3                   	ret    

000000000002be69 <hamming>:
   2be69:	f3 0f 1e fa          	endbr64 
   2be6d:	55                   	push   rbp
   2be6e:	48 89 e5             	mov    rbp,rsp
   2be71:	48 83 ec 10          	sub    rsp,0x10
   2be75:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   2be79:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
   2be7d:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
   2be81:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2be85:	48 89 d6             	mov    rsi,rdx
   2be88:	48 89 c7             	mov    rdi,rax
   2be8b:	e8 fa f7 ff ff       	call   2b68a <vrna_hamming_distance>
   2be90:	c9                   	leave  
   2be91:	c3                   	ret    

000000000002be92 <hamming_bound>:
   2be92:	f3 0f 1e fa          	endbr64 
   2be96:	55                   	push   rbp
   2be97:	48 89 e5             	mov    rbp,rsp
   2be9a:	48 83 ec 18          	sub    rsp,0x18
   2be9e:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   2bea2:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
   2bea6:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
   2bea9:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
   2beac:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
   2beb0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2beb4:	48 89 ce             	mov    rsi,rcx
   2beb7:	48 89 c7             	mov    rdi,rax
   2beba:	e8 1f f8 ff ff       	call   2b6de <vrna_hamming_distance_bound>
   2bebf:	c9                   	leave  
   2bec0:	c3                   	ret    

000000000002bec1 <vrna_alloc>:
   2bec1:	f3 0f 1e fa          	endbr64 
   2bec5:	55                   	push   rbp
   2bec6:	48 89 e5             	mov    rbp,rsp
   2bec9:	48 83 ec 20          	sub    rsp,0x20
   2becd:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
   2bed0:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2bed3:	48 89 c6             	mov    rsi,rax
   2bed6:	bf 01 00 00 00       	mov    edi,0x1
   2bedb:	e8 70 78 fd ff       	call   3750 <calloc@plt>
   2bee0:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2bee4:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
   2bee9:	75 58                	jne    2bf43 <vrna_alloc+0x82>
   2beeb:	e8 b0 76 fd ff       	call   35a0 <__errno_location@plt>
   2bef0:	8b 00                	mov    eax,DWORD PTR [rax]
   2bef2:	83 f8 16             	cmp    eax,0x16
   2bef5:	75 2f                	jne    2bf26 <vrna_alloc+0x65>
   2bef7:	48 8b 05 22 22 22 00 	mov    rax,QWORD PTR [rip+0x222222]        # 24e120 <stderr@@GLIBC_2.2.5>
   2befe:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
   2bf01:	48 8d 35 90 78 1b 00 	lea    rsi,[rip+0x1b7890]        # 1e3798 <parameter_set_rna_turner2004+0x5dc78>
   2bf08:	48 89 c7             	mov    rdi,rax
   2bf0b:	b8 00 00 00 00       	mov    eax,0x0
   2bf10:	e8 3b 7a fd ff       	call   3950 <fprintf@plt>
   2bf15:	48 8d 3d 9c 78 1b 00 	lea    rdi,[rip+0x1b789c]        # 1e37b8 <parameter_set_rna_turner2004+0x5dc98>
   2bf1c:	b8 00 00 00 00       	mov    eax,0x0
   2bf21:	e8 c4 00 00 00       	call   2bfea <vrna_message_error>
   2bf26:	e8 75 76 fd ff       	call   35a0 <__errno_location@plt>
   2bf2b:	8b 00                	mov    eax,DWORD PTR [rax]
   2bf2d:	83 f8 0c             	cmp    eax,0xc
   2bf30:	75 11                	jne    2bf43 <vrna_alloc+0x82>
   2bf32:	48 8d 3d a7 78 1b 00 	lea    rdi,[rip+0x1b78a7]        # 1e37e0 <parameter_set_rna_turner2004+0x5dcc0>
   2bf39:	b8 00 00 00 00       	mov    eax,0x0
   2bf3e:	e8 a7 00 00 00       	call   2bfea <vrna_message_error>
   2bf43:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2bf47:	c9                   	leave  
   2bf48:	c3                   	ret    

000000000002bf49 <vrna_realloc>:
   2bf49:	f3 0f 1e fa          	endbr64 
   2bf4d:	55                   	push   rbp
   2bf4e:	48 89 e5             	mov    rbp,rsp
   2bf51:	48 83 ec 10          	sub    rsp,0x10
   2bf55:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   2bf59:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
   2bf5c:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
   2bf61:	75 0c                	jne    2bf6f <vrna_realloc+0x26>
   2bf63:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2bf66:	89 c7                	mov    edi,eax
   2bf68:	e8 54 ff ff ff       	call   2bec1 <vrna_alloc>
   2bf6d:	eb 79                	jmp    2bfe8 <vrna_realloc+0x9f>
   2bf6f:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
   2bf72:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2bf76:	48 89 d6             	mov    rsi,rdx
   2bf79:	48 89 c7             	mov    rdi,rax
   2bf7c:	e8 5f 7a fd ff       	call   39e0 <realloc@plt>
   2bf81:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2bf85:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
   2bf8a:	75 58                	jne    2bfe4 <vrna_realloc+0x9b>
   2bf8c:	e8 0f 76 fd ff       	call   35a0 <__errno_location@plt>
   2bf91:	8b 00                	mov    eax,DWORD PTR [rax]
   2bf93:	83 f8 16             	cmp    eax,0x16
   2bf96:	75 2f                	jne    2bfc7 <vrna_realloc+0x7e>
   2bf98:	48 8b 05 81 21 22 00 	mov    rax,QWORD PTR [rip+0x222181]        # 24e120 <stderr@@GLIBC_2.2.5>
   2bf9f:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
   2bfa2:	48 8d 35 5f 78 1b 00 	lea    rsi,[rip+0x1b785f]        # 1e3808 <parameter_set_rna_turner2004+0x5dce8>
   2bfa9:	48 89 c7             	mov    rdi,rax
   2bfac:	b8 00 00 00 00       	mov    eax,0x0
   2bfb1:	e8 9a 79 fd ff       	call   3950 <fprintf@plt>
   2bfb6:	48 8d 3d 73 78 1b 00 	lea    rdi,[rip+0x1b7873]        # 1e3830 <parameter_set_rna_turner2004+0x5dd10>
   2bfbd:	b8 00 00 00 00       	mov    eax,0x0
   2bfc2:	e8 23 00 00 00       	call   2bfea <vrna_message_error>
   2bfc7:	e8 d4 75 fd ff       	call   35a0 <__errno_location@plt>
   2bfcc:	8b 00                	mov    eax,DWORD PTR [rax]
   2bfce:	83 f8 0c             	cmp    eax,0xc
   2bfd1:	75 11                	jne    2bfe4 <vrna_realloc+0x9b>
   2bfd3:	48 8d 3d 86 78 1b 00 	lea    rdi,[rip+0x1b7886]        # 1e3860 <parameter_set_rna_turner2004+0x5dd40>
   2bfda:	b8 00 00 00 00       	mov    eax,0x0
   2bfdf:	e8 06 00 00 00       	call   2bfea <vrna_message_error>
   2bfe4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2bfe8:	c9                   	leave  
   2bfe9:	c3                   	ret    

000000000002bfea <vrna_message_error>:
   2bfea:	f3 0f 1e fa          	endbr64 
   2bfee:	55                   	push   rbp
   2bfef:	48 89 e5             	mov    rbp,rsp
   2bff2:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
   2bff9:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
   2c000:	48 89 b5 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rsi
   2c007:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
   2c00e:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
   2c015:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
   2c01c:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
   2c023:	84 c0                	test   al,al
   2c025:	74 20                	je     2c047 <vrna_message_error+0x5d>
   2c027:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
   2c02b:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
   2c02f:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
   2c033:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
   2c037:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
   2c03b:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
   2c03f:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
   2c043:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
   2c047:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   2c050:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
   2c057:	31 c0                	xor    eax,eax
   2c059:	c7 85 30 ff ff ff 08 00 00 00 	mov    DWORD PTR [rbp-0xd0],0x8
   2c063:	c7 85 34 ff ff ff 30 00 00 00 	mov    DWORD PTR [rbp-0xcc],0x30
   2c06d:	48 8d 45 10          	lea    rax,[rbp+0x10]
   2c071:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
   2c078:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
   2c07f:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
   2c086:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
   2c08d:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
   2c094:	48 89 d6             	mov    rsi,rdx
   2c097:	48 89 c7             	mov    rdi,rax
   2c09a:	e8 1a 00 00 00       	call   2c0b9 <vrna_message_verror>
   2c09f:	90                   	nop
   2c0a0:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   2c0a7:	64 48 33 04 25 28 00 00 00 	xor    rax,QWORD PTR fs:0x28
   2c0b0:	74 05                	je     2c0b7 <vrna_message_error+0xcd>
   2c0b2:	e8 a9 77 fd ff       	call   3860 <__stack_chk_fail@plt>
   2c0b7:	c9                   	leave  
   2c0b8:	c3                   	ret    

000000000002c0b9 <vrna_message_verror>:
   2c0b9:	f3 0f 1e fa          	endbr64 
   2c0bd:	55                   	push   rbp
   2c0be:	48 89 e5             	mov    rbp,rsp
   2c0c1:	48 83 ec 10          	sub    rsp,0x10
   2c0c5:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   2c0c9:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
   2c0cd:	48 8b 05 4c 20 22 00 	mov    rax,QWORD PTR [rip+0x22204c]        # 24e120 <stderr@@GLIBC_2.2.5>
   2c0d4:	48 89 c7             	mov    rdi,rax
   2c0d7:	e8 64 77 fd ff       	call   3840 <fileno@plt>
   2c0dc:	89 c7                	mov    edi,eax
   2c0de:	e8 3d 79 fd ff       	call   3a20 <isatty@plt>
   2c0e3:	85 c0                	test   eax,eax
   2c0e5:	74 5c                	je     2c143 <vrna_message_verror+0x8a>
   2c0e7:	48 8b 05 32 20 22 00 	mov    rax,QWORD PTR [rip+0x222032]        # 24e120 <stderr@@GLIBC_2.2.5>
   2c0ee:	48 89 c1             	mov    rcx,rax
   2c0f1:	ba 16 00 00 00       	mov    edx,0x16
   2c0f6:	be 01 00 00 00       	mov    esi,0x1
   2c0fb:	48 8d 3d 8b 77 1b 00 	lea    rdi,[rip+0x1b778b]        # 1e388d <parameter_set_rna_turner2004+0x5dd6d>
   2c102:	e8 c9 79 fd ff       	call   3ad0 <fwrite@plt>
   2c107:	48 8b 05 12 20 22 00 	mov    rax,QWORD PTR [rip+0x222012]        # 24e120 <stderr@@GLIBC_2.2.5>
   2c10e:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
   2c112:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
   2c116:	48 89 ce             	mov    rsi,rcx
   2c119:	48 89 c7             	mov    rdi,rax
   2c11c:	e8 df 77 fd ff       	call   3900 <vfprintf@plt>
   2c121:	48 8b 05 f8 1f 22 00 	mov    rax,QWORD PTR [rip+0x221ff8]        # 24e120 <stderr@@GLIBC_2.2.5>
   2c128:	48 89 c1             	mov    rcx,rax
   2c12b:	ba 05 00 00 00       	mov    edx,0x5
   2c130:	be 01 00 00 00       	mov    esi,0x1
   2c135:	48 8d 3d 68 77 1b 00 	lea    rdi,[rip+0x1b7768]        # 1e38a4 <parameter_set_rna_turner2004+0x5dd84>
   2c13c:	e8 8f 79 fd ff       	call   3ad0 <fwrite@plt>
   2c141:	eb 4e                	jmp    2c191 <vrna_message_verror+0xd8>
   2c143:	48 8b 05 d6 1f 22 00 	mov    rax,QWORD PTR [rip+0x221fd6]        # 24e120 <stderr@@GLIBC_2.2.5>
   2c14a:	48 89 c1             	mov    rcx,rax
   2c14d:	ba 07 00 00 00       	mov    edx,0x7
   2c152:	be 01 00 00 00       	mov    esi,0x1
   2c157:	48 8d 3d 4c 77 1b 00 	lea    rdi,[rip+0x1b774c]        # 1e38aa <parameter_set_rna_turner2004+0x5dd8a>
   2c15e:	e8 6d 79 fd ff       	call   3ad0 <fwrite@plt>
   2c163:	48 8b 05 b6 1f 22 00 	mov    rax,QWORD PTR [rip+0x221fb6]        # 24e120 <stderr@@GLIBC_2.2.5>
   2c16a:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
   2c16e:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
   2c172:	48 89 ce             	mov    rsi,rcx
   2c175:	48 89 c7             	mov    rdi,rax
   2c178:	e8 83 77 fd ff       	call   3900 <vfprintf@plt>
   2c17d:	48 8b 05 9c 1f 22 00 	mov    rax,QWORD PTR [rip+0x221f9c]        # 24e120 <stderr@@GLIBC_2.2.5>
   2c184:	48 89 c6             	mov    rsi,rax
   2c187:	bf 0a 00 00 00       	mov    edi,0xa
   2c18c:	e8 4f 77 fd ff       	call   38e0 <fputc@plt>
   2c191:	bf 01 00 00 00       	mov    edi,0x1
   2c196:	e8 25 77 fd ff       	call   38c0 <exit@plt>

000000000002c19b <vrna_message_warning>:
   2c19b:	f3 0f 1e fa          	endbr64 
   2c19f:	55                   	push   rbp
   2c1a0:	48 89 e5             	mov    rbp,rsp
   2c1a3:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
   2c1aa:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
   2c1b1:	48 89 b5 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rsi
   2c1b8:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
   2c1bf:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
   2c1c6:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
   2c1cd:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
   2c1d4:	84 c0                	test   al,al
   2c1d6:	74 20                	je     2c1f8 <vrna_message_warning+0x5d>
   2c1d8:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
   2c1dc:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
   2c1e0:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
   2c1e4:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
   2c1e8:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
   2c1ec:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
   2c1f0:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
   2c1f4:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
   2c1f8:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   2c201:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
   2c208:	31 c0                	xor    eax,eax
   2c20a:	c7 85 30 ff ff ff 08 00 00 00 	mov    DWORD PTR [rbp-0xd0],0x8
   2c214:	c7 85 34 ff ff ff 30 00 00 00 	mov    DWORD PTR [rbp-0xcc],0x30
   2c21e:	48 8d 45 10          	lea    rax,[rbp+0x10]
   2c222:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
   2c229:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
   2c230:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
   2c237:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
   2c23e:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
   2c245:	48 89 d6             	mov    rsi,rdx
   2c248:	48 89 c7             	mov    rdi,rax
   2c24b:	e8 1a 00 00 00       	call   2c26a <vrna_message_vwarning>
   2c250:	90                   	nop
   2c251:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   2c258:	64 48 33 04 25 28 00 00 00 	xor    rax,QWORD PTR fs:0x28
   2c261:	74 05                	je     2c268 <vrna_message_warning+0xcd>
   2c263:	e8 f8 75 fd ff       	call   3860 <__stack_chk_fail@plt>
   2c268:	c9                   	leave  
   2c269:	c3                   	ret    

000000000002c26a <vrna_message_vwarning>:
   2c26a:	f3 0f 1e fa          	endbr64 
   2c26e:	55                   	push   rbp
   2c26f:	48 89 e5             	mov    rbp,rsp
   2c272:	48 83 ec 10          	sub    rsp,0x10
   2c276:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   2c27a:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
   2c27e:	48 8b 05 9b 1e 22 00 	mov    rax,QWORD PTR [rip+0x221e9b]        # 24e120 <stderr@@GLIBC_2.2.5>
   2c285:	48 89 c7             	mov    rdi,rax
   2c288:	e8 b3 75 fd ff       	call   3840 <fileno@plt>
   2c28d:	89 c7                	mov    edi,eax
   2c28f:	e8 8c 77 fd ff       	call   3a20 <isatty@plt>
   2c294:	85 c0                	test   eax,eax
   2c296:	74 5c                	je     2c2f4 <vrna_message_vwarning+0x8a>
   2c298:	48 8b 05 81 1e 22 00 	mov    rax,QWORD PTR [rip+0x221e81]        # 24e120 <stderr@@GLIBC_2.2.5>
   2c29f:	48 89 c1             	mov    rcx,rax
   2c2a2:	ba 18 00 00 00       	mov    edx,0x18
   2c2a7:	be 01 00 00 00       	mov    esi,0x1
   2c2ac:	48 8d 3d ff 75 1b 00 	lea    rdi,[rip+0x1b75ff]        # 1e38b2 <parameter_set_rna_turner2004+0x5dd92>
   2c2b3:	e8 18 78 fd ff       	call   3ad0 <fwrite@plt>
   2c2b8:	48 8b 05 61 1e 22 00 	mov    rax,QWORD PTR [rip+0x221e61]        # 24e120 <stderr@@GLIBC_2.2.5>
   2c2bf:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
   2c2c3:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
   2c2c7:	48 89 ce             	mov    rsi,rcx
   2c2ca:	48 89 c7             	mov    rdi,rax
   2c2cd:	e8 2e 76 fd ff       	call   3900 <vfprintf@plt>
   2c2d2:	48 8b 05 47 1e 22 00 	mov    rax,QWORD PTR [rip+0x221e47]        # 24e120 <stderr@@GLIBC_2.2.5>
   2c2d9:	48 89 c1             	mov    rcx,rax
   2c2dc:	ba 05 00 00 00       	mov    edx,0x5
   2c2e1:	be 01 00 00 00       	mov    esi,0x1
   2c2e6:	48 8d 3d b7 75 1b 00 	lea    rdi,[rip+0x1b75b7]        # 1e38a4 <parameter_set_rna_turner2004+0x5dd84>
   2c2ed:	e8 de 77 fd ff       	call   3ad0 <fwrite@plt>
   2c2f2:	eb 4e                	jmp    2c342 <vrna_message_vwarning+0xd8>
   2c2f4:	48 8b 05 25 1e 22 00 	mov    rax,QWORD PTR [rip+0x221e25]        # 24e120 <stderr@@GLIBC_2.2.5>
   2c2fb:	48 89 c1             	mov    rcx,rax
   2c2fe:	ba 09 00 00 00       	mov    edx,0x9
   2c303:	be 01 00 00 00       	mov    esi,0x1
   2c308:	48 8d 3d bc 75 1b 00 	lea    rdi,[rip+0x1b75bc]        # 1e38cb <parameter_set_rna_turner2004+0x5ddab>
   2c30f:	e8 bc 77 fd ff       	call   3ad0 <fwrite@plt>
   2c314:	48 8b 05 05 1e 22 00 	mov    rax,QWORD PTR [rip+0x221e05]        # 24e120 <stderr@@GLIBC_2.2.5>
   2c31b:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
   2c31f:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
   2c323:	48 89 ce             	mov    rsi,rcx
   2c326:	48 89 c7             	mov    rdi,rax
   2c329:	e8 d2 75 fd ff       	call   3900 <vfprintf@plt>
   2c32e:	48 8b 05 eb 1d 22 00 	mov    rax,QWORD PTR [rip+0x221deb]        # 24e120 <stderr@@GLIBC_2.2.5>
   2c335:	48 89 c6             	mov    rsi,rax
   2c338:	bf 0a 00 00 00       	mov    edi,0xa
   2c33d:	e8 9e 75 fd ff       	call   38e0 <fputc@plt>
   2c342:	90                   	nop
   2c343:	c9                   	leave  
   2c344:	c3                   	ret    

000000000002c345 <vrna_message_info>:
   2c345:	f3 0f 1e fa          	endbr64 
   2c349:	55                   	push   rbp
   2c34a:	48 89 e5             	mov    rbp,rsp
   2c34d:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
   2c354:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
   2c35b:	48 89 b5 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rsi
   2c362:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
   2c369:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
   2c370:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
   2c377:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
   2c37e:	84 c0                	test   al,al
   2c380:	74 20                	je     2c3a2 <vrna_message_info+0x5d>
   2c382:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
   2c386:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
   2c38a:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
   2c38e:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
   2c392:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
   2c396:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
   2c39a:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
   2c39e:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
   2c3a2:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   2c3ab:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
   2c3b2:	31 c0                	xor    eax,eax
   2c3b4:	c7 85 30 ff ff ff 10 00 00 00 	mov    DWORD PTR [rbp-0xd0],0x10
   2c3be:	c7 85 34 ff ff ff 30 00 00 00 	mov    DWORD PTR [rbp-0xcc],0x30
   2c3c8:	48 8d 45 10          	lea    rax,[rbp+0x10]
   2c3cc:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
   2c3d3:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
   2c3da:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
   2c3e1:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
   2c3e8:	48 8b 8d 20 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xe0]
   2c3ef:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
   2c3f6:	48 89 ce             	mov    rsi,rcx
   2c3f9:	48 89 c7             	mov    rdi,rax
   2c3fc:	e8 1a 00 00 00       	call   2c41b <vrna_message_vinfo>
   2c401:	90                   	nop
   2c402:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   2c409:	64 48 33 04 25 28 00 00 00 	xor    rax,QWORD PTR fs:0x28
   2c412:	74 05                	je     2c419 <vrna_message_info+0xd4>
   2c414:	e8 47 74 fd ff       	call   3860 <__stack_chk_fail@plt>
   2c419:	c9                   	leave  
   2c41a:	c3                   	ret    

000000000002c41b <vrna_message_vinfo>:
   2c41b:	f3 0f 1e fa          	endbr64 
   2c41f:	55                   	push   rbp
   2c420:	48 89 e5             	mov    rbp,rsp
   2c423:	48 83 ec 20          	sub    rsp,0x20
   2c427:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   2c42b:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
   2c42f:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
   2c433:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
   2c438:	75 0b                	jne    2c445 <vrna_message_vinfo+0x2a>
   2c43a:	48 8b 05 7f 1b 22 00 	mov    rax,QWORD PTR [rip+0x221b7f]        # 24dfc0 <stdout@@GLIBC_2.2.5>
   2c441:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2c445:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2c449:	48 89 c7             	mov    rdi,rax
   2c44c:	e8 ef 73 fd ff       	call   3840 <fileno@plt>
   2c451:	89 c7                	mov    edi,eax
   2c453:	e8 c8 75 fd ff       	call   3a20 <isatty@plt>
   2c458:	85 c0                	test   eax,eax
   2c45a:	74 53                	je     2c4af <vrna_message_vinfo+0x94>
   2c45c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2c460:	48 89 c1             	mov    rcx,rax
   2c463:	ba 07 00 00 00       	mov    edx,0x7
   2c468:	be 01 00 00 00       	mov    esi,0x1
   2c46d:	48 8d 3d 61 74 1b 00 	lea    rdi,[rip+0x1b7461]        # 1e38d5 <parameter_set_rna_turner2004+0x5ddb5>
   2c474:	e8 57 76 fd ff       	call   3ad0 <fwrite@plt>
   2c479:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
   2c47d:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
   2c481:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2c485:	48 89 ce             	mov    rsi,rcx
   2c488:	48 89 c7             	mov    rdi,rax
   2c48b:	e8 70 74 fd ff       	call   3900 <vfprintf@plt>
   2c490:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2c494:	48 89 c1             	mov    rcx,rax
   2c497:	ba 05 00 00 00       	mov    edx,0x5
   2c49c:	be 01 00 00 00       	mov    esi,0x1
   2c4a1:	48 8d 3d fc 73 1b 00 	lea    rdi,[rip+0x1b73fc]        # 1e38a4 <parameter_set_rna_turner2004+0x5dd84>
   2c4a8:	e8 23 76 fd ff       	call   3ad0 <fwrite@plt>
   2c4ad:	eb 28                	jmp    2c4d7 <vrna_message_vinfo+0xbc>
   2c4af:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
   2c4b3:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
   2c4b7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2c4bb:	48 89 ce             	mov    rsi,rcx
   2c4be:	48 89 c7             	mov    rdi,rax
   2c4c1:	e8 3a 74 fd ff       	call   3900 <vfprintf@plt>
   2c4c6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2c4ca:	48 89 c6             	mov    rsi,rax
   2c4cd:	bf 0a 00 00 00       	mov    edi,0xa
   2c4d2:	e8 09 74 fd ff       	call   38e0 <fputc@plt>
   2c4d7:	90                   	nop
   2c4d8:	c9                   	leave  
   2c4d9:	c3                   	ret    

000000000002c4da <vrna_init_rand>:
   2c4da:	f3 0f 1e fa          	endbr64 
   2c4de:	55                   	push   rbp
   2c4df:	48 89 e5             	mov    rbp,rsp
   2c4e2:	41 54                	push   r12
   2c4e4:	53                   	push   rbx
   2c4e5:	48 83 ec 10          	sub    rsp,0x10
   2c4e9:	e8 72 74 fd ff       	call   3960 <getpid@plt>
   2c4ee:	41 89 c4             	mov    r12d,eax
   2c4f1:	bf 00 00 00 00       	mov    edi,0x0
   2c4f6:	e8 c5 72 fd ff       	call   37c0 <time@plt>
   2c4fb:	89 c3                	mov    ebx,eax
   2c4fd:	e8 5e 72 fd ff       	call   3760 <clock@plt>
   2c502:	44 89 e2             	mov    edx,r12d
   2c505:	89 de                	mov    esi,ebx
   2c507:	89 c7                	mov    edi,eax
   2c509:	e8 6c 05 00 00       	call   2ca7a <rj_mix>
   2c50e:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
   2c511:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2c514:	66 89 05 77 cc 2b 00 	mov    WORD PTR [rip+0x2bcc77],ax        # 2e9192 <xsubi+0x4>
   2c51b:	0f b7 05 70 cc 2b 00 	movzx  eax,WORD PTR [rip+0x2bcc70]        # 2e9192 <xsubi+0x4>
   2c522:	66 89 05 67 cc 2b 00 	mov    WORD PTR [rip+0x2bcc67],ax        # 2e9190 <xsubi+0x2>
   2c529:	0f b7 05 60 cc 2b 00 	movzx  eax,WORD PTR [rip+0x2bcc60]        # 2e9190 <xsubi+0x2>
   2c530:	66 89 05 57 cc 2b 00 	mov    WORD PTR [rip+0x2bcc57],ax        # 2e918e <xsubi>
   2c537:	0f b7 05 52 cc 2b 00 	movzx  eax,WORD PTR [rip+0x2bcc52]        # 2e9190 <xsubi+0x2>
   2c53e:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
   2c541:	c1 ea 06             	shr    edx,0x6
   2c544:	01 d0                	add    eax,edx
   2c546:	66 89 05 43 cc 2b 00 	mov    WORD PTR [rip+0x2bcc43],ax        # 2e9190 <xsubi+0x2>
   2c54d:	0f b7 05 3e cc 2b 00 	movzx  eax,WORD PTR [rip+0x2bcc3e]        # 2e9192 <xsubi+0x4>
   2c554:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
   2c557:	c1 ea 0c             	shr    edx,0xc
   2c55a:	01 d0                	add    eax,edx
   2c55c:	66 89 05 2f cc 2b 00 	mov    WORD PTR [rip+0x2bcc2f],ax        # 2e9192 <xsubi+0x4>
   2c563:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2c566:	89 c7                	mov    edi,eax
   2c568:	e8 83 72 fd ff       	call   37f0 <srand@plt>
   2c56d:	90                   	nop
   2c56e:	48 83 c4 10          	add    rsp,0x10
   2c572:	5b                   	pop    rbx
   2c573:	41 5c                	pop    r12
   2c575:	5d                   	pop    rbp
   2c576:	c3                   	ret    

000000000002c577 <vrna_urn>:
   2c577:	f3 0f 1e fa          	endbr64 
   2c57b:	55                   	push   rbp
   2c57c:	48 89 e5             	mov    rbp,rsp
   2c57f:	e8 9c 70 fd ff       	call   3620 <rand@plt>
   2c584:	f2 0f 2a c0          	cvtsi2sd xmm0,eax
   2c588:	f2 0f 10 0d f0 73 1b 00 	movsd  xmm1,QWORD PTR [rip+0x1b73f0]        # 1e3980 <parameter_set_rna_turner2004+0x5de60>
   2c590:	f2 0f 5e c1          	divsd  xmm0,xmm1
   2c594:	5d                   	pop    rbp
   2c595:	c3                   	ret    

000000000002c596 <vrna_int_urn>:
   2c596:	f3 0f 1e fa          	endbr64 
   2c59a:	55                   	push   rbp
   2c59b:	48 89 e5             	mov    rbp,rsp
   2c59e:	48 83 ec 10          	sub    rsp,0x10
   2c5a2:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
   2c5a5:	89 75 f8             	mov    DWORD PTR [rbp-0x8],esi
   2c5a8:	e8 ca ff ff ff       	call   2c577 <vrna_urn>
   2c5ad:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2c5b0:	2b 45 fc             	sub    eax,DWORD PTR [rbp-0x4]
   2c5b3:	83 c0 01             	add    eax,0x1
   2c5b6:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   2c5ba:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   2c5be:	f2 0f 2c d0          	cvttsd2si edx,xmm0
   2c5c2:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2c5c5:	01 d0                	add    eax,edx
   2c5c7:	c9                   	leave  
   2c5c8:	c3                   	ret    

000000000002c5c9 <vrna_time_stamp>:
   2c5c9:	f3 0f 1e fa          	endbr64 
   2c5cd:	55                   	push   rbp
   2c5ce:	48 89 e5             	mov    rbp,rsp
   2c5d1:	48 83 ec 10          	sub    rsp,0x10
   2c5d5:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   2c5de:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2c5e2:	31 c0                	xor    eax,eax
   2c5e4:	bf 00 00 00 00       	mov    edi,0x0
   2c5e9:	e8 d2 71 fd ff       	call   37c0 <time@plt>
   2c5ee:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
   2c5f2:	48 8d 45 f0          	lea    rax,[rbp-0x10]
   2c5f6:	48 89 c7             	mov    rdi,rax
   2c5f9:	e8 72 70 fd ff       	call   3670 <ctime@plt>
   2c5fe:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   2c602:	64 48 33 14 25 28 00 00 00 	xor    rdx,QWORD PTR fs:0x28
   2c60b:	74 05                	je     2c612 <vrna_time_stamp+0x49>
   2c60d:	e8 4e 72 fd ff       	call   3860 <__stack_chk_fail@plt>
   2c612:	c9                   	leave  
   2c613:	c3                   	ret    

000000000002c614 <get_input_line>:
   2c614:	f3 0f 1e fa          	endbr64 
   2c618:	55                   	push   rbp
   2c619:	48 89 e5             	mov    rbp,rsp
   2c61c:	48 83 ec 30          	sub    rsp,0x30
   2c620:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
   2c624:	89 75 d4             	mov    DWORD PTR [rbp-0x2c],esi
   2c627:	48 8b 05 a2 19 22 00 	mov    rax,QWORD PTR [rip+0x2219a2]        # 24dfd0 <stdin@@GLIBC_2.2.5>
   2c62e:	48 89 c7             	mov    rdi,rax
   2c631:	e8 3b 30 00 00       	call   2f671 <vrna_read_line>
   2c636:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2c63a:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
   2c63f:	75 0a                	jne    2c64b <get_input_line+0x37>
   2c641:	b8 01 00 00 00       	mov    eax,0x1
   2c646:	e9 e4 01 00 00       	jmp    2c82f <get_input_line+0x21b>
   2c64b:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   2c64e:	25 80 00 00 00       	and    eax,0x80
   2c653:	85 c0                	test   eax,eax
   2c655:	75 48                	jne    2c69f <get_input_line+0x8b>
   2c657:	eb 30                	jmp    2c689 <get_input_line+0x75>
   2c659:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2c65d:	48 89 c7             	mov    rdi,rax
   2c660:	e8 4b 72 fd ff       	call   38b0 <free@plt>
   2c665:	48 8b 05 64 19 22 00 	mov    rax,QWORD PTR [rip+0x221964]        # 24dfd0 <stdin@@GLIBC_2.2.5>
   2c66c:	48 89 c7             	mov    rdi,rax
   2c66f:	e8 fd 2f 00 00       	call   2f671 <vrna_read_line>
   2c674:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2c678:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
   2c67d:	75 0a                	jne    2c689 <get_input_line+0x75>
   2c67f:	b8 01 00 00 00       	mov    eax,0x1
   2c684:	e9 a6 01 00 00       	jmp    2c82f <get_input_line+0x21b>
   2c689:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2c68d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2c690:	3c 2a                	cmp    al,0x2a
   2c692:	74 c5                	je     2c659 <get_input_line+0x45>
   2c694:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2c698:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2c69b:	84 c0                	test   al,al
   2c69d:	74 ba                	je     2c659 <get_input_line+0x45>
   2c69f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2c6a3:	48 89 c7             	mov    rdi,rax
   2c6a6:	e8 e5 6f fd ff       	call   3690 <strlen@plt>
   2c6ab:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
   2c6ae:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2c6b2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2c6b5:	3c 40                	cmp    al,0x40
   2c6b7:	75 16                	jne    2c6cf <get_input_line+0xbb>
   2c6b9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2c6bd:	48 89 c7             	mov    rdi,rax
   2c6c0:	e8 eb 71 fd ff       	call   38b0 <free@plt>
   2c6c5:	b8 02 00 00 00       	mov    eax,0x2
   2c6ca:	e9 60 01 00 00       	jmp    2c82f <get_input_line+0x21b>
   2c6cf:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   2c6d2:	25 00 01 00 00       	and    eax,0x100
   2c6d7:	85 c0                	test   eax,eax
   2c6d9:	75 62                	jne    2c73d <get_input_line+0x129>
   2c6db:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
   2c6de:	83 e8 01             	sub    eax,0x1
   2c6e1:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
   2c6e4:	eb 2f                	jmp    2c715 <get_input_line+0x101>
   2c6e6:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2c6e9:	48 63 d0             	movsxd rdx,eax
   2c6ec:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2c6f0:	48 01 d0             	add    rax,rdx
   2c6f3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2c6f6:	3c 20                	cmp    al,0x20
   2c6f8:	74 16                	je     2c710 <get_input_line+0xfc>
   2c6fa:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2c6fd:	48 63 d0             	movsxd rdx,eax
   2c700:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2c704:	48 01 d0             	add    rax,rdx
   2c707:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2c70a:	3c 09                	cmp    al,0x9
   2c70c:	75 0f                	jne    2c71d <get_input_line+0x109>
   2c70e:	eb 01                	jmp    2c711 <get_input_line+0xfd>
   2c710:	90                   	nop
   2c711:	83 6d ec 01          	sub    DWORD PTR [rbp-0x14],0x1
   2c715:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
   2c719:	79 cb                	jns    2c6e6 <get_input_line+0xd2>
   2c71b:	eb 01                	jmp    2c71e <get_input_line+0x10a>
   2c71d:	90                   	nop
   2c71e:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
   2c722:	78 0a                	js     2c72e <get_input_line+0x11a>
   2c724:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2c727:	83 c0 01             	add    eax,0x1
   2c72a:	48 98                	cdqe   
   2c72c:	eb 05                	jmp    2c733 <get_input_line+0x11f>
   2c72e:	b8 00 00 00 00       	mov    eax,0x0
   2c733:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   2c737:	48 01 d0             	add    rax,rdx
   2c73a:	c6 00 00             	mov    BYTE PTR [rax],0x0
   2c73d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2c741:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2c744:	3c 3e                	cmp    al,0x3e
   2c746:	0f 85 bc 00 00 00    	jne    2c808 <get_input_line+0x1f4>
   2c74c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2c750:	48 89 c7             	mov    rdi,rax
   2c753:	e8 38 6f fd ff       	call   3690 <strlen@plt>
   2c758:	83 c0 01             	add    eax,0x1
   2c75b:	89 c7                	mov    edi,eax
   2c75d:	e8 5f f7 ff ff       	call   2bec1 <vrna_alloc>
   2c762:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
   2c766:	48 89 02             	mov    QWORD PTR [rdx],rax
   2c769:	c7 45 f4 08 00 00 00 	mov    DWORD PTR [rbp-0xc],0x8
   2c770:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2c774:	48 8b 10             	mov    rdx,QWORD PTR [rax]
   2c777:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2c77b:	48 8d 35 5b 71 1b 00 	lea    rsi,[rip+0x1b715b]        # 1e38dd <parameter_set_rna_turner2004+0x5ddbd>
   2c782:	48 89 c7             	mov    rdi,rax
   2c785:	b8 00 00 00 00       	mov    eax,0x0
   2c78a:	e8 71 70 fd ff       	call   3800 <__isoc99_sscanf@plt>
   2c78f:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
   2c792:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
   2c796:	7e 43                	jle    2c7db <get_input_line+0x1c7>
   2c798:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2c79c:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2c79f:	48 89 c7             	mov    rdi,rax
   2c7a2:	e8 e9 6e fd ff       	call   3690 <strlen@plt>
   2c7a7:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
   2c7aa:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2c7ad:	83 c0 01             	add    eax,0x1
   2c7b0:	89 c2                	mov    edx,eax
   2c7b2:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2c7b6:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2c7b9:	89 d6                	mov    esi,edx
   2c7bb:	48 89 c7             	mov    rdi,rax
   2c7be:	e8 86 f7 ff ff       	call   2bf49 <vrna_realloc>
   2c7c3:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
   2c7c7:	48 89 02             	mov    QWORD PTR [rdx],rax
   2c7ca:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2c7ce:	48 89 c7             	mov    rdi,rax
   2c7d1:	e8 da 70 fd ff       	call   38b0 <free@plt>
   2c7d6:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2c7d9:	eb 54                	jmp    2c82f <get_input_line+0x21b>
   2c7db:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2c7df:	48 89 c7             	mov    rdi,rax
   2c7e2:	e8 c9 70 fd ff       	call   38b0 <free@plt>
   2c7e7:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2c7eb:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2c7ee:	48 89 c7             	mov    rdi,rax
   2c7f1:	e8 ba 70 fd ff       	call   38b0 <free@plt>
   2c7f6:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2c7fa:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
   2c801:	b8 01 00 00 00       	mov    eax,0x1
   2c806:	eb 27                	jmp    2c82f <get_input_line+0x21b>
   2c808:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2c80c:	48 89 c7             	mov    rdi,rax
   2c80f:	e8 f5 e8 ff ff       	call   2b109 <strdup>
   2c814:	48 89 c2             	mov    rdx,rax
   2c817:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2c81b:	48 89 10             	mov    QWORD PTR [rax],rdx
   2c81e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2c822:	48 89 c7             	mov    rdi,rax
   2c825:	e8 86 70 fd ff       	call   38b0 <free@plt>
   2c82a:	b8 04 00 00 00       	mov    eax,0x4
   2c82f:	c9                   	leave  
   2c830:	c3                   	ret    

000000000002c831 <vrna_message_input_seq_simple>:
   2c831:	f3 0f 1e fa          	endbr64 
   2c835:	55                   	push   rbp
   2c836:	48 89 e5             	mov    rbp,rsp
   2c839:	48 8d 3d a8 70 1b 00 	lea    rdi,[rip+0x1b70a8]        # 1e38e8 <parameter_set_rna_turner2004+0x5ddc8>
   2c840:	e8 03 00 00 00       	call   2c848 <vrna_message_input_seq>
   2c845:	90                   	nop
   2c846:	5d                   	pop    rbp
   2c847:	c3                   	ret    

000000000002c848 <vrna_message_input_seq>:
   2c848:	f3 0f 1e fa          	endbr64 
   2c84c:	55                   	push   rbp
   2c84d:	48 89 e5             	mov    rbp,rsp
   2c850:	48 83 ec 10          	sub    rsp,0x10
   2c854:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   2c858:	48 8b 05 61 17 22 00 	mov    rax,QWORD PTR [rip+0x221761]        # 24dfc0 <stdout@@GLIBC_2.2.5>
   2c85f:	48 89 c7             	mov    rdi,rax
   2c862:	e8 d9 6f fd ff       	call   3840 <fileno@plt>
   2c867:	89 c7                	mov    edi,eax
   2c869:	e8 b2 71 fd ff       	call   3a20 <isatty@plt>
   2c86e:	85 c0                	test   eax,eax
   2c870:	74 39                	je     2c8ab <vrna_message_input_seq+0x63>
   2c872:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2c876:	48 89 c6             	mov    rsi,rax
   2c879:	48 8d 3d 8b 70 1b 00 	lea    rdi,[rip+0x1b708b]        # 1e390b <parameter_set_rna_turner2004+0x5ddeb>
   2c880:	b8 00 00 00 00       	mov    eax,0x0
   2c885:	e8 26 6d fd ff       	call   35b0 <printf@plt>
   2c88a:	48 8d 15 af 0d 22 00 	lea    rdx,[rip+0x220daf]        # 24d640 <scale2>
   2c891:	48 8d 35 68 0d 22 00 	lea    rsi,[rip+0x220d68]        # 24d600 <scale1>
   2c898:	48 8d 3d 85 70 1b 00 	lea    rdi,[rip+0x1b7085]        # 1e3924 <parameter_set_rna_turner2004+0x5de04>
   2c89f:	b8 00 00 00 00       	mov    eax,0x0
   2c8a4:	e8 07 6d fd ff       	call   35b0 <printf@plt>
   2c8a9:	eb 37                	jmp    2c8e2 <vrna_message_input_seq+0x9a>
   2c8ab:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2c8af:	48 89 c6             	mov    rsi,rax
   2c8b2:	48 8d 3d 79 70 1b 00 	lea    rdi,[rip+0x1b7079]        # 1e3932 <parameter_set_rna_turner2004+0x5de12>
   2c8b9:	b8 00 00 00 00       	mov    eax,0x0
   2c8be:	e8 ed 6c fd ff       	call   35b0 <printf@plt>
   2c8c3:	48 8d 15 76 0d 22 00 	lea    rdx,[rip+0x220d76]        # 24d640 <scale2>
   2c8ca:	48 8d 35 2f 0d 22 00 	lea    rsi,[rip+0x220d2f]        # 24d600 <scale1>
   2c8d1:	48 8d 3d 6a 70 1b 00 	lea    rdi,[rip+0x1b706a]        # 1e3942 <parameter_set_rna_turner2004+0x5de22>
   2c8d8:	b8 00 00 00 00       	mov    eax,0x0
   2c8dd:	e8 ce 6c fd ff       	call   35b0 <printf@plt>
   2c8e2:	48 8b 05 d7 16 22 00 	mov    rax,QWORD PTR [rip+0x2216d7]        # 24dfc0 <stdout@@GLIBC_2.2.5>
   2c8e9:	48 89 c7             	mov    rdi,rax
   2c8ec:	e8 9f 6f fd ff       	call   3890 <fflush@plt>
   2c8f1:	90                   	nop
   2c8f2:	c9                   	leave  
   2c8f3:	c3                   	ret    

000000000002c8f4 <vrna_message_input_msa>:
   2c8f4:	f3 0f 1e fa          	endbr64 
   2c8f8:	55                   	push   rbp
   2c8f9:	48 89 e5             	mov    rbp,rsp
   2c8fc:	48 83 ec 10          	sub    rsp,0x10
   2c900:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   2c904:	48 8b 05 b5 16 22 00 	mov    rax,QWORD PTR [rip+0x2216b5]        # 24dfc0 <stdout@@GLIBC_2.2.5>
   2c90b:	48 89 c7             	mov    rdi,rax
   2c90e:	e8 2d 6f fd ff       	call   3840 <fileno@plt>
   2c913:	89 c7                	mov    edi,eax
   2c915:	e8 06 71 fd ff       	call   3a20 <isatty@plt>
   2c91a:	85 c0                	test   eax,eax
   2c91c:	74 39                	je     2c957 <vrna_message_input_msa+0x63>
   2c91e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2c922:	48 89 c6             	mov    rsi,rax
   2c925:	48 8d 3d 1c 70 1b 00 	lea    rdi,[rip+0x1b701c]        # 1e3948 <parameter_set_rna_turner2004+0x5de28>
   2c92c:	b8 00 00 00 00       	mov    eax,0x0
   2c931:	e8 7a 6c fd ff       	call   35b0 <printf@plt>
   2c936:	48 8d 15 03 0d 22 00 	lea    rdx,[rip+0x220d03]        # 24d640 <scale2>
   2c93d:	48 8d 35 bc 0c 22 00 	lea    rsi,[rip+0x220cbc]        # 24d600 <scale1>
   2c944:	48 8d 3d d9 6f 1b 00 	lea    rdi,[rip+0x1b6fd9]        # 1e3924 <parameter_set_rna_turner2004+0x5de04>
   2c94b:	b8 00 00 00 00       	mov    eax,0x0
   2c950:	e8 5b 6c fd ff       	call   35b0 <printf@plt>
   2c955:	eb 37                	jmp    2c98e <vrna_message_input_msa+0x9a>
   2c957:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2c95b:	48 89 c6             	mov    rsi,rax
   2c95e:	48 8d 3d 01 70 1b 00 	lea    rdi,[rip+0x1b7001]        # 1e3966 <parameter_set_rna_turner2004+0x5de46>
   2c965:	b8 00 00 00 00       	mov    eax,0x0
   2c96a:	e8 41 6c fd ff       	call   35b0 <printf@plt>
   2c96f:	48 8d 15 ca 0c 22 00 	lea    rdx,[rip+0x220cca]        # 24d640 <scale2>
   2c976:	48 8d 35 83 0c 22 00 	lea    rsi,[rip+0x220c83]        # 24d600 <scale1>
   2c97d:	48 8d 3d be 6f 1b 00 	lea    rdi,[rip+0x1b6fbe]        # 1e3942 <parameter_set_rna_turner2004+0x5de22>
   2c984:	b8 00 00 00 00       	mov    eax,0x0
   2c989:	e8 22 6c fd ff       	call   35b0 <printf@plt>
   2c98e:	48 8b 05 2b 16 22 00 	mov    rax,QWORD PTR [rip+0x22162b]        # 24dfc0 <stdout@@GLIBC_2.2.5>
   2c995:	48 89 c7             	mov    rdi,rax
   2c998:	e8 f3 6e fd ff       	call   3890 <fflush@plt>
   2c99d:	90                   	nop
   2c99e:	c9                   	leave  
   2c99f:	c3                   	ret    

000000000002c9a0 <vrna_idx_row_wise>:
   2c9a0:	f3 0f 1e fa          	endbr64 
   2c9a4:	55                   	push   rbp
   2c9a5:	48 89 e5             	mov    rbp,rsp
   2c9a8:	48 83 ec 20          	sub    rsp,0x20
   2c9ac:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
   2c9af:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2c9b2:	83 c0 01             	add    eax,0x1
   2c9b5:	c1 e0 02             	shl    eax,0x2
   2c9b8:	89 c7                	mov    edi,eax
   2c9ba:	e8 02 f5 ff ff       	call   2bec1 <vrna_alloc>
   2c9bf:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2c9c3:	c7 45 f4 01 00 00 00 	mov    DWORD PTR [rbp-0xc],0x1
   2c9ca:	eb 40                	jmp    2ca0c <vrna_idx_row_wise+0x6c>
   2c9cc:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2c9cf:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
   2c9d2:	29 c2                	sub    edx,eax
   2c9d4:	89 d0                	mov    eax,edx
   2c9d6:	8d 48 01             	lea    ecx,[rax+0x1]
   2c9d9:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2c9dc:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
   2c9df:	29 c2                	sub    edx,eax
   2c9e1:	89 d0                	mov    eax,edx
   2c9e3:	0f af c1             	imul   eax,ecx
   2c9e6:	d1 e8                	shr    eax,1
   2c9e8:	89 c2                	mov    edx,eax
   2c9ea:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2c9ed:	01 d0                	add    eax,edx
   2c9ef:	8d 50 01             	lea    edx,[rax+0x1]
   2c9f2:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2c9f5:	48 98                	cdqe   
   2c9f7:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   2c9ff:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2ca03:	48 01 c8             	add    rax,rcx
   2ca06:	89 10                	mov    DWORD PTR [rax],edx
   2ca08:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
   2ca0c:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2ca0f:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
   2ca12:	73 b8                	jae    2c9cc <vrna_idx_row_wise+0x2c>
   2ca14:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2ca18:	c9                   	leave  
   2ca19:	c3                   	ret    

000000000002ca1a <vrna_idx_col_wise>:
   2ca1a:	f3 0f 1e fa          	endbr64 
   2ca1e:	55                   	push   rbp
   2ca1f:	48 89 e5             	mov    rbp,rsp
   2ca22:	48 83 ec 20          	sub    rsp,0x20
   2ca26:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
   2ca29:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2ca2c:	83 c0 01             	add    eax,0x1
   2ca2f:	c1 e0 02             	shl    eax,0x2
   2ca32:	89 c7                	mov    edi,eax
   2ca34:	e8 88 f4 ff ff       	call   2bec1 <vrna_alloc>
   2ca39:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2ca3d:	c7 45 f4 01 00 00 00 	mov    DWORD PTR [rbp-0xc],0x1
   2ca44:	eb 26                	jmp    2ca6c <vrna_idx_col_wise+0x52>
   2ca46:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2ca49:	83 e8 01             	sub    eax,0x1
   2ca4c:	0f af 45 f4          	imul   eax,DWORD PTR [rbp-0xc]
   2ca50:	d1 e8                	shr    eax,1
   2ca52:	89 c2                	mov    edx,eax
   2ca54:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2ca57:	48 8d 0c 85 00 00 00 00 	lea    rcx,[rax*4+0x0]
   2ca5f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2ca63:	48 01 c8             	add    rax,rcx
   2ca66:	89 10                	mov    DWORD PTR [rax],edx
   2ca68:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
   2ca6c:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2ca6f:	3b 45 ec             	cmp    eax,DWORD PTR [rbp-0x14]
   2ca72:	76 d2                	jbe    2ca46 <vrna_idx_col_wise+0x2c>
   2ca74:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2ca78:	c9                   	leave  
   2ca79:	c3                   	ret    

000000000002ca7a <rj_mix>:
   2ca7a:	f3 0f 1e fa          	endbr64 
   2ca7e:	55                   	push   rbp
   2ca7f:	48 89 e5             	mov    rbp,rsp
   2ca82:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
   2ca85:	89 75 f8             	mov    DWORD PTR [rbp-0x8],esi
   2ca88:	89 55 f4             	mov    DWORD PTR [rbp-0xc],edx
   2ca8b:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2ca8e:	29 45 fc             	sub    DWORD PTR [rbp-0x4],eax
   2ca91:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2ca94:	29 45 fc             	sub    DWORD PTR [rbp-0x4],eax
   2ca97:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2ca9a:	c1 e8 0d             	shr    eax,0xd
   2ca9d:	31 45 fc             	xor    DWORD PTR [rbp-0x4],eax
   2caa0:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2caa3:	29 45 f8             	sub    DWORD PTR [rbp-0x8],eax
   2caa6:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2caa9:	29 45 f8             	sub    DWORD PTR [rbp-0x8],eax
   2caac:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2caaf:	c1 e0 08             	shl    eax,0x8
   2cab2:	31 45 f8             	xor    DWORD PTR [rbp-0x8],eax
   2cab5:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2cab8:	29 45 f4             	sub    DWORD PTR [rbp-0xc],eax
   2cabb:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2cabe:	29 45 f4             	sub    DWORD PTR [rbp-0xc],eax
   2cac1:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2cac4:	c1 e8 0d             	shr    eax,0xd
   2cac7:	31 45 f4             	xor    DWORD PTR [rbp-0xc],eax
   2caca:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2cacd:	29 45 fc             	sub    DWORD PTR [rbp-0x4],eax
   2cad0:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2cad3:	29 45 fc             	sub    DWORD PTR [rbp-0x4],eax
   2cad6:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2cad9:	c1 e8 0c             	shr    eax,0xc
   2cadc:	31 45 fc             	xor    DWORD PTR [rbp-0x4],eax
   2cadf:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2cae2:	29 45 f8             	sub    DWORD PTR [rbp-0x8],eax
   2cae5:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2cae8:	29 45 f8             	sub    DWORD PTR [rbp-0x8],eax
   2caeb:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2caee:	c1 e0 10             	shl    eax,0x10
   2caf1:	31 45 f8             	xor    DWORD PTR [rbp-0x8],eax
   2caf4:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2caf7:	29 45 f4             	sub    DWORD PTR [rbp-0xc],eax
   2cafa:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2cafd:	29 45 f4             	sub    DWORD PTR [rbp-0xc],eax
   2cb00:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2cb03:	c1 e8 05             	shr    eax,0x5
   2cb06:	31 45 f4             	xor    DWORD PTR [rbp-0xc],eax
   2cb09:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2cb0c:	29 45 fc             	sub    DWORD PTR [rbp-0x4],eax
   2cb0f:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2cb12:	29 45 fc             	sub    DWORD PTR [rbp-0x4],eax
   2cb15:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2cb18:	c1 e8 03             	shr    eax,0x3
   2cb1b:	31 45 fc             	xor    DWORD PTR [rbp-0x4],eax
   2cb1e:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2cb21:	29 45 f8             	sub    DWORD PTR [rbp-0x8],eax
   2cb24:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2cb27:	29 45 f8             	sub    DWORD PTR [rbp-0x8],eax
   2cb2a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2cb2d:	c1 e0 0a             	shl    eax,0xa
   2cb30:	31 45 f8             	xor    DWORD PTR [rbp-0x8],eax
   2cb33:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2cb36:	29 45 f4             	sub    DWORD PTR [rbp-0xc],eax
   2cb39:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2cb3c:	29 45 f4             	sub    DWORD PTR [rbp-0xc],eax
   2cb3f:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2cb42:	c1 e8 0f             	shr    eax,0xf
   2cb45:	31 45 f4             	xor    DWORD PTR [rbp-0xc],eax
   2cb48:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2cb4b:	5d                   	pop    rbp
   2cb4c:	c3                   	ret    

000000000002cb4d <get_iindx>:
   2cb4d:	f3 0f 1e fa          	endbr64 
   2cb51:	55                   	push   rbp
   2cb52:	48 89 e5             	mov    rbp,rsp
   2cb55:	48 83 ec 10          	sub    rsp,0x10
   2cb59:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
   2cb5c:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2cb5f:	89 c7                	mov    edi,eax
   2cb61:	e8 3a fe ff ff       	call   2c9a0 <vrna_idx_row_wise>
   2cb66:	c9                   	leave  
   2cb67:	c3                   	ret    

000000000002cb68 <get_indx>:
   2cb68:	f3 0f 1e fa          	endbr64 
   2cb6c:	55                   	push   rbp
   2cb6d:	48 89 e5             	mov    rbp,rsp
   2cb70:	48 83 ec 10          	sub    rsp,0x10
   2cb74:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
   2cb77:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2cb7a:	89 c7                	mov    edi,eax
   2cb7c:	e8 99 fe ff ff       	call   2ca1a <vrna_idx_col_wise>
   2cb81:	c9                   	leave  
   2cb82:	c3                   	ret    

000000000002cb83 <print_tty_input_seq>:
   2cb83:	f3 0f 1e fa          	endbr64 
   2cb87:	55                   	push   rbp
   2cb88:	48 89 e5             	mov    rbp,rsp
   2cb8b:	e8 a1 fc ff ff       	call   2c831 <vrna_message_input_seq_simple>
   2cb90:	90                   	nop
   2cb91:	5d                   	pop    rbp
   2cb92:	c3                   	ret    

000000000002cb93 <print_tty_input_seq_str>:
   2cb93:	f3 0f 1e fa          	endbr64 
   2cb97:	55                   	push   rbp
   2cb98:	48 89 e5             	mov    rbp,rsp
   2cb9b:	48 83 ec 10          	sub    rsp,0x10
   2cb9f:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   2cba3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2cba7:	48 89 c7             	mov    rdi,rax
   2cbaa:	e8 99 fc ff ff       	call   2c848 <vrna_message_input_seq>
   2cbaf:	90                   	nop
   2cbb0:	c9                   	leave  
   2cbb1:	c3                   	ret    

000000000002cbb2 <warn_user>:
   2cbb2:	f3 0f 1e fa          	endbr64 
   2cbb6:	55                   	push   rbp
   2cbb7:	48 89 e5             	mov    rbp,rsp
   2cbba:	48 83 ec 10          	sub    rsp,0x10
   2cbbe:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   2cbc2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2cbc6:	48 89 c7             	mov    rdi,rax
   2cbc9:	b8 00 00 00 00       	mov    eax,0x0
   2cbce:	e8 c8 f5 ff ff       	call   2c19b <vrna_message_warning>
   2cbd3:	90                   	nop
   2cbd4:	c9                   	leave  
   2cbd5:	c3                   	ret    

000000000002cbd6 <nrerror>:
   2cbd6:	f3 0f 1e fa          	endbr64 
   2cbda:	55                   	push   rbp
   2cbdb:	48 89 e5             	mov    rbp,rsp
   2cbde:	48 83 ec 10          	sub    rsp,0x10
   2cbe2:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   2cbe6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2cbea:	48 89 c7             	mov    rdi,rax
   2cbed:	b8 00 00 00 00       	mov    eax,0x0
   2cbf2:	e8 f3 f3 ff ff       	call   2bfea <vrna_message_error>
   2cbf7:	90                   	nop
   2cbf8:	c9                   	leave  
   2cbf9:	c3                   	ret    

000000000002cbfa <space>:
   2cbfa:	f3 0f 1e fa          	endbr64 
   2cbfe:	55                   	push   rbp
   2cbff:	48 89 e5             	mov    rbp,rsp
   2cc02:	48 83 ec 10          	sub    rsp,0x10
   2cc06:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
   2cc09:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2cc0c:	89 c7                	mov    edi,eax
   2cc0e:	e8 ae f2 ff ff       	call   2bec1 <vrna_alloc>
   2cc13:	c9                   	leave  
   2cc14:	c3                   	ret    

000000000002cc15 <xrealloc>:
   2cc15:	f3 0f 1e fa          	endbr64 
   2cc19:	55                   	push   rbp
   2cc1a:	48 89 e5             	mov    rbp,rsp
   2cc1d:	48 83 ec 10          	sub    rsp,0x10
   2cc21:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   2cc25:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
   2cc28:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
   2cc2b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2cc2f:	89 d6                	mov    esi,edx
   2cc31:	48 89 c7             	mov    rdi,rax
   2cc34:	e8 10 f3 ff ff       	call   2bf49 <vrna_realloc>
   2cc39:	c9                   	leave  
   2cc3a:	c3                   	ret    

000000000002cc3b <init_rand>:
   2cc3b:	f3 0f 1e fa          	endbr64 
   2cc3f:	55                   	push   rbp
   2cc40:	48 89 e5             	mov    rbp,rsp
   2cc43:	e8 92 f8 ff ff       	call   2c4da <vrna_init_rand>
   2cc48:	90                   	nop
   2cc49:	5d                   	pop    rbp
   2cc4a:	c3                   	ret    

000000000002cc4b <urn>:
   2cc4b:	f3 0f 1e fa          	endbr64 
   2cc4f:	55                   	push   rbp
   2cc50:	48 89 e5             	mov    rbp,rsp
   2cc53:	e8 1f f9 ff ff       	call   2c577 <vrna_urn>
   2cc58:	5d                   	pop    rbp
   2cc59:	c3                   	ret    

000000000002cc5a <int_urn>:
   2cc5a:	f3 0f 1e fa          	endbr64 
   2cc5e:	55                   	push   rbp
   2cc5f:	48 89 e5             	mov    rbp,rsp
   2cc62:	48 83 ec 10          	sub    rsp,0x10
   2cc66:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
   2cc69:	89 75 f8             	mov    DWORD PTR [rbp-0x8],esi
   2cc6c:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
   2cc6f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2cc72:	89 d6                	mov    esi,edx
   2cc74:	89 c7                	mov    edi,eax
   2cc76:	e8 1b f9 ff ff       	call   2c596 <vrna_int_urn>
   2cc7b:	c9                   	leave  
   2cc7c:	c3                   	ret    

000000000002cc7d <filecopy>:
   2cc7d:	f3 0f 1e fa          	endbr64 
   2cc81:	55                   	push   rbp
   2cc82:	48 89 e5             	mov    rbp,rsp
   2cc85:	48 83 ec 10          	sub    rsp,0x10
   2cc89:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   2cc8d:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
   2cc91:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
   2cc95:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2cc99:	48 89 d6             	mov    rsi,rdx
   2cc9c:	48 89 c7             	mov    rdi,rax
   2cc9f:	e8 8d 29 00 00       	call   2f631 <vrna_file_copy>
   2cca4:	90                   	nop
   2cca5:	c9                   	leave  
   2cca6:	c3                   	ret    

000000000002cca7 <time_stamp>:
   2cca7:	f3 0f 1e fa          	endbr64 
   2ccab:	55                   	push   rbp
   2ccac:	48 89 e5             	mov    rbp,rsp
   2ccaf:	e8 15 f9 ff ff       	call   2c5c9 <vrna_time_stamp>
   2ccb4:	5d                   	pop    rbp
   2ccb5:	c3                   	ret    

000000000002ccb6 <get_line>:
   2ccb6:	f3 0f 1e fa          	endbr64 
   2ccba:	55                   	push   rbp
   2ccbb:	48 89 e5             	mov    rbp,rsp
   2ccbe:	48 83 ec 10          	sub    rsp,0x10
   2ccc2:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   2ccc6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2ccca:	48 89 c7             	mov    rdi,rax
   2cccd:	e8 9f 29 00 00       	call   2f671 <vrna_read_line>
   2ccd2:	c9                   	leave  
   2ccd3:	c3                   	ret    

000000000002ccd4 <vrna_sequence_length_max>:
   2ccd4:	f3 0f 1e fa          	endbr64 
   2ccd8:	55                   	push   rbp
   2ccd9:	48 89 e5             	mov    rbp,rsp
   2ccdc:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
   2ccdf:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2cce2:	83 e0 10             	and    eax,0x10
   2cce5:	85 c0                	test   eax,eax
   2cce7:	74 07                	je     2ccf0 <vrna_sequence_length_max+0x1c>
   2cce9:	b8 ff ff ff 7f       	mov    eax,0x7fffffff
   2ccee:	eb 05                	jmp    2ccf5 <vrna_sequence_length_max+0x21>
   2ccf0:	b8 ff 7f 00 00       	mov    eax,0x7fff
   2ccf5:	5d                   	pop    rbp
   2ccf6:	c3                   	ret    

000000000002ccf7 <vrna_nucleotide_IUPAC_identity>:
   2ccf7:	f3 0f 1e fa          	endbr64 
   2ccfb:	55                   	push   rbp
   2ccfc:	48 89 e5             	mov    rbp,rsp
   2ccff:	48 83 ec 20          	sub    rsp,0x20
   2cd03:	89 fa                	mov    edx,edi
   2cd05:	89 f0                	mov    eax,esi
   2cd07:	88 55 ec             	mov    BYTE PTR [rbp-0x14],dl
   2cd0a:	88 45 e8             	mov    BYTE PTR [rbp-0x18],al
   2cd0d:	48 c7 45 f8 00 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
   2cd15:	0f be 45 ec          	movsx  eax,BYTE PTR [rbp-0x14]
   2cd19:	89 c7                	mov    edi,eax
   2cd1b:	e8 80 6d fd ff       	call   3aa0 <toupper@plt>
   2cd20:	88 45 f6             	mov    BYTE PTR [rbp-0xa],al
   2cd23:	0f be 45 e8          	movsx  eax,BYTE PTR [rbp-0x18]
   2cd27:	89 c7                	mov    edi,eax
   2cd29:	e8 72 6d fd ff       	call   3aa0 <toupper@plt>
   2cd2e:	88 45 f7             	mov    BYTE PTR [rbp-0x9],al
   2cd31:	0f be 45 f6          	movsx  eax,BYTE PTR [rbp-0xa]
   2cd35:	83 e8 41             	sub    eax,0x41
   2cd38:	83 f8 18             	cmp    eax,0x18
   2cd3b:	0f 87 db 01 00 00    	ja     2cf1c <vrna_nucleotide_IUPAC_identity+0x225>
   2cd41:	89 c0                	mov    eax,eax
   2cd43:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2cd4b:	48 8d 05 aa 6c 1b 00 	lea    rax,[rip+0x1b6caa]        # 1e39fc <Law_and_Order+0x74>
   2cd52:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
   2cd55:	48 98                	cdqe   
   2cd57:	48 8d 15 9e 6c 1b 00 	lea    rdx,[rip+0x1b6c9e]        # 1e39fc <Law_and_Order+0x74>
   2cd5e:	48 01 d0             	add    rax,rdx
   2cd61:	3e ff e0             	notrack jmp rax
   2cd64:	0f be 45 f7          	movsx  eax,BYTE PTR [rbp-0x9]
   2cd68:	89 c6                	mov    esi,eax
   2cd6a:	48 8d 3d 21 6c 1b 00 	lea    rdi,[rip+0x1b6c21]        # 1e3992 <Law_and_Order+0xa>
   2cd71:	e8 ea 68 fd ff       	call   3660 <strchr@plt>
   2cd76:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2cd7a:	e9 9d 01 00 00       	jmp    2cf1c <vrna_nucleotide_IUPAC_identity+0x225>
   2cd7f:	0f be 45 f7          	movsx  eax,BYTE PTR [rbp-0x9]
   2cd83:	89 c6                	mov    esi,eax
   2cd85:	48 8d 3d 0f 6c 1b 00 	lea    rdi,[rip+0x1b6c0f]        # 1e399b <Law_and_Order+0x13>
   2cd8c:	e8 cf 68 fd ff       	call   3660 <strchr@plt>
   2cd91:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2cd95:	e9 82 01 00 00       	jmp    2cf1c <vrna_nucleotide_IUPAC_identity+0x225>
   2cd9a:	0f be 45 f7          	movsx  eax,BYTE PTR [rbp-0x9]
   2cd9e:	89 c6                	mov    esi,eax
   2cda0:	48 8d 3d fd 6b 1b 00 	lea    rdi,[rip+0x1b6bfd]        # 1e39a4 <Law_and_Order+0x1c>
   2cda7:	e8 b4 68 fd ff       	call   3660 <strchr@plt>
   2cdac:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2cdb0:	e9 67 01 00 00       	jmp    2cf1c <vrna_nucleotide_IUPAC_identity+0x225>
   2cdb5:	0f be 45 f7          	movsx  eax,BYTE PTR [rbp-0x9]
   2cdb9:	89 c6                	mov    esi,eax
   2cdbb:	48 8d 3d eb 6b 1b 00 	lea    rdi,[rip+0x1b6beb]        # 1e39ad <Law_and_Order+0x25>
   2cdc2:	e8 99 68 fd ff       	call   3660 <strchr@plt>
   2cdc7:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2cdcb:	e9 4c 01 00 00       	jmp    2cf1c <vrna_nucleotide_IUPAC_identity+0x225>
   2cdd0:	0f be 45 f7          	movsx  eax,BYTE PTR [rbp-0x9]
   2cdd4:	89 c6                	mov    esi,eax
   2cdd6:	48 8d 3d d9 6b 1b 00 	lea    rdi,[rip+0x1b6bd9]        # 1e39b6 <Law_and_Order+0x2e>
   2cddd:	e8 7e 68 fd ff       	call   3660 <strchr@plt>
   2cde2:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2cde6:	e9 31 01 00 00       	jmp    2cf1c <vrna_nucleotide_IUPAC_identity+0x225>
   2cdeb:	0f be 45 f7          	movsx  eax,BYTE PTR [rbp-0x9]
   2cdef:	89 c6                	mov    esi,eax
   2cdf1:	48 8d 3d c7 6b 1b 00 	lea    rdi,[rip+0x1b6bc7]        # 1e39bf <Law_and_Order+0x37>
   2cdf8:	e8 63 68 fd ff       	call   3660 <strchr@plt>
   2cdfd:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2ce01:	e9 16 01 00 00       	jmp    2cf1c <vrna_nucleotide_IUPAC_identity+0x225>
   2ce06:	0f be 45 f7          	movsx  eax,BYTE PTR [rbp-0x9]
   2ce0a:	89 c6                	mov    esi,eax
   2ce0c:	48 8d 3d af 6b 1b 00 	lea    rdi,[rip+0x1b6baf]        # 1e39c2 <Law_and_Order+0x3a>
   2ce13:	e8 48 68 fd ff       	call   3660 <strchr@plt>
   2ce18:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2ce1c:	e9 fb 00 00 00       	jmp    2cf1c <vrna_nucleotide_IUPAC_identity+0x225>
   2ce21:	0f be 45 f7          	movsx  eax,BYTE PTR [rbp-0x9]
   2ce25:	89 c6                	mov    esi,eax
   2ce27:	48 8d 3d 98 6b 1b 00 	lea    rdi,[rip+0x1b6b98]        # 1e39c6 <Law_and_Order+0x3e>
   2ce2e:	e8 2d 68 fd ff       	call   3660 <strchr@plt>
   2ce33:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2ce37:	e9 e0 00 00 00       	jmp    2cf1c <vrna_nucleotide_IUPAC_identity+0x225>
   2ce3c:	0f be 45 f7          	movsx  eax,BYTE PTR [rbp-0x9]
   2ce40:	89 c6                	mov    esi,eax
   2ce42:	48 8d 3d 82 6b 1b 00 	lea    rdi,[rip+0x1b6b82]        # 1e39cb <Law_and_Order+0x43>
   2ce49:	e8 12 68 fd ff       	call   3660 <strchr@plt>
   2ce4e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2ce52:	e9 c5 00 00 00       	jmp    2cf1c <vrna_nucleotide_IUPAC_identity+0x225>
   2ce57:	0f be 45 f7          	movsx  eax,BYTE PTR [rbp-0x9]
   2ce5b:	89 c6                	mov    esi,eax
   2ce5d:	48 8d 3d 6c 6b 1b 00 	lea    rdi,[rip+0x1b6b6c]        # 1e39d0 <Law_and_Order+0x48>
   2ce64:	e8 f7 67 fd ff       	call   3660 <strchr@plt>
   2ce69:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2ce6d:	e9 aa 00 00 00       	jmp    2cf1c <vrna_nucleotide_IUPAC_identity+0x225>
   2ce72:	0f be 45 f7          	movsx  eax,BYTE PTR [rbp-0x9]
   2ce76:	89 c6                	mov    esi,eax
   2ce78:	48 8d 3d 55 6b 1b 00 	lea    rdi,[rip+0x1b6b55]        # 1e39d4 <Law_and_Order+0x4c>
   2ce7f:	e8 dc 67 fd ff       	call   3660 <strchr@plt>
   2ce84:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2ce88:	e9 8f 00 00 00       	jmp    2cf1c <vrna_nucleotide_IUPAC_identity+0x225>
   2ce8d:	0f be 45 f7          	movsx  eax,BYTE PTR [rbp-0x9]
   2ce91:	89 c6                	mov    esi,eax
   2ce93:	48 8d 3d 3e 6b 1b 00 	lea    rdi,[rip+0x1b6b3e]        # 1e39d8 <Law_and_Order+0x50>
   2ce9a:	e8 c1 67 fd ff       	call   3660 <strchr@plt>
   2ce9f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2cea3:	eb 77                	jmp    2cf1c <vrna_nucleotide_IUPAC_identity+0x225>
   2cea5:	0f be 45 f7          	movsx  eax,BYTE PTR [rbp-0x9]
   2cea9:	89 c6                	mov    esi,eax
   2ceab:	48 8d 3d 2b 6b 1b 00 	lea    rdi,[rip+0x1b6b2b]        # 1e39dd <Law_and_Order+0x55>
   2ceb2:	e8 a9 67 fd ff       	call   3660 <strchr@plt>
   2ceb7:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2cebb:	eb 5f                	jmp    2cf1c <vrna_nucleotide_IUPAC_identity+0x225>
   2cebd:	0f be 45 f7          	movsx  eax,BYTE PTR [rbp-0x9]
   2cec1:	89 c6                	mov    esi,eax
   2cec3:	48 8d 3d 19 6b 1b 00 	lea    rdi,[rip+0x1b6b19]        # 1e39e3 <Law_and_Order+0x5b>
   2ceca:	e8 91 67 fd ff       	call   3660 <strchr@plt>
   2cecf:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2ced3:	eb 47                	jmp    2cf1c <vrna_nucleotide_IUPAC_identity+0x225>
   2ced5:	0f be 45 f7          	movsx  eax,BYTE PTR [rbp-0x9]
   2ced9:	89 c6                	mov    esi,eax
   2cedb:	48 8d 3d 07 6b 1b 00 	lea    rdi,[rip+0x1b6b07]        # 1e39e9 <Law_and_Order+0x61>
   2cee2:	e8 79 67 fd ff       	call   3660 <strchr@plt>
   2cee7:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2ceeb:	eb 2f                	jmp    2cf1c <vrna_nucleotide_IUPAC_identity+0x225>
   2ceed:	0f be 45 f7          	movsx  eax,BYTE PTR [rbp-0x9]
   2cef1:	89 c6                	mov    esi,eax
   2cef3:	48 8d 3d f5 6a 1b 00 	lea    rdi,[rip+0x1b6af5]        # 1e39ef <Law_and_Order+0x67>
   2cefa:	e8 61 67 fd ff       	call   3660 <strchr@plt>
   2ceff:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2cf03:	eb 17                	jmp    2cf1c <vrna_nucleotide_IUPAC_identity+0x225>
   2cf05:	0f be 45 f7          	movsx  eax,BYTE PTR [rbp-0x9]
   2cf09:	89 c6                	mov    esi,eax
   2cf0b:	48 8d 3d e2 6a 1b 00 	lea    rdi,[rip+0x1b6ae2]        # 1e39f4 <Law_and_Order+0x6c>
   2cf12:	e8 49 67 fd ff       	call   3660 <strchr@plt>
   2cf17:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2cf1b:	90                   	nop
   2cf1c:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
   2cf21:	0f 95 c0             	setne  al
   2cf24:	0f b6 c0             	movzx  eax,al
   2cf27:	c9                   	leave  
   2cf28:	c3                   	ret    

000000000002cf29 <vrna_ptypes_prepare>:
   2cf29:	f3 0f 1e fa          	endbr64 
   2cf2d:	55                   	push   rbp
   2cf2e:	48 89 e5             	mov    rbp,rsp
   2cf31:	48 83 ec 10          	sub    rsp,0x10
   2cf35:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   2cf39:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
   2cf3c:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
   2cf41:	0f 84 99 01 00 00    	je     2d0e0 <vrna_ptypes_prepare+0x1b7>
   2cf47:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2cf4a:	83 e0 01             	and    eax,0x1
   2cf4d:	85 c0                	test   eax,eax
   2cf4f:	0f 84 97 00 00 00    	je     2cfec <vrna_ptypes_prepare+0xc3>
   2cf55:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2cf59:	8b 00                	mov    eax,DWORD PTR [rax]
   2cf5b:	85 c0                	test   eax,eax
   2cf5d:	74 0e                	je     2cf6d <vrna_ptypes_prepare+0x44>
   2cf5f:	83 f8 01             	cmp    eax,0x1
   2cf62:	0f 84 87 00 00 00    	je     2cfef <vrna_ptypes_prepare+0xc6>
   2cf68:	e9 86 00 00 00       	jmp    2cff3 <vrna_ptypes_prepare+0xca>
   2cf6d:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2cf70:	83 e0 10             	and    eax,0x10
   2cf73:	85 c0                	test   eax,eax
   2cf75:	74 33                	je     2cfaa <vrna_ptypes_prepare+0x81>
   2cf77:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2cf7b:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
   2cf7e:	83 c0 01             	add    eax,0x1
   2cf81:	8d 14 c5 00 00 00 00 	lea    edx,[rax*8+0x0]
   2cf88:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2cf8c:	48 8b 80 68 01 00 00 	mov    rax,QWORD PTR [rax+0x168]
   2cf93:	89 d6                	mov    esi,edx
   2cf95:	48 89 c7             	mov    rdi,rax
   2cf98:	e8 ac ef ff ff       	call   2bf49 <vrna_realloc>
   2cf9d:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   2cfa1:	48 89 82 68 01 00 00 	mov    QWORD PTR [rdx+0x168],rax
   2cfa8:	eb 48                	jmp    2cff2 <vrna_ptypes_prepare+0xc9>
   2cfaa:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2cfae:	48 8b 80 c8 00 00 00 	mov    rax,QWORD PTR [rax+0xc8]
   2cfb5:	48 85 c0             	test   rax,rax
   2cfb8:	75 38                	jne    2cff2 <vrna_ptypes_prepare+0xc9>
   2cfba:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2cfbe:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
   2cfc2:	48 8d 90 98 35 03 00 	lea    rdx,[rax+0x33598]
   2cfc9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2cfcd:	48 8b 80 c0 00 00 00 	mov    rax,QWORD PTR [rax+0xc0]
   2cfd4:	48 89 d6             	mov    rsi,rdx
   2cfd7:	48 89 c7             	mov    rdi,rax
   2cfda:	e8 0a 01 00 00       	call   2d0e9 <vrna_ptypes>
   2cfdf:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   2cfe3:	48 89 82 c8 00 00 00 	mov    QWORD PTR [rdx+0xc8],rax
   2cfea:	eb 06                	jmp    2cff2 <vrna_ptypes_prepare+0xc9>
   2cfec:	90                   	nop
   2cfed:	eb 04                	jmp    2cff3 <vrna_ptypes_prepare+0xca>
   2cfef:	90                   	nop
   2cff0:	eb 01                	jmp    2cff3 <vrna_ptypes_prepare+0xca>
   2cff2:	90                   	nop
   2cff3:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2cff6:	83 e0 02             	and    eax,0x2
   2cff9:	85 c0                	test   eax,eax
   2cffb:	0f 84 e6 00 00 00    	je     2d0e7 <vrna_ptypes_prepare+0x1be>
   2d001:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2d005:	8b 00                	mov    eax,DWORD PTR [rax]
   2d007:	85 c0                	test   eax,eax
   2d009:	74 0e                	je     2d019 <vrna_ptypes_prepare+0xf0>
   2d00b:	83 f8 01             	cmp    eax,0x1
   2d00e:	0f 84 cf 00 00 00    	je     2d0e3 <vrna_ptypes_prepare+0x1ba>
   2d014:	e9 ce 00 00 00       	jmp    2d0e7 <vrna_ptypes_prepare+0x1be>
   2d019:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2d01c:	83 e0 10             	and    eax,0x10
   2d01f:	85 c0                	test   eax,eax
   2d021:	74 36                	je     2d059 <vrna_ptypes_prepare+0x130>
   2d023:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2d027:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
   2d02a:	83 c0 01             	add    eax,0x1
   2d02d:	8d 14 c5 00 00 00 00 	lea    edx,[rax*8+0x0]
   2d034:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2d038:	48 8b 80 68 01 00 00 	mov    rax,QWORD PTR [rax+0x168]
   2d03f:	89 d6                	mov    esi,edx
   2d041:	48 89 c7             	mov    rdi,rax
   2d044:	e8 00 ef ff ff       	call   2bf49 <vrna_realloc>
   2d049:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   2d04d:	48 89 82 68 01 00 00 	mov    QWORD PTR [rdx+0x168],rax
   2d054:	e9 8d 00 00 00       	jmp    2d0e6 <vrna_ptypes_prepare+0x1bd>
   2d059:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2d05d:	48 8b 80 c8 00 00 00 	mov    rax,QWORD PTR [rax+0xc8]
   2d064:	48 85 c0             	test   rax,rax
   2d067:	75 30                	jne    2d099 <vrna_ptypes_prepare+0x170>
   2d069:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2d06d:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
   2d071:	48 8d 90 78 5e 06 00 	lea    rdx,[rax+0x65e78]
   2d078:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2d07c:	48 8b 80 c0 00 00 00 	mov    rax,QWORD PTR [rax+0xc0]
   2d083:	48 89 d6             	mov    rsi,rdx
   2d086:	48 89 c7             	mov    rdi,rax
   2d089:	e8 5b 00 00 00       	call   2d0e9 <vrna_ptypes>
   2d08e:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   2d092:	48 89 82 c8 00 00 00 	mov    QWORD PTR [rdx+0xc8],rax
   2d099:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2d09d:	48 8b 80 d0 00 00 00 	mov    rax,QWORD PTR [rax+0xd0]
   2d0a4:	48 85 c0             	test   rax,rax
   2d0a7:	75 3d                	jne    2d0e6 <vrna_ptypes_prepare+0x1bd>
   2d0a9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2d0ad:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
   2d0b1:	48 8d 88 78 5e 06 00 	lea    rcx,[rax+0x65e78]
   2d0b8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2d0bc:	48 8b 80 c0 00 00 00 	mov    rax,QWORD PTR [rax+0xc0]
   2d0c3:	ba 01 00 00 00       	mov    edx,0x1
   2d0c8:	48 89 ce             	mov    rsi,rcx
   2d0cb:	48 89 c7             	mov    rdi,rax
   2d0ce:	e8 f5 0c 00 00       	call   2ddc8 <get_ptypes>
   2d0d3:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   2d0d7:	48 89 82 d0 00 00 00 	mov    QWORD PTR [rdx+0xd0],rax
   2d0de:	eb 06                	jmp    2d0e6 <vrna_ptypes_prepare+0x1bd>
   2d0e0:	90                   	nop
   2d0e1:	eb 04                	jmp    2d0e7 <vrna_ptypes_prepare+0x1be>
   2d0e3:	90                   	nop
   2d0e4:	eb 01                	jmp    2d0e7 <vrna_ptypes_prepare+0x1be>
   2d0e6:	90                   	nop
   2d0e7:	c9                   	leave  
   2d0e8:	c3                   	ret    

000000000002d0e9 <vrna_ptypes>:
   2d0e9:	f3 0f 1e fa          	endbr64 
   2d0ed:	55                   	push   rbp
   2d0ee:	48 89 e5             	mov    rbp,rsp
   2d0f1:	48 83 ec 50          	sub    rsp,0x50
   2d0f5:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
   2d0f9:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
   2d0fd:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
   2d101:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
   2d107:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
   2d10a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
   2d10e:	0f b7 00             	movzx  eax,WORD PTR [rax]
   2d111:	98                   	cwde   
   2d112:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
   2d115:	bf 00 00 00 00       	mov    edi,0x0
   2d11a:	e8 b5 fb ff ff       	call   2ccd4 <vrna_sequence_length_max>
   2d11f:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
   2d122:	39 d0                	cmp    eax,edx
   2d124:	73 20                	jae    2d146 <vrna_ptypes+0x5d>
   2d126:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2d129:	89 c6                	mov    esi,eax
   2d12b:	48 8d 3d 2e 69 1b 00 	lea    rdi,[rip+0x1b692e]        # 1e3a60 <Law_and_Order+0xd8>
   2d132:	b8 00 00 00 00       	mov    eax,0x0
   2d137:	e8 5f f0 ff ff       	call   2c19b <vrna_message_warning>
   2d13c:	b8 00 00 00 00       	mov    eax,0x0
   2d141:	e9 db 01 00 00       	jmp    2d321 <vrna_ptypes+0x238>
   2d146:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2d149:	83 c0 01             	add    eax,0x1
   2d14c:	0f af 45 ec          	imul   eax,DWORD PTR [rbp-0x14]
   2d150:	89 c2                	mov    edx,eax
   2d152:	c1 ea 1f             	shr    edx,0x1f
   2d155:	01 d0                	add    eax,edx
   2d157:	d1 f8                	sar    eax,1
   2d159:	83 c0 02             	add    eax,0x2
   2d15c:	89 c7                	mov    edi,eax
   2d15e:	e8 5e ed ff ff       	call   2bec1 <vrna_alloc>
   2d163:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
   2d167:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2d16a:	89 c7                	mov    edi,eax
   2d16c:	e8 a9 f8 ff ff       	call   2ca1a <vrna_idx_col_wise>
   2d171:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2d175:	c7 45 d4 01 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x1
   2d17c:	e9 81 01 00 00       	jmp    2d302 <vrna_ptypes+0x219>
   2d181:	c7 45 d8 01 00 00 00 	mov    DWORD PTR [rbp-0x28],0x1
   2d188:	e9 67 01 00 00       	jmp    2d2f4 <vrna_ptypes+0x20b>
   2d18d:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [rbp-0x20],0x0
   2d194:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
   2d19b:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   2d19e:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
   2d1a1:	8b 55 cc             	mov    edx,DWORD PTR [rbp-0x34]
   2d1a4:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   2d1a7:	01 c2                	add    edx,eax
   2d1a9:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
   2d1ac:	01 d0                	add    eax,edx
   2d1ae:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
   2d1b1:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   2d1b4:	3b 45 ec             	cmp    eax,DWORD PTR [rbp-0x14]
   2d1b7:	0f 8f 32 01 00 00    	jg     2d2ef <vrna_ptypes+0x206>
   2d1bd:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
   2d1c0:	48 98                	cdqe   
   2d1c2:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   2d1c6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
   2d1ca:	48 01 d0             	add    rax,rdx
   2d1cd:	0f b7 00             	movzx  eax,WORD PTR [rax]
   2d1d0:	98                   	cwde   
   2d1d1:	8b 55 d0             	mov    edx,DWORD PTR [rbp-0x30]
   2d1d4:	48 63 d2             	movsxd rdx,edx
   2d1d7:	48 8d 0c 12          	lea    rcx,[rdx+rdx*1]
   2d1db:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
   2d1df:	48 01 ca             	add    rdx,rcx
   2d1e2:	0f b7 12             	movzx  edx,WORD PTR [rdx]
   2d1e5:	0f bf d2             	movsx  edx,dx
   2d1e8:	48 8b 4d b0          	mov    rcx,QWORD PTR [rbp-0x50]
   2d1ec:	48 63 f2             	movsxd rsi,edx
   2d1ef:	48 63 d0             	movsxd rdx,eax
   2d1f2:	48 89 d0             	mov    rax,rdx
   2d1f5:	48 c1 e0 02          	shl    rax,0x2
   2d1f9:	48 01 d0             	add    rax,rdx
   2d1fc:	48 c1 e0 02          	shl    rax,0x2
   2d200:	48 01 d0             	add    rax,rdx
   2d203:	48 01 f0             	add    rax,rsi
   2d206:	48 83 c0 40          	add    rax,0x40
   2d20a:	8b 44 81 04          	mov    eax,DWORD PTR [rcx+rax*4+0x4]
   2d20e:	89 45 dc             	mov    DWORD PTR [rbp-0x24],eax
   2d211:	e9 c5 00 00 00       	jmp    2d2db <vrna_ptypes+0x1f2>
   2d216:	83 7d cc 01          	cmp    DWORD PTR [rbp-0x34],0x1
   2d21a:	7e 63                	jle    2d27f <vrna_ptypes+0x196>
   2d21c:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   2d21f:	3b 45 ec             	cmp    eax,DWORD PTR [rbp-0x14]
   2d222:	7d 5b                	jge    2d27f <vrna_ptypes+0x196>
   2d224:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
   2d227:	48 98                	cdqe   
   2d229:	48 01 c0             	add    rax,rax
   2d22c:	48 8d 50 fe          	lea    rdx,[rax-0x2]
   2d230:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
   2d234:	48 01 d0             	add    rax,rdx
   2d237:	0f b7 00             	movzx  eax,WORD PTR [rax]
   2d23a:	98                   	cwde   
   2d23b:	8b 55 d0             	mov    edx,DWORD PTR [rbp-0x30]
   2d23e:	48 63 d2             	movsxd rdx,edx
   2d241:	48 83 c2 01          	add    rdx,0x1
   2d245:	48 8d 0c 12          	lea    rcx,[rdx+rdx*1]
   2d249:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
   2d24d:	48 01 ca             	add    rdx,rcx
   2d250:	0f b7 12             	movzx  edx,WORD PTR [rdx]
   2d253:	0f bf d2             	movsx  edx,dx
   2d256:	48 8b 4d b0          	mov    rcx,QWORD PTR [rbp-0x50]
   2d25a:	48 63 f2             	movsxd rsi,edx
   2d25d:	48 63 d0             	movsxd rdx,eax
   2d260:	48 89 d0             	mov    rax,rdx
   2d263:	48 c1 e0 02          	shl    rax,0x2
   2d267:	48 01 d0             	add    rax,rdx
   2d26a:	48 c1 e0 02          	shl    rax,0x2
   2d26e:	48 01 d0             	add    rax,rdx
   2d271:	48 01 f0             	add    rax,rsi
   2d274:	48 83 c0 40          	add    rax,0x40
   2d278:	8b 44 81 04          	mov    eax,DWORD PTR [rcx+rax*4+0x4]
   2d27c:	89 45 e0             	mov    DWORD PTR [rbp-0x20],eax
   2d27f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
   2d283:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
   2d286:	85 c0                	test   eax,eax
   2d288:	74 13                	je     2d29d <vrna_ptypes+0x1b4>
   2d28a:	83 7d e4 00          	cmp    DWORD PTR [rbp-0x1c],0x0
   2d28e:	75 0d                	jne    2d29d <vrna_ptypes+0x1b4>
   2d290:	83 7d e0 00          	cmp    DWORD PTR [rbp-0x20],0x0
   2d294:	75 07                	jne    2d29d <vrna_ptypes+0x1b4>
   2d296:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [rbp-0x24],0x0
   2d29d:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   2d2a0:	48 98                	cdqe   
   2d2a2:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2d2aa:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2d2ae:	48 01 d0             	add    rax,rdx
   2d2b1:	8b 10                	mov    edx,DWORD PTR [rax]
   2d2b3:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
   2d2b6:	01 d0                	add    eax,edx
   2d2b8:	48 63 d0             	movsxd rdx,eax
   2d2bb:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   2d2bf:	48 01 d0             	add    rax,rdx
   2d2c2:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
   2d2c5:	88 10                	mov    BYTE PTR [rax],dl
   2d2c7:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   2d2ca:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
   2d2cd:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   2d2d0:	89 45 dc             	mov    DWORD PTR [rbp-0x24],eax
   2d2d3:	83 6d cc 01          	sub    DWORD PTR [rbp-0x34],0x1
   2d2d7:	83 45 d0 01          	add    DWORD PTR [rbp-0x30],0x1
   2d2db:	83 7d cc 00          	cmp    DWORD PTR [rbp-0x34],0x0
   2d2df:	7e 0f                	jle    2d2f0 <vrna_ptypes+0x207>
   2d2e1:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   2d2e4:	3b 45 ec             	cmp    eax,DWORD PTR [rbp-0x14]
   2d2e7:	0f 8e 29 ff ff ff    	jle    2d216 <vrna_ptypes+0x12d>
   2d2ed:	eb 01                	jmp    2d2f0 <vrna_ptypes+0x207>
   2d2ef:	90                   	nop
   2d2f0:	83 45 d8 01          	add    DWORD PTR [rbp-0x28],0x1
   2d2f4:	83 7d d8 02          	cmp    DWORD PTR [rbp-0x28],0x2
   2d2f8:	0f 8e 8f fe ff ff    	jle    2d18d <vrna_ptypes+0xa4>
   2d2fe:	83 45 d4 01          	add    DWORD PTR [rbp-0x2c],0x1
   2d302:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2d305:	2b 45 e8             	sub    eax,DWORD PTR [rbp-0x18]
   2d308:	39 45 d4             	cmp    DWORD PTR [rbp-0x2c],eax
   2d30b:	0f 8c 70 fe ff ff    	jl     2d181 <vrna_ptypes+0x98>
   2d311:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2d315:	48 89 c7             	mov    rdi,rax
   2d318:	e8 93 65 fd ff       	call   38b0 <free@plt>
   2d31d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   2d321:	c9                   	leave  
   2d322:	c3                   	ret    

000000000002d323 <vrna_seq_encode>:
   2d323:	f3 0f 1e fa          	endbr64 
   2d327:	55                   	push   rbp
   2d328:	48 89 e5             	mov    rbp,rsp
   2d32b:	48 83 ec 20          	sub    rsp,0x20
   2d32f:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   2d333:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
   2d337:	48 c7 45 f8 00 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
   2d33f:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
   2d344:	0f 84 b1 00 00 00    	je     2d3fb <vrna_seq_encode+0xd8>
   2d34a:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
   2d34f:	0f 84 a6 00 00 00    	je     2d3fb <vrna_seq_encode+0xd8>
   2d355:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
   2d359:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2d35d:	48 89 d6             	mov    rsi,rdx
   2d360:	48 89 c7             	mov    rdi,rax
   2d363:	e8 99 00 00 00       	call   2d401 <vrna_seq_encode_simple>
   2d368:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2d36c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2d370:	48 89 c7             	mov    rdi,rax
   2d373:	e8 18 63 fd ff       	call   3690 <strlen@plt>
   2d378:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
   2d37b:	c7 45 f0 01 00 00 00 	mov    DWORD PTR [rbp-0x10],0x1
   2d382:	eb 39                	jmp    2d3bd <vrna_seq_encode+0x9a>
   2d384:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
   2d387:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   2d38b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2d38f:	48 01 d0             	add    rax,rdx
   2d392:	0f b7 00             	movzx  eax,WORD PTR [rax]
   2d395:	0f bf c8             	movsx  ecx,ax
   2d398:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
   2d39b:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   2d39f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2d3a3:	48 01 c2             	add    rdx,rax
   2d3a6:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2d3aa:	48 63 c9             	movsxd rcx,ecx
   2d3ad:	48 83 c1 68          	add    rcx,0x68
   2d3b1:	0f b7 44 48 08       	movzx  eax,WORD PTR [rax+rcx*2+0x8]
   2d3b6:	66 89 02             	mov    WORD PTR [rdx],ax
   2d3b9:	83 45 f0 01          	add    DWORD PTR [rbp-0x10],0x1
   2d3bd:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
   2d3c0:	3b 45 f4             	cmp    eax,DWORD PTR [rbp-0xc]
   2d3c3:	76 bf                	jbe    2d384 <vrna_seq_encode+0x61>
   2d3c5:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2d3c8:	83 c0 01             	add    eax,0x1
   2d3cb:	89 c0                	mov    eax,eax
   2d3cd:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   2d3d1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2d3d5:	48 01 c2             	add    rdx,rax
   2d3d8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2d3dc:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
   2d3e0:	66 89 02             	mov    WORD PTR [rdx],ax
   2d3e3:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2d3e6:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   2d3ea:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2d3ee:	48 01 d0             	add    rax,rdx
   2d3f1:	0f b7 10             	movzx  edx,WORD PTR [rax]
   2d3f4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2d3f8:	66 89 10             	mov    WORD PTR [rax],dx
   2d3fb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2d3ff:	c9                   	leave  
   2d400:	c3                   	ret    

000000000002d401 <vrna_seq_encode_simple>:
   2d401:	f3 0f 1e fa          	endbr64 
   2d405:	55                   	push   rbp
   2d406:	48 89 e5             	mov    rbp,rsp
   2d409:	48 83 ec 20          	sub    rsp,0x20
   2d40d:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   2d411:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
   2d415:	48 c7 45 f8 00 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
   2d41d:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
   2d422:	0f 84 a0 00 00 00    	je     2d4c8 <vrna_seq_encode_simple+0xc7>
   2d428:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
   2d42d:	0f 84 95 00 00 00    	je     2d4c8 <vrna_seq_encode_simple+0xc7>
   2d433:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2d437:	48 89 c7             	mov    rdi,rax
   2d43a:	e8 51 62 fd ff       	call   3690 <strlen@plt>
   2d43f:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
   2d442:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2d445:	83 c0 02             	add    eax,0x2
   2d448:	01 c0                	add    eax,eax
   2d44a:	89 c7                	mov    edi,eax
   2d44c:	e8 70 ea ff ff       	call   2bec1 <vrna_alloc>
   2d451:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2d455:	c7 45 f0 01 00 00 00 	mov    DWORD PTR [rbp-0x10],0x1
   2d45c:	eb 38                	jmp    2d496 <vrna_seq_encode_simple+0x95>
   2d45e:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
   2d461:	83 e8 01             	sub    eax,0x1
   2d464:	89 c2                	mov    edx,eax
   2d466:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2d46a:	48 01 d0             	add    rax,rdx
   2d46d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2d470:	0f be c0             	movsx  eax,al
   2d473:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
   2d477:	48 89 d6             	mov    rsi,rdx
   2d47a:	89 c7                	mov    edi,eax
   2d47c:	e8 4d 00 00 00       	call   2d4ce <vrna_nucleotide_encode>
   2d481:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
   2d484:	48 8d 0c 12          	lea    rcx,[rdx+rdx*1]
   2d488:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   2d48c:	48 01 ca             	add    rdx,rcx
   2d48f:	66 89 02             	mov    WORD PTR [rdx],ax
   2d492:	83 45 f0 01          	add    DWORD PTR [rbp-0x10],0x1
   2d496:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
   2d499:	3b 45 f4             	cmp    eax,DWORD PTR [rbp-0xc]
   2d49c:	76 c0                	jbe    2d45e <vrna_seq_encode_simple+0x5d>
   2d49e:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2d4a1:	83 c0 01             	add    eax,0x1
   2d4a4:	89 c0                	mov    eax,eax
   2d4a6:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   2d4aa:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2d4ae:	48 01 c2             	add    rdx,rax
   2d4b1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2d4b5:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
   2d4b9:	66 89 02             	mov    WORD PTR [rdx],ax
   2d4bc:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2d4bf:	89 c2                	mov    edx,eax
   2d4c1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2d4c5:	66 89 10             	mov    WORD PTR [rax],dx
   2d4c8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2d4cc:	c9                   	leave  
   2d4cd:	c3                   	ret    

000000000002d4ce <vrna_nucleotide_encode>:
   2d4ce:	f3 0f 1e fa          	endbr64 
   2d4d2:	55                   	push   rbp
   2d4d3:	48 89 e5             	mov    rbp,rsp
   2d4d6:	48 83 ec 20          	sub    rsp,0x20
   2d4da:	89 f8                	mov    eax,edi
   2d4dc:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
   2d4e0:	88 45 ec             	mov    BYTE PTR [rbp-0x14],al
   2d4e3:	c7 45 f4 ff ff ff ff 	mov    DWORD PTR [rbp-0xc],0xffffffff
   2d4ea:	0f be 45 ec          	movsx  eax,BYTE PTR [rbp-0x14]
   2d4ee:	89 c7                	mov    edi,eax
   2d4f0:	e8 ab 65 fd ff       	call   3aa0 <toupper@plt>
   2d4f5:	88 45 ec             	mov    BYTE PTR [rbp-0x14],al
   2d4f8:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
   2d4fd:	74 65                	je     2d564 <vrna_nucleotide_encode+0x96>
   2d4ff:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2d503:	8b 40 38             	mov    eax,DWORD PTR [rax+0x38]
   2d506:	85 c0                	test   eax,eax
   2d508:	7e 0c                	jle    2d516 <vrna_nucleotide_encode+0x48>
   2d50a:	0f be 45 ec          	movsx  eax,BYTE PTR [rbp-0x14]
   2d50e:	83 e8 40             	sub    eax,0x40
   2d511:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
   2d514:	eb 4e                	jmp    2d564 <vrna_nucleotide_encode+0x96>
   2d516:	0f be 45 ec          	movsx  eax,BYTE PTR [rbp-0x14]
   2d51a:	89 c6                	mov    esi,eax
   2d51c:	48 8d 3d 65 64 1b 00 	lea    rdi,[rip+0x1b6465]        # 1e3988 <Law_and_Order>
   2d523:	e8 38 61 fd ff       	call   3660 <strchr@plt>
   2d528:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2d52c:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
   2d531:	75 09                	jne    2d53c <vrna_nucleotide_encode+0x6e>
   2d533:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
   2d53a:	eb 11                	jmp    2d54d <vrna_nucleotide_encode+0x7f>
   2d53c:	48 8d 15 45 64 1b 00 	lea    rdx,[rip+0x1b6445]        # 1e3988 <Law_and_Order>
   2d543:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2d547:	48 29 d0             	sub    rax,rdx
   2d54a:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
   2d54d:	83 7d f4 05          	cmp    DWORD PTR [rbp-0xc],0x5
   2d551:	7e 07                	jle    2d55a <vrna_nucleotide_encode+0x8c>
   2d553:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
   2d55a:	83 7d f4 04          	cmp    DWORD PTR [rbp-0xc],0x4
   2d55e:	7e 04                	jle    2d564 <vrna_nucleotide_encode+0x96>
   2d560:	83 6d f4 01          	sub    DWORD PTR [rbp-0xc],0x1
   2d564:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2d567:	c9                   	leave  
   2d568:	c3                   	ret    

000000000002d569 <vrna_nucleotide_decode>:
   2d569:	f3 0f 1e fa          	endbr64 
   2d56d:	55                   	push   rbp
   2d56e:	48 89 e5             	mov    rbp,rsp
   2d571:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
   2d574:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
   2d578:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
   2d57d:	74 25                	je     2d5a4 <vrna_nucleotide_decode+0x3b>
   2d57f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   2d583:	8b 40 38             	mov    eax,DWORD PTR [rax+0x38]
   2d586:	85 c0                	test   eax,eax
   2d588:	7e 08                	jle    2d592 <vrna_nucleotide_decode+0x29>
   2d58a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2d58d:	83 c0 40             	add    eax,0x40
   2d590:	eb 17                	jmp    2d5a9 <vrna_nucleotide_decode+0x40>
   2d592:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2d595:	48 98                	cdqe   
   2d597:	48 8d 15 ea 63 1b 00 	lea    rdx,[rip+0x1b63ea]        # 1e3988 <Law_and_Order>
   2d59e:	0f b6 04 10          	movzx  eax,BYTE PTR [rax+rdx*1]
   2d5a2:	eb 05                	jmp    2d5a9 <vrna_nucleotide_decode+0x40>
   2d5a4:	b8 00 00 00 00       	mov    eax,0x0
   2d5a9:	5d                   	pop    rbp
   2d5aa:	c3                   	ret    

000000000002d5ab <vrna_aln_encode>:
   2d5ab:	f3 0f 1e fa          	endbr64 
   2d5af:	55                   	push   rbp
   2d5b0:	48 89 e5             	mov    rbp,rsp
   2d5b3:	48 83 ec 40          	sub    rsp,0x40
   2d5b7:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   2d5bb:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
   2d5bf:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
   2d5c3:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
   2d5c7:	4c 89 45 c8          	mov    QWORD PTR [rbp-0x38],r8
   2d5cb:	4c 89 4d c0          	mov    QWORD PTR [rbp-0x40],r9
   2d5cf:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2d5d3:	48 89 c7             	mov    rdi,rax
   2d5d6:	e8 b5 60 fd ff       	call   3690 <strlen@plt>
   2d5db:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
   2d5de:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2d5e1:	83 c0 02             	add    eax,0x2
   2d5e4:	01 c0                	add    eax,eax
   2d5e6:	89 c7                	mov    edi,eax
   2d5e8:	e8 d4 e8 ff ff       	call   2bec1 <vrna_alloc>
   2d5ed:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
   2d5f1:	48 89 02             	mov    QWORD PTR [rdx],rax
   2d5f4:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2d5f7:	83 c0 02             	add    eax,0x2
   2d5fa:	01 c0                	add    eax,eax
   2d5fc:	89 c7                	mov    edi,eax
   2d5fe:	e8 be e8 ff ff       	call   2bec1 <vrna_alloc>
   2d603:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
   2d607:	48 89 02             	mov    QWORD PTR [rdx],rax
   2d60a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2d60d:	83 c0 02             	add    eax,0x2
   2d610:	c1 e0 02             	shl    eax,0x2
   2d613:	89 c7                	mov    edi,eax
   2d615:	e8 a7 e8 ff ff       	call   2bec1 <vrna_alloc>
   2d61a:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   2d61e:	48 89 02             	mov    QWORD PTR [rdx],rax
   2d621:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2d624:	83 c0 02             	add    eax,0x2
   2d627:	89 c7                	mov    edi,eax
   2d629:	e8 93 e8 ff ff       	call   2bec1 <vrna_alloc>
   2d62e:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
   2d632:	48 89 02             	mov    QWORD PTR [rdx],rax
   2d635:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2d639:	48 8b 75 10          	mov    rsi,QWORD PTR [rbp+0x10]
   2d63d:	48 89 c7             	mov    rdi,rax
   2d640:	e8 bc fd ff ff       	call   2d401 <vrna_seq_encode_simple>
   2d645:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
   2d649:	48 89 02             	mov    QWORD PTR [rdx],rax
   2d64c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2d650:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2d653:	48 83 c0 02          	add    rax,0x2
   2d657:	66 c7 00 00 00       	mov    WORD PTR [rax],0x0
   2d65c:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
   2d660:	48 8b 12             	mov    rdx,QWORD PTR [rdx]
   2d663:	0f b7 00             	movzx  eax,WORD PTR [rax]
   2d666:	66 89 02             	mov    WORD PTR [rdx],ax
   2d669:	48 8b 45 10          	mov    rax,QWORD PTR [rbp+0x10]
   2d66d:	8b 80 94 00 00 00    	mov    eax,DWORD PTR [rax+0x94]
   2d673:	85 c0                	test   eax,eax
   2d675:	0f 84 d6 01 00 00    	je     2d851 <vrna_aln_encode+0x2a6>
   2d67b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   2d67f:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2d682:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
   2d686:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
   2d689:	88 10                	mov    BYTE PTR [rax],dl
   2d68b:	c7 45 f4 01 00 00 00 	mov    DWORD PTR [rbp-0xc],0x1
   2d692:	e9 8f 00 00 00       	jmp    2d726 <vrna_aln_encode+0x17b>
   2d697:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2d69b:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2d69e:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
   2d6a1:	83 ea 01             	sub    edx,0x1
   2d6a4:	89 d2                	mov    edx,edx
   2d6a6:	48 01 d2             	add    rdx,rdx
   2d6a9:	48 8d 0c 10          	lea    rcx,[rax+rdx*1]
   2d6ad:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2d6b1:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2d6b4:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
   2d6b7:	48 01 d2             	add    rdx,rdx
   2d6ba:	48 01 c2             	add    rdx,rax
   2d6bd:	0f b7 01             	movzx  eax,WORD PTR [rcx]
   2d6c0:	66 89 02             	mov    WORD PTR [rdx],ax
   2d6c3:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2d6c7:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2d6ca:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
   2d6cd:	83 c2 01             	add    edx,0x1
   2d6d0:	89 d2                	mov    edx,edx
   2d6d2:	48 01 d2             	add    rdx,rdx
   2d6d5:	48 8d 0c 10          	lea    rcx,[rax+rdx*1]
   2d6d9:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2d6dd:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2d6e0:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
   2d6e3:	48 01 d2             	add    rdx,rdx
   2d6e6:	48 01 c2             	add    rdx,rax
   2d6e9:	0f b7 01             	movzx  eax,WORD PTR [rcx]
   2d6ec:	66 89 02             	mov    WORD PTR [rdx],ax
   2d6ef:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
   2d6f2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2d6f6:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
   2d6fa:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   2d6fe:	48 8b 10             	mov    rdx,QWORD PTR [rax]
   2d701:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2d704:	48 01 c2             	add    rdx,rax
   2d707:	0f b6 01             	movzx  eax,BYTE PTR [rcx]
   2d70a:	88 02                	mov    BYTE PTR [rdx],al
   2d70c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   2d710:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2d713:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
   2d716:	48 c1 e2 02          	shl    rdx,0x2
   2d71a:	48 01 c2             	add    rdx,rax
   2d71d:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2d720:	89 02                	mov    DWORD PTR [rdx],eax
   2d722:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
   2d726:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2d729:	3b 45 fc             	cmp    eax,DWORD PTR [rbp-0x4]
   2d72c:	0f 82 65 ff ff ff    	jb     2d697 <vrna_aln_encode+0xec>
   2d732:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
   2d735:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2d739:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
   2d73d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   2d741:	48 8b 10             	mov    rdx,QWORD PTR [rax]
   2d744:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2d747:	48 01 c2             	add    rdx,rax
   2d74a:	0f b6 01             	movzx  eax,BYTE PTR [rcx]
   2d74d:	88 02                	mov    BYTE PTR [rdx],al
   2d74f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   2d753:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2d756:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
   2d759:	48 c1 e2 02          	shl    rdx,0x2
   2d75d:	48 01 c2             	add    rdx,rax
   2d760:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2d763:	89 02                	mov    DWORD PTR [rdx],eax
   2d765:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2d769:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2d76c:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
   2d76f:	83 ea 01             	sub    edx,0x1
   2d772:	89 d2                	mov    edx,edx
   2d774:	48 01 d2             	add    rdx,rdx
   2d777:	48 8d 0c 10          	lea    rcx,[rax+rdx*1]
   2d77b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2d77f:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2d782:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
   2d785:	48 01 d2             	add    rdx,rdx
   2d788:	48 01 c2             	add    rdx,rax
   2d78b:	0f b7 01             	movzx  eax,WORD PTR [rcx]
   2d78e:	66 89 02             	mov    WORD PTR [rdx],ax
   2d791:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2d795:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2d798:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
   2d79b:	48 01 d2             	add    rdx,rdx
   2d79e:	48 01 d0             	add    rax,rdx
   2d7a1:	66 c7 00 00 00       	mov    WORD PTR [rax],0x0
   2d7a6:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2d7aa:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2d7ad:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
   2d7b1:	48 8b 12             	mov    rdx,QWORD PTR [rdx]
   2d7b4:	8b 4d fc             	mov    ecx,DWORD PTR [rbp-0x4]
   2d7b7:	83 c1 01             	add    ecx,0x1
   2d7ba:	89 c9                	mov    ecx,ecx
   2d7bc:	48 01 c9             	add    rcx,rcx
   2d7bf:	48 01 ca             	add    rdx,rcx
   2d7c2:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
   2d7c6:	66 89 02             	mov    WORD PTR [rdx],ax
   2d7c9:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2d7cd:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2d7d0:	48 83 c0 02          	add    rax,0x2
   2d7d4:	66 c7 00 00 00       	mov    WORD PTR [rax],0x0
   2d7d9:	48 8b 45 10          	mov    rax,QWORD PTR [rbp+0x10]
   2d7dd:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
   2d7e0:	85 c0                	test   eax,eax
   2d7e2:	0f 84 fd 02 00 00    	je     2dae5 <vrna_aln_encode+0x53a>
   2d7e8:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2d7ec:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2d7ef:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
   2d7f2:	48 01 d2             	add    rdx,rdx
   2d7f5:	48 8d 0c 10          	lea    rcx,[rax+rdx*1]
   2d7f9:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2d7fd:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2d800:	48 8d 50 02          	lea    rdx,[rax+0x2]
   2d804:	0f b7 01             	movzx  eax,WORD PTR [rcx]
   2d807:	66 89 02             	mov    WORD PTR [rdx],ax
   2d80a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2d80e:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2d811:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
   2d815:	48 8b 12             	mov    rdx,QWORD PTR [rdx]
   2d818:	8b 4d fc             	mov    ecx,DWORD PTR [rbp-0x4]
   2d81b:	48 01 c9             	add    rcx,rcx
   2d81e:	48 01 ca             	add    rdx,rcx
   2d821:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
   2d825:	66 89 02             	mov    WORD PTR [rdx],ax
   2d828:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2d82c:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2d82f:	48 83 c0 02          	add    rax,0x2
   2d833:	0f b7 08             	movzx  ecx,WORD PTR [rax]
   2d836:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   2d83a:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2d83d:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
   2d840:	83 c2 01             	add    edx,0x1
   2d843:	89 d2                	mov    edx,edx
   2d845:	48 01 d0             	add    rax,rdx
   2d848:	89 ca                	mov    edx,ecx
   2d84a:	88 10                	mov    BYTE PTR [rax],dl
   2d84c:	e9 94 02 00 00       	jmp    2dae5 <vrna_aln_encode+0x53a>
   2d851:	48 8b 45 10          	mov    rax,QWORD PTR [rbp+0x10]
   2d855:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
   2d858:	85 c0                	test   eax,eax
   2d85a:	0f 84 d4 00 00 00    	je     2d934 <vrna_aln_encode+0x389>
   2d860:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2d863:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
   2d866:	eb 57                	jmp    2d8bf <vrna_aln_encode+0x314>
   2d868:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2d86b:	83 e8 01             	sub    eax,0x1
   2d86e:	89 c2                	mov    edx,eax
   2d870:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2d874:	48 01 d0             	add    rax,rdx
   2d877:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2d87a:	88 45 f0             	mov    BYTE PTR [rbp-0x10],al
   2d87d:	80 7d f0 2d          	cmp    BYTE PTR [rbp-0x10],0x2d
   2d881:	74 12                	je     2d895 <vrna_aln_encode+0x2ea>
   2d883:	80 7d f0 5f          	cmp    BYTE PTR [rbp-0x10],0x5f
   2d887:	74 0c                	je     2d895 <vrna_aln_encode+0x2ea>
   2d889:	80 7d f0 7e          	cmp    BYTE PTR [rbp-0x10],0x7e
   2d88d:	74 06                	je     2d895 <vrna_aln_encode+0x2ea>
   2d88f:	80 7d f0 2e          	cmp    BYTE PTR [rbp-0x10],0x2e
   2d893:	75 06                	jne    2d89b <vrna_aln_encode+0x2f0>
   2d895:	83 6d f4 01          	sub    DWORD PTR [rbp-0xc],0x1
   2d899:	eb 24                	jmp    2d8bf <vrna_aln_encode+0x314>
   2d89b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2d89f:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2d8a2:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
   2d8a5:	48 01 d2             	add    rdx,rdx
   2d8a8:	48 8d 0c 10          	lea    rcx,[rax+rdx*1]
   2d8ac:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2d8b0:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2d8b3:	48 8d 50 02          	lea    rdx,[rax+0x2]
   2d8b7:	0f b7 01             	movzx  eax,WORD PTR [rcx]
   2d8ba:	66 89 02             	mov    WORD PTR [rdx],ax
   2d8bd:	eb 06                	jmp    2d8c5 <vrna_aln_encode+0x31a>
   2d8bf:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
   2d8c3:	75 a3                	jne    2d868 <vrna_aln_encode+0x2bd>
   2d8c5:	c7 45 f4 01 00 00 00 	mov    DWORD PTR [rbp-0xc],0x1
   2d8cc:	eb 5c                	jmp    2d92a <vrna_aln_encode+0x37f>
   2d8ce:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2d8d1:	83 e8 01             	sub    eax,0x1
   2d8d4:	89 c2                	mov    edx,eax
   2d8d6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2d8da:	48 01 d0             	add    rax,rdx
   2d8dd:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2d8e0:	88 45 f1             	mov    BYTE PTR [rbp-0xf],al
   2d8e3:	80 7d f1 2d          	cmp    BYTE PTR [rbp-0xf],0x2d
   2d8e7:	74 12                	je     2d8fb <vrna_aln_encode+0x350>
   2d8e9:	80 7d f1 5f          	cmp    BYTE PTR [rbp-0xf],0x5f
   2d8ed:	74 0c                	je     2d8fb <vrna_aln_encode+0x350>
   2d8ef:	80 7d f1 7e          	cmp    BYTE PTR [rbp-0xf],0x7e
   2d8f3:	74 06                	je     2d8fb <vrna_aln_encode+0x350>
   2d8f5:	80 7d f1 2e          	cmp    BYTE PTR [rbp-0xf],0x2e
   2d8f9:	75 06                	jne    2d901 <vrna_aln_encode+0x356>
   2d8fb:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
   2d8ff:	eb 29                	jmp    2d92a <vrna_aln_encode+0x37f>
   2d901:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2d905:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2d908:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
   2d90b:	48 01 d2             	add    rdx,rdx
   2d90e:	48 8d 0c 10          	lea    rcx,[rax+rdx*1]
   2d912:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2d916:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2d919:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
   2d91c:	48 01 d2             	add    rdx,rdx
   2d91f:	48 01 c2             	add    rdx,rax
   2d922:	0f b7 01             	movzx  eax,WORD PTR [rcx]
   2d925:	66 89 02             	mov    WORD PTR [rdx],ax
   2d928:	eb 30                	jmp    2d95a <vrna_aln_encode+0x3af>
   2d92a:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2d92d:	3b 45 fc             	cmp    eax,DWORD PTR [rbp-0x4]
   2d930:	76 9c                	jbe    2d8ce <vrna_aln_encode+0x323>
   2d932:	eb 26                	jmp    2d95a <vrna_aln_encode+0x3af>
   2d934:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2d938:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2d93b:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
   2d93e:	48 01 d2             	add    rdx,rdx
   2d941:	48 01 d0             	add    rax,rdx
   2d944:	66 c7 00 00 00       	mov    WORD PTR [rax],0x0
   2d949:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
   2d94d:	48 8b 12             	mov    rdx,QWORD PTR [rdx]
   2d950:	48 83 c2 02          	add    rdx,0x2
   2d954:	0f b7 00             	movzx  eax,WORD PTR [rax]
   2d957:	66 89 02             	mov    WORD PTR [rdx],ax
   2d95a:	c7 45 f4 01 00 00 00 	mov    DWORD PTR [rbp-0xc],0x1
   2d961:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [rbp-0x8],0x0
   2d968:	e9 cc 00 00 00       	jmp    2da39 <vrna_aln_encode+0x48e>
   2d96d:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2d970:	83 e8 01             	sub    eax,0x1
   2d973:	89 c2                	mov    edx,eax
   2d975:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2d979:	48 01 d0             	add    rax,rdx
   2d97c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2d97f:	88 45 f3             	mov    BYTE PTR [rbp-0xd],al
   2d982:	80 7d f3 2d          	cmp    BYTE PTR [rbp-0xd],0x2d
   2d986:	74 12                	je     2d99a <vrna_aln_encode+0x3ef>
   2d988:	80 7d f3 5f          	cmp    BYTE PTR [rbp-0xd],0x5f
   2d98c:	74 0c                	je     2d99a <vrna_aln_encode+0x3ef>
   2d98e:	80 7d f3 7e          	cmp    BYTE PTR [rbp-0xd],0x7e
   2d992:	74 06                	je     2d99a <vrna_aln_encode+0x3ef>
   2d994:	80 7d f3 2e          	cmp    BYTE PTR [rbp-0xd],0x2e
   2d998:	75 2e                	jne    2d9c8 <vrna_aln_encode+0x41d>
   2d99a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2d99e:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2d9a1:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
   2d9a4:	48 01 d2             	add    rdx,rdx
   2d9a7:	48 8d 0c 10          	lea    rcx,[rax+rdx*1]
   2d9ab:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2d9af:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2d9b2:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
   2d9b5:	83 c2 01             	add    edx,0x1
   2d9b8:	89 d2                	mov    edx,edx
   2d9ba:	48 01 d2             	add    rdx,rdx
   2d9bd:	48 01 c2             	add    rdx,rax
   2d9c0:	0f b7 01             	movzx  eax,WORD PTR [rcx]
   2d9c3:	66 89 02             	mov    WORD PTR [rdx],ax
   2d9c6:	eb 57                	jmp    2da1f <vrna_aln_encode+0x474>
   2d9c8:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2d9cb:	83 e8 01             	sub    eax,0x1
   2d9ce:	89 c2                	mov    edx,eax
   2d9d0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2d9d4:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
   2d9d8:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   2d9dc:	48 8b 30             	mov    rsi,QWORD PTR [rax]
   2d9df:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2d9e2:	8d 50 01             	lea    edx,[rax+0x1]
   2d9e5:	89 55 f8             	mov    DWORD PTR [rbp-0x8],edx
   2d9e8:	89 c0                	mov    eax,eax
   2d9ea:	48 8d 14 06          	lea    rdx,[rsi+rax*1]
   2d9ee:	0f b6 01             	movzx  eax,BYTE PTR [rcx]
   2d9f1:	88 02                	mov    BYTE PTR [rdx],al
   2d9f3:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2d9f7:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2d9fa:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
   2d9fd:	48 01 d2             	add    rdx,rdx
   2da00:	48 8d 0c 10          	lea    rcx,[rax+rdx*1]
   2da04:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2da08:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2da0b:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
   2da0e:	83 c2 01             	add    edx,0x1
   2da11:	89 d2                	mov    edx,edx
   2da13:	48 01 d2             	add    rdx,rdx
   2da16:	48 01 c2             	add    rdx,rax
   2da19:	0f b7 01             	movzx  eax,WORD PTR [rcx]
   2da1c:	66 89 02             	mov    WORD PTR [rdx],ax
   2da1f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
   2da23:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2da26:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
   2da29:	48 c1 e2 02          	shl    rdx,0x2
   2da2d:	48 01 c2             	add    rdx,rax
   2da30:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2da33:	89 02                	mov    DWORD PTR [rdx],eax
   2da35:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
   2da39:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2da3c:	3b 45 fc             	cmp    eax,DWORD PTR [rbp-0x4]
   2da3f:	0f 86 28 ff ff ff    	jbe    2d96d <vrna_aln_encode+0x3c2>
   2da45:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2da48:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
   2da4b:	e9 8b 00 00 00       	jmp    2dadb <vrna_aln_encode+0x530>
   2da50:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2da53:	83 e8 01             	sub    eax,0x1
   2da56:	89 c2                	mov    edx,eax
   2da58:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2da5c:	48 01 d0             	add    rax,rdx
   2da5f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2da62:	88 45 f2             	mov    BYTE PTR [rbp-0xe],al
   2da65:	80 7d f2 2d          	cmp    BYTE PTR [rbp-0xe],0x2d
   2da69:	74 12                	je     2da7d <vrna_aln_encode+0x4d2>
   2da6b:	80 7d f2 5f          	cmp    BYTE PTR [rbp-0xe],0x5f
   2da6f:	74 0c                	je     2da7d <vrna_aln_encode+0x4d2>
   2da71:	80 7d f2 7e          	cmp    BYTE PTR [rbp-0xe],0x7e
   2da75:	74 06                	je     2da7d <vrna_aln_encode+0x4d2>
   2da77:	80 7d f2 2e          	cmp    BYTE PTR [rbp-0xe],0x2e
   2da7b:	75 2e                	jne    2daab <vrna_aln_encode+0x500>
   2da7d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2da81:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2da84:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
   2da87:	48 01 d2             	add    rdx,rdx
   2da8a:	48 8d 0c 10          	lea    rcx,[rax+rdx*1]
   2da8e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2da92:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2da95:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
   2da98:	83 ea 01             	sub    edx,0x1
   2da9b:	89 d2                	mov    edx,edx
   2da9d:	48 01 d2             	add    rdx,rdx
   2daa0:	48 01 c2             	add    rdx,rax
   2daa3:	0f b7 01             	movzx  eax,WORD PTR [rcx]
   2daa6:	66 89 02             	mov    WORD PTR [rdx],ax
   2daa9:	eb 2c                	jmp    2dad7 <vrna_aln_encode+0x52c>
   2daab:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2daaf:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2dab2:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
   2dab5:	48 01 d2             	add    rdx,rdx
   2dab8:	48 8d 0c 10          	lea    rcx,[rax+rdx*1]
   2dabc:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2dac0:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2dac3:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
   2dac6:	83 ea 01             	sub    edx,0x1
   2dac9:	89 d2                	mov    edx,edx
   2dacb:	48 01 d2             	add    rdx,rdx
   2dace:	48 01 c2             	add    rdx,rax
   2dad1:	0f b7 01             	movzx  eax,WORD PTR [rcx]
   2dad4:	66 89 02             	mov    WORD PTR [rdx],ax
   2dad7:	83 6d f4 01          	sub    DWORD PTR [rbp-0xc],0x1
   2dadb:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
   2dadf:	0f 85 6b ff ff ff    	jne    2da50 <vrna_aln_encode+0x4a5>
   2dae5:	90                   	nop
   2dae6:	c9                   	leave  
   2dae7:	c3                   	ret    

000000000002dae8 <vrna_get_ptype_md>:
   2dae8:	f3 0f 1e fa          	endbr64 
   2daec:	55                   	push   rbp
   2daed:	48 89 e5             	mov    rbp,rsp
   2daf0:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
   2daf3:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
   2daf6:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
   2dafa:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
   2dafe:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   2db01:	48 63 f0             	movsxd rsi,eax
   2db04:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2db07:	48 63 d0             	movsxd rdx,eax
   2db0a:	48 89 d0             	mov    rax,rdx
   2db0d:	48 c1 e0 02          	shl    rax,0x2
   2db11:	48 01 d0             	add    rax,rdx
   2db14:	48 c1 e0 02          	shl    rax,0x2
   2db18:	48 01 d0             	add    rax,rdx
   2db1b:	48 01 f0             	add    rax,rsi
   2db1e:	48 83 c0 40          	add    rax,0x40
   2db22:	8b 44 81 04          	mov    eax,DWORD PTR [rcx+rax*4+0x4]
   2db26:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
   2db29:	83 7d fc 00          	cmp    DWORD PTR [rbp-0x4],0x0
   2db2d:	74 05                	je     2db34 <vrna_get_ptype_md+0x4c>
   2db2f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2db32:	eb 05                	jmp    2db39 <vrna_get_ptype_md+0x51>
   2db34:	b8 07 00 00 00       	mov    eax,0x7
   2db39:	5d                   	pop    rbp
   2db3a:	c3                   	ret    

000000000002db3b <vrna_get_ptype>:
   2db3b:	f3 0f 1e fa          	endbr64 
   2db3f:	55                   	push   rbp
   2db40:	48 89 e5             	mov    rbp,rsp
   2db43:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
   2db46:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
   2db4a:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2db4d:	48 63 d0             	movsxd rdx,eax
   2db50:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2db54:	48 01 d0             	add    rax,rdx
   2db57:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2db5a:	0f be c0             	movsx  eax,al
   2db5d:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
   2db60:	83 7d fc 00          	cmp    DWORD PTR [rbp-0x4],0x0
   2db64:	74 05                	je     2db6b <vrna_get_ptype+0x30>
   2db66:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2db69:	eb 05                	jmp    2db70 <vrna_get_ptype+0x35>
   2db6b:	b8 07 00 00 00       	mov    eax,0x7
   2db70:	5d                   	pop    rbp
   2db71:	c3                   	ret    

000000000002db72 <vrna_get_ptype_window>:
   2db72:	f3 0f 1e fa          	endbr64 
   2db76:	55                   	push   rbp
   2db77:	48 89 e5             	mov    rbp,rsp
   2db7a:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
   2db7d:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
   2db80:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
   2db84:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2db87:	48 98                	cdqe   
   2db89:	48 8d 14 c5 00 00 00 00 	lea    rdx,[rax*8+0x0]
   2db91:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2db95:	48 01 d0             	add    rax,rdx
   2db98:	48 8b 10             	mov    rdx,QWORD PTR [rax]
   2db9b:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   2db9e:	2b 45 ec             	sub    eax,DWORD PTR [rbp-0x14]
   2dba1:	48 98                	cdqe   
   2dba3:	48 01 d0             	add    rax,rdx
   2dba6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2dba9:	0f be c0             	movsx  eax,al
   2dbac:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
   2dbaf:	83 7d fc 00          	cmp    DWORD PTR [rbp-0x4],0x0
   2dbb3:	74 05                	je     2dbba <vrna_get_ptype_window+0x48>
   2dbb5:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2dbb8:	eb 05                	jmp    2dbbf <vrna_get_ptype_window+0x4d>
   2dbba:	b8 07 00 00 00       	mov    eax,0x7
   2dbbf:	5d                   	pop    rbp
   2dbc0:	c3                   	ret    

000000000002dbc1 <wrap_get_ptypes>:
   2dbc1:	f3 0f 1e fa          	endbr64 
   2dbc5:	55                   	push   rbp
   2dbc6:	48 89 e5             	mov    rbp,rsp
   2dbc9:	48 83 ec 50          	sub    rsp,0x50
   2dbcd:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
   2dbd1:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
   2dbd5:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
   2dbd9:	0f b7 00             	movzx  eax,WORD PTR [rax]
   2dbdc:	98                   	cwde   
   2dbdd:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
   2dbe0:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   2dbe3:	83 c0 01             	add    eax,0x1
   2dbe6:	0f af 45 e8          	imul   eax,DWORD PTR [rbp-0x18]
   2dbea:	89 c2                	mov    edx,eax
   2dbec:	c1 ea 1f             	shr    edx,0x1f
   2dbef:	01 d0                	add    eax,edx
   2dbf1:	d1 f8                	sar    eax,1
   2dbf3:	83 c0 02             	add    eax,0x2
   2dbf6:	89 c7                	mov    edi,eax
   2dbf8:	e8 c4 e2 ff ff       	call   2bec1 <vrna_alloc>
   2dbfd:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
   2dc01:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   2dc04:	89 c7                	mov    edi,eax
   2dc06:	e8 95 ed ff ff       	call   2c9a0 <vrna_idx_row_wise>
   2dc0b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2dc0f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
   2dc13:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
   2dc19:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
   2dc1c:	c7 45 d4 01 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x1
   2dc23:	e9 7f 01 00 00       	jmp    2dda7 <wrap_get_ptypes+0x1e6>
   2dc28:	c7 45 d8 01 00 00 00 	mov    DWORD PTR [rbp-0x28],0x1
   2dc2f:	e9 65 01 00 00       	jmp    2dd99 <wrap_get_ptypes+0x1d8>
   2dc34:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [rbp-0x20],0x0
   2dc3b:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
   2dc42:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
   2dc45:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
   2dc48:	8b 55 cc             	mov    edx,DWORD PTR [rbp-0x34]
   2dc4b:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2dc4e:	01 c2                	add    edx,eax
   2dc50:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
   2dc53:	01 d0                	add    eax,edx
   2dc55:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
   2dc58:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   2dc5b:	3b 45 e8             	cmp    eax,DWORD PTR [rbp-0x18]
   2dc5e:	0f 8f 30 01 00 00    	jg     2dd94 <wrap_get_ptypes+0x1d3>
   2dc64:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
   2dc67:	48 98                	cdqe   
   2dc69:	48 8d 14 00          	lea    rdx,[rax+rax*1]
   2dc6d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
   2dc71:	48 01 d0             	add    rax,rdx
   2dc74:	0f b7 00             	movzx  eax,WORD PTR [rax]
   2dc77:	98                   	cwde   
   2dc78:	8b 55 d0             	mov    edx,DWORD PTR [rbp-0x30]
   2dc7b:	48 63 d2             	movsxd rdx,edx
   2dc7e:	48 8d 0c 12          	lea    rcx,[rdx+rdx*1]
   2dc82:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
   2dc86:	48 01 ca             	add    rdx,rcx
   2dc89:	0f b7 12             	movzx  edx,WORD PTR [rdx]
   2dc8c:	0f bf d2             	movsx  edx,dx
   2dc8f:	48 8b 4d b0          	mov    rcx,QWORD PTR [rbp-0x50]
   2dc93:	48 63 f2             	movsxd rsi,edx
   2dc96:	48 63 d0             	movsxd rdx,eax
   2dc99:	48 89 d0             	mov    rax,rdx
   2dc9c:	48 c1 e0 02          	shl    rax,0x2
   2dca0:	48 01 d0             	add    rax,rdx
   2dca3:	48 c1 e0 02          	shl    rax,0x2
   2dca7:	48 01 d0             	add    rax,rdx
   2dcaa:	48 01 f0             	add    rax,rsi
   2dcad:	48 83 c0 40          	add    rax,0x40
   2dcb1:	8b 44 81 04          	mov    eax,DWORD PTR [rcx+rax*4+0x4]
   2dcb5:	89 45 dc             	mov    DWORD PTR [rbp-0x24],eax
   2dcb8:	e9 c3 00 00 00       	jmp    2dd80 <wrap_get_ptypes+0x1bf>
   2dcbd:	83 7d cc 01          	cmp    DWORD PTR [rbp-0x34],0x1
   2dcc1:	7e 63                	jle    2dd26 <wrap_get_ptypes+0x165>
   2dcc3:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   2dcc6:	3b 45 e8             	cmp    eax,DWORD PTR [rbp-0x18]
   2dcc9:	7d 5b                	jge    2dd26 <wrap_get_ptypes+0x165>
   2dccb:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
   2dcce:	48 98                	cdqe   
   2dcd0:	48 01 c0             	add    rax,rax
   2dcd3:	48 8d 50 fe          	lea    rdx,[rax-0x2]
   2dcd7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
   2dcdb:	48 01 d0             	add    rax,rdx
   2dcde:	0f b7 00             	movzx  eax,WORD PTR [rax]
   2dce1:	98                   	cwde   
   2dce2:	8b 55 d0             	mov    edx,DWORD PTR [rbp-0x30]
   2dce5:	48 63 d2             	movsxd rdx,edx
   2dce8:	48 83 c2 01          	add    rdx,0x1
   2dcec:	48 8d 0c 12          	lea    rcx,[rdx+rdx*1]
   2dcf0:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
   2dcf4:	48 01 ca             	add    rdx,rcx
   2dcf7:	0f b7 12             	movzx  edx,WORD PTR [rdx]
   2dcfa:	0f bf d2             	movsx  edx,dx
   2dcfd:	48 8b 4d b0          	mov    rcx,QWORD PTR [rbp-0x50]
   2dd01:	48 63 f2             	movsxd rsi,edx
   2dd04:	48 63 d0             	movsxd rdx,eax
   2dd07:	48 89 d0             	mov    rax,rdx
   2dd0a:	48 c1 e0 02          	shl    rax,0x2
   2dd0e:	48 01 d0             	add    rax,rdx
   2dd11:	48 c1 e0 02          	shl    rax,0x2
   2dd15:	48 01 d0             	add    rax,rdx
   2dd18:	48 01 f0             	add    rax,rsi
   2dd1b:	48 83 c0 40          	add    rax,0x40
   2dd1f:	8b 44 81 04          	mov    eax,DWORD PTR [rcx+rax*4+0x4]
   2dd23:	89 45 e0             	mov    DWORD PTR [rbp-0x20],eax
   2dd26:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
   2dd2a:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
   2dd2d:	85 c0                	test   eax,eax
   2dd2f:	74 13                	je     2dd44 <wrap_get_ptypes+0x183>
   2dd31:	83 7d e4 00          	cmp    DWORD PTR [rbp-0x1c],0x0
   2dd35:	75 0d                	jne    2dd44 <wrap_get_ptypes+0x183>
   2dd37:	83 7d e0 00          	cmp    DWORD PTR [rbp-0x20],0x0
   2dd3b:	75 07                	jne    2dd44 <wrap_get_ptypes+0x183>
   2dd3d:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [rbp-0x24],0x0
   2dd44:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
   2dd47:	48 98                	cdqe   
   2dd49:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2dd51:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2dd55:	48 01 d0             	add    rax,rdx
   2dd58:	8b 00                	mov    eax,DWORD PTR [rax]
   2dd5a:	2b 45 d0             	sub    eax,DWORD PTR [rbp-0x30]
   2dd5d:	48 63 d0             	movsxd rdx,eax
   2dd60:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   2dd64:	48 01 d0             	add    rax,rdx
   2dd67:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
   2dd6a:	88 10                	mov    BYTE PTR [rax],dl
   2dd6c:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   2dd6f:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
   2dd72:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   2dd75:	89 45 dc             	mov    DWORD PTR [rbp-0x24],eax
   2dd78:	83 6d cc 01          	sub    DWORD PTR [rbp-0x34],0x1
   2dd7c:	83 45 d0 01          	add    DWORD PTR [rbp-0x30],0x1
   2dd80:	83 7d cc 00          	cmp    DWORD PTR [rbp-0x34],0x0
   2dd84:	7e 0f                	jle    2dd95 <wrap_get_ptypes+0x1d4>
   2dd86:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
   2dd89:	3b 45 e8             	cmp    eax,DWORD PTR [rbp-0x18]
   2dd8c:	0f 8e 2b ff ff ff    	jle    2dcbd <wrap_get_ptypes+0xfc>
   2dd92:	eb 01                	jmp    2dd95 <wrap_get_ptypes+0x1d4>
   2dd94:	90                   	nop
   2dd95:	83 45 d8 01          	add    DWORD PTR [rbp-0x28],0x1
   2dd99:	83 7d d8 02          	cmp    DWORD PTR [rbp-0x28],0x2
   2dd9d:	0f 8e 91 fe ff ff    	jle    2dc34 <wrap_get_ptypes+0x73>
   2dda3:	83 45 d4 01          	add    DWORD PTR [rbp-0x2c],0x1
   2dda7:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   2ddaa:	2b 45 ec             	sub    eax,DWORD PTR [rbp-0x14]
   2ddad:	39 45 d4             	cmp    DWORD PTR [rbp-0x2c],eax
   2ddb0:	0f 8c 72 fe ff ff    	jl     2dc28 <wrap_get_ptypes+0x67>
   2ddb6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2ddba:	48 89 c7             	mov    rdi,rax
   2ddbd:	e8 ee 5a fd ff       	call   38b0 <free@plt>
   2ddc2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   2ddc6:	c9                   	leave  
   2ddc7:	c3                   	ret    

000000000002ddc8 <get_ptypes>:
   2ddc8:	f3 0f 1e fa          	endbr64 
   2ddcc:	55                   	push   rbp
   2ddcd:	48 89 e5             	mov    rbp,rsp
   2ddd0:	53                   	push   rbx
   2ddd1:	48 83 ec 28          	sub    rsp,0x28
   2ddd5:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   2ddd9:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
   2dddd:	89 55 dc             	mov    DWORD PTR [rbp-0x24],edx
   2dde0:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
   2dde5:	74 6a                	je     2de51 <get_ptypes+0x89>
   2dde7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2ddeb:	0f b7 00             	movzx  eax,WORD PTR [rax]
   2ddee:	0f bf d8             	movsx  ebx,ax
   2ddf1:	bf 00 00 00 00       	mov    edi,0x0
   2ddf6:	e8 d9 ee ff ff       	call   2ccd4 <vrna_sequence_length_max>
   2ddfb:	39 c3                	cmp    ebx,eax
   2ddfd:	76 22                	jbe    2de21 <get_ptypes+0x59>
   2ddff:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2de03:	0f b7 00             	movzx  eax,WORD PTR [rax]
   2de06:	98                   	cwde   
   2de07:	89 c6                	mov    esi,eax
   2de09:	48 8d 3d 98 5c 1b 00 	lea    rdi,[rip+0x1b5c98]        # 1e3aa8 <Law_and_Order+0x120>
   2de10:	b8 00 00 00 00       	mov    eax,0x0
   2de15:	e8 81 e3 ff ff       	call   2c19b <vrna_message_warning>
   2de1a:	b8 00 00 00 00       	mov    eax,0x0
   2de1f:	eb 35                	jmp    2de56 <get_ptypes+0x8e>
   2de21:	83 7d dc 00          	cmp    DWORD PTR [rbp-0x24],0x0
   2de25:	74 15                	je     2de3c <get_ptypes+0x74>
   2de27:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
   2de2b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2de2f:	48 89 d6             	mov    rsi,rdx
   2de32:	48 89 c7             	mov    rdi,rax
   2de35:	e8 87 fd ff ff       	call   2dbc1 <wrap_get_ptypes>
   2de3a:	eb 1a                	jmp    2de56 <get_ptypes+0x8e>
   2de3c:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
   2de40:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2de44:	48 89 d6             	mov    rsi,rdx
   2de47:	48 89 c7             	mov    rdi,rax
   2de4a:	e8 9a f2 ff ff       	call   2d0e9 <vrna_ptypes>
   2de4f:	eb 05                	jmp    2de56 <get_ptypes+0x8e>
   2de51:	b8 00 00 00 00       	mov    eax,0x0
   2de56:	48 83 c4 28          	add    rsp,0x28
   2de5a:	5b                   	pop    rbx
   2de5b:	5d                   	pop    rbp
   2de5c:	c3                   	ret    

000000000002de5d <vrna_md_copy>:
   2de5d:	f3 0f 1e fa          	endbr64 
   2de61:	55                   	push   rbp
   2de62:	48 89 e5             	mov    rbp,rsp
   2de65:	48 83 ec 20          	sub    rsp,0x20
   2de69:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   2de6d:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
   2de71:	48 c7 45 f8 00 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
   2de79:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
   2de7e:	0f 84 2c 01 00 00    	je     2dfb0 <vrna_md_copy+0x153>
   2de84:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
   2de89:	75 10                	jne    2de9b <vrna_md_copy+0x3e>
   2de8b:	bf e8 07 00 00       	mov    edi,0x7e8
   2de90:	e8 2c e0 ff ff       	call   2bec1 <vrna_alloc>
   2de95:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2de99:	eb 08                	jmp    2dea3 <vrna_md_copy+0x46>
   2de9b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2de9f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2dea3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2dea7:	48 3b 45 e0          	cmp    rax,QWORD PTR [rbp-0x20]
   2deab:	0f 84 ff 00 00 00    	je     2dfb0 <vrna_md_copy+0x153>
   2deb1:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
   2deb5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2deb9:	ba e8 07 00 00       	mov    edx,0x7e8
   2debe:	48 89 ce             	mov    rsi,rcx
   2dec1:	48 89 c7             	mov    rdi,rax
   2dec4:	e8 d7 58 fd ff       	call   37a0 <memcpy@plt>
   2dec9:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2decd:	48 8d 88 b8 00 00 00 	lea    rcx,[rax+0xb8]
   2ded4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2ded8:	48 05 b8 00 00 00    	add    rax,0xb8
   2dede:	ba 20 00 00 00       	mov    edx,0x20
   2dee3:	48 89 ce             	mov    rsi,rcx
   2dee6:	48 89 c7             	mov    rdi,rax
   2dee9:	e8 b2 58 fd ff       	call   37a0 <memcpy@plt>
   2deee:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2def2:	48 8d 88 d8 00 00 00 	lea    rcx,[rax+0xd8]
   2def9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2defd:	48 05 d8 00 00 00    	add    rax,0xd8
   2df03:	ba 2a 00 00 00       	mov    edx,0x2a
   2df08:	48 89 ce             	mov    rsi,rcx
   2df0b:	48 89 c7             	mov    rdi,rax
   2df0e:	e8 8d 58 fd ff       	call   37a0 <memcpy@plt>
   2df13:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2df17:	48 8d 48 48          	lea    rcx,[rax+0x48]
   2df1b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2df1f:	48 83 c0 48          	add    rax,0x48
   2df23:	ba 40 00 00 00       	mov    edx,0x40
   2df28:	48 89 ce             	mov    rsi,rcx
   2df2b:	48 89 c7             	mov    rdi,rax
   2df2e:	e8 6d 58 fd ff       	call   37a0 <memcpy@plt>
   2df33:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
   2df3a:	eb 6e                	jmp    2dfaa <vrna_md_copy+0x14d>
   2df3c:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2df3f:	48 63 d0             	movsxd rdx,eax
   2df42:	48 89 d0             	mov    rax,rdx
   2df45:	48 c1 e0 02          	shl    rax,0x2
   2df49:	48 01 d0             	add    rax,rdx
   2df4c:	48 c1 e0 02          	shl    rax,0x2
   2df50:	48 01 d0             	add    rax,rdx
   2df53:	48 c1 e0 02          	shl    rax,0x2
   2df57:	48 8d 90 00 01 00 00 	lea    rdx,[rax+0x100]
   2df5e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2df62:	48 01 d0             	add    rax,rdx
   2df65:	48 8d 48 04          	lea    rcx,[rax+0x4]
   2df69:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
   2df6c:	48 63 d0             	movsxd rdx,eax
   2df6f:	48 89 d0             	mov    rax,rdx
   2df72:	48 c1 e0 02          	shl    rax,0x2
   2df76:	48 01 d0             	add    rax,rdx
   2df79:	48 c1 e0 02          	shl    rax,0x2
   2df7d:	48 01 d0             	add    rax,rdx
   2df80:	48 c1 e0 02          	shl    rax,0x2
   2df84:	48 8d 90 00 01 00 00 	lea    rdx,[rax+0x100]
   2df8b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2df8f:	48 01 d0             	add    rax,rdx
   2df92:	48 83 c0 04          	add    rax,0x4
   2df96:	ba 54 00 00 00       	mov    edx,0x54
   2df9b:	48 89 ce             	mov    rsi,rcx
   2df9e:	48 89 c7             	mov    rdi,rax
   2dfa1:	e8 fa 57 fd ff       	call   37a0 <memcpy@plt>
   2dfa6:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
   2dfaa:	83 7d f4 14          	cmp    DWORD PTR [rbp-0xc],0x14
   2dfae:	7e 8c                	jle    2df3c <vrna_md_copy+0xdf>
   2dfb0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2dfb4:	c9                   	leave  
   2dfb5:	c3                   	ret    

000000000002dfb6 <vrna_md_set_default>:
   2dfb6:	f3 0f 1e fa          	endbr64 
   2dfba:	55                   	push   rbp
   2dfbb:	48 89 e5             	mov    rbp,rsp
   2dfbe:	48 83 ec 10          	sub    rsp,0x10
   2dfc2:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   2dfc6:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
   2dfcb:	74 13                	je     2dfe0 <vrna_md_set_default+0x2a>
   2dfcd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2dfd1:	48 8d 35 e8 f7 21 00 	lea    rsi,[rip+0x21f7e8]        # 24d7c0 <defaults>
   2dfd8:	48 89 c7             	mov    rdi,rax
   2dfdb:	e8 7d fe ff ff       	call   2de5d <vrna_md_copy>
   2dfe0:	90                   	nop
   2dfe1:	c9                   	leave  
   2dfe2:	c3                   	ret    

000000000002dfe3 <vrna_md_option_string>:
   2dfe3:	f3 0f 1e fa          	endbr64 
   2dfe7:	55                   	push   rbp
   2dfe8:	48 89 e5             	mov    rbp,rsp
   2dfeb:	53                   	push   rbx
   2dfec:	48 83 ec 18          	sub    rsp,0x18
   2dff0:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   2dff4:	c6 05 85 b0 2b 00 00 	mov    BYTE PTR [rip+0x2bb085],0x0        # 2e9080 <options.5701>
   2dffb:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
   2e000:	0f 84 b7 01 00 00    	je     2e1bd <vrna_md_option_string+0x1da>
   2e006:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2e00a:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
   2e00d:	83 f8 02             	cmp    eax,0x2
   2e010:	74 33                	je     2e045 <vrna_md_option_string+0x62>
   2e012:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2e016:	8b 58 14             	mov    ebx,DWORD PTR [rax+0x14]
   2e019:	48 8d 3d 60 b0 2b 00 	lea    rdi,[rip+0x2bb060]        # 2e9080 <options.5701>
   2e020:	e8 6b 56 fd ff       	call   3690 <strlen@plt>
   2e025:	48 8d 15 54 b0 2b 00 	lea    rdx,[rip+0x2bb054]        # 2e9080 <options.5701>
   2e02c:	48 01 d0             	add    rax,rdx
   2e02f:	89 da                	mov    edx,ebx
   2e031:	48 8d 35 b8 5a 1b 00 	lea    rsi,[rip+0x1b5ab8]        # 1e3af0 <Law_and_Order+0x168>
   2e038:	48 89 c7             	mov    rdi,rax
   2e03b:	b8 00 00 00 00       	mov    eax,0x0
   2e040:	e8 8b 55 fd ff       	call   35d0 <sprintf@plt>
   2e045:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2e049:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
   2e04c:	85 c0                	test   eax,eax
   2e04e:	75 35                	jne    2e085 <vrna_md_option_string+0xa2>
   2e050:	48 8d 05 29 b0 2b 00 	lea    rax,[rip+0x2bb029]        # 2e9080 <options.5701>
   2e057:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
   2e05e:	48 89 c2             	mov    rdx,rax
   2e061:	b8 00 00 00 00       	mov    eax,0x0
   2e066:	48 89 d7             	mov    rdi,rdx
   2e069:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
   2e06b:	48 89 c8             	mov    rax,rcx
   2e06e:	48 f7 d0             	not    rax
   2e071:	48 8d 50 ff          	lea    rdx,[rax-0x1]
   2e075:	48 8d 05 04 b0 2b 00 	lea    rax,[rip+0x2bb004]        # 2e9080 <options.5701>
   2e07c:	48 01 d0             	add    rax,rdx
   2e07f:	c7 00 2d 34 20 00    	mov    DWORD PTR [rax],0x20342d
   2e085:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2e089:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
   2e08c:	85 c0                	test   eax,eax
   2e08e:	74 3c                	je     2e0cc <vrna_md_option_string+0xe9>
   2e090:	48 8d 05 e9 af 2b 00 	lea    rax,[rip+0x2bafe9]        # 2e9080 <options.5701>
   2e097:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
   2e09e:	48 89 c2             	mov    rdx,rax
   2e0a1:	b8 00 00 00 00       	mov    eax,0x0
   2e0a6:	48 89 d7             	mov    rdi,rdx
   2e0a9:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
   2e0ab:	48 89 c8             	mov    rax,rcx
   2e0ae:	48 f7 d0             	not    rax
   2e0b1:	48 8d 50 ff          	lea    rdx,[rax-0x1]
   2e0b5:	48 8d 05 c4 af 2b 00 	lea    rax,[rip+0x2bafc4]        # 2e9080 <options.5701>
   2e0bc:	48 01 d0             	add    rax,rdx
   2e0bf:	48 be 2d 2d 6e 6f 4c 50 20 00 	movabs rsi,0x20504c6f6e2d2d
   2e0c9:	48 89 30             	mov    QWORD PTR [rax],rsi
   2e0cc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2e0d0:	8b 40 20             	mov    eax,DWORD PTR [rax+0x20]
   2e0d3:	85 c0                	test   eax,eax
   2e0d5:	74 3c                	je     2e113 <vrna_md_option_string+0x130>
   2e0d7:	48 8d 05 a2 af 2b 00 	lea    rax,[rip+0x2bafa2]        # 2e9080 <options.5701>
   2e0de:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
   2e0e5:	48 89 c2             	mov    rdx,rax
   2e0e8:	b8 00 00 00 00       	mov    eax,0x0
   2e0ed:	48 89 d7             	mov    rdi,rdx
   2e0f0:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
   2e0f2:	48 89 c8             	mov    rax,rcx
   2e0f5:	48 f7 d0             	not    rax
   2e0f8:	48 8d 50 ff          	lea    rdx,[rax-0x1]
   2e0fc:	48 8d 05 7d af 2b 00 	lea    rax,[rip+0x2baf7d]        # 2e9080 <options.5701>
   2e103:	48 01 d0             	add    rax,rdx
   2e106:	48 be 2d 2d 6e 6f 47 55 20 00 	movabs rsi,0x2055476f6e2d2d
   2e110:	48 89 30             	mov    QWORD PTR [rax],rsi
   2e113:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2e117:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
   2e11a:	85 c0                	test   eax,eax
   2e11c:	74 4d                	je     2e16b <vrna_md_option_string+0x188>
   2e11e:	48 8d 05 5b af 2b 00 	lea    rax,[rip+0x2baf5b]        # 2e9080 <options.5701>
   2e125:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
   2e12c:	48 89 c2             	mov    rdx,rax
   2e12f:	b8 00 00 00 00       	mov    eax,0x0
   2e134:	48 89 d7             	mov    rdi,rdx
   2e137:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
   2e139:	48 89 c8             	mov    rax,rcx
   2e13c:	48 f7 d0             	not    rax
   2e13f:	48 8d 50 ff          	lea    rdx,[rax-0x1]
   2e143:	48 8d 05 36 af 2b 00 	lea    rax,[rip+0x2baf36]        # 2e9080 <options.5701>
   2e14a:	48 01 d0             	add    rax,rdx
   2e14d:	48 bb 2d 2d 6e 6f 43 6c 6f 73 	movabs rbx,0x736f6c436f6e2d2d
   2e157:	48 89 18             	mov    QWORD PTR [rax],rbx
   2e15a:	c7 40 08 69 6e 67 47 	mov    DWORD PTR [rax+0x8],0x47676e69
   2e161:	66 c7 40 0c 55 20    	mov    WORD PTR [rax+0xc],0x2055
   2e167:	c6 40 0e 00          	mov    BYTE PTR [rax+0xe],0x0
   2e16b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2e16f:	f2 0f 10 00          	movsd  xmm0,QWORD PTR [rax]
   2e173:	66 0f 2e 05 c5 5b 1b 00 	ucomisd xmm0,QWORD PTR [rip+0x1b5bc5]        # 1e3d40 <Law_and_Order+0x3b8>
   2e17b:	7a 0a                	jp     2e187 <vrna_md_option_string+0x1a4>
   2e17d:	66 0f 2e 05 bb 5b 1b 00 	ucomisd xmm0,QWORD PTR [rip+0x1b5bbb]        # 1e3d40 <Law_and_Order+0x3b8>
   2e185:	74 36                	je     2e1bd <vrna_md_option_string+0x1da>
   2e187:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2e18b:	48 8b 18             	mov    rbx,QWORD PTR [rax]
   2e18e:	48 8d 3d eb ae 2b 00 	lea    rdi,[rip+0x2baeeb]        # 2e9080 <options.5701>
   2e195:	e8 f6 54 fd ff       	call   3690 <strlen@plt>
   2e19a:	48 8d 15 df ae 2b 00 	lea    rdx,[rip+0x2baedf]        # 2e9080 <options.5701>
   2e1a1:	48 01 d0             	add    rax,rdx
   2e1a4:	66 48 0f 6e c3       	movq   xmm0,rbx
   2e1a9:	48 8d 35 46 59 1b 00 	lea    rsi,[rip+0x1b5946]        # 1e3af6 <Law_and_Order+0x16e>
   2e1b0:	48 89 c7             	mov    rdi,rax
   2e1b3:	b8 01 00 00 00       	mov    eax,0x1
   2e1b8:	e8 13 54 fd ff       	call   35d0 <sprintf@plt>
   2e1bd:	48 8d 05 bc ae 2b 00 	lea    rax,[rip+0x2baebc]        # 2e9080 <options.5701>
   2e1c4:	48 83 c4 18          	add    rsp,0x18
   2e1c8:	5b                   	pop    rbx
   2e1c9:	5d                   	pop    rbp
   2e1ca:	c3                   	ret    

000000000002e1cb <copy_nonstandards>:
   2e1cb:	f3 0f 1e fa          	endbr64 
   2e1cf:	55                   	push   rbp
   2e1d0:	48 89 e5             	mov    rbp,rsp
   2e1d3:	48 83 ec 20          	sub    rsp,0x20
   2e1d7:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   2e1db:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
   2e1df:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2e1e3:	48 89 c7             	mov    rdi,rax
   2e1e6:	e8 a5 54 fd ff       	call   3690 <strlen@plt>
   2e1eb:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
   2e1ee:	83 7d fc 3f          	cmp    DWORD PTR [rbp-0x4],0x3f
   2e1f2:	77 32                	ja     2e226 <copy_nonstandards+0x5b>
   2e1f4:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2e1f8:	48 89 c7             	mov    rdi,rax
   2e1fb:	e8 90 54 fd ff       	call   3690 <strlen@plt>
   2e200:	48 89 c2             	mov    rdx,rax
   2e203:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2e207:	48 8d 48 48          	lea    rcx,[rax+0x48]
   2e20b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2e20f:	48 89 c6             	mov    rsi,rax
   2e212:	48 89 cf             	mov    rdi,rcx
   2e215:	e8 86 55 fd ff       	call   37a0 <memcpy@plt>
   2e21a:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
   2e21e:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2e221:	c6 44 02 48 00       	mov    BYTE PTR [rdx+rax*1+0x48],0x0
   2e226:	90                   	nop
   2e227:	c9                   	leave  
   2e228:	c3                   	ret    

000000000002e229 <vrna_md_set_nonstandards>:
   2e229:	f3 0f 1e fa          	endbr64 
   2e22d:	55                   	push   rbp
   2e22e:	48 89 e5             	mov    rbp,rsp
   2e231:	48 83 ec 30          	sub    rsp,0x30
   2e235:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
   2e239:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
   2e23d:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
   2e242:	0f 84 9b 01 00 00    	je     2e3e3 <vrna_md_set_nonstandards+0x1ba>
   2e248:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
   2e24d:	0f 84 62 01 00 00    	je     2e3b5 <vrna_md_set_nonstandards+0x18c>
   2e253:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2e257:	48 89 c7             	mov    rdi,rax
   2e25a:	e8 31 54 fd ff       	call   3690 <strlen@plt>
   2e25f:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
   2e262:	83 7d f4 20          	cmp    DWORD PTR [rbp-0xc],0x20
   2e266:	0f 87 36 01 00 00    	ja     2e3a2 <vrna_md_set_nonstandards+0x179>
   2e26c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2e270:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2e274:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [rbp-0x10],0x0
   2e27b:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
   2e27e:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
   2e281:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2e285:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2e288:	3c 2d                	cmp    al,0x2d
   2e28a:	0f 85 b4 00 00 00    	jne    2e344 <vrna_md_set_nonstandards+0x11b>
   2e290:	c7 45 f0 01 00 00 00 	mov    DWORD PTR [rbp-0x10],0x1
   2e297:	48 83 45 f8 01       	add    QWORD PTR [rbp-0x8],0x1
   2e29c:	e9 a3 00 00 00       	jmp    2e344 <vrna_md_set_nonstandards+0x11b>
   2e2a1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2e2a5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2e2a8:	3c 2c                	cmp    al,0x2c
   2e2aa:	0f 84 8f 00 00 00    	je     2e33f <vrna_md_set_nonstandards+0x116>
   2e2b0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2e2b4:	48 8d 50 01          	lea    rdx,[rax+0x1]
   2e2b8:	48 89 55 f8          	mov    QWORD PTR [rbp-0x8],rdx
   2e2bc:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
   2e2bf:	8d 4a 01             	lea    ecx,[rdx+0x1]
   2e2c2:	89 4d ec             	mov    DWORD PTR [rbp-0x14],ecx
   2e2c5:	0f b6 30             	movzx  esi,BYTE PTR [rax]
   2e2c8:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
   2e2cc:	48 63 c2             	movsxd rax,edx
   2e2cf:	40 88 74 01 48       	mov    BYTE PTR [rcx+rax*1+0x48],sil
   2e2d4:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2e2d7:	8d 50 01             	lea    edx,[rax+0x1]
   2e2da:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
   2e2dd:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   2e2e1:	0f b6 0a             	movzx  ecx,BYTE PTR [rdx]
   2e2e4:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
   2e2e8:	48 98                	cdqe   
   2e2ea:	88 4c 02 48          	mov    BYTE PTR [rdx+rax*1+0x48],cl
   2e2ee:	83 7d f0 00          	cmp    DWORD PTR [rbp-0x10],0x0
   2e2f2:	74 4b                	je     2e33f <vrna_md_set_nonstandards+0x116>
   2e2f4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2e2f8:	0f b6 10             	movzx  edx,BYTE PTR [rax]
   2e2fb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2e2ff:	48 83 e8 01          	sub    rax,0x1
   2e303:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2e306:	38 c2                	cmp    dl,al
   2e308:	74 35                	je     2e33f <vrna_md_set_nonstandards+0x116>
   2e30a:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2e30d:	8d 50 01             	lea    edx,[rax+0x1]
   2e310:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
   2e313:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   2e317:	0f b6 0a             	movzx  ecx,BYTE PTR [rdx]
   2e31a:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
   2e31e:	48 98                	cdqe   
   2e320:	88 4c 02 48          	mov    BYTE PTR [rdx+rax*1+0x48],cl
   2e324:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2e327:	8d 50 01             	lea    edx,[rax+0x1]
   2e32a:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
   2e32d:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   2e331:	0f b6 4a ff          	movzx  ecx,BYTE PTR [rdx-0x1]
   2e335:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
   2e339:	48 98                	cdqe   
   2e33b:	88 4c 02 48          	mov    BYTE PTR [rdx+rax*1+0x48],cl
   2e33f:	48 83 45 f8 01       	add    QWORD PTR [rbp-0x8],0x1
   2e344:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2e348:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2e34b:	84 c0                	test   al,al
   2e34d:	0f 85 4e ff ff ff    	jne    2e2a1 <vrna_md_set_nonstandards+0x78>
   2e353:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
   2e357:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2e35a:	48 98                	cdqe   
   2e35c:	c6 44 02 48 00       	mov    BYTE PTR [rdx+rax*1+0x48],0x0
   2e361:	48 8b 05 b8 ac 2b 00 	mov    rax,QWORD PTR [rip+0x2bacb8]        # 2e9020 <nonstandards>
   2e368:	48 89 c7             	mov    rdi,rax
   2e36b:	e8 40 55 fd ff       	call   38b0 <free@plt>
   2e370:	bf 21 00 00 00       	mov    edi,0x21
   2e375:	e8 47 db ff ff       	call   2bec1 <vrna_alloc>
   2e37a:	48 89 05 9f ac 2b 00 	mov    QWORD PTR [rip+0x2bac9f],rax        # 2e9020 <nonstandards>
   2e381:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2e385:	48 8d 48 48          	lea    rcx,[rax+0x48]
   2e389:	48 8b 05 90 ac 2b 00 	mov    rax,QWORD PTR [rip+0x2bac90]        # 2e9020 <nonstandards>
   2e390:	ba 21 00 00 00       	mov    edx,0x21
   2e395:	48 89 ce             	mov    rsi,rcx
   2e398:	48 89 c7             	mov    rdi,rax
   2e39b:	e8 00 54 fd ff       	call   37a0 <memcpy@plt>
   2e3a0:	eb 35                	jmp    2e3d7 <vrna_md_set_nonstandards+0x1ae>
   2e3a2:	48 8d 3d 57 57 1b 00 	lea    rdi,[rip+0x1b5757]        # 1e3b00 <Law_and_Order+0x178>
   2e3a9:	b8 00 00 00 00       	mov    eax,0x0
   2e3ae:	e8 e8 dd ff ff       	call   2c19b <vrna_message_warning>
   2e3b3:	eb 22                	jmp    2e3d7 <vrna_md_set_nonstandards+0x1ae>
   2e3b5:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2e3b9:	c6 40 48 00          	mov    BYTE PTR [rax+0x48],0x0
   2e3bd:	48 8b 05 5c ac 2b 00 	mov    rax,QWORD PTR [rip+0x2bac5c]        # 2e9020 <nonstandards>
   2e3c4:	48 89 c7             	mov    rdi,rax
   2e3c7:	e8 e4 54 fd ff       	call   38b0 <free@plt>
   2e3cc:	48 c7 05 49 ac 2b 00 00 00 00 00 	mov    QWORD PTR [rip+0x2bac49],0x0        # 2e9020 <nonstandards>
   2e3d7:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2e3db:	48 89 c7             	mov    rdi,rax
   2e3de:	e8 d5 09 00 00       	call   2edb8 <vrna_md_update>
   2e3e3:	90                   	nop
   2e3e4:	c9                   	leave  
   2e3e5:	c3                   	ret    

000000000002e3e6 <vrna_md_defaults_reset>:
   2e3e6:	f3 0f 1e fa          	endbr64 
   2e3ea:	55                   	push   rbp
   2e3eb:	48 89 e5             	mov    rbp,rsp
   2e3ee:	48 83 ec 10          	sub    rsp,0x10
   2e3f2:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   2e3f6:	c7 05 d4 f3 21 00 02 00 00 00 	mov    DWORD PTR [rip+0x21f3d4],0x2        # 24d7d4 <defaults+0x14>
   2e400:	c7 05 ce f3 21 00 01 00 00 00 	mov    DWORD PTR [rip+0x21f3ce],0x1        # 24d7d8 <defaults+0x18>
   2e40a:	c7 05 c8 f3 21 00 00 00 00 00 	mov    DWORD PTR [rip+0x21f3c8],0x0        # 24d7dc <defaults+0x1c>
   2e414:	c7 05 c2 f3 21 00 00 00 00 00 	mov    DWORD PTR [rip+0x21f3c2],0x0        # 24d7e0 <defaults+0x20>
   2e41e:	c7 05 bc f3 21 00 00 00 00 00 	mov    DWORD PTR [rip+0x21f3bc],0x0        # 24d7e4 <defaults+0x24>
   2e428:	c7 05 b6 f3 21 00 00 00 00 00 	mov    DWORD PTR [rip+0x21f3b6],0x0        # 24d7e8 <defaults+0x28>
   2e432:	c7 05 b4 f3 21 00 00 00 00 00 	mov    DWORD PTR [rip+0x21f3b4],0x0        # 24d7f0 <defaults+0x30>
   2e43c:	c7 05 a6 f3 21 00 00 00 00 00 	mov    DWORD PTR [rip+0x21f3a6],0x0        # 24d7ec <defaults+0x2c>
   2e446:	c7 05 a4 f3 21 00 00 00 00 00 	mov    DWORD PTR [rip+0x21f3a4],0x0        # 24d7f4 <defaults+0x34>
   2e450:	c7 05 aa f3 21 00 01 00 00 00 	mov    DWORD PTR [rip+0x21f3aa],0x1        # 24d804 <defaults+0x44>
   2e45a:	c7 05 98 f3 21 00 01 00 00 00 	mov    DWORD PTR [rip+0x21f398],0x1        # 24d7fc <defaults+0x3c>
   2e464:	c6 05 95 f3 21 00 46 	mov    BYTE PTR [rip+0x21f395],0x46        # 24d800 <defaults+0x40>
   2e46b:	c7 05 83 f3 21 00 00 00 00 00 	mov    DWORD PTR [rip+0x21f383],0x0        # 24d7f8 <defaults+0x38>
   2e475:	c7 05 c9 f3 21 00 ff ff ff ff 	mov    DWORD PTR [rip+0x21f3c9],0xffffffff        # 24d848 <defaults+0x88>
   2e47f:	c7 05 c3 f3 21 00 03 00 00 00 	mov    DWORD PTR [rip+0x21f3c3],0x3        # 24d84c <defaults+0x8c>
   2e489:	c7 05 bd f3 21 00 ff ff ff ff 	mov    DWORD PTR [rip+0x21f3bd],0xffffffff        # 24d850 <defaults+0x90>
   2e493:	c7 05 b7 f3 21 00 00 00 00 00 	mov    DWORD PTR [rip+0x21f3b7],0x0        # 24d854 <defaults+0x94>
   2e49d:	c7 05 b1 f3 21 00 00 00 00 00 	mov    DWORD PTR [rip+0x21f3b1],0x0        # 24d858 <defaults+0x98>
   2e4a7:	f2 0f 10 05 99 58 1b 00 	movsd  xmm0,QWORD PTR [rip+0x1b5899]        # 1e3d48 <Law_and_Order+0x3c0>
   2e4af:	f2 0f 11 05 a9 f3 21 00 	movsd  QWORD PTR [rip+0x21f3a9],xmm0        # 24d860 <defaults+0xa0>
   2e4b7:	f2 0f 10 05 89 58 1b 00 	movsd  xmm0,QWORD PTR [rip+0x1b5889]        # 1e3d48 <Law_and_Order+0x3c0>
   2e4bf:	f2 0f 11 05 a1 f3 21 00 	movsd  QWORD PTR [rip+0x21f3a1],xmm0        # 24d868 <defaults+0xa8>
   2e4c7:	f2 0f 10 05 71 58 1b 00 	movsd  xmm0,QWORD PTR [rip+0x1b5871]        # 1e3d40 <Law_and_Order+0x3b8>
   2e4cf:	f2 0f 11 05 e9 f2 21 00 	movsd  QWORD PTR [rip+0x21f2e9],xmm0        # 24d7c0 <defaults>
   2e4d7:	f2 0f 10 05 69 58 1b 00 	movsd  xmm0,QWORD PTR [rip+0x1b5869]        # 1e3d48 <Law_and_Order+0x3c0>
   2e4df:	f2 0f 11 05 e1 f2 21 00 	movsd  QWORD PTR [rip+0x21f2e1],xmm0        # 24d7c8 <defaults+0x8>
   2e4e7:	c7 05 df f2 21 00 01 00 00 00 	mov    DWORD PTR [rip+0x21f2df],0x1        # 24d7d0 <defaults+0x10>
   2e4f1:	f2 0f 10 05 57 58 1b 00 	movsd  xmm0,QWORD PTR [rip+0x1b5857]        # 1e3d50 <Law_and_Order+0x3c8>
   2e4f9:	f2 0f 11 05 6f f3 21 00 	movsd  QWORD PTR [rip+0x21f36f],xmm0        # 24d870 <defaults+0xb0>
   2e501:	c6 05 00 f3 21 00 00 	mov    BYTE PTR [rip+0x21f300],0x0        # 24d808 <defaults+0x48>
   2e508:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
   2e50d:	0f 84 96 01 00 00    	je     2e6a9 <vrna_md_defaults_reset+0x2c3>
   2e513:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2e517:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
   2e51a:	89 c7                	mov    edi,eax
   2e51c:	e8 52 03 00 00       	call   2e873 <vrna_md_defaults_dangles>
   2e521:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2e525:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
   2e528:	89 c7                	mov    edi,eax
   2e52a:	e8 98 03 00 00       	call   2e8c7 <vrna_md_defaults_special_hp>
   2e52f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2e533:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
   2e536:	89 c7                	mov    edi,eax
   2e538:	e8 c4 03 00 00       	call   2e901 <vrna_md_defaults_noLP>
   2e53d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2e541:	8b 40 20             	mov    eax,DWORD PTR [rax+0x20]
   2e544:	89 c7                	mov    edi,eax
   2e546:	e8 f0 03 00 00       	call   2e93b <vrna_md_defaults_noGU>
   2e54b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2e54f:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
   2e552:	89 c7                	mov    edi,eax
   2e554:	e8 2c 04 00 00       	call   2e985 <vrna_md_defaults_noGUclosure>
   2e559:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2e55d:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
   2e560:	89 c7                	mov    edi,eax
   2e562:	e8 58 04 00 00       	call   2e9bf <vrna_md_defaults_logML>
   2e567:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2e56b:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
   2e56e:	89 c7                	mov    edi,eax
   2e570:	e8 be 04 00 00       	call   2ea33 <vrna_md_defaults_gquad>
   2e575:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2e579:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
   2e57c:	89 c7                	mov    edi,eax
   2e57e:	e8 76 04 00 00       	call   2e9f9 <vrna_md_defaults_circ>
   2e583:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2e587:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
   2e58a:	89 c7                	mov    edi,eax
   2e58c:	e8 dc 04 00 00       	call   2ea6d <vrna_md_defaults_uniq_ML>
   2e591:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2e595:	8b 40 44             	mov    eax,DWORD PTR [rax+0x44]
   2e598:	89 c7                	mov    edi,eax
   2e59a:	e8 10 06 00 00       	call   2ebaf <vrna_md_defaults_compute_bpp>
   2e59f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2e5a3:	8b 40 3c             	mov    eax,DWORD PTR [rax+0x3c]
   2e5a6:	89 c7                	mov    edi,eax
   2e5a8:	e8 5a 05 00 00       	call   2eb07 <vrna_md_defaults_backtrack>
   2e5ad:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2e5b1:	0f b6 40 40          	movzx  eax,BYTE PTR [rax+0x40]
   2e5b5:	0f be c0             	movsx  eax,al
   2e5b8:	89 c7                	mov    edi,eax
   2e5ba:	e8 76 05 00 00       	call   2eb35 <vrna_md_defaults_backtrack_type>
   2e5bf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2e5c3:	8b 40 38             	mov    eax,DWORD PTR [rax+0x38]
   2e5c6:	89 c7                	mov    edi,eax
   2e5c8:	e8 da 04 00 00       	call   2eaa7 <vrna_md_defaults_energy_set>
   2e5cd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2e5d1:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [rax+0x88]
   2e5d7:	89 c7                	mov    edi,eax
   2e5d9:	e8 1a 06 00 00       	call   2ebf8 <vrna_md_defaults_max_bp_span>
   2e5de:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2e5e2:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
   2e5e8:	89 c7                	mov    edi,eax
   2e5ea:	e8 49 06 00 00       	call   2ec38 <vrna_md_defaults_min_loop_size>
   2e5ef:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2e5f3:	8b 80 90 00 00 00    	mov    eax,DWORD PTR [rax+0x90]
   2e5f9:	89 c7                	mov    edi,eax
   2e5fb:	e8 69 06 00 00       	call   2ec69 <vrna_md_defaults_window_size>
   2e600:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2e604:	8b 80 94 00 00 00    	mov    eax,DWORD PTR [rax+0x94]
   2e60a:	89 c7                	mov    edi,eax
   2e60c:	e8 8c 06 00 00       	call   2ec9d <vrna_md_defaults_oldAliEn>
   2e611:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2e615:	8b 80 98 00 00 00    	mov    eax,DWORD PTR [rax+0x98]
   2e61b:	89 c7                	mov    edi,eax
   2e61d:	e8 b5 06 00 00       	call   2ecd7 <vrna_md_defaults_ribo>
   2e622:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2e626:	48 8b 80 a0 00 00 00 	mov    rax,QWORD PTR [rax+0xa0]
   2e62d:	66 48 0f 6e c0       	movq   xmm0,rax
   2e632:	e8 da 06 00 00       	call   2ed11 <vrna_md_defaults_cv_fact>
   2e637:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2e63b:	48 8b 80 a8 00 00 00 	mov    rax,QWORD PTR [rax+0xa8]
   2e642:	66 48 0f 6e c0       	movq   xmm0,rax
   2e647:	e8 01 07 00 00       	call   2ed4d <vrna_md_defaults_nc_fact>
   2e64c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2e650:	48 8b 00             	mov    rax,QWORD PTR [rax]
   2e653:	66 48 0f 6e c0       	movq   xmm0,rax
   2e658:	e8 5e 01 00 00       	call   2e7bb <vrna_md_defaults_temperature>
   2e65d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2e661:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
   2e665:	66 48 0f 6e c0       	movq   xmm0,rax
   2e66a:	e8 ae 01 00 00       	call   2e81d <vrna_md_defaults_betaScale>
   2e66f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2e673:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
   2e676:	89 c7                	mov    edi,eax
   2e678:	e8 cf 01 00 00       	call   2e84c <vrna_md_defaults_pf_smooth>
   2e67d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2e681:	48 8b 80 b0 00 00 00 	mov    rax,QWORD PTR [rax+0xb0]
   2e688:	66 48 0f 6e c0       	movq   xmm0,rax
   2e68d:	e8 f7 06 00 00       	call   2ed89 <vrna_md_defaults_sfact>
   2e692:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2e696:	48 83 c0 48          	add    rax,0x48
   2e69a:	48 89 c6             	mov    rsi,rax
   2e69d:	48 8d 3d 1c f1 21 00 	lea    rdi,[rip+0x21f11c]        # 24d7c0 <defaults>
   2e6a4:	e8 22 fb ff ff       	call   2e1cb <copy_nonstandards>
   2e6a9:	48 8d 3d 10 f1 21 00 	lea    rdi,[rip+0x21f110]        # 24d7c0 <defaults>
   2e6b0:	e8 03 07 00 00       	call   2edb8 <vrna_md_update>
   2e6b5:	f2 0f 10 05 03 f1 21 00 	movsd  xmm0,QWORD PTR [rip+0x21f103]        # 24d7c0 <defaults>
   2e6bd:	f2 0f 11 05 bb ef 21 00 	movsd  QWORD PTR [rip+0x21efbb],xmm0        # 24d680 <temperature>
   2e6c5:	f2 0f 10 05 8b 56 1b 00 	movsd  xmm0,QWORD PTR [rip+0x1b568b]        # 1e3d58 <Law_and_Order+0x3d0>
   2e6cd:	f2 0f 11 05 b3 ef 21 00 	movsd  QWORD PTR [rip+0x21efb3],xmm0        # 24d688 <pf_scale>
   2e6d5:	8b 05 f9 f0 21 00    	mov    eax,DWORD PTR [rip+0x21f0f9]        # 24d7d4 <defaults+0x14>
   2e6db:	89 05 af ef 21 00    	mov    DWORD PTR [rip+0x21efaf],eax        # 24d690 <dangles>
   2e6e1:	8b 05 f1 f0 21 00    	mov    eax,DWORD PTR [rip+0x21f0f1]        # 24d7d8 <defaults+0x18>
   2e6e7:	89 05 a7 ef 21 00    	mov    DWORD PTR [rip+0x21efa7],eax        # 24d694 <tetra_loop>
   2e6ed:	8b 05 e9 f0 21 00    	mov    eax,DWORD PTR [rip+0x21f0e9]        # 24d7dc <defaults+0x1c>
   2e6f3:	89 05 07 a9 2b 00    	mov    DWORD PTR [rip+0x2ba907],eax        # 2e9000 <noLonelyPairs>
   2e6f9:	8b 05 e1 f0 21 00    	mov    eax,DWORD PTR [rip+0x21f0e1]        # 24d7e0 <defaults+0x20>
   2e6ff:	89 05 ff a8 2b 00    	mov    DWORD PTR [rip+0x2ba8ff],eax        # 2e9004 <noGU>
   2e705:	8b 05 d9 f0 21 00    	mov    eax,DWORD PTR [rip+0x21f0d9]        # 24d7e4 <defaults+0x24>
   2e70b:	89 05 f7 a8 2b 00    	mov    DWORD PTR [rip+0x2ba8f7],eax        # 2e9008 <no_closingGU>
   2e711:	8b 05 d5 f0 21 00    	mov    eax,DWORD PTR [rip+0x21f0d5]        # 24d7ec <defaults+0x2c>
   2e717:	89 05 ef a8 2b 00    	mov    DWORD PTR [rip+0x2ba8ef],eax        # 2e900c <circ>
   2e71d:	8b 05 cd f0 21 00    	mov    eax,DWORD PTR [rip+0x21f0cd]        # 24d7f0 <defaults+0x30>
   2e723:	89 05 e7 a8 2b 00    	mov    DWORD PTR [rip+0x2ba8e7],eax        # 2e9010 <gquad>
   2e729:	8b 05 c5 f0 21 00    	mov    eax,DWORD PTR [rip+0x21f0c5]        # 24d7f4 <defaults+0x34>
   2e72f:	89 05 df a8 2b 00    	mov    DWORD PTR [rip+0x2ba8df],eax        # 2e9014 <uniq_ML>
   2e735:	8b 05 bd f0 21 00    	mov    eax,DWORD PTR [rip+0x21f0bd]        # 24d7f8 <defaults+0x38>
   2e73b:	89 05 d7 a8 2b 00    	mov    DWORD PTR [rip+0x2ba8d7],eax        # 2e9018 <energy_set>
   2e741:	8b 05 bd f0 21 00    	mov    eax,DWORD PTR [rip+0x21f0bd]        # 24d804 <defaults+0x44>
   2e747:	89 05 4b ef 21 00    	mov    DWORD PTR [rip+0x21ef4b],eax        # 24d698 <do_backtrack>
   2e74d:	0f b6 05 ac f0 21 00 	movzx  eax,BYTE PTR [rip+0x21f0ac]        # 24d800 <defaults+0x40>
   2e754:	88 05 42 ef 21 00    	mov    BYTE PTR [rip+0x21ef42],al        # 24d69c <backtrack_type>
   2e75a:	48 8d 05 a7 f0 21 00 	lea    rax,[rip+0x21f0a7]        # 24d808 <defaults+0x48>
   2e761:	48 89 05 b8 a8 2b 00 	mov    QWORD PTR [rip+0x2ba8b8],rax        # 2e9020 <nonstandards>
   2e768:	8b 05 da f0 21 00    	mov    eax,DWORD PTR [rip+0x21f0da]        # 24d848 <defaults+0x88>
   2e76e:	89 05 2c ef 21 00    	mov    DWORD PTR [rip+0x21ef2c],eax        # 24d6a0 <max_bp_span>
   2e774:	8b 05 da f0 21 00    	mov    eax,DWORD PTR [rip+0x21f0da]        # 24d854 <defaults+0x94>
   2e77a:	89 05 a8 a8 2b 00    	mov    DWORD PTR [rip+0x2ba8a8],eax        # 2e9028 <oldAliEn>
   2e780:	8b 05 d2 f0 21 00    	mov    eax,DWORD PTR [rip+0x21f0d2]        # 24d858 <defaults+0x98>
   2e786:	89 05 a0 a8 2b 00    	mov    DWORD PTR [rip+0x2ba8a0],eax        # 2e902c <ribo>
   2e78c:	f2 0f 10 05 cc f0 21 00 	movsd  xmm0,QWORD PTR [rip+0x21f0cc]        # 24d860 <defaults+0xa0>
   2e794:	f2 0f 11 05 0c ef 21 00 	movsd  QWORD PTR [rip+0x21ef0c],xmm0        # 24d6a8 <cv_fact>
   2e79c:	f2 0f 10 05 c4 f0 21 00 	movsd  xmm0,QWORD PTR [rip+0x21f0c4]        # 24d868 <defaults+0xa8>
   2e7a4:	f2 0f 11 05 04 ef 21 00 	movsd  QWORD PTR [rip+0x21ef04],xmm0        # 24d6b0 <nc_fact>
   2e7ac:	8b 05 36 f0 21 00    	mov    eax,DWORD PTR [rip+0x21f036]        # 24d7e8 <defaults+0x28>
   2e7b2:	89 05 78 a8 2b 00    	mov    DWORD PTR [rip+0x2ba878],eax        # 2e9030 <logML>
   2e7b8:	90                   	nop
   2e7b9:	c9                   	leave  
   2e7ba:	c3                   	ret    

000000000002e7bb <vrna_md_defaults_temperature>:
   2e7bb:	f3 0f 1e fa          	endbr64 
   2e7bf:	55                   	push   rbp
   2e7c0:	48 89 e5             	mov    rbp,rsp
   2e7c3:	48 83 ec 10          	sub    rsp,0x10
   2e7c7:	f2 0f 11 45 f8       	movsd  QWORD PTR [rbp-0x8],xmm0
   2e7cc:	f2 0f 10 45 f8       	movsd  xmm0,QWORD PTR [rbp-0x8]
   2e7d1:	66 0f 2f 05 87 55 1b 00 	comisd xmm0,QWORD PTR [rip+0x1b5587]        # 1e3d60 <Law_and_Order+0x3d8>
   2e7d9:	72 1c                	jb     2e7f7 <vrna_md_defaults_temperature+0x3c>
   2e7db:	f2 0f 10 45 f8       	movsd  xmm0,QWORD PTR [rbp-0x8]
   2e7e0:	f2 0f 11 05 d8 ef 21 00 	movsd  QWORD PTR [rip+0x21efd8],xmm0        # 24d7c0 <defaults>
   2e7e8:	f2 0f 10 45 f8       	movsd  xmm0,QWORD PTR [rbp-0x8]
   2e7ed:	f2 0f 11 05 8b ee 21 00 	movsd  QWORD PTR [rip+0x21ee8b],xmm0        # 24d680 <temperature>
   2e7f5:	eb 11                	jmp    2e808 <vrna_md_defaults_temperature+0x4d>
   2e7f7:	48 8d 3d 42 53 1b 00 	lea    rdi,[rip+0x1b5342]        # 1e3b40 <Law_and_Order+0x1b8>
   2e7fe:	b8 00 00 00 00       	mov    eax,0x0
   2e803:	e8 93 d9 ff ff       	call   2c19b <vrna_message_warning>
   2e808:	90                   	nop
   2e809:	c9                   	leave  
   2e80a:	c3                   	ret    

000000000002e80b <vrna_md_defaults_temperature_get>:
   2e80b:	f3 0f 1e fa          	endbr64 
   2e80f:	55                   	push   rbp
   2e810:	48 89 e5             	mov    rbp,rsp
   2e813:	f2 0f 10 05 a5 ef 21 00 	movsd  xmm0,QWORD PTR [rip+0x21efa5]        # 24d7c0 <defaults>
   2e81b:	5d                   	pop    rbp
   2e81c:	c3                   	ret    

000000000002e81d <vrna_md_defaults_betaScale>:
   2e81d:	f3 0f 1e fa          	endbr64 
   2e821:	55                   	push   rbp
   2e822:	48 89 e5             	mov    rbp,rsp
   2e825:	f2 0f 11 45 f8       	movsd  QWORD PTR [rbp-0x8],xmm0
   2e82a:	f2 0f 10 45 f8       	movsd  xmm0,QWORD PTR [rbp-0x8]
   2e82f:	f2 0f 11 05 91 ef 21 00 	movsd  QWORD PTR [rip+0x21ef91],xmm0        # 24d7c8 <defaults+0x8>
   2e837:	90                   	nop
   2e838:	5d                   	pop    rbp
   2e839:	c3                   	ret    

000000000002e83a <vrna_md_defaults_betaScale_get>:
   2e83a:	f3 0f 1e fa          	endbr64 
   2e83e:	55                   	push   rbp
   2e83f:	48 89 e5             	mov    rbp,rsp
   2e842:	f2 0f 10 05 7e ef 21 00 	movsd  xmm0,QWORD PTR [rip+0x21ef7e]        # 24d7c8 <defaults+0x8>
   2e84a:	5d                   	pop    rbp
   2e84b:	c3                   	ret    

000000000002e84c <vrna_md_defaults_pf_smooth>:
   2e84c:	f3 0f 1e fa          	endbr64 
   2e850:	55                   	push   rbp
   2e851:	48 89 e5             	mov    rbp,rsp
   2e854:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
   2e857:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2e85a:	89 05 70 ef 21 00    	mov    DWORD PTR [rip+0x21ef70],eax        # 24d7d0 <defaults+0x10>
   2e860:	90                   	nop
   2e861:	5d                   	pop    rbp
   2e862:	c3                   	ret    

000000000002e863 <vrna_md_defaults_pf_smooth_get>:
   2e863:	f3 0f 1e fa          	endbr64 
   2e867:	55                   	push   rbp
   2e868:	48 89 e5             	mov    rbp,rsp
   2e86b:	8b 05 5f ef 21 00    	mov    eax,DWORD PTR [rip+0x21ef5f]        # 24d7d0 <defaults+0x10>
   2e871:	5d                   	pop    rbp
   2e872:	c3                   	ret    

000000000002e873 <vrna_md_defaults_dangles>:
   2e873:	f3 0f 1e fa          	endbr64 
   2e877:	55                   	push   rbp
   2e878:	48 89 e5             	mov    rbp,rsp
   2e87b:	48 83 ec 10          	sub    rsp,0x10
   2e87f:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
   2e882:	83 7d fc 00          	cmp    DWORD PTR [rbp-0x4],0x0
   2e886:	78 1a                	js     2e8a2 <vrna_md_defaults_dangles+0x2f>
   2e888:	83 7d fc 03          	cmp    DWORD PTR [rbp-0x4],0x3
   2e88c:	7f 14                	jg     2e8a2 <vrna_md_defaults_dangles+0x2f>
   2e88e:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2e891:	89 05 3d ef 21 00    	mov    DWORD PTR [rip+0x21ef3d],eax        # 24d7d4 <defaults+0x14>
   2e897:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2e89a:	89 05 f0 ed 21 00    	mov    DWORD PTR [rip+0x21edf0],eax        # 24d690 <dangles>
   2e8a0:	eb 12                	jmp    2e8b4 <vrna_md_defaults_dangles+0x41>
   2e8a2:	48 8d 3d 0f 53 1b 00 	lea    rdi,[rip+0x1b530f]        # 1e3bb8 <Law_and_Order+0x230>
   2e8a9:	b8 00 00 00 00       	mov    eax,0x0
   2e8ae:	e8 e8 d8 ff ff       	call   2c19b <vrna_message_warning>
   2e8b3:	90                   	nop
   2e8b4:	90                   	nop
   2e8b5:	c9                   	leave  
   2e8b6:	c3                   	ret    

000000000002e8b7 <vrna_md_defaults_dangles_get>:
   2e8b7:	f3 0f 1e fa          	endbr64 
   2e8bb:	55                   	push   rbp
   2e8bc:	48 89 e5             	mov    rbp,rsp
   2e8bf:	8b 05 0f ef 21 00    	mov    eax,DWORD PTR [rip+0x21ef0f]        # 24d7d4 <defaults+0x14>
   2e8c5:	5d                   	pop    rbp
   2e8c6:	c3                   	ret    

000000000002e8c7 <vrna_md_defaults_special_hp>:
   2e8c7:	f3 0f 1e fa          	endbr64 
   2e8cb:	55                   	push   rbp
   2e8cc:	48 89 e5             	mov    rbp,rsp
   2e8cf:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
   2e8d2:	83 7d fc 00          	cmp    DWORD PTR [rbp-0x4],0x0
   2e8d6:	0f 95 c0             	setne  al
   2e8d9:	0f b6 c0             	movzx  eax,al
   2e8dc:	89 05 f6 ee 21 00    	mov    DWORD PTR [rip+0x21eef6],eax        # 24d7d8 <defaults+0x18>
   2e8e2:	8b 05 f0 ee 21 00    	mov    eax,DWORD PTR [rip+0x21eef0]        # 24d7d8 <defaults+0x18>
   2e8e8:	89 05 a6 ed 21 00    	mov    DWORD PTR [rip+0x21eda6],eax        # 24d694 <tetra_loop>
   2e8ee:	90                   	nop
   2e8ef:	5d                   	pop    rbp
   2e8f0:	c3                   	ret    

000000000002e8f1 <vrna_md_defaults_special_hp_get>:
   2e8f1:	f3 0f 1e fa          	endbr64 
   2e8f5:	55                   	push   rbp
   2e8f6:	48 89 e5             	mov    rbp,rsp
   2e8f9:	8b 05 d9 ee 21 00    	mov    eax,DWORD PTR [rip+0x21eed9]        # 24d7d8 <defaults+0x18>
   2e8ff:	5d                   	pop    rbp
   2e900:	c3                   	ret    

000000000002e901 <vrna_md_defaults_noLP>:
   2e901:	f3 0f 1e fa          	endbr64 
   2e905:	55                   	push   rbp
   2e906:	48 89 e5             	mov    rbp,rsp
   2e909:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
   2e90c:	83 7d fc 00          	cmp    DWORD PTR [rbp-0x4],0x0
   2e910:	0f 95 c0             	setne  al
   2e913:	0f b6 c0             	movzx  eax,al
   2e916:	89 05 c0 ee 21 00    	mov    DWORD PTR [rip+0x21eec0],eax        # 24d7dc <defaults+0x1c>
   2e91c:	8b 05 ba ee 21 00    	mov    eax,DWORD PTR [rip+0x21eeba]        # 24d7dc <defaults+0x1c>
   2e922:	89 05 d8 a6 2b 00    	mov    DWORD PTR [rip+0x2ba6d8],eax        # 2e9000 <noLonelyPairs>
   2e928:	90                   	nop
   2e929:	5d                   	pop    rbp
   2e92a:	c3                   	ret    

000000000002e92b <vrna_md_defaults_noLP_get>:
   2e92b:	f3 0f 1e fa          	endbr64 
   2e92f:	55                   	push   rbp
   2e930:	48 89 e5             	mov    rbp,rsp
   2e933:	8b 05 a3 ee 21 00    	mov    eax,DWORD PTR [rip+0x21eea3]        # 24d7dc <defaults+0x1c>
   2e939:	5d                   	pop    rbp
   2e93a:	c3                   	ret    

000000000002e93b <vrna_md_defaults_noGU>:
   2e93b:	f3 0f 1e fa          	endbr64 
   2e93f:	55                   	push   rbp
   2e940:	48 89 e5             	mov    rbp,rsp
   2e943:	48 83 ec 10          	sub    rsp,0x10
   2e947:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
   2e94a:	83 7d fc 00          	cmp    DWORD PTR [rbp-0x4],0x0
   2e94e:	0f 95 c0             	setne  al
   2e951:	0f b6 c0             	movzx  eax,al
   2e954:	89 05 86 ee 21 00    	mov    DWORD PTR [rip+0x21ee86],eax        # 24d7e0 <defaults+0x20>
   2e95a:	8b 05 80 ee 21 00    	mov    eax,DWORD PTR [rip+0x21ee80]        # 24d7e0 <defaults+0x20>
   2e960:	89 05 9e a6 2b 00    	mov    DWORD PTR [rip+0x2ba69e],eax        # 2e9004 <noGU>
   2e966:	48 8d 3d 53 ee 21 00 	lea    rdi,[rip+0x21ee53]        # 24d7c0 <defaults>
   2e96d:	e8 46 04 00 00       	call   2edb8 <vrna_md_update>
   2e972:	90                   	nop
   2e973:	c9                   	leave  
   2e974:	c3                   	ret    

000000000002e975 <vrna_md_defaults_noGU_get>:
   2e975:	f3 0f 1e fa          	endbr64 
   2e979:	55                   	push   rbp
   2e97a:	48 89 e5             	mov    rbp,rsp
   2e97d:	8b 05 5d ee 21 00    	mov    eax,DWORD PTR [rip+0x21ee5d]        # 24d7e0 <defaults+0x20>
   2e983:	5d                   	pop    rbp
   2e984:	c3                   	ret    

000000000002e985 <vrna_md_defaults_noGUclosure>:
   2e985:	f3 0f 1e fa          	endbr64 
   2e989:	55                   	push   rbp
   2e98a:	48 89 e5             	mov    rbp,rsp
   2e98d:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
   2e990:	83 7d fc 00          	cmp    DWORD PTR [rbp-0x4],0x0
   2e994:	0f 95 c0             	setne  al
   2e997:	0f b6 c0             	movzx  eax,al
   2e99a:	89 05 44 ee 21 00    	mov    DWORD PTR [rip+0x21ee44],eax        # 24d7e4 <defaults+0x24>
   2e9a0:	8b 05 3e ee 21 00    	mov    eax,DWORD PTR [rip+0x21ee3e]        # 24d7e4 <defaults+0x24>
   2e9a6:	89 05 5c a6 2b 00    	mov    DWORD PTR [rip+0x2ba65c],eax        # 2e9008 <no_closingGU>
   2e9ac:	90                   	nop
   2e9ad:	5d                   	pop    rbp
   2e9ae:	c3                   	ret    

000000000002e9af <vrna_md_defaults_noGUclosure_get>:
   2e9af:	f3 0f 1e fa          	endbr64 
   2e9b3:	55                   	push   rbp
   2e9b4:	48 89 e5             	mov    rbp,rsp
   2e9b7:	8b 05 27 ee 21 00    	mov    eax,DWORD PTR [rip+0x21ee27]        # 24d7e4 <defaults+0x24>
   2e9bd:	5d                   	pop    rbp
   2e9be:	c3                   	ret    

000000000002e9bf <vrna_md_defaults_logML>:
   2e9bf:	f3 0f 1e fa          	endbr64 
   2e9c3:	55                   	push   rbp
   2e9c4:	48 89 e5             	mov    rbp,rsp
   2e9c7:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
   2e9ca:	83 7d fc 00          	cmp    DWORD PTR [rbp-0x4],0x0
   2e9ce:	0f 95 c0             	setne  al
   2e9d1:	0f b6 c0             	movzx  eax,al
   2e9d4:	89 05 0e ee 21 00    	mov    DWORD PTR [rip+0x21ee0e],eax        # 24d7e8 <defaults+0x28>
   2e9da:	8b 05 08 ee 21 00    	mov    eax,DWORD PTR [rip+0x21ee08]        # 24d7e8 <defaults+0x28>
   2e9e0:	89 05 4a a6 2b 00    	mov    DWORD PTR [rip+0x2ba64a],eax        # 2e9030 <logML>
   2e9e6:	90                   	nop
   2e9e7:	5d                   	pop    rbp
   2e9e8:	c3                   	ret    

000000000002e9e9 <vrna_md_defaults_logML_get>:
   2e9e9:	f3 0f 1e fa          	endbr64 
   2e9ed:	55                   	push   rbp
   2e9ee:	48 89 e5             	mov    rbp,rsp
   2e9f1:	8b 05 f1 ed 21 00    	mov    eax,DWORD PTR [rip+0x21edf1]        # 24d7e8 <defaults+0x28>
   2e9f7:	5d                   	pop    rbp
   2e9f8:	c3                   	ret    

000000000002e9f9 <vrna_md_defaults_circ>:
   2e9f9:	f3 0f 1e fa          	endbr64 
   2e9fd:	55                   	push   rbp
   2e9fe:	48 89 e5             	mov    rbp,rsp
   2ea01:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
   2ea04:	83 7d fc 00          	cmp    DWORD PTR [rbp-0x4],0x0
   2ea08:	0f 95 c0             	setne  al
   2ea0b:	0f b6 c0             	movzx  eax,al
   2ea0e:	89 05 d8 ed 21 00    	mov    DWORD PTR [rip+0x21edd8],eax        # 24d7ec <defaults+0x2c>
   2ea14:	8b 05 d2 ed 21 00    	mov    eax,DWORD PTR [rip+0x21edd2]        # 24d7ec <defaults+0x2c>
   2ea1a:	89 05 ec a5 2b 00    	mov    DWORD PTR [rip+0x2ba5ec],eax        # 2e900c <circ>
   2ea20:	90                   	nop
   2ea21:	5d                   	pop    rbp
   2ea22:	c3                   	ret    

000000000002ea23 <vrna_md_defaults_circ_get>:
   2ea23:	f3 0f 1e fa          	endbr64 
   2ea27:	55                   	push   rbp
   2ea28:	48 89 e5             	mov    rbp,rsp
   2ea2b:	8b 05 bb ed 21 00    	mov    eax,DWORD PTR [rip+0x21edbb]        # 24d7ec <defaults+0x2c>
   2ea31:	5d                   	pop    rbp
   2ea32:	c3                   	ret    

000000000002ea33 <vrna_md_defaults_gquad>:
   2ea33:	f3 0f 1e fa          	endbr64 
   2ea37:	55                   	push   rbp
   2ea38:	48 89 e5             	mov    rbp,rsp
   2ea3b:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
   2ea3e:	83 7d fc 00          	cmp    DWORD PTR [rbp-0x4],0x0
   2ea42:	0f 95 c0             	setne  al
   2ea45:	0f b6 c0             	movzx  eax,al
   2ea48:	89 05 a2 ed 21 00    	mov    DWORD PTR [rip+0x21eda2],eax        # 24d7f0 <defaults+0x30>
   2ea4e:	8b 05 9c ed 21 00    	mov    eax,DWORD PTR [rip+0x21ed9c]        # 24d7f0 <defaults+0x30>
   2ea54:	89 05 b6 a5 2b 00    	mov    DWORD PTR [rip+0x2ba5b6],eax        # 2e9010 <gquad>
   2ea5a:	90                   	nop
   2ea5b:	5d                   	pop    rbp
   2ea5c:	c3                   	ret    

000000000002ea5d <vrna_md_defaults_gquad_get>:
   2ea5d:	f3 0f 1e fa          	endbr64 
   2ea61:	55                   	push   rbp
   2ea62:	48 89 e5             	mov    rbp,rsp
   2ea65:	8b 05 85 ed 21 00    	mov    eax,DWORD PTR [rip+0x21ed85]        # 24d7f0 <defaults+0x30>
   2ea6b:	5d                   	pop    rbp
   2ea6c:	c3                   	ret    

000000000002ea6d <vrna_md_defaults_uniq_ML>:
   2ea6d:	f3 0f 1e fa          	endbr64 
   2ea71:	55                   	push   rbp
   2ea72:	48 89 e5             	mov    rbp,rsp
   2ea75:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
   2ea78:	83 7d fc 00          	cmp    DWORD PTR [rbp-0x4],0x0
   2ea7c:	0f 95 c0             	setne  al
   2ea7f:	0f b6 c0             	movzx  eax,al
   2ea82:	89 05 6c ed 21 00    	mov    DWORD PTR [rip+0x21ed6c],eax        # 24d7f4 <defaults+0x34>
   2ea88:	8b 05 66 ed 21 00    	mov    eax,DWORD PTR [rip+0x21ed66]        # 24d7f4 <defaults+0x34>
   2ea8e:	89 05 80 a5 2b 00    	mov    DWORD PTR [rip+0x2ba580],eax        # 2e9014 <uniq_ML>
   2ea94:	90                   	nop
   2ea95:	5d                   	pop    rbp
   2ea96:	c3                   	ret    

000000000002ea97 <vrna_md_defaults_uniq_ML_get>:
   2ea97:	f3 0f 1e fa          	endbr64 
   2ea9b:	55                   	push   rbp
   2ea9c:	48 89 e5             	mov    rbp,rsp
   2ea9f:	8b 05 4f ed 21 00    	mov    eax,DWORD PTR [rip+0x21ed4f]        # 24d7f4 <defaults+0x34>
   2eaa5:	5d                   	pop    rbp
   2eaa6:	c3                   	ret    

000000000002eaa7 <vrna_md_defaults_energy_set>:
   2eaa7:	f3 0f 1e fa          	endbr64 
   2eaab:	55                   	push   rbp
   2eaac:	48 89 e5             	mov    rbp,rsp
   2eaaf:	48 83 ec 10          	sub    rsp,0x10
   2eab3:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
   2eab6:	83 7d fc 00          	cmp    DWORD PTR [rbp-0x4],0x0
   2eaba:	78 26                	js     2eae2 <vrna_md_defaults_energy_set+0x3b>
   2eabc:	83 7d fc 03          	cmp    DWORD PTR [rbp-0x4],0x3
   2eac0:	7f 20                	jg     2eae2 <vrna_md_defaults_energy_set+0x3b>
   2eac2:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2eac5:	89 05 2d ed 21 00    	mov    DWORD PTR [rip+0x21ed2d],eax        # 24d7f8 <defaults+0x38>
   2eacb:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2eace:	89 05 44 a5 2b 00    	mov    DWORD PTR [rip+0x2ba544],eax        # 2e9018 <energy_set>
   2ead4:	48 8d 3d e5 ec 21 00 	lea    rdi,[rip+0x21ece5]        # 24d7c0 <defaults>
   2eadb:	e8 d8 02 00 00       	call   2edb8 <vrna_md_update>
   2eae0:	eb 12                	jmp    2eaf4 <vrna_md_defaults_energy_set+0x4d>
   2eae2:	48 8d 3d 37 51 1b 00 	lea    rdi,[rip+0x1b5137]        # 1e3c20 <Law_and_Order+0x298>
   2eae9:	b8 00 00 00 00       	mov    eax,0x0
   2eaee:	e8 a8 d6 ff ff       	call   2c19b <vrna_message_warning>
   2eaf3:	90                   	nop
   2eaf4:	90                   	nop
   2eaf5:	c9                   	leave  
   2eaf6:	c3                   	ret    

000000000002eaf7 <vrna_md_defaults_energy_set_get>:
   2eaf7:	f3 0f 1e fa          	endbr64 
   2eafb:	55                   	push   rbp
   2eafc:	48 89 e5             	mov    rbp,rsp
   2eaff:	8b 05 f3 ec 21 00    	mov    eax,DWORD PTR [rip+0x21ecf3]        # 24d7f8 <defaults+0x38>
   2eb05:	5d                   	pop    rbp
   2eb06:	c3                   	ret    

000000000002eb07 <vrna_md_defaults_backtrack>:
   2eb07:	f3 0f 1e fa          	endbr64 
   2eb0b:	55                   	push   rbp
   2eb0c:	48 89 e5             	mov    rbp,rsp
   2eb0f:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
   2eb12:	83 7d fc 00          	cmp    DWORD PTR [rbp-0x4],0x0
   2eb16:	0f 95 c0             	setne  al
   2eb19:	0f b6 c0             	movzx  eax,al
   2eb1c:	89 05 da ec 21 00    	mov    DWORD PTR [rip+0x21ecda],eax        # 24d7fc <defaults+0x3c>
   2eb22:	90                   	nop
   2eb23:	5d                   	pop    rbp
   2eb24:	c3                   	ret    

000000000002eb25 <vrna_md_defaults_backtrack_get>:
   2eb25:	f3 0f 1e fa          	endbr64 
   2eb29:	55                   	push   rbp
   2eb2a:	48 89 e5             	mov    rbp,rsp
   2eb2d:	8b 05 c9 ec 21 00    	mov    eax,DWORD PTR [rip+0x21ecc9]        # 24d7fc <defaults+0x3c>
   2eb33:	5d                   	pop    rbp
   2eb34:	c3                   	ret    

000000000002eb35 <vrna_md_defaults_backtrack_type>:
   2eb35:	f3 0f 1e fa          	endbr64 
   2eb39:	55                   	push   rbp
   2eb3a:	48 89 e5             	mov    rbp,rsp
   2eb3d:	48 83 ec 10          	sub    rsp,0x10
   2eb41:	89 f8                	mov    eax,edi
   2eb43:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
   2eb46:	0f be 45 fc          	movsx  eax,BYTE PTR [rbp-0x4]
   2eb4a:	83 e8 43             	sub    eax,0x43
   2eb4d:	83 f8 0a             	cmp    eax,0xa
   2eb50:	0f 97 c2             	seta   dl
   2eb53:	84 d2                	test   dl,dl
   2eb55:	75 32                	jne    2eb89 <vrna_md_defaults_backtrack_type+0x54>
   2eb57:	ba 01 00 00 00       	mov    edx,0x1
   2eb5c:	89 c1                	mov    ecx,eax
   2eb5e:	48 d3 e2             	shl    rdx,cl
   2eb61:	48 89 d0             	mov    rax,rdx
   2eb64:	25 09 04 00 00       	and    eax,0x409
   2eb69:	48 85 c0             	test   rax,rax
   2eb6c:	0f 95 c0             	setne  al
   2eb6f:	84 c0                	test   al,al
   2eb71:	74 16                	je     2eb89 <vrna_md_defaults_backtrack_type+0x54>
   2eb73:	0f b6 45 fc          	movzx  eax,BYTE PTR [rbp-0x4]
   2eb77:	88 05 83 ec 21 00    	mov    BYTE PTR [rip+0x21ec83],al        # 24d800 <defaults+0x40>
   2eb7d:	0f b6 45 fc          	movzx  eax,BYTE PTR [rbp-0x4]
   2eb81:	88 05 15 eb 21 00    	mov    BYTE PTR [rip+0x21eb15],al        # 24d69c <backtrack_type>
   2eb87:	eb 12                	jmp    2eb9b <vrna_md_defaults_backtrack_type+0x66>
   2eb89:	48 8d 3d 00 51 1b 00 	lea    rdi,[rip+0x1b5100]        # 1e3c90 <Law_and_Order+0x308>
   2eb90:	b8 00 00 00 00       	mov    eax,0x0
   2eb95:	e8 01 d6 ff ff       	call   2c19b <vrna_message_warning>
   2eb9a:	90                   	nop
   2eb9b:	90                   	nop
   2eb9c:	c9                   	leave  
   2eb9d:	c3                   	ret    

000000000002eb9e <vrna_md_defaults_backtrack_type_get>:
   2eb9e:	f3 0f 1e fa          	endbr64 
   2eba2:	55                   	push   rbp
   2eba3:	48 89 e5             	mov    rbp,rsp
   2eba6:	0f b6 05 53 ec 21 00 	movzx  eax,BYTE PTR [rip+0x21ec53]        # 24d800 <defaults+0x40>
   2ebad:	5d                   	pop    rbp
   2ebae:	c3                   	ret    

000000000002ebaf <vrna_md_defaults_compute_bpp>:
   2ebaf:	f3 0f 1e fa          	endbr64 
   2ebb3:	55                   	push   rbp
   2ebb4:	48 89 e5             	mov    rbp,rsp
   2ebb7:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
   2ebba:	83 7d fc 00          	cmp    DWORD PTR [rbp-0x4],0x0
   2ebbe:	78 1a                	js     2ebda <vrna_md_defaults_compute_bpp+0x2b>
   2ebc0:	83 7d fc 02          	cmp    DWORD PTR [rbp-0x4],0x2
   2ebc4:	7f 14                	jg     2ebda <vrna_md_defaults_compute_bpp+0x2b>
   2ebc6:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2ebc9:	89 05 35 ec 21 00    	mov    DWORD PTR [rip+0x21ec35],eax        # 24d804 <defaults+0x44>
   2ebcf:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2ebd2:	89 05 c0 ea 21 00    	mov    DWORD PTR [rip+0x21eac0],eax        # 24d698 <do_backtrack>
   2ebd8:	eb 0b                	jmp    2ebe5 <vrna_md_defaults_compute_bpp+0x36>
   2ebda:	c7 05 20 ec 21 00 01 00 00 00 	mov    DWORD PTR [rip+0x21ec20],0x1        # 24d804 <defaults+0x44>
   2ebe4:	90                   	nop
   2ebe5:	90                   	nop
   2ebe6:	5d                   	pop    rbp
   2ebe7:	c3                   	ret    

000000000002ebe8 <vrna_md_defaults_compute_bpp_get>:
   2ebe8:	f3 0f 1e fa          	endbr64 
   2ebec:	55                   	push   rbp
   2ebed:	48 89 e5             	mov    rbp,rsp
   2ebf0:	8b 05 0e ec 21 00    	mov    eax,DWORD PTR [rip+0x21ec0e]        # 24d804 <defaults+0x44>
   2ebf6:	5d                   	pop    rbp
   2ebf7:	c3                   	ret    

000000000002ebf8 <vrna_md_defaults_max_bp_span>:
   2ebf8:	f3 0f 1e fa          	endbr64 
   2ebfc:	55                   	push   rbp
   2ebfd:	48 89 e5             	mov    rbp,rsp
   2ec00:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
   2ec03:	83 7d fc 00          	cmp    DWORD PTR [rbp-0x4],0x0
   2ec07:	7e 05                	jle    2ec0e <vrna_md_defaults_max_bp_span+0x16>
   2ec09:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2ec0c:	eb 05                	jmp    2ec13 <vrna_md_defaults_max_bp_span+0x1b>
   2ec0e:	b8 ff ff ff ff       	mov    eax,0xffffffff
   2ec13:	89 05 2f ec 21 00    	mov    DWORD PTR [rip+0x21ec2f],eax        # 24d848 <defaults+0x88>
   2ec19:	8b 05 29 ec 21 00    	mov    eax,DWORD PTR [rip+0x21ec29]        # 24d848 <defaults+0x88>
   2ec1f:	89 05 7b ea 21 00    	mov    DWORD PTR [rip+0x21ea7b],eax        # 24d6a0 <max_bp_span>
   2ec25:	90                   	nop
   2ec26:	5d                   	pop    rbp
   2ec27:	c3                   	ret    

000000000002ec28 <vrna_md_defaults_max_bp_span_get>:
   2ec28:	f3 0f 1e fa          	endbr64 
   2ec2c:	55                   	push   rbp
   2ec2d:	48 89 e5             	mov    rbp,rsp
   2ec30:	8b 05 12 ec 21 00    	mov    eax,DWORD PTR [rip+0x21ec12]        # 24d848 <defaults+0x88>
   2ec36:	5d                   	pop    rbp
   2ec37:	c3                   	ret    

000000000002ec38 <vrna_md_defaults_min_loop_size>:
   2ec38:	f3 0f 1e fa          	endbr64 
   2ec3c:	55                   	push   rbp
   2ec3d:	48 89 e5             	mov    rbp,rsp
   2ec40:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
   2ec43:	b8 00 00 00 00       	mov    eax,0x0
   2ec48:	83 7d fc 00          	cmp    DWORD PTR [rbp-0x4],0x0
   2ec4c:	0f 49 45 fc          	cmovns eax,DWORD PTR [rbp-0x4]
   2ec50:	89 05 f6 eb 21 00    	mov    DWORD PTR [rip+0x21ebf6],eax        # 24d84c <defaults+0x8c>
   2ec56:	90                   	nop
   2ec57:	5d                   	pop    rbp
   2ec58:	c3                   	ret    

000000000002ec59 <vrna_md_defaults_min_loop_size_get>:
   2ec59:	f3 0f 1e fa          	endbr64 
   2ec5d:	55                   	push   rbp
   2ec5e:	48 89 e5             	mov    rbp,rsp
   2ec61:	8b 05 e5 eb 21 00    	mov    eax,DWORD PTR [rip+0x21ebe5]        # 24d84c <defaults+0x8c>
   2ec67:	5d                   	pop    rbp
   2ec68:	c3                   	ret    

000000000002ec69 <vrna_md_defaults_window_size>:
   2ec69:	f3 0f 1e fa          	endbr64 
   2ec6d:	55                   	push   rbp
   2ec6e:	48 89 e5             	mov    rbp,rsp
   2ec71:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
   2ec74:	83 7d fc 00          	cmp    DWORD PTR [rbp-0x4],0x0
   2ec78:	7e 05                	jle    2ec7f <vrna_md_defaults_window_size+0x16>
   2ec7a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2ec7d:	eb 05                	jmp    2ec84 <vrna_md_defaults_window_size+0x1b>
   2ec7f:	b8 ff ff ff ff       	mov    eax,0xffffffff
   2ec84:	89 05 c6 eb 21 00    	mov    DWORD PTR [rip+0x21ebc6],eax        # 24d850 <defaults+0x90>
   2ec8a:	90                   	nop
   2ec8b:	5d                   	pop    rbp
   2ec8c:	c3                   	ret    

000000000002ec8d <vrna_md_defaults_window_size_get>:
   2ec8d:	f3 0f 1e fa          	endbr64 
   2ec91:	55                   	push   rbp
   2ec92:	48 89 e5             	mov    rbp,rsp
   2ec95:	8b 05 b5 eb 21 00    	mov    eax,DWORD PTR [rip+0x21ebb5]        # 24d850 <defaults+0x90>
   2ec9b:	5d                   	pop    rbp
   2ec9c:	c3                   	ret    

000000000002ec9d <vrna_md_defaults_oldAliEn>:
   2ec9d:	f3 0f 1e fa          	endbr64 
   2eca1:	55                   	push   rbp
   2eca2:	48 89 e5             	mov    rbp,rsp
   2eca5:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
   2eca8:	83 7d fc 00          	cmp    DWORD PTR [rbp-0x4],0x0
   2ecac:	0f 95 c0             	setne  al
   2ecaf:	0f b6 c0             	movzx  eax,al
   2ecb2:	89 05 9c eb 21 00    	mov    DWORD PTR [rip+0x21eb9c],eax        # 24d854 <defaults+0x94>
   2ecb8:	8b 05 96 eb 21 00    	mov    eax,DWORD PTR [rip+0x21eb96]        # 24d854 <defaults+0x94>
   2ecbe:	89 05 64 a3 2b 00    	mov    DWORD PTR [rip+0x2ba364],eax        # 2e9028 <oldAliEn>
   2ecc4:	90                   	nop
   2ecc5:	5d                   	pop    rbp
   2ecc6:	c3                   	ret    

000000000002ecc7 <vrna_md_defaults_oldAliEn_get>:
   2ecc7:	f3 0f 1e fa          	endbr64 
   2eccb:	55                   	push   rbp
   2eccc:	48 89 e5             	mov    rbp,rsp
   2eccf:	8b 05 7f eb 21 00    	mov    eax,DWORD PTR [rip+0x21eb7f]        # 24d854 <defaults+0x94>
   2ecd5:	5d                   	pop    rbp
   2ecd6:	c3                   	ret    

000000000002ecd7 <vrna_md_defaults_ribo>:
   2ecd7:	f3 0f 1e fa          	endbr64 
   2ecdb:	55                   	push   rbp
   2ecdc:	48 89 e5             	mov    rbp,rsp
   2ecdf:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
   2ece2:	83 7d fc 00          	cmp    DWORD PTR [rbp-0x4],0x0
   2ece6:	0f 95 c0             	setne  al
   2ece9:	0f b6 c0             	movzx  eax,al
   2ecec:	89 05 66 eb 21 00    	mov    DWORD PTR [rip+0x21eb66],eax        # 24d858 <defaults+0x98>
   2ecf2:	8b 05 60 eb 21 00    	mov    eax,DWORD PTR [rip+0x21eb60]        # 24d858 <defaults+0x98>
   2ecf8:	89 05 2e a3 2b 00    	mov    DWORD PTR [rip+0x2ba32e],eax        # 2e902c <ribo>
   2ecfe:	90                   	nop
   2ecff:	5d                   	pop    rbp
   2ed00:	c3                   	ret    

000000000002ed01 <vrna_md_defaults_ribo_get>:
   2ed01:	f3 0f 1e fa          	endbr64 
   2ed05:	55                   	push   rbp
   2ed06:	48 89 e5             	mov    rbp,rsp
   2ed09:	8b 05 49 eb 21 00    	mov    eax,DWORD PTR [rip+0x21eb49]        # 24d858 <defaults+0x98>
   2ed0f:	5d                   	pop    rbp
   2ed10:	c3                   	ret    

000000000002ed11 <vrna_md_defaults_cv_fact>:
   2ed11:	f3 0f 1e fa          	endbr64 
   2ed15:	55                   	push   rbp
   2ed16:	48 89 e5             	mov    rbp,rsp
   2ed19:	f2 0f 11 45 f8       	movsd  QWORD PTR [rbp-0x8],xmm0
   2ed1e:	f2 0f 10 45 f8       	movsd  xmm0,QWORD PTR [rbp-0x8]
   2ed23:	f2 0f 11 05 35 eb 21 00 	movsd  QWORD PTR [rip+0x21eb35],xmm0        # 24d860 <defaults+0xa0>
   2ed2b:	f2 0f 10 45 f8       	movsd  xmm0,QWORD PTR [rbp-0x8]
   2ed30:	f2 0f 11 05 70 e9 21 00 	movsd  QWORD PTR [rip+0x21e970],xmm0        # 24d6a8 <cv_fact>
   2ed38:	90                   	nop
   2ed39:	5d                   	pop    rbp
   2ed3a:	c3                   	ret    

000000000002ed3b <vrna_md_defaults_cv_fact_get>:
   2ed3b:	f3 0f 1e fa          	endbr64 
   2ed3f:	55                   	push   rbp
   2ed40:	48 89 e5             	mov    rbp,rsp
   2ed43:	f2 0f 10 05 15 eb 21 00 	movsd  xmm0,QWORD PTR [rip+0x21eb15]        # 24d860 <defaults+0xa0>
   2ed4b:	5d                   	pop    rbp
   2ed4c:	c3                   	ret    

000000000002ed4d <vrna_md_defaults_nc_fact>:
   2ed4d:	f3 0f 1e fa          	endbr64 
   2ed51:	55                   	push   rbp
   2ed52:	48 89 e5             	mov    rbp,rsp
   2ed55:	f2 0f 11 45 f8       	movsd  QWORD PTR [rbp-0x8],xmm0
   2ed5a:	f2 0f 10 45 f8       	movsd  xmm0,QWORD PTR [rbp-0x8]
   2ed5f:	f2 0f 11 05 01 eb 21 00 	movsd  QWORD PTR [rip+0x21eb01],xmm0        # 24d868 <defaults+0xa8>
   2ed67:	f2 0f 10 45 f8       	movsd  xmm0,QWORD PTR [rbp-0x8]
   2ed6c:	f2 0f 11 05 3c e9 21 00 	movsd  QWORD PTR [rip+0x21e93c],xmm0        # 24d6b0 <nc_fact>
   2ed74:	90                   	nop
   2ed75:	5d                   	pop    rbp
   2ed76:	c3                   	ret    

000000000002ed77 <vrna_md_defaults_nc_fact_get>:
   2ed77:	f3 0f 1e fa          	endbr64 
   2ed7b:	55                   	push   rbp
   2ed7c:	48 89 e5             	mov    rbp,rsp
   2ed7f:	f2 0f 10 05 e1 ea 21 00 	movsd  xmm0,QWORD PTR [rip+0x21eae1]        # 24d868 <defaults+0xa8>
   2ed87:	5d                   	pop    rbp
   2ed88:	c3                   	ret    

000000000002ed89 <vrna_md_defaults_sfact>:
   2ed89:	f3 0f 1e fa          	endbr64 
   2ed8d:	55                   	push   rbp
   2ed8e:	48 89 e5             	mov    rbp,rsp
   2ed91:	f2 0f 11 45 f8       	movsd  QWORD PTR [rbp-0x8],xmm0
   2ed96:	f2 0f 10 45 f8       	movsd  xmm0,QWORD PTR [rbp-0x8]
   2ed9b:	f2 0f 11 05 cd ea 21 00 	movsd  QWORD PTR [rip+0x21eacd],xmm0        # 24d870 <defaults+0xb0>
   2eda3:	90                   	nop
   2eda4:	5d                   	pop    rbp
   2eda5:	c3                   	ret    

000000000002eda6 <vrna_md_defaults_sfact_get>:
   2eda6:	f3 0f 1e fa          	endbr64 
   2edaa:	55                   	push   rbp
   2edab:	48 89 e5             	mov    rbp,rsp
   2edae:	f2 0f 10 05 ba ea 21 00 	movsd  xmm0,QWORD PTR [rip+0x21eaba]        # 24d870 <defaults+0xb0>
   2edb6:	5d                   	pop    rbp
   2edb7:	c3                   	ret    

000000000002edb8 <vrna_md_update>:
   2edb8:	f3 0f 1e fa          	endbr64 
   2edbc:	55                   	push   rbp
   2edbd:	48 89 e5             	mov    rbp,rsp
   2edc0:	48 83 ec 10          	sub    rsp,0x10
   2edc4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   2edc8:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
   2edcd:	74 0c                	je     2eddb <vrna_md_update+0x23>
   2edcf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2edd3:	48 89 c7             	mov    rdi,rax
   2edd6:	e8 03 00 00 00       	call   2edde <fill_pair_matrices>
   2eddb:	90                   	nop
   2eddc:	c9                   	leave  
   2eddd:	c3                   	ret    

000000000002edde <fill_pair_matrices>:
   2edde:	f3 0f 1e fa          	endbr64 
   2ede2:	55                   	push   rbp
   2ede3:	48 89 e5             	mov    rbp,rsp
   2ede6:	48 83 ec 20          	sub    rsp,0x20
   2edea:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   2edee:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [rbp-0x8],0x0
   2edf5:	eb 43                	jmp    2ee3a <fill_pair_matrices+0x5c>
   2edf7:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2edfa:	48 63 d0             	movsxd rdx,eax
   2edfd:	48 89 d0             	mov    rax,rdx
   2ee00:	48 c1 e0 02          	shl    rax,0x2
   2ee04:	48 01 d0             	add    rax,rdx
   2ee07:	48 c1 e0 02          	shl    rax,0x2
   2ee0b:	48 01 d0             	add    rax,rdx
   2ee0e:	48 c1 e0 02          	shl    rax,0x2
   2ee12:	48 8d 90 00 01 00 00 	lea    rdx,[rax+0x100]
   2ee19:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2ee1d:	48 01 d0             	add    rax,rdx
   2ee20:	48 83 c0 04          	add    rax,0x4
   2ee24:	ba 54 00 00 00       	mov    edx,0x54
   2ee29:	be 00 00 00 00       	mov    esi,0x0
   2ee2e:	48 89 c7             	mov    rdi,rax
   2ee31:	e8 da 48 fd ff       	call   3710 <memset@plt>
   2ee36:	83 45 f8 01          	add    DWORD PTR [rbp-0x8],0x1
   2ee3a:	83 7d f8 14          	cmp    DWORD PTR [rbp-0x8],0x14
   2ee3e:	7e b7                	jle    2edf7 <fill_pair_matrices+0x19>
   2ee40:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2ee44:	48 05 d8 00 00 00    	add    rax,0xd8
   2ee4a:	ba 2a 00 00 00       	mov    edx,0x2a
   2ee4f:	be 00 00 00 00       	mov    esi,0x0
   2ee54:	48 89 c7             	mov    rdi,rax
   2ee57:	e8 b4 48 fd ff       	call   3710 <memset@plt>
   2ee5c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2ee60:	8b 40 38             	mov    eax,DWORD PTR [rax+0x38]
   2ee63:	83 f8 03             	cmp    eax,0x3
   2ee66:	0f 84 c4 01 00 00    	je     2f030 <fill_pair_matrices+0x252>
   2ee6c:	83 f8 03             	cmp    eax,0x3
   2ee6f:	0f 8f 26 03 00 00    	jg     2f19b <fill_pair_matrices+0x3bd>
   2ee75:	83 f8 02             	cmp    eax,0x2
   2ee78:	0f 84 ed 00 00 00    	je     2ef6b <fill_pair_matrices+0x18d>
   2ee7e:	83 f8 02             	cmp    eax,0x2
   2ee81:	0f 8f 14 03 00 00    	jg     2f19b <fill_pair_matrices+0x3bd>
   2ee87:	85 c0                	test   eax,eax
   2ee89:	74 0a                	je     2ee95 <fill_pair_matrices+0xb7>
   2ee8b:	83 f8 01             	cmp    eax,0x1
   2ee8e:	74 16                	je     2eea6 <fill_pair_matrices+0xc8>
   2ee90:	e9 06 03 00 00       	jmp    2f19b <fill_pair_matrices+0x3bd>
   2ee95:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2ee99:	48 89 c7             	mov    rdi,rax
   2ee9c:	e8 dc 03 00 00       	call   2f27d <prepare_default_pairs>
   2eea1:	e9 27 03 00 00       	jmp    2f1cd <fill_pair_matrices+0x3ef>
   2eea6:	c7 45 f8 01 00 00 00 	mov    DWORD PTR [rbp-0x8],0x1
   2eead:	eb 34                	jmp    2eee3 <fill_pair_matrices+0x105>
   2eeaf:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2eeb2:	8d 50 01             	lea    edx,[rax+0x1]
   2eeb5:	89 55 f8             	mov    DWORD PTR [rbp-0x8],edx
   2eeb8:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
   2eebc:	48 98                	cdqe   
   2eebe:	48 83 c0 68          	add    rax,0x68
   2eec2:	66 c7 44 42 08 03 00 	mov    WORD PTR [rdx+rax*2+0x8],0x3
   2eec9:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2eecc:	8d 50 01             	lea    edx,[rax+0x1]
   2eecf:	89 55 f8             	mov    DWORD PTR [rbp-0x8],edx
   2eed2:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
   2eed6:	48 98                	cdqe   
   2eed8:	48 83 c0 68          	add    rax,0x68
   2eedc:	66 c7 44 42 08 02 00 	mov    WORD PTR [rdx+rax*2+0x8],0x2
   2eee3:	83 7d f8 13          	cmp    DWORD PTR [rbp-0x8],0x13
   2eee7:	7e c6                	jle    2eeaf <fill_pair_matrices+0xd1>
   2eee9:	c7 45 f8 01 00 00 00 	mov    DWORD PTR [rbp-0x8],0x1
   2eef0:	eb 6e                	jmp    2ef60 <fill_pair_matrices+0x182>
   2eef2:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2eef5:	83 c0 01             	add    eax,0x1
   2eef8:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
   2eefc:	48 63 f0             	movsxd rsi,eax
   2eeff:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2ef02:	48 63 d0             	movsxd rdx,eax
   2ef05:	48 89 d0             	mov    rax,rdx
   2ef08:	48 c1 e0 02          	shl    rax,0x2
   2ef0c:	48 01 d0             	add    rax,rdx
   2ef0f:	48 c1 e0 02          	shl    rax,0x2
   2ef13:	48 01 d0             	add    rax,rdx
   2ef16:	48 01 f0             	add    rax,rsi
   2ef19:	48 83 c0 40          	add    rax,0x40
   2ef1d:	c7 44 81 04 02 00 00 00 	mov    DWORD PTR [rcx+rax*4+0x4],0x2
   2ef25:	83 45 f8 01          	add    DWORD PTR [rbp-0x8],0x1
   2ef29:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2ef2c:	83 e8 01             	sub    eax,0x1
   2ef2f:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
   2ef33:	48 63 f0             	movsxd rsi,eax
   2ef36:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2ef39:	48 63 d0             	movsxd rdx,eax
   2ef3c:	48 89 d0             	mov    rax,rdx
   2ef3f:	48 c1 e0 02          	shl    rax,0x2
   2ef43:	48 01 d0             	add    rax,rdx
   2ef46:	48 c1 e0 02          	shl    rax,0x2
   2ef4a:	48 01 d0             	add    rax,rdx
   2ef4d:	48 01 f0             	add    rax,rsi
   2ef50:	48 83 c0 40          	add    rax,0x40
   2ef54:	c7 44 81 04 01 00 00 00 	mov    DWORD PTR [rcx+rax*4+0x4],0x1
   2ef5c:	83 45 f8 01          	add    DWORD PTR [rbp-0x8],0x1
   2ef60:	83 7d f8 13          	cmp    DWORD PTR [rbp-0x8],0x13
   2ef64:	7e 8c                	jle    2eef2 <fill_pair_matrices+0x114>
   2ef66:	e9 62 02 00 00       	jmp    2f1cd <fill_pair_matrices+0x3ef>
   2ef6b:	c7 45 f8 01 00 00 00 	mov    DWORD PTR [rbp-0x8],0x1
   2ef72:	eb 34                	jmp    2efa8 <fill_pair_matrices+0x1ca>
   2ef74:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2ef77:	8d 50 01             	lea    edx,[rax+0x1]
   2ef7a:	89 55 f8             	mov    DWORD PTR [rbp-0x8],edx
   2ef7d:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
   2ef81:	48 98                	cdqe   
   2ef83:	48 83 c0 68          	add    rax,0x68
   2ef87:	66 c7 44 42 08 01 00 	mov    WORD PTR [rdx+rax*2+0x8],0x1
   2ef8e:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2ef91:	8d 50 01             	lea    edx,[rax+0x1]
   2ef94:	89 55 f8             	mov    DWORD PTR [rbp-0x8],edx
   2ef97:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
   2ef9b:	48 98                	cdqe   
   2ef9d:	48 83 c0 68          	add    rax,0x68
   2efa1:	66 c7 44 42 08 04 00 	mov    WORD PTR [rdx+rax*2+0x8],0x4
   2efa8:	83 7d f8 13          	cmp    DWORD PTR [rbp-0x8],0x13
   2efac:	7e c6                	jle    2ef74 <fill_pair_matrices+0x196>
   2efae:	c7 45 f8 01 00 00 00 	mov    DWORD PTR [rbp-0x8],0x1
   2efb5:	eb 6e                	jmp    2f025 <fill_pair_matrices+0x247>
   2efb7:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2efba:	83 c0 01             	add    eax,0x1
   2efbd:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
   2efc1:	48 63 f0             	movsxd rsi,eax
   2efc4:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2efc7:	48 63 d0             	movsxd rdx,eax
   2efca:	48 89 d0             	mov    rax,rdx
   2efcd:	48 c1 e0 02          	shl    rax,0x2
   2efd1:	48 01 d0             	add    rax,rdx
   2efd4:	48 c1 e0 02          	shl    rax,0x2
   2efd8:	48 01 d0             	add    rax,rdx
   2efdb:	48 01 f0             	add    rax,rsi
   2efde:	48 83 c0 40          	add    rax,0x40
   2efe2:	c7 44 81 04 05 00 00 00 	mov    DWORD PTR [rcx+rax*4+0x4],0x5
   2efea:	83 45 f8 01          	add    DWORD PTR [rbp-0x8],0x1
   2efee:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2eff1:	83 e8 01             	sub    eax,0x1
   2eff4:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
   2eff8:	48 63 f0             	movsxd rsi,eax
   2effb:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2effe:	48 63 d0             	movsxd rdx,eax
   2f001:	48 89 d0             	mov    rax,rdx
   2f004:	48 c1 e0 02          	shl    rax,0x2
   2f008:	48 01 d0             	add    rax,rdx
   2f00b:	48 c1 e0 02          	shl    rax,0x2
   2f00f:	48 01 d0             	add    rax,rdx
   2f012:	48 01 f0             	add    rax,rsi
   2f015:	48 83 c0 40          	add    rax,0x40
   2f019:	c7 44 81 04 06 00 00 00 	mov    DWORD PTR [rcx+rax*4+0x4],0x6
   2f021:	83 45 f8 01          	add    DWORD PTR [rbp-0x8],0x1
   2f025:	83 7d f8 13          	cmp    DWORD PTR [rbp-0x8],0x13
   2f029:	7e 8c                	jle    2efb7 <fill_pair_matrices+0x1d9>
   2f02b:	e9 9d 01 00 00       	jmp    2f1cd <fill_pair_matrices+0x3ef>
   2f030:	c7 45 f8 01 00 00 00 	mov    DWORD PTR [rbp-0x8],0x1
   2f037:	eb 68                	jmp    2f0a1 <fill_pair_matrices+0x2c3>
   2f039:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2f03c:	8d 50 01             	lea    edx,[rax+0x1]
   2f03f:	89 55 f8             	mov    DWORD PTR [rbp-0x8],edx
   2f042:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
   2f046:	48 98                	cdqe   
   2f048:	48 83 c0 68          	add    rax,0x68
   2f04c:	66 c7 44 42 08 03 00 	mov    WORD PTR [rdx+rax*2+0x8],0x3
   2f053:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2f056:	8d 50 01             	lea    edx,[rax+0x1]
   2f059:	89 55 f8             	mov    DWORD PTR [rbp-0x8],edx
   2f05c:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
   2f060:	48 98                	cdqe   
   2f062:	48 83 c0 68          	add    rax,0x68
   2f066:	66 c7 44 42 08 02 00 	mov    WORD PTR [rdx+rax*2+0x8],0x2
   2f06d:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2f070:	8d 50 01             	lea    edx,[rax+0x1]
   2f073:	89 55 f8             	mov    DWORD PTR [rbp-0x8],edx
   2f076:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
   2f07a:	48 98                	cdqe   
   2f07c:	48 83 c0 68          	add    rax,0x68
   2f080:	66 c7 44 42 08 01 00 	mov    WORD PTR [rdx+rax*2+0x8],0x1
   2f087:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2f08a:	8d 50 01             	lea    edx,[rax+0x1]
   2f08d:	89 55 f8             	mov    DWORD PTR [rbp-0x8],edx
   2f090:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
   2f094:	48 98                	cdqe   
   2f096:	48 83 c0 68          	add    rax,0x68
   2f09a:	66 c7 44 42 08 04 00 	mov    WORD PTR [rdx+rax*2+0x8],0x4
   2f0a1:	83 7d f8 11          	cmp    DWORD PTR [rbp-0x8],0x11
   2f0a5:	7e 92                	jle    2f039 <fill_pair_matrices+0x25b>
   2f0a7:	c7 45 f8 01 00 00 00 	mov    DWORD PTR [rbp-0x8],0x1
   2f0ae:	e9 dc 00 00 00       	jmp    2f18f <fill_pair_matrices+0x3b1>
   2f0b3:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2f0b6:	83 c0 01             	add    eax,0x1
   2f0b9:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
   2f0bd:	48 63 f0             	movsxd rsi,eax
   2f0c0:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2f0c3:	48 63 d0             	movsxd rdx,eax
   2f0c6:	48 89 d0             	mov    rax,rdx
   2f0c9:	48 c1 e0 02          	shl    rax,0x2
   2f0cd:	48 01 d0             	add    rax,rdx
   2f0d0:	48 c1 e0 02          	shl    rax,0x2
   2f0d4:	48 01 d0             	add    rax,rdx
   2f0d7:	48 01 f0             	add    rax,rsi
   2f0da:	48 83 c0 40          	add    rax,0x40
   2f0de:	c7 44 81 04 02 00 00 00 	mov    DWORD PTR [rcx+rax*4+0x4],0x2
   2f0e6:	83 45 f8 01          	add    DWORD PTR [rbp-0x8],0x1
   2f0ea:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2f0ed:	83 e8 01             	sub    eax,0x1
   2f0f0:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
   2f0f4:	48 63 f0             	movsxd rsi,eax
   2f0f7:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2f0fa:	48 63 d0             	movsxd rdx,eax
   2f0fd:	48 89 d0             	mov    rax,rdx
   2f100:	48 c1 e0 02          	shl    rax,0x2
   2f104:	48 01 d0             	add    rax,rdx
   2f107:	48 c1 e0 02          	shl    rax,0x2
   2f10b:	48 01 d0             	add    rax,rdx
   2f10e:	48 01 f0             	add    rax,rsi
   2f111:	48 83 c0 40          	add    rax,0x40
   2f115:	c7 44 81 04 01 00 00 00 	mov    DWORD PTR [rcx+rax*4+0x4],0x1
   2f11d:	83 45 f8 01          	add    DWORD PTR [rbp-0x8],0x1
   2f121:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2f124:	83 c0 01             	add    eax,0x1
   2f127:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
   2f12b:	48 63 f0             	movsxd rsi,eax
   2f12e:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2f131:	48 63 d0             	movsxd rdx,eax
   2f134:	48 89 d0             	mov    rax,rdx
   2f137:	48 c1 e0 02          	shl    rax,0x2
   2f13b:	48 01 d0             	add    rax,rdx
   2f13e:	48 c1 e0 02          	shl    rax,0x2
   2f142:	48 01 d0             	add    rax,rdx
   2f145:	48 01 f0             	add    rax,rsi
   2f148:	48 83 c0 40          	add    rax,0x40
   2f14c:	c7 44 81 04 05 00 00 00 	mov    DWORD PTR [rcx+rax*4+0x4],0x5
   2f154:	83 45 f8 01          	add    DWORD PTR [rbp-0x8],0x1
   2f158:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2f15b:	83 e8 01             	sub    eax,0x1
   2f15e:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
   2f162:	48 63 f0             	movsxd rsi,eax
   2f165:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2f168:	48 63 d0             	movsxd rdx,eax
   2f16b:	48 89 d0             	mov    rax,rdx
   2f16e:	48 c1 e0 02          	shl    rax,0x2
   2f172:	48 01 d0             	add    rax,rdx
   2f175:	48 c1 e0 02          	shl    rax,0x2
   2f179:	48 01 d0             	add    rax,rdx
   2f17c:	48 01 f0             	add    rax,rsi
   2f17f:	48 83 c0 40          	add    rax,0x40
   2f183:	c7 44 81 04 06 00 00 00 	mov    DWORD PTR [rcx+rax*4+0x4],0x6
   2f18b:	83 45 f8 01          	add    DWORD PTR [rbp-0x8],0x1
   2f18f:	83 7d f8 11          	cmp    DWORD PTR [rbp-0x8],0x11
   2f193:	0f 8e 1a ff ff ff    	jle    2f0b3 <fill_pair_matrices+0x2d5>
   2f199:	eb 32                	jmp    2f1cd <fill_pair_matrices+0x3ef>
   2f19b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2f19f:	8b 40 38             	mov    eax,DWORD PTR [rax+0x38]
   2f1a2:	89 c6                	mov    esi,eax
   2f1a4:	48 8d 3d 55 4b 1b 00 	lea    rdi,[rip+0x1b4b55]        # 1e3d00 <Law_and_Order+0x378>
   2f1ab:	b8 00 00 00 00       	mov    eax,0x0
   2f1b0:	e8 e6 cf ff ff       	call   2c19b <vrna_message_warning>
   2f1b5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2f1b9:	c7 40 38 00 00 00 00 	mov    DWORD PTR [rax+0x38],0x0
   2f1c0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2f1c4:	48 89 c7             	mov    rdi,rax
   2f1c7:	e8 b1 00 00 00       	call   2f27d <prepare_default_pairs>
   2f1cc:	90                   	nop
   2f1cd:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [rbp-0x8],0x0
   2f1d4:	eb 7e                	jmp    2f254 <fill_pair_matrices+0x476>
   2f1d6:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
   2f1dd:	eb 6b                	jmp    2f24a <fill_pair_matrices+0x46c>
   2f1df:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
   2f1e3:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2f1e6:	48 63 f0             	movsxd rsi,eax
   2f1e9:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2f1ec:	48 63 d0             	movsxd rdx,eax
   2f1ef:	48 89 d0             	mov    rax,rdx
   2f1f2:	48 c1 e0 02          	shl    rax,0x2
   2f1f6:	48 01 d0             	add    rax,rdx
   2f1f9:	48 c1 e0 02          	shl    rax,0x2
   2f1fd:	48 01 d0             	add    rax,rdx
   2f200:	48 01 f0             	add    rax,rsi
   2f203:	48 83 c0 40          	add    rax,0x40
   2f207:	8b 74 81 04          	mov    esi,DWORD PTR [rcx+rax*4+0x4]
   2f20b:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
   2f20f:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
   2f212:	48 63 f8             	movsxd rdi,eax
   2f215:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2f218:	48 63 d0             	movsxd rdx,eax
   2f21b:	48 89 d0             	mov    rax,rdx
   2f21e:	48 c1 e0 02          	shl    rax,0x2
   2f222:	48 01 d0             	add    rax,rdx
   2f225:	48 c1 e0 02          	shl    rax,0x2
   2f229:	48 01 d0             	add    rax,rdx
   2f22c:	48 01 f8             	add    rax,rdi
   2f22f:	48 83 c0 40          	add    rax,0x40
   2f233:	8b 54 81 04          	mov    edx,DWORD PTR [rcx+rax*4+0x4]
   2f237:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2f23b:	48 63 ce             	movsxd rcx,esi
   2f23e:	48 83 c1 2c          	add    rcx,0x2c
   2f242:	89 54 88 08          	mov    DWORD PTR [rax+rcx*4+0x8],edx
   2f246:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
   2f24a:	83 7d fc 14          	cmp    DWORD PTR [rbp-0x4],0x14
   2f24e:	7e 8f                	jle    2f1df <fill_pair_matrices+0x401>
   2f250:	83 45 f8 01          	add    DWORD PTR [rbp-0x8],0x1
   2f254:	83 7d f8 14          	cmp    DWORD PTR [rbp-0x8],0x14
   2f258:	0f 8e 78 ff ff ff    	jle    2f1d6 <fill_pair_matrices+0x3f8>
   2f25e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2f262:	c7 80 b8 00 00 00 00 00 00 00 	mov    DWORD PTR [rax+0xb8],0x0
   2f26c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2f270:	c7 80 d4 00 00 00 07 00 00 00 	mov    DWORD PTR [rax+0xd4],0x7
   2f27a:	90                   	nop
   2f27b:	c9                   	leave  
   2f27c:	c3                   	ret    

000000000002f27d <prepare_default_pairs>:
   2f27d:	f3 0f 1e fa          	endbr64 
   2f281:	55                   	push   rbp
   2f282:	48 89 e5             	mov    rbp,rsp
   2f285:	53                   	push   rbx
   2f286:	48 83 ec 28          	sub    rsp,0x28
   2f28a:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
   2f28e:	c7 45 e8 00 00 00 00 	mov    DWORD PTR [rbp-0x18],0x0
   2f295:	eb 19                	jmp    2f2b0 <prepare_default_pairs+0x33>
   2f297:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   2f29a:	89 c1                	mov    ecx,eax
   2f29c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2f2a0:	8b 55 e8             	mov    edx,DWORD PTR [rbp-0x18]
   2f2a3:	48 83 c2 68          	add    rdx,0x68
   2f2a7:	66 89 4c 50 08       	mov    WORD PTR [rax+rdx*2+0x8],cx
   2f2ac:	83 45 e8 01          	add    DWORD PTR [rbp-0x18],0x1
   2f2b0:	83 7d e8 04          	cmp    DWORD PTR [rbp-0x18],0x4
   2f2b4:	76 e1                	jbe    2f297 <prepare_default_pairs+0x1a>
   2f2b6:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2f2ba:	66 c7 80 e2 00 00 00 03 00 	mov    WORD PTR [rax+0xe2],0x3
   2f2c3:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2f2c7:	66 c7 80 e4 00 00 00 02 00 	mov    WORD PTR [rax+0xe4],0x2
   2f2d0:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2f2d4:	66 c7 80 e6 00 00 00 00 00 	mov    WORD PTR [rax+0xe6],0x0
   2f2dd:	c7 45 e8 00 00 00 00 	mov    DWORD PTR [rbp-0x18],0x0
   2f2e4:	eb 5c                	jmp    2f342 <prepare_default_pairs+0xc5>
   2f2e6:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
   2f2ed:	eb 49                	jmp    2f338 <prepare_default_pairs+0xbb>
   2f2ef:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2f2f2:	8b 55 e8             	mov    edx,DWORD PTR [rbp-0x18]
   2f2f5:	48 c1 e2 03          	shl    rdx,0x3
   2f2f9:	48 01 d0             	add    rax,rdx
   2f2fc:	48 8d 14 85 00 00 00 00 	lea    rdx,[rax*4+0x0]
   2f304:	48 8d 05 b5 e3 21 00 	lea    rax,[rip+0x21e3b5]        # 24d6c0 <BP_pair>
   2f30b:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
   2f30e:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
   2f312:	8b 7d ec             	mov    edi,DWORD PTR [rbp-0x14]
   2f315:	8b 55 e8             	mov    edx,DWORD PTR [rbp-0x18]
   2f318:	48 89 d0             	mov    rax,rdx
   2f31b:	48 c1 e0 02          	shl    rax,0x2
   2f31f:	48 01 d0             	add    rax,rdx
   2f322:	48 c1 e0 02          	shl    rax,0x2
   2f326:	48 01 d0             	add    rax,rdx
   2f329:	48 01 f8             	add    rax,rdi
   2f32c:	48 83 c0 40          	add    rax,0x40
   2f330:	89 74 81 04          	mov    DWORD PTR [rcx+rax*4+0x4],esi
   2f334:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
   2f338:	83 7d ec 07          	cmp    DWORD PTR [rbp-0x14],0x7
   2f33c:	76 b1                	jbe    2f2ef <prepare_default_pairs+0x72>
   2f33e:	83 45 e8 01          	add    DWORD PTR [rbp-0x18],0x1
   2f342:	83 7d e8 07          	cmp    DWORD PTR [rbp-0x18],0x7
   2f346:	76 9e                	jbe    2f2e6 <prepare_default_pairs+0x69>
   2f348:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2f34c:	8b 40 20             	mov    eax,DWORD PTR [rax+0x20]
   2f34f:	85 c0                	test   eax,eax
   2f351:	74 22                	je     2f375 <prepare_default_pairs+0xf8>
   2f353:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2f357:	c7 80 60 02 00 00 00 00 00 00 	mov    DWORD PTR [rax+0x260],0x0
   2f361:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2f365:	8b 90 60 02 00 00    	mov    edx,DWORD PTR [rax+0x260]
   2f36b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2f36f:	89 90 10 02 00 00    	mov    DWORD PTR [rax+0x210],edx
   2f375:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2f379:	0f b6 40 48          	movzx  eax,BYTE PTR [rax+0x48]
   2f37d:	84 c0                	test   al,al
   2f37f:	0f 84 94 00 00 00    	je     2f419 <prepare_default_pairs+0x19c>
   2f385:	c7 45 e8 00 00 00 00 	mov    DWORD PTR [rbp-0x18],0x0
   2f38c:	eb 6f                	jmp    2f3fd <prepare_default_pairs+0x180>
   2f38e:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
   2f392:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   2f395:	0f b6 44 02 48       	movzx  eax,BYTE PTR [rdx+rax*1+0x48]
   2f39a:	0f be c0             	movsx  eax,al
   2f39d:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
   2f3a1:	48 89 d6             	mov    rsi,rdx
   2f3a4:	89 c7                	mov    edi,eax
   2f3a6:	e8 23 e1 ff ff       	call   2d4ce <vrna_nucleotide_encode>
   2f3ab:	89 c3                	mov    ebx,eax
   2f3ad:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   2f3b0:	8d 50 01             	lea    edx,[rax+0x1]
   2f3b3:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2f3b7:	89 d2                	mov    edx,edx
   2f3b9:	0f b6 44 10 48       	movzx  eax,BYTE PTR [rax+rdx*1+0x48]
   2f3be:	0f be c0             	movsx  eax,al
   2f3c1:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
   2f3c5:	48 89 d6             	mov    rsi,rdx
   2f3c8:	89 c7                	mov    edi,eax
   2f3ca:	e8 ff e0 ff ff       	call   2d4ce <vrna_nucleotide_encode>
   2f3cf:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
   2f3d3:	48 63 f0             	movsxd rsi,eax
   2f3d6:	48 63 d3             	movsxd rdx,ebx
   2f3d9:	48 89 d0             	mov    rax,rdx
   2f3dc:	48 c1 e0 02          	shl    rax,0x2
   2f3e0:	48 01 d0             	add    rax,rdx
   2f3e3:	48 c1 e0 02          	shl    rax,0x2
   2f3e7:	48 01 d0             	add    rax,rdx
   2f3ea:	48 01 f0             	add    rax,rsi
   2f3ed:	48 83 c0 40          	add    rax,0x40
   2f3f1:	c7 44 81 04 07 00 00 00 	mov    DWORD PTR [rcx+rax*4+0x4],0x7
   2f3f9:	83 45 e8 02          	add    DWORD PTR [rbp-0x18],0x2
   2f3fd:	8b 5d e8             	mov    ebx,DWORD PTR [rbp-0x18]
   2f400:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2f404:	48 83 c0 48          	add    rax,0x48
   2f408:	48 89 c7             	mov    rdi,rax
   2f40b:	e8 80 42 fd ff       	call   3690 <strlen@plt>
   2f410:	48 39 c3             	cmp    rbx,rax
   2f413:	0f 82 75 ff ff ff    	jb     2f38e <prepare_default_pairs+0x111>
   2f419:	90                   	nop
   2f41a:	48 83 c4 28          	add    rsp,0x28
   2f41e:	5b                   	pop    rbx
   2f41f:	5d                   	pop    rbp
   2f420:	c3                   	ret    

000000000002f421 <set_model_details>:
   2f421:	f3 0f 1e fa          	endbr64 
   2f425:	55                   	push   rbp
   2f426:	48 89 e5             	mov    rbp,rsp
   2f429:	48 83 ec 10          	sub    rsp,0x10
   2f42d:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   2f431:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
   2f436:	0f 84 a0 01 00 00    	je     2f5dc <set_model_details+0x1bb>
   2f43c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2f440:	ba e8 07 00 00       	mov    edx,0x7e8
   2f445:	be 00 00 00 00       	mov    esi,0x0
   2f44a:	48 89 c7             	mov    rdi,rax
   2f44d:	e8 be 42 fd ff       	call   3710 <memset@plt>
   2f452:	8b 15 38 e2 21 00    	mov    edx,DWORD PTR [rip+0x21e238]        # 24d690 <dangles>
   2f458:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2f45c:	89 50 14             	mov    DWORD PTR [rax+0x14],edx
   2f45f:	8b 15 2f e2 21 00    	mov    edx,DWORD PTR [rip+0x21e22f]        # 24d694 <tetra_loop>
   2f465:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2f469:	89 50 18             	mov    DWORD PTR [rax+0x18],edx
   2f46c:	8b 15 8e 9b 2b 00    	mov    edx,DWORD PTR [rip+0x2b9b8e]        # 2e9000 <noLonelyPairs>
   2f472:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2f476:	89 50 1c             	mov    DWORD PTR [rax+0x1c],edx
   2f479:	8b 15 85 9b 2b 00    	mov    edx,DWORD PTR [rip+0x2b9b85]        # 2e9004 <noGU>
   2f47f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2f483:	89 50 20             	mov    DWORD PTR [rax+0x20],edx
   2f486:	8b 15 7c 9b 2b 00    	mov    edx,DWORD PTR [rip+0x2b9b7c]        # 2e9008 <no_closingGU>
   2f48c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2f490:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
   2f493:	8b 15 97 9b 2b 00    	mov    edx,DWORD PTR [rip+0x2b9b97]        # 2e9030 <logML>
   2f499:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2f49d:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
   2f4a0:	8b 15 6a 9b 2b 00    	mov    edx,DWORD PTR [rip+0x2b9b6a]        # 2e9010 <gquad>
   2f4a6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2f4aa:	89 50 30             	mov    DWORD PTR [rax+0x30],edx
   2f4ad:	8b 15 59 9b 2b 00    	mov    edx,DWORD PTR [rip+0x2b9b59]        # 2e900c <circ>
   2f4b3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2f4b7:	89 50 2c             	mov    DWORD PTR [rax+0x2c],edx
   2f4ba:	8b 15 54 9b 2b 00    	mov    edx,DWORD PTR [rip+0x2b9b54]        # 2e9014 <uniq_ML>
   2f4c0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2f4c4:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
   2f4c7:	8b 15 cb e1 21 00    	mov    edx,DWORD PTR [rip+0x21e1cb]        # 24d698 <do_backtrack>
   2f4cd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2f4d1:	89 50 44             	mov    DWORD PTR [rax+0x44],edx
   2f4d4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2f4d8:	c7 40 3c 01 00 00 00 	mov    DWORD PTR [rax+0x3c],0x1
   2f4df:	0f b6 15 b6 e1 21 00 	movzx  edx,BYTE PTR [rip+0x21e1b6]        # 24d69c <backtrack_type>
   2f4e6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2f4ea:	88 50 40             	mov    BYTE PTR [rax+0x40],dl
   2f4ed:	8b 15 25 9b 2b 00    	mov    edx,DWORD PTR [rip+0x2b9b25]        # 2e9018 <energy_set>
   2f4f3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2f4f7:	89 50 38             	mov    DWORD PTR [rax+0x38],edx
   2f4fa:	8b 15 a0 e1 21 00    	mov    edx,DWORD PTR [rip+0x21e1a0]        # 24d6a0 <max_bp_span>
   2f500:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2f504:	89 90 88 00 00 00    	mov    DWORD PTR [rax+0x88],edx
   2f50a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2f50e:	c7 80 8c 00 00 00 03 00 00 00 	mov    DWORD PTR [rax+0x8c],0x3
   2f518:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2f51c:	c7 80 90 00 00 00 ff ff ff ff 	mov    DWORD PTR [rax+0x90],0xffffffff
   2f526:	8b 15 fc 9a 2b 00    	mov    edx,DWORD PTR [rip+0x2b9afc]        # 2e9028 <oldAliEn>
   2f52c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2f530:	89 90 94 00 00 00    	mov    DWORD PTR [rax+0x94],edx
   2f536:	8b 15 f0 9a 2b 00    	mov    edx,DWORD PTR [rip+0x2b9af0]        # 2e902c <ribo>
   2f53c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2f540:	89 90 98 00 00 00    	mov    DWORD PTR [rax+0x98],edx
   2f546:	f2 0f 10 05 5a e1 21 00 	movsd  xmm0,QWORD PTR [rip+0x21e15a]        # 24d6a8 <cv_fact>
   2f54e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2f552:	f2 0f 11 80 a0 00 00 00 	movsd  QWORD PTR [rax+0xa0],xmm0
   2f55a:	f2 0f 10 05 4e e1 21 00 	movsd  xmm0,QWORD PTR [rip+0x21e14e]        # 24d6b0 <nc_fact>
   2f562:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2f566:	f2 0f 11 80 a8 00 00 00 	movsd  QWORD PTR [rax+0xa8],xmm0
   2f56e:	f2 0f 10 05 0a e1 21 00 	movsd  xmm0,QWORD PTR [rip+0x21e10a]        # 24d680 <temperature>
   2f576:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2f57a:	f2 0f 11 00          	movsd  QWORD PTR [rax],xmm0
   2f57e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2f582:	f2 0f 10 05 be 47 1b 00 	movsd  xmm0,QWORD PTR [rip+0x1b47be]        # 1e3d48 <Law_and_Order+0x3c0>
   2f58a:	f2 0f 11 40 08       	movsd  QWORD PTR [rax+0x8],xmm0
   2f58f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2f593:	c7 40 10 01 00 00 00 	mov    DWORD PTR [rax+0x10],0x1
   2f59a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2f59e:	f2 0f 10 05 aa 47 1b 00 	movsd  xmm0,QWORD PTR [rip+0x1b47aa]        # 1e3d50 <Law_and_Order+0x3c8>
   2f5a6:	f2 0f 11 80 b0 00 00 00 	movsd  QWORD PTR [rax+0xb0],xmm0
   2f5ae:	48 8b 05 6b 9a 2b 00 	mov    rax,QWORD PTR [rip+0x2b9a6b]        # 2e9020 <nonstandards>
   2f5b5:	48 85 c0             	test   rax,rax
   2f5b8:	74 16                	je     2f5d0 <set_model_details+0x1af>
   2f5ba:	48 8b 15 5f 9a 2b 00 	mov    rdx,QWORD PTR [rip+0x2b9a5f]        # 2e9020 <nonstandards>
   2f5c1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2f5c5:	48 89 d6             	mov    rsi,rdx
   2f5c8:	48 89 c7             	mov    rdi,rax
   2f5cb:	e8 fb eb ff ff       	call   2e1cb <copy_nonstandards>
   2f5d0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2f5d4:	48 89 c7             	mov    rdi,rax
   2f5d7:	e8 dc f7 ff ff       	call   2edb8 <vrna_md_update>
   2f5dc:	90                   	nop
   2f5dd:	c9                   	leave  
   2f5de:	c3                   	ret    

000000000002f5df <option_string>:
   2f5df:	f3 0f 1e fa          	endbr64 
   2f5e3:	55                   	push   rbp
   2f5e4:	48 89 e5             	mov    rbp,rsp
   2f5e7:	48 81 ec f0 07 00 00 	sub    rsp,0x7f0
   2f5ee:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   2f5f7:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2f5fb:	31 c0                	xor    eax,eax
   2f5fd:	48 8d 85 10 f8 ff ff 	lea    rax,[rbp-0x7f0]
   2f604:	48 89 c7             	mov    rdi,rax
   2f607:	e8 15 fe ff ff       	call   2f421 <set_model_details>
   2f60c:	48 8d 85 10 f8 ff ff 	lea    rax,[rbp-0x7f0]
   2f613:	48 89 c7             	mov    rdi,rax
   2f616:	e8 c8 e9 ff ff       	call   2dfe3 <vrna_md_option_string>
   2f61b:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   2f61f:	64 48 33 14 25 28 00 00 00 	xor    rdx,QWORD PTR fs:0x28
   2f628:	74 05                	je     2f62f <option_string+0x50>
   2f62a:	e8 31 42 fd ff       	call   3860 <__stack_chk_fail@plt>
   2f62f:	c9                   	leave  
   2f630:	c3                   	ret    

000000000002f631 <vrna_file_copy>:
   2f631:	f3 0f 1e fa          	endbr64 
   2f635:	55                   	push   rbp
   2f636:	48 89 e5             	mov    rbp,rsp
   2f639:	48 83 ec 20          	sub    rsp,0x20
   2f63d:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   2f641:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
   2f645:	eb 11                	jmp    2f658 <vrna_file_copy+0x27>
   2f647:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
   2f64b:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2f64e:	48 89 d6             	mov    rsi,rdx
   2f651:	89 c7                	mov    edi,eax
   2f653:	e8 68 44 fd ff       	call   3ac0 <putc@plt>
   2f658:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2f65c:	48 89 c7             	mov    rdi,rax
   2f65f:	e8 dc 3f fd ff       	call   3640 <getc@plt>
   2f664:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
   2f667:	83 7d fc ff          	cmp    DWORD PTR [rbp-0x4],0xffffffff
   2f66b:	75 da                	jne    2f647 <vrna_file_copy+0x16>
   2f66d:	90                   	nop
   2f66e:	90                   	nop
   2f66f:	c9                   	leave  
   2f670:	c3                   	ret    

000000000002f671 <vrna_read_line>:
   2f671:	f3 0f 1e fa          	endbr64 
   2f675:	55                   	push   rbp
   2f676:	48 89 e5             	mov    rbp,rsp
   2f679:	48 81 ec 40 02 00 00 	sub    rsp,0x240
   2f680:	48 89 bd c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],rdi
   2f687:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   2f690:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2f694:	31 c0                	xor    eax,eax
   2f696:	c7 85 d0 fd ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x230],0x0
   2f6a0:	c7 85 d4 fd ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0x22c],0x0
   2f6aa:	48 c7 85 e0 fd ff ff 00 00 00 00 	mov    QWORD PTR [rbp-0x220],0x0
   2f6b5:	48 8b 95 c8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x238]
   2f6bc:	48 8d 85 f0 fd ff ff 	lea    rax,[rbp-0x210]
   2f6c3:	be 00 02 00 00       	mov    esi,0x200
   2f6c8:	48 89 c7             	mov    rdi,rax
   2f6cb:	e8 d0 42 fd ff       	call   39a0 <fgets@plt>
   2f6d0:	48 85 c0             	test   rax,rax
   2f6d3:	0f 84 07 01 00 00    	je     2f7e0 <vrna_read_line+0x16f>
   2f6d9:	48 8d 85 f0 fd ff ff 	lea    rax,[rbp-0x210]
   2f6e0:	be 0a 00 00 00       	mov    esi,0xa
   2f6e5:	48 89 c7             	mov    rdi,rax
   2f6e8:	e8 73 3f fd ff       	call   3660 <strchr@plt>
   2f6ed:	48 89 85 e8 fd ff ff 	mov    QWORD PTR [rbp-0x218],rax
   2f6f4:	48 83 bd e8 fd ff ff 00 	cmp    QWORD PTR [rbp-0x218],0x0
   2f6fc:	74 0a                	je     2f708 <vrna_read_line+0x97>
   2f6fe:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
   2f705:	c6 00 00             	mov    BYTE PTR [rax],0x0
   2f708:	48 8d 85 f0 fd ff ff 	lea    rax,[rbp-0x210]
   2f70f:	48 89 c7             	mov    rdi,rax
   2f712:	e8 79 3f fd ff       	call   3690 <strlen@plt>
   2f717:	89 85 d8 fd ff ff    	mov    DWORD PTR [rbp-0x228],eax
   2f71d:	8b 95 d0 fd ff ff    	mov    edx,DWORD PTR [rbp-0x230]
   2f723:	8b 85 d8 fd ff ff    	mov    eax,DWORD PTR [rbp-0x228]
   2f729:	01 d0                	add    eax,edx
   2f72b:	89 85 dc fd ff ff    	mov    DWORD PTR [rbp-0x224],eax
   2f731:	8b 85 dc fd ff ff    	mov    eax,DWORD PTR [rbp-0x224]
   2f737:	3b 85 d4 fd ff ff    	cmp    eax,DWORD PTR [rbp-0x22c]
   2f73d:	7c 41                	jl     2f780 <vrna_read_line+0x10f>
   2f73f:	8b 85 dc fd ff ff    	mov    eax,DWORD PTR [rbp-0x224]
   2f745:	83 c0 01             	add    eax,0x1
   2f748:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
   2f74c:	f2 0f 10 05 7c 46 1b 00 	movsd  xmm0,QWORD PTR [rip+0x1b467c]        # 1e3dd0 <Law_and_Order+0x448>
   2f754:	f2 0f 59 c1          	mulsd  xmm0,xmm1
   2f758:	f2 0f 2c c0          	cvttsd2si eax,xmm0
   2f75c:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
   2f762:	8b 95 d4 fd ff ff    	mov    edx,DWORD PTR [rbp-0x22c]
   2f768:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
   2f76f:	89 d6                	mov    esi,edx
   2f771:	48 89 c7             	mov    rdi,rax
   2f774:	e8 d0 c7 ff ff       	call   2bf49 <vrna_realloc>
   2f779:	48 89 85 e0 fd ff ff 	mov    QWORD PTR [rbp-0x220],rax
   2f780:	8b 85 d8 fd ff ff    	mov    eax,DWORD PTR [rbp-0x228]
   2f786:	48 63 d0             	movsxd rdx,eax
   2f789:	8b 85 d0 fd ff ff    	mov    eax,DWORD PTR [rbp-0x230]
   2f78f:	48 63 c8             	movsxd rcx,eax
   2f792:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
   2f799:	48 01 c1             	add    rcx,rax
   2f79c:	48 8d 85 f0 fd ff ff 	lea    rax,[rbp-0x210]
   2f7a3:	48 89 c6             	mov    rsi,rax
   2f7a6:	48 89 cf             	mov    rdi,rcx
   2f7a9:	e8 f2 3f fd ff       	call   37a0 <memcpy@plt>
   2f7ae:	8b 85 dc fd ff ff    	mov    eax,DWORD PTR [rbp-0x224]
   2f7b4:	48 63 d0             	movsxd rdx,eax
   2f7b7:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
   2f7be:	48 01 d0             	add    rax,rdx
   2f7c1:	c6 00 00             	mov    BYTE PTR [rax],0x0
   2f7c4:	8b 85 dc fd ff ff    	mov    eax,DWORD PTR [rbp-0x224]
   2f7ca:	89 85 d0 fd ff ff    	mov    DWORD PTR [rbp-0x230],eax
   2f7d0:	48 83 bd e8 fd ff ff 00 	cmp    QWORD PTR [rbp-0x218],0x0
   2f7d8:	0f 84 d7 fe ff ff    	je     2f6b5 <vrna_read_line+0x44>
   2f7de:	eb 01                	jmp    2f7e1 <vrna_read_line+0x170>
   2f7e0:	90                   	nop
   2f7e1:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
   2f7e8:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
   2f7ec:	64 48 33 0c 25 28 00 00 00 	xor    rcx,QWORD PTR fs:0x28
   2f7f5:	74 05                	je     2f7fc <vrna_read_line+0x18b>
   2f7f7:	e8 64 40 fd ff       	call   3860 <__stack_chk_fail@plt>
   2f7fc:	c9                   	leave  
   2f7fd:	c3                   	ret    

000000000002f7fe <vrna_mkdir_p>:
   2f7fe:	f3 0f 1e fa          	endbr64 
   2f802:	55                   	push   rbp
   2f803:	48 89 e5             	mov    rbp,rsp
   2f806:	48 81 ec d0 00 00 00 	sub    rsp,0xd0
   2f80d:	48 89 bd 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rdi
   2f814:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   2f81d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2f821:	31 c0                	xor    eax,eax
   2f823:	c7 85 4c ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xb4],0x0
   2f82d:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
   2f834:	48 89 c7             	mov    rdi,rax
   2f837:	e8 eb 05 00 00       	call   2fe27 <is_absolute_path>
   2f83c:	85 c0                	test   eax,eax
   2f83e:	75 29                	jne    2f869 <vrna_mkdir_p+0x6b>
   2f840:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
   2f847:	48 89 c2             	mov    rdx,rax
   2f84a:	be 2f 00 00 00       	mov    esi,0x2f
   2f84f:	48 8d 3d 12 45 1b 00 	lea    rdi,[rip+0x1b4512]        # 1e3d68 <Law_and_Order+0x3e0>
   2f856:	b8 00 00 00 00       	mov    eax,0x0
   2f85b:	e8 ec b8 ff ff       	call   2b14c <vrna_strdup_printf>
   2f860:	48 89 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rax
   2f867:	eb 16                	jmp    2f87f <vrna_mkdir_p+0x81>
   2f869:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
   2f870:	48 89 c7             	mov    rdi,rax
   2f873:	e8 91 b8 ff ff       	call   2b109 <strdup>
   2f878:	48 89 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rax
   2f87f:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   2f886:	48 89 85 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rax
   2f88d:	e9 3c 01 00 00       	jmp    2f9ce <vrna_mkdir_p+0x1d0>
   2f892:	48 8b 85 50 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb0]
   2f899:	48 8d 35 ce 44 1b 00 	lea    rsi,[rip+0x1b44ce]        # 1e3d6e <Law_and_Order+0x3e6>
   2f8a0:	48 89 c7             	mov    rdi,rax
   2f8a3:	e8 d8 3d fd ff       	call   3680 <strspn@plt>
   2f8a8:	48 01 85 50 ff ff ff 	add    QWORD PTR [rbp-0xb0],rax
   2f8af:	48 8b 85 50 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb0]
   2f8b6:	48 8d 35 b1 44 1b 00 	lea    rsi,[rip+0x1b44b1]        # 1e3d6e <Law_and_Order+0x3e6>
   2f8bd:	48 89 c7             	mov    rdi,rax
   2f8c0:	e8 fb 3c fd ff       	call   35c0 <strcspn@plt>
   2f8c5:	48 01 85 50 ff ff ff 	add    QWORD PTR [rbp-0xb0],rax
   2f8cc:	48 8b 85 50 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb0]
   2f8d3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2f8d6:	84 c0                	test   al,al
   2f8d8:	0f 94 c0             	sete   al
   2f8db:	0f b6 c0             	movzx  eax,al
   2f8de:	89 85 4c ff ff ff    	mov    DWORD PTR [rbp-0xb4],eax
   2f8e4:	48 8b 85 50 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb0]
   2f8eb:	c6 00 00             	mov    BYTE PTR [rax],0x0
   2f8ee:	48 8d 95 60 ff ff ff 	lea    rdx,[rbp-0xa0]
   2f8f5:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   2f8fc:	48 89 d6             	mov    rsi,rdx
   2f8ff:	48 89 c7             	mov    rdi,rax
   2f902:	e8 f9 07 00 00       	call   30100 <__stat>
   2f907:	85 c0                	test   eax,eax
   2f909:	74 69                	je     2f974 <vrna_mkdir_p+0x176>
   2f90b:	e8 90 3c fd ff       	call   35a0 <__errno_location@plt>
   2f910:	8b 00                	mov    eax,DWORD PTR [rax]
   2f912:	83 f8 02             	cmp    eax,0x2
   2f915:	75 2c                	jne    2f943 <vrna_mkdir_p+0x145>
   2f917:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   2f91e:	be ff 01 00 00       	mov    esi,0x1ff
   2f923:	48 89 c7             	mov    rdi,rax
   2f926:	e8 85 3d fd ff       	call   36b0 <mkdir@plt>
   2f92b:	85 c0                	test   eax,eax
   2f92d:	0f 84 91 00 00 00    	je     2f9c4 <vrna_mkdir_p+0x1c6>
   2f933:	e8 68 3c fd ff       	call   35a0 <__errno_location@plt>
   2f938:	8b 00                	mov    eax,DWORD PTR [rax]
   2f93a:	83 f8 11             	cmp    eax,0x11
   2f93d:	0f 84 81 00 00 00    	je     2f9c4 <vrna_mkdir_p+0x1c6>
   2f943:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   2f94a:	48 89 c6             	mov    rsi,rax
   2f94d:	48 8d 3d 1c 44 1b 00 	lea    rdi,[rip+0x1b441c]        # 1e3d70 <Law_and_Order+0x3e8>
   2f954:	b8 00 00 00 00       	mov    eax,0x0
   2f959:	e8 3d c8 ff ff       	call   2c19b <vrna_message_warning>
   2f95e:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   2f965:	48 89 c7             	mov    rdi,rax
   2f968:	e8 43 3f fd ff       	call   38b0 <free@plt>
   2f96d:	b8 ff ff ff ff       	mov    eax,0xffffffff
   2f972:	eb 7b                	jmp    2f9ef <vrna_mkdir_p+0x1f1>
   2f974:	8b 85 78 ff ff ff    	mov    eax,DWORD PTR [rbp-0x88]
   2f97a:	25 00 f0 00 00       	and    eax,0xf000
   2f97f:	3d 00 40 00 00       	cmp    eax,0x4000
   2f984:	74 3e                	je     2f9c4 <vrna_mkdir_p+0x1c6>
   2f986:	bf 14 00 00 00       	mov    edi,0x14
   2f98b:	e8 c0 3c fd ff       	call   3650 <strerror@plt>
   2f990:	48 89 c2             	mov    rdx,rax
   2f993:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   2f99a:	48 89 c6             	mov    rsi,rax
   2f99d:	48 8d 3d ec 43 1b 00 	lea    rdi,[rip+0x1b43ec]        # 1e3d90 <Law_and_Order+0x408>
   2f9a4:	b8 00 00 00 00       	mov    eax,0x0
   2f9a9:	e8 ed c7 ff ff       	call   2c19b <vrna_message_warning>
   2f9ae:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   2f9b5:	48 89 c7             	mov    rdi,rax
   2f9b8:	e8 f3 3e fd ff       	call   38b0 <free@plt>
   2f9bd:	b8 ff ff ff ff       	mov    eax,0xffffffff
   2f9c2:	eb 2b                	jmp    2f9ef <vrna_mkdir_p+0x1f1>
   2f9c4:	48 8b 85 50 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb0]
   2f9cb:	c6 00 2f             	mov    BYTE PTR [rax],0x2f
   2f9ce:	83 bd 4c ff ff ff 00 	cmp    DWORD PTR [rbp-0xb4],0x0
   2f9d5:	0f 84 b7 fe ff ff    	je     2f892 <vrna_mkdir_p+0x94>
   2f9db:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
   2f9e2:	48 89 c7             	mov    rdi,rax
   2f9e5:	e8 c6 3e fd ff       	call   38b0 <free@plt>
   2f9ea:	b8 00 00 00 00       	mov    eax,0x0
   2f9ef:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
   2f9f3:	64 48 33 0c 25 28 00 00 00 	xor    rcx,QWORD PTR fs:0x28
   2f9fc:	74 05                	je     2fa03 <vrna_mkdir_p+0x205>
   2f9fe:	e8 5d 3e fd ff       	call   3860 <__stack_chk_fail@plt>
   2fa03:	c9                   	leave  
   2fa04:	c3                   	ret    

000000000002fa05 <vrna_basename>:
   2fa05:	f3 0f 1e fa          	endbr64 
   2fa09:	55                   	push   rbp
   2fa0a:	48 89 e5             	mov    rbp,rsp
   2fa0d:	48 83 ec 20          	sub    rsp,0x20
   2fa11:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   2fa15:	48 c7 45 f0 00 00 00 00 	mov    QWORD PTR [rbp-0x10],0x0
   2fa1d:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
   2fa22:	74 58                	je     2fa7c <vrna_basename+0x77>
   2fa24:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2fa28:	be 2f 00 00 00       	mov    esi,0x2f
   2fa2d:	48 89 c7             	mov    rdi,rax
   2fa30:	e8 1b 3e fd ff       	call   3850 <strrchr@plt>
   2fa35:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2fa39:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
   2fa3e:	74 25                	je     2fa65 <vrna_basename+0x60>
   2fa40:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2fa44:	48 83 c0 01          	add    rax,0x1
   2fa48:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2fa4b:	84 c0                	test   al,al
   2fa4d:	74 16                	je     2fa65 <vrna_basename+0x60>
   2fa4f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2fa53:	48 83 c0 01          	add    rax,0x1
   2fa57:	48 89 c7             	mov    rdi,rax
   2fa5a:	e8 aa b6 ff ff       	call   2b109 <strdup>
   2fa5f:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
   2fa63:	eb 17                	jmp    2fa7c <vrna_basename+0x77>
   2fa65:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
   2fa6a:	75 10                	jne    2fa7c <vrna_basename+0x77>
   2fa6c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2fa70:	48 89 c7             	mov    rdi,rax
   2fa73:	e8 91 b6 ff ff       	call   2b109 <strdup>
   2fa78:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
   2fa7c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   2fa80:	c9                   	leave  
   2fa81:	c3                   	ret    

000000000002fa82 <vrna_dirname>:
   2fa82:	f3 0f 1e fa          	endbr64 
   2fa86:	55                   	push   rbp
   2fa87:	48 89 e5             	mov    rbp,rsp
   2fa8a:	48 83 ec 30          	sub    rsp,0x30
   2fa8e:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
   2fa92:	48 c7 45 e8 00 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
   2fa9a:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
   2fa9f:	0f 84 96 00 00 00    	je     2fb3b <vrna_dirname+0xb9>
   2faa5:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2faa9:	48 89 c7             	mov    rdi,rax
   2faac:	e8 76 03 00 00       	call   2fe27 <is_absolute_path>
   2fab1:	85 c0                	test   eax,eax
   2fab3:	75 23                	jne    2fad8 <vrna_dirname+0x56>
   2fab5:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2fab9:	48 89 c2             	mov    rdx,rax
   2fabc:	be 2f 00 00 00       	mov    esi,0x2f
   2fac1:	48 8d 3d a0 42 1b 00 	lea    rdi,[rip+0x1b42a0]        # 1e3d68 <Law_and_Order+0x3e0>
   2fac8:	b8 00 00 00 00       	mov    eax,0x0
   2facd:	e8 7a b6 ff ff       	call   2b14c <vrna_strdup_printf>
   2fad2:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2fad6:	eb 10                	jmp    2fae8 <vrna_dirname+0x66>
   2fad8:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   2fadc:	48 89 c7             	mov    rdi,rax
   2fadf:	e8 25 b6 ff ff       	call   2b109 <strdup>
   2fae4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2fae8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2faec:	48 89 c7             	mov    rdi,rax
   2faef:	e8 9c 3b fd ff       	call   3690 <strlen@plt>
   2faf4:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
   2faf7:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   2fafa:	48 63 d0             	movsxd rdx,eax
   2fafd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2fb01:	48 01 d0             	add    rax,rdx
   2fb04:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
   2fb08:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   2fb0c:	c6 00 00             	mov    BYTE PTR [rax],0x0
   2fb0f:	48 83 6d f0 01       	sub    QWORD PTR [rbp-0x10],0x1
   2fb14:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   2fb18:	48 3b 45 f8          	cmp    rax,QWORD PTR [rbp-0x8]
   2fb1c:	76 0b                	jbe    2fb29 <vrna_dirname+0xa7>
   2fb1e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   2fb22:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2fb25:	3c 2f                	cmp    al,0x2f
   2fb27:	75 df                	jne    2fb08 <vrna_dirname+0x86>
   2fb29:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   2fb2d:	48 3b 45 f8          	cmp    rax,QWORD PTR [rbp-0x8]
   2fb31:	76 08                	jbe    2fb3b <vrna_dirname+0xb9>
   2fb33:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2fb37:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
   2fb3b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   2fb3f:	c9                   	leave  
   2fb40:	c3                   	ret    

000000000002fb41 <vrna_filename_sanitize>:
   2fb41:	f3 0f 1e fa          	endbr64 
   2fb45:	55                   	push   rbp
   2fb46:	48 89 e5             	mov    rbp,rsp
   2fb49:	53                   	push   rbx
   2fb4a:	48 83 ec 58          	sub    rsp,0x58
   2fb4e:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
   2fb52:	48 89 75 a0          	mov    QWORD PTR [rbp-0x60],rsi
   2fb56:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
   2fb5b:	0f 84 48 02 00 00    	je     2fda9 <vrna_filename_sanitize+0x268>
   2fb61:	48 8d 05 52 42 1b 00 	lea    rax,[rip+0x1b4252]        # 1e3dba <Law_and_Order+0x432>
   2fb68:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
   2fb6c:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
   2fb70:	48 89 c7             	mov    rdi,rax
   2fb73:	e8 18 3b fd ff       	call   3690 <strlen@plt>
   2fb78:	83 c0 01             	add    eax,0x1
   2fb7b:	89 c7                	mov    edi,eax
   2fb7d:	e8 3f c3 ff ff       	call   2bec1 <vrna_alloc>
   2fb82:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
   2fb86:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
   2fb8a:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
   2fb8e:	c7 45 b8 00 00 00 00 	mov    DWORD PTR [rbp-0x48],0x0
   2fb95:	eb 6c                	jmp    2fc03 <vrna_filename_sanitize+0xc2>
   2fb97:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2fb9b:	48 2b 45 c8          	sub    rax,QWORD PTR [rbp-0x38]
   2fb9f:	48 89 c6             	mov    rsi,rax
   2fba2:	8b 55 b8             	mov    edx,DWORD PTR [rbp-0x48]
   2fba5:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2fba9:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
   2fbad:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   2fbb1:	48 89 f2             	mov    rdx,rsi
   2fbb4:	48 89 c6             	mov    rsi,rax
   2fbb7:	48 89 cf             	mov    rdi,rcx
   2fbba:	e8 21 3b fd ff       	call   36e0 <strncpy@plt>
   2fbbf:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2fbc3:	48 2b 45 c8          	sub    rax,QWORD PTR [rbp-0x38]
   2fbc7:	01 45 b8             	add    DWORD PTR [rbp-0x48],eax
   2fbca:	48 83 7d a0 00       	cmp    QWORD PTR [rbp-0x60],0x0
   2fbcf:	74 26                	je     2fbf7 <vrna_filename_sanitize+0xb6>
   2fbd1:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   2fbd5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2fbd8:	84 c0                	test   al,al
   2fbda:	74 1b                	je     2fbf7 <vrna_filename_sanitize+0xb6>
   2fbdc:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
   2fbdf:	8d 50 01             	lea    edx,[rax+0x1]
   2fbe2:	89 55 b8             	mov    DWORD PTR [rbp-0x48],edx
   2fbe5:	89 c2                	mov    edx,eax
   2fbe7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2fbeb:	48 01 c2             	add    rdx,rax
   2fbee:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
   2fbf2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2fbf5:	88 02                	mov    BYTE PTR [rdx],al
   2fbf7:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   2fbfb:	48 83 c0 01          	add    rax,0x1
   2fbff:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
   2fc03:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
   2fc07:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   2fc0b:	48 89 d6             	mov    rsi,rdx
   2fc0e:	48 89 c7             	mov    rdi,rax
   2fc11:	e8 2a 3e fd ff       	call   3a40 <strpbrk@plt>
   2fc16:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
   2fc1a:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
   2fc1f:	0f 85 72 ff ff ff    	jne    2fb97 <vrna_filename_sanitize+0x56>
   2fc25:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
   2fc29:	48 89 c7             	mov    rdi,rax
   2fc2c:	e8 5f 3a fd ff       	call   3690 <strlen@plt>
   2fc31:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
   2fc35:	48 01 d0             	add    rax,rdx
   2fc38:	48 39 45 c8          	cmp    QWORD PTR [rbp-0x38],rax
   2fc3c:	73 3d                	jae    2fc7b <vrna_filename_sanitize+0x13a>
   2fc3e:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
   2fc42:	48 2b 45 c8          	sub    rax,QWORD PTR [rbp-0x38]
   2fc46:	89 c3                	mov    ebx,eax
   2fc48:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
   2fc4c:	48 89 c7             	mov    rdi,rax
   2fc4f:	e8 3c 3a fd ff       	call   3690 <strlen@plt>
   2fc54:	01 d8                	add    eax,ebx
   2fc56:	89 45 bc             	mov    DWORD PTR [rbp-0x44],eax
   2fc59:	8b 55 bc             	mov    edx,DWORD PTR [rbp-0x44]
   2fc5c:	8b 4d b8             	mov    ecx,DWORD PTR [rbp-0x48]
   2fc5f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2fc63:	48 01 c1             	add    rcx,rax
   2fc66:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
   2fc6a:	48 89 c6             	mov    rsi,rax
   2fc6d:	48 89 cf             	mov    rdi,rcx
   2fc70:	e8 6b 3a fd ff       	call   36e0 <strncpy@plt>
   2fc75:	8b 45 bc             	mov    eax,DWORD PTR [rbp-0x44]
   2fc78:	01 45 b8             	add    DWORD PTR [rbp-0x48],eax
   2fc7b:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
   2fc7e:	8d 50 01             	lea    edx,[rax+0x1]
   2fc81:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2fc85:	89 d6                	mov    esi,edx
   2fc87:	48 89 c7             	mov    rdi,rax
   2fc8a:	e8 ba c2 ff ff       	call   2bf49 <vrna_realloc>
   2fc8f:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
   2fc93:	8b 55 b8             	mov    edx,DWORD PTR [rbp-0x48]
   2fc96:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2fc9a:	48 01 d0             	add    rax,rdx
   2fc9d:	c6 00 00             	mov    BYTE PTR [rax],0x0
   2fca0:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2fca4:	48 8d 35 1b 41 1b 00 	lea    rsi,[rip+0x1b411b]        # 1e3dc6 <Law_and_Order+0x43e>
   2fcab:	48 89 c7             	mov    rdi,rax
   2fcae:	e8 7d 3c fd ff       	call   3930 <strcmp@plt>
   2fcb3:	85 c0                	test   eax,eax
   2fcb5:	74 17                	je     2fcce <vrna_filename_sanitize+0x18d>
   2fcb7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2fcbb:	48 8d 35 06 41 1b 00 	lea    rsi,[rip+0x1b4106]        # 1e3dc8 <Law_and_Order+0x440>
   2fcc2:	48 89 c7             	mov    rdi,rax
   2fcc5:	e8 66 3c fd ff       	call   3930 <strcmp@plt>
   2fcca:	85 c0                	test   eax,eax
   2fccc:	75 1c                	jne    2fcea <vrna_filename_sanitize+0x1a9>
   2fcce:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2fcd2:	be 01 00 00 00       	mov    esi,0x1
   2fcd7:	48 89 c7             	mov    rdi,rax
   2fcda:	e8 6a c2 ff ff       	call   2bf49 <vrna_realloc>
   2fcdf:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
   2fce3:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2fce7:	c6 00 00             	mov    BYTE PTR [rax],0x0
   2fcea:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2fcee:	48 89 c7             	mov    rdi,rax
   2fcf1:	e8 9a 39 fd ff       	call   3690 <strlen@plt>
   2fcf6:	89 45 c0             	mov    DWORD PTR [rbp-0x40],eax
   2fcf9:	81 7d c0 ff 00 00 00 	cmp    DWORD PTR [rbp-0x40],0xff
   2fd00:	0f 86 9d 00 00 00    	jbe    2fda3 <vrna_filename_sanitize+0x262>
   2fd06:	48 c7 45 e8 00 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
   2fd0e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2fd12:	be 2e 00 00 00       	mov    esi,0x2e
   2fd17:	48 89 c7             	mov    rdi,rax
   2fd1a:	e8 31 3b fd ff       	call   3850 <strrchr@plt>
   2fd1f:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
   2fd23:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
   2fd28:	74 57                	je     2fd81 <vrna_filename_sanitize+0x240>
   2fd2a:	8b 55 c0             	mov    edx,DWORD PTR [rbp-0x40]
   2fd2d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2fd31:	48 01 d0             	add    rax,rdx
   2fd34:	48 2b 45 e8          	sub    rax,QWORD PTR [rbp-0x18]
   2fd38:	48 3d fe 00 00 00    	cmp    rax,0xfe
   2fd3e:	7f 41                	jg     2fd81 <vrna_filename_sanitize+0x240>
   2fd40:	8b 55 c0             	mov    edx,DWORD PTR [rbp-0x40]
   2fd43:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2fd47:	48 01 d0             	add    rax,rdx
   2fd4a:	48 2b 45 e8          	sub    rax,QWORD PTR [rbp-0x18]
   2fd4e:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
   2fd51:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
   2fd54:	8b 4d c0             	mov    ecx,DWORD PTR [rbp-0x40]
   2fd57:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
   2fd5a:	48 29 d1             	sub    rcx,rdx
   2fd5d:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
   2fd61:	48 8d 34 11          	lea    rsi,[rcx+rdx*1]
   2fd65:	ba ff 00 00 00       	mov    edx,0xff
   2fd6a:	2b 55 c4             	sub    edx,DWORD PTR [rbp-0x3c]
   2fd6d:	89 d1                	mov    ecx,edx
   2fd6f:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
   2fd73:	48 01 d1             	add    rcx,rdx
   2fd76:	48 89 c2             	mov    rdx,rax
   2fd79:	48 89 cf             	mov    rdi,rcx
   2fd7c:	e8 4f 3c fd ff       	call   39d0 <memmove@plt>
   2fd81:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2fd85:	be 00 01 00 00       	mov    esi,0x100
   2fd8a:	48 89 c7             	mov    rdi,rax
   2fd8d:	e8 b7 c1 ff ff       	call   2bf49 <vrna_realloc>
   2fd92:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
   2fd96:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2fd9a:	48 05 ff 00 00 00    	add    rax,0xff
   2fda0:	c6 00 00             	mov    BYTE PTR [rax],0x0
   2fda3:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   2fda7:	eb 05                	jmp    2fdae <vrna_filename_sanitize+0x26d>
   2fda9:	b8 00 00 00 00       	mov    eax,0x0
   2fdae:	48 83 c4 58          	add    rsp,0x58
   2fdb2:	5b                   	pop    rbx
   2fdb3:	5d                   	pop    rbp
   2fdb4:	c3                   	ret    

000000000002fdb5 <vrna_file_exists>:
   2fdb5:	f3 0f 1e fa          	endbr64 
   2fdb9:	55                   	push   rbp
   2fdba:	48 89 e5             	mov    rbp,rsp
   2fdbd:	48 81 ec c0 00 00 00 	sub    rsp,0xc0
   2fdc4:	48 89 bd 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rdi
   2fdcb:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   2fdd4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2fdd8:	31 c0                	xor    eax,eax
   2fdda:	c7 85 5c ff ff ff 00 00 00 00 	mov    DWORD PTR [rbp-0xa4],0x0
   2fde4:	48 8d 95 60 ff ff ff 	lea    rdx,[rbp-0xa0]
   2fdeb:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
   2fdf2:	48 89 d6             	mov    rsi,rdx
   2fdf5:	48 89 c7             	mov    rdi,rax
   2fdf8:	e8 03 03 00 00       	call   30100 <__stat>
   2fdfd:	85 c0                	test   eax,eax
   2fdff:	0f 94 c0             	sete   al
   2fe02:	0f b6 c0             	movzx  eax,al
   2fe05:	89 85 5c ff ff ff    	mov    DWORD PTR [rbp-0xa4],eax
   2fe0b:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
   2fe11:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
   2fe15:	64 48 33 0c 25 28 00 00 00 	xor    rcx,QWORD PTR fs:0x28
   2fe1e:	74 05                	je     2fe25 <vrna_file_exists+0x70>
   2fe20:	e8 3b 3a fd ff       	call   3860 <__stack_chk_fail@plt>
   2fe25:	c9                   	leave  
   2fe26:	c3                   	ret    

000000000002fe27 <is_absolute_path>:
   2fe27:	f3 0f 1e fa          	endbr64 
   2fe2b:	55                   	push   rbp
   2fe2c:	48 89 e5             	mov    rbp,rsp
   2fe2f:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   2fe33:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   2fe37:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   2fe3a:	3c 2f                	cmp    al,0x2f
   2fe3c:	75 07                	jne    2fe45 <is_absolute_path+0x1e>
   2fe3e:	b8 01 00 00 00       	mov    eax,0x1
   2fe43:	eb 05                	jmp    2fe4a <is_absolute_path+0x23>
   2fe45:	b8 00 00 00 00       	mov    eax,0x0
   2fe4a:	5d                   	pop    rbp
   2fe4b:	c3                   	ret    

000000000002fe4c <vrna_cpu_vendor_string>:
   2fe4c:	f3 0f 1e fa          	endbr64 
   2fe50:	55                   	push   rbp
   2fe51:	48 89 e5             	mov    rbp,rsp
   2fe54:	48 83 ec 20          	sub    rsp,0x20
   2fe58:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   2fe61:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2fe65:	31 c0                	xor    eax,eax
   2fe67:	48 c7 45 e0 00 00 00 00 	mov    QWORD PTR [rbp-0x20],0x0
   2fe6f:	48 c7 45 e8 00 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
   2fe77:	48 8d 45 e0          	lea    rax,[rbp-0x20]
   2fe7b:	48 89 c7             	mov    rdi,rax
   2fe7e:	e8 71 00 00 00       	call   2fef4 <execute_cpuid>
   2fe83:	85 c0                	test   eax,eax
   2fe85:	74 28                	je     2feaf <vrna_cpu_vendor_string+0x63>
   2fe87:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   2fe8a:	89 05 f0 92 2b 00    	mov    DWORD PTR [rip+0x2b92f0],eax        # 2e9180 <name.4485>
   2fe90:	48 8d 15 ed 92 2b 00 	lea    rdx,[rip+0x2b92ed]        # 2e9184 <name.4485+0x4>
   2fe97:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2fe9a:	89 02                	mov    DWORD PTR [rdx],eax
   2fe9c:	48 8d 15 e5 92 2b 00 	lea    rdx,[rip+0x2b92e5]        # 2e9188 <name.4485+0x8>
   2fea3:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   2fea6:	89 02                	mov    DWORD PTR [rdx],eax
   2fea8:	c6 05 dd 92 2b 00 00 	mov    BYTE PTR [rip+0x2b92dd],0x0        # 2e918c <name.4485+0xc>
   2feaf:	48 8d 05 ca 92 2b 00 	lea    rax,[rip+0x2b92ca]        # 2e9180 <name.4485>
   2feb6:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
   2feba:	64 48 33 0c 25 28 00 00 00 	xor    rcx,QWORD PTR fs:0x28
   2fec3:	74 05                	je     2feca <vrna_cpu_vendor_string+0x7e>
   2fec5:	e8 96 39 fd ff       	call   3860 <__stack_chk_fail@plt>
   2feca:	c9                   	leave  
   2fecb:	c3                   	ret    

000000000002fecc <vrna_cpu_simd_capabilities>:
   2fecc:	f3 0f 1e fa          	endbr64 
   2fed0:	55                   	push   rbp
   2fed1:	48 89 e5             	mov    rbp,rsp
   2fed4:	48 83 ec 10          	sub    rsp,0x10
   2fed8:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
   2fedf:	e8 5e 00 00 00       	call   2ff42 <cpu_feature_bits>
   2fee4:	09 45 fc             	or     DWORD PTR [rbp-0x4],eax
   2fee7:	e8 0b 01 00 00       	call   2fff7 <cpu_extended_feature_bits>
   2feec:	09 45 fc             	or     DWORD PTR [rbp-0x4],eax
   2feef:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   2fef2:	c9                   	leave  
   2fef3:	c3                   	ret    

000000000002fef4 <execute_cpuid>:
   2fef4:	55                   	push   rbp
   2fef5:	48 89 e5             	mov    rbp,rsp
   2fef8:	53                   	push   rbx
   2fef9:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
   2fefd:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   2ff01:	4c 8d 50 04          	lea    r10,[rax+0x4]
   2ff05:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   2ff09:	4c 8d 48 08          	lea    r9,[rax+0x8]
   2ff0d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   2ff11:	4c 8d 40 0c          	lea    r8,[rax+0xc]
   2ff15:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   2ff19:	8b 00                	mov    eax,DWORD PTR [rax]
   2ff1b:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
   2ff1f:	48 83 c2 08          	add    rdx,0x8
   2ff23:	8b 12                	mov    edx,DWORD PTR [rdx]
   2ff25:	89 d1                	mov    ecx,edx
   2ff27:	0f a2                	cpuid  
   2ff29:	89 de                	mov    esi,ebx
   2ff2b:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
   2ff2f:	89 07                	mov    DWORD PTR [rdi],eax
   2ff31:	41 89 32             	mov    DWORD PTR [r10],esi
   2ff34:	41 89 09             	mov    DWORD PTR [r9],ecx
   2ff37:	41 89 10             	mov    DWORD PTR [r8],edx
   2ff3a:	b8 01 00 00 00       	mov    eax,0x1
   2ff3f:	5b                   	pop    rbx
   2ff40:	5d                   	pop    rbp
   2ff41:	c3                   	ret    

000000000002ff42 <cpu_feature_bits>:
   2ff42:	f3 0f 1e fa          	endbr64 
   2ff46:	55                   	push   rbp
   2ff47:	48 89 e5             	mov    rbp,rsp
   2ff4a:	48 83 ec 30          	sub    rsp,0x30
   2ff4e:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   2ff57:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   2ff5b:	31 c0                	xor    eax,eax
   2ff5d:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [rbp-0x24],0x0
   2ff64:	c7 45 e0 01 00 00 00 	mov    DWORD PTR [rbp-0x20],0x1
   2ff6b:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
   2ff72:	c7 45 e8 00 00 00 00 	mov    DWORD PTR [rbp-0x18],0x0
   2ff79:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
   2ff80:	48 8d 45 e0          	lea    rax,[rbp-0x20]
   2ff84:	48 89 c7             	mov    rdi,rax
   2ff87:	e8 68 ff ff ff       	call   2fef4 <execute_cpuid>
   2ff8c:	85 c0                	test   eax,eax
   2ff8e:	74 4e                	je     2ffde <cpu_feature_bits+0x9c>
   2ff90:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
   2ff93:	25 00 00 00 04       	and    eax,0x4000000
   2ff98:	85 c0                	test   eax,eax
   2ff9a:	74 04                	je     2ffa0 <cpu_feature_bits+0x5e>
   2ff9c:	83 4d dc 01          	or     DWORD PTR [rbp-0x24],0x1
   2ffa0:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   2ffa3:	83 e0 01             	and    eax,0x1
   2ffa6:	85 c0                	test   eax,eax
   2ffa8:	74 04                	je     2ffae <cpu_feature_bits+0x6c>
   2ffaa:	83 4d dc 02          	or     DWORD PTR [rbp-0x24],0x2
   2ffae:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   2ffb1:	25 00 00 08 00       	and    eax,0x80000
   2ffb6:	85 c0                	test   eax,eax
   2ffb8:	74 04                	je     2ffbe <cpu_feature_bits+0x7c>
   2ffba:	83 4d dc 04          	or     DWORD PTR [rbp-0x24],0x4
   2ffbe:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   2ffc1:	25 00 00 10 00       	and    eax,0x100000
   2ffc6:	85 c0                	test   eax,eax
   2ffc8:	74 04                	je     2ffce <cpu_feature_bits+0x8c>
   2ffca:	83 4d dc 08          	or     DWORD PTR [rbp-0x24],0x8
   2ffce:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   2ffd1:	25 00 00 00 10       	and    eax,0x10000000
   2ffd6:	85 c0                	test   eax,eax
   2ffd8:	74 04                	je     2ffde <cpu_feature_bits+0x9c>
   2ffda:	83 4d dc 10          	or     DWORD PTR [rbp-0x24],0x10
   2ffde:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   2ffe1:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   2ffe5:	64 48 33 14 25 28 00 00 00 	xor    rdx,QWORD PTR fs:0x28
   2ffee:	74 05                	je     2fff5 <cpu_feature_bits+0xb3>
   2fff0:	e8 6b 38 fd ff       	call   3860 <__stack_chk_fail@plt>
   2fff5:	c9                   	leave  
   2fff6:	c3                   	ret    

000000000002fff7 <cpu_extended_feature_bits>:
   2fff7:	f3 0f 1e fa          	endbr64 
   2fffb:	55                   	push   rbp
   2fffc:	48 89 e5             	mov    rbp,rsp
   2ffff:	48 83 ec 30          	sub    rsp,0x30
   30003:	64 48 8b 04 25 28 00 00 00 	mov    rax,QWORD PTR fs:0x28
   3000c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   30010:	31 c0                	xor    eax,eax
   30012:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [rbp-0x24],0x0
   30019:	c7 45 e0 07 00 00 00 	mov    DWORD PTR [rbp-0x20],0x7
   30020:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
   30027:	c7 45 e8 00 00 00 00 	mov    DWORD PTR [rbp-0x18],0x0
   3002e:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
   30035:	48 8d 45 e0          	lea    rax,[rbp-0x20]
   30039:	48 89 c7             	mov    rdi,rax
   3003c:	e8 b3 fe ff ff       	call   2fef4 <execute_cpuid>
   30041:	85 c0                	test   eax,eax
   30043:	74 1e                	je     30063 <cpu_extended_feature_bits+0x6c>
   30045:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   30048:	83 e0 20             	and    eax,0x20
   3004b:	85 c0                	test   eax,eax
   3004d:	74 04                	je     30053 <cpu_extended_feature_bits+0x5c>
   3004f:	83 4d dc 20          	or     DWORD PTR [rbp-0x24],0x20
   30053:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   30056:	25 00 00 01 00       	and    eax,0x10000
   3005b:	85 c0                	test   eax,eax
   3005d:	74 04                	je     30063 <cpu_extended_feature_bits+0x6c>
   3005f:	83 4d dc 40          	or     DWORD PTR [rbp-0x24],0x40
   30063:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
   30066:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   3006a:	64 48 33 14 25 28 00 00 00 	xor    rdx,QWORD PTR fs:0x28
   30073:	74 05                	je     3007a <cpu_extended_feature_bits+0x83>
   30075:	e8 e6 37 fd ff       	call   3860 <__stack_chk_fail@plt>
   3007a:	c9                   	leave  
   3007b:	c3                   	ret    
   3007c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000030080 <__libc_csu_init>:
   30080:	f3 0f 1e fa          	endbr64 
   30084:	41 57                	push   r15
   30086:	4c 8d 3d 33 8a 1b 00 	lea    r15,[rip+0x1b8a33]        # 1e8ac0 <__frame_dummy_init_array_entry>
   3008d:	41 56                	push   r14
   3008f:	49 89 d6             	mov    r14,rdx
   30092:	41 55                	push   r13
   30094:	49 89 f5             	mov    r13,rsi
   30097:	41 54                	push   r12
   30099:	41 89 fc             	mov    r12d,edi
   3009c:	55                   	push   rbp
   3009d:	48 8d 2d 3c 8a 1b 00 	lea    rbp,[rip+0x1b8a3c]        # 1e8ae0 <__do_global_dtors_aux_fini_array_entry>
   300a4:	53                   	push   rbx
   300a5:	4c 29 fd             	sub    rbp,r15
   300a8:	48 83 ec 08          	sub    rsp,0x8
   300ac:	e8 4f 2f fd ff       	call   3000 <_init>
   300b1:	48 c1 fd 03          	sar    rbp,0x3
   300b5:	74 1f                	je     300d6 <__libc_csu_init+0x56>
   300b7:	31 db                	xor    ebx,ebx
   300b9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   300c0:	4c 89 f2             	mov    rdx,r14
   300c3:	4c 89 ee             	mov    rsi,r13
   300c6:	44 89 e7             	mov    edi,r12d
   300c9:	41 ff 14 df          	call   QWORD PTR [r15+rbx*8]
   300cd:	48 83 c3 01          	add    rbx,0x1
   300d1:	48 39 dd             	cmp    rbp,rbx
   300d4:	75 ea                	jne    300c0 <__libc_csu_init+0x40>
   300d6:	48 83 c4 08          	add    rsp,0x8
   300da:	5b                   	pop    rbx
   300db:	5d                   	pop    rbp
   300dc:	41 5c                	pop    r12
   300de:	41 5d                	pop    r13
   300e0:	41 5e                	pop    r14
   300e2:	41 5f                	pop    r15
   300e4:	c3                   	ret    
   300e5:	66 66 2e 0f 1f 84 00 00 00 00 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000000300f0 <__libc_csu_fini>:
   300f0:	f3 0f 1e fa          	endbr64 
   300f4:	c3                   	ret    
   300f5:	66 2e 0f 1f 84 00 00 00 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   300ff:	90                   	nop

0000000000030100 <__stat>:
   30100:	f3 0f 1e fa          	endbr64 
   30104:	48 89 f2             	mov    rdx,rsi
   30107:	48 89 fe             	mov    rsi,rdi
   3010a:	bf 01 00 00 00       	mov    edi,0x1
   3010f:	e9 1c 37 fd ff       	jmp    3830 <__xstat@plt>

Disassembly of section .fini:

0000000000030114 <_fini>:
   30114:	f3 0f 1e fa          	endbr64 
   30118:	48 83 ec 08          	sub    rsp,0x8
   3011c:	48 83 c4 08          	add    rsp,0x8
   30120:	c3                   	ret    
